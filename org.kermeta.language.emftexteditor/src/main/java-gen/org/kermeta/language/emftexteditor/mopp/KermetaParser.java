// $ANTLR 3.1.1

	package org.kermeta.language.emftexteditor.mopp;


import org.antlr.runtime.*;
import java.util.HashMap;
public class KermetaParser extends KermetaANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "QUOTED_34_34", "KERMETA_LITERAL", "IDENTIFIER", "PRIMITIVE_TYPE", "INTEGER", "BOOLEAN", "CASTED", "SL_COMMENT", "ML_COMMENT", "FLOAT", "WHITESPACE", "LINEBREAKS", "'using'", "'require'", "'::'", "'{'", "'}'", "'package'", "'aspect'", "'abstract'", "'class'", "'inherits'", "','", "'attribute'", "'reference'", "':'", "'property'", "'getter'", "'setter'", "'operation'", "'('", "')'", "'is'", "'enumeration'", "';'", "'Void'", "'Object'", "'tag'", "'ownedTags'", "'Model'", "'ModelType'", "'typeContainer'", "'name'", "'includedTypeDefinition'", "'TypeVariableBinding'", "'containedType'", "'variable'", "'type'", "'MultiplicityElement'", "'lower'", "'upper'", "'TypeDefinition'", "'Tag'", "'value'", "'object'", "'ObjectTypeVariable'", "'supertype'", "'ModelTypeVariable'", "'virtualType'", "'VirtualType'", "'classDefinition'", "'modelType'", "'typeParamBinding'", "'ProductType'", "'FunctionType'", "'left'", "'right'", "'do'", "'end'", "'rescue'", "'raise'", "'if'", "'then'", "'else'", "'from'", "'until'", "'loop'", "'var'", "'init'", "'~'", "'result'", "'super'", "':='", "'='", "'self'", "'.'", "'=='", "'+'", "'-'", "'/'", "'*'", "'extern'", "'EmptyExpression'", "'staticType'", "'LambdaExpression'", "'parameters'", "'body'", "'LambdaParameter'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__16=16;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int PRIMITIVE_TYPE=7;
    public static final int T__99=99;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int WHITESPACE=14;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int KERMETA_LITERAL=5;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int SL_COMMENT=11;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int QUOTED_34_34=4;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int FLOAT=13;
    public static final int T__61=61;
    public static final int LINEBREAKS=15;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int ML_COMMENT=12;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int BOOLEAN=9;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int IDENTIFIER=6;
    public static final int T__59=59;
    public static final int T__50=50;
    public static final int INTEGER=8;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int CASTED=10;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;

    // delegates
    // delegators


        public KermetaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public KermetaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[357+1];
             
             
        }
        

    public String[] getTokenNames() { return KermetaParser.tokenNames; }
    public String getGrammarFileName() { return "/home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g"; }


    	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
    	@SuppressWarnings("unused")
    	
    	private int lastPosition;
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
    	private boolean rememberExpectedElements = false;
    	private java.lang.Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    	private int mismatchedTokenRecoveryTries = 0;
    	private java.util.Map<?, ?> options;
    	//helper lists to allow a lexer to pass errors to its parser
    	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
    	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
    	private boolean terminateParsing;
    	private int tokenIndexOfLastCompleteElement;
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
    					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
    						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
    					}
    					public java.lang.String getMessage() {
    						return errorMessage;
    					}
    				}, line, charPositionInLine, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		setPosition(expectedElement, input.index());
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
    		java.lang.Object value = element.eGet(structuralFeature);
    		java.lang.Object mapKey = dummy.getValueByName("key");
    		java.lang.Object mapValue = dummy.getValueByName("value");
    		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
    			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
    			if (mapKey != null && mapValue != null) {
    				valueMap.put(mapKey, mapValue);
    			}
    		}
    	}
    	
    	@SuppressWarnings("unchecked")
    	
    	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
    		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
    		org.eclipse.emf.ecore.EObject currentTarget = target;
    		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
    			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
    			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
    			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
    			currentTarget = newEObject;
    		}
    		return currentTarget;
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    		int currentPos = getTokenStream().index();
    		if (currentPos == 0) {
    			return;
    		}
    		int endPos = currentPos - 1;
    		for (; endPos >= this.lastPosition; endPos--) {
    			org.antlr.runtime.Token token = getTokenStream().get(endPos);
    			int _channel = token.getChannel();
    			if (_channel != 99) {
    				break;
    			}
    		}
    		for (int pos = this.lastPosition; pos < endPos; pos++) {
    			org.antlr.runtime.Token token = getTokenStream().get(pos);
    			int _channel = token.getChannel();
    			if (_channel == 99) {
    				if (token.getType() == KermetaLexer.SL_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    				if (token.getType() == KermetaLexer.ML_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    			}
    		}
    		this.lastPosition = (endPos < 0 ? 0 : endPos);
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
    		try {
    			if (encoding == null) {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	// This default constructor is only used to call createInstance() on it
    	public KermetaParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		java.lang.Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
    				return parse_org_kermeta_language_structure_ModelingUnit();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
    				return parse_org_kermeta_language_structure_Using();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
    				return parse_org_kermeta_language_structure_Require();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
    				return parse_org_kermeta_language_structure_Package();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
    				return parse_org_kermeta_language_structure_ClassDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
    				return parse_org_kermeta_language_structure_Property();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
    				return parse_org_kermeta_language_structure_Operation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
    				return parse_org_kermeta_language_structure_Parameter();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
    				return parse_org_kermeta_language_structure_Class();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
    				return parse_org_kermeta_language_structure_Enumeration();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
    				return parse_org_kermeta_language_structure_EnumerationLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
    				return parse_org_kermeta_language_structure_Constraint();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
    				return parse_org_kermeta_language_structure_PrimitiveType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.UnresolvedType.class) {
    				return parse_org_kermeta_language_structure_UnresolvedType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
    				return parse_org_kermeta_language_structure_VoidType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
    				return parse_org_kermeta_language_structure_Object();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
    				return parse_org_kermeta_language_structure_Model();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
    				return parse_org_kermeta_language_structure_ModelType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
    				return parse_org_kermeta_language_structure_TypeVariableBinding();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
    				return parse_org_kermeta_language_structure_MultiplicityElement();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
    				return parse_org_kermeta_language_structure_TypeDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
    				return parse_org_kermeta_language_structure_Tag();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ObjectTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ModelTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
    				return parse_org_kermeta_language_structure_VirtualType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
    				return parse_org_kermeta_language_structure_ProductType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
    				return parse_org_kermeta_language_structure_FunctionType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
    				return parse_org_kermeta_language_behavior_Block();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
    				return parse_org_kermeta_language_behavior_Rescue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
    				return parse_org_kermeta_language_behavior_TypeReference();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
    				return parse_org_kermeta_language_behavior_Raise();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
    				return parse_org_kermeta_language_behavior_BooleanLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
    				return parse_org_kermeta_language_behavior_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
    				return parse_org_kermeta_language_behavior_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
    				return parse_org_kermeta_language_behavior_Conditional();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
    				return parse_org_kermeta_language_behavior_Loop();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
    				return parse_org_kermeta_language_behavior_VariableDecl();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
    				return parse_org_kermeta_language_behavior_TypeLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
    				return parse_org_kermeta_language_behavior_CallResult();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
    				return parse_org_kermeta_language_behavior_CallSuperOperation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
    				return parse_org_kermeta_language_behavior_Assignment();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
    				return parse_org_kermeta_language_behavior_CallVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
    				return parse_org_kermeta_language_behavior_SelfExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
    				return parse_org_kermeta_language_behavior_CallFeature();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
    				return parse_org_kermeta_language_behavior_JavaStaticCall();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
    				return parse_org_kermeta_language_behavior_VoidLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
    				return parse_org_kermeta_language_behavior_CallValue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
    				return parse_org_kermeta_language_behavior_EmptyExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
    				return parse_org_kermeta_language_behavior_LambdaExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
    				return parse_org_kermeta_language_behavior_LambdaParameter();
    			}
    		}
    		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
    	}
    	
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
    		tokenResolveResult.clear();
    		return tokenResolveResult;
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	protected java.util.Map<?,?> getOptions() {
    		return options;
    	}
    	
    	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
    		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
    	}
    	
    	public java.lang.Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
    		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
    	}
    	
    	protected java.lang.Object getTypeObject() {
    		java.lang.Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	// Implementation that calls {@link #doParse()}  and handles the thrown
    	// RecognitionExceptions.
    	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
    		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				//? can be caused if a null is set on EMF models where not allowed;
    				//? this will just happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
    		rememberExpectedElements = true;
    		parseToIndexTypeObject = type;
    		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
    		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContents().add(root);
    			}
    			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 615;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected terminals
    				// can be set
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are kept
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
    							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements that were
    		// added during the last iteration of the loop
    		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = java.lang.Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = java.lang.Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
    				return true;
    			}
    		});
    	}
    	
    	// Translates errors thrown by the parser into human readable messages.
    	public void reportError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = e.getMessage();
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mte.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mte.expecting];
    				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
    			}
    			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
    			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mtne.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mtne.expecting];
    			}
    			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
    		}
    		// the resource may be null if the parse is used for code completion
    		final java.lang.String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime.CommonToken) {
    			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	// Translates errors thrown by the lexer into human readable messages.
    	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = "";
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
    			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
    			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	public void setOptions(java.util.Map<?,?> options) {
    		this.options = options;
    	}
    	
    	public void terminate() {
    		terminateParsing = true;
    	}
    	
    	protected void completedElement(Object element) {
    		if (element instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getRequire().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), "QUOTED_34_34");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getRequire().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), "KERMETA_LITERAL");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "PRIMITIVE_TYPE");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("getter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("setter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("~");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("extern");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUnresolvedType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_389 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_390 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_391 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_392 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_393 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_394 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_395 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_396 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_397 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	
    	public static void wire0() {
    		TERMINAL_2.addFollower(TERMINAL_2);
    		TERMINAL_2.addFollower(TERMINAL_3);
    		TERMINAL_2.addFollower(TERMINAL_4);
    		TERMINAL_0.addFollower(TERMINAL_16);
    		TERMINAL_16.addFollower(TERMINAL_0);
    		TERMINAL_16.addFollower(TERMINAL_1);
    		TERMINAL_16.addFollower(TERMINAL_2);
    		TERMINAL_16.addFollower(TERMINAL_3);
    		TERMINAL_16.addFollower(TERMINAL_4);
    		TERMINAL_1.addFollower(TERMINAL_17);
    		TERMINAL_17.addFollower(TERMINAL_0);
    		TERMINAL_17.addFollower(TERMINAL_1);
    		TERMINAL_17.addFollower(TERMINAL_2);
    		TERMINAL_17.addFollower(TERMINAL_3);
    		TERMINAL_17.addFollower(TERMINAL_4);
    		TERMINAL_3.addFollower(TERMINAL_18);
    		TERMINAL_3.addFollower(TERMINAL_19);
    		TERMINAL_3.addFollower(TERMINAL_20);
    		TERMINAL_3.addFollower(TERMINAL_21);
    		TERMINAL_3.addFollower(TERMINAL_22);
    		TERMINAL_3.addFollower(TERMINAL_23);
    		TERMINAL_3.addFollower(TERMINAL_24);
    		TERMINAL_3.addFollower(TERMINAL_25);
    		TERMINAL_3.addFollower(TERMINAL_26);
    		TERMINAL_3.addFollower(TERMINAL_27);
    		TERMINAL_3.addFollower(TERMINAL_28);
    		TERMINAL_3.addFollower(TERMINAL_29);
    		TERMINAL_3.addFollower(TERMINAL_3);
    		TERMINAL_3.addFollower(TERMINAL_4);
    		TERMINAL_18.addFollower(TERMINAL_3);
    		TERMINAL_18.addFollower(TERMINAL_4);
    		TERMINAL_19.addFollower(TERMINAL_3);
    		TERMINAL_19.addFollower(TERMINAL_4);
    		TERMINAL_19.addFollower(TERMINAL_30);
    		TERMINAL_30.addFollower(TERMINAL_3);
    		TERMINAL_30.addFollower(TERMINAL_4);
    		TERMINAL_30.addFollower(TERMINAL_18);
    		TERMINAL_30.addFollower(TERMINAL_19);
    		TERMINAL_30.addFollower(TERMINAL_20);
    		TERMINAL_30.addFollower(TERMINAL_21);
    		TERMINAL_30.addFollower(TERMINAL_22);
    		TERMINAL_30.addFollower(TERMINAL_23);
    		TERMINAL_30.addFollower(TERMINAL_24);
    		TERMINAL_30.addFollower(TERMINAL_25);
    		TERMINAL_30.addFollower(TERMINAL_26);
    		TERMINAL_30.addFollower(TERMINAL_27);
    		TERMINAL_30.addFollower(TERMINAL_28);
    		TERMINAL_30.addFollower(TERMINAL_29);
    		TERMINAL_20.addFollower(TERMINAL_21);
    		TERMINAL_20.addFollower(TERMINAL_22);
    		TERMINAL_20.addFollower(TERMINAL_23);
    		TERMINAL_20.addFollower(TERMINAL_24);
    		TERMINAL_20.addFollower(TERMINAL_25);
    		TERMINAL_20.addFollower(TERMINAL_26);
    		TERMINAL_20.addFollower(TERMINAL_27);
    		TERMINAL_20.addFollower(TERMINAL_28);
    		TERMINAL_20.addFollower(TERMINAL_29);
    		TERMINAL_31.addFollower(TERMINAL_3);
    		TERMINAL_31.addFollower(TERMINAL_4);
    		TERMINAL_31.addFollower(TERMINAL_18);
    		TERMINAL_31.addFollower(TERMINAL_19);
    		TERMINAL_31.addFollower(TERMINAL_20);
    		TERMINAL_31.addFollower(TERMINAL_21);
    		TERMINAL_31.addFollower(TERMINAL_22);
    		TERMINAL_31.addFollower(TERMINAL_23);
    		TERMINAL_31.addFollower(TERMINAL_24);
    		TERMINAL_31.addFollower(TERMINAL_25);
    		TERMINAL_31.addFollower(TERMINAL_26);
    		TERMINAL_31.addFollower(TERMINAL_27);
    		TERMINAL_31.addFollower(TERMINAL_28);
    		TERMINAL_31.addFollower(TERMINAL_29);
    		TERMINAL_4.addFollower(TERMINAL_32);
    		TERMINAL_32.addFollower(TERMINAL_33);
    		TERMINAL_32.addFollower(TERMINAL_34);
    		TERMINAL_32.addFollower(TERMINAL_35);
    		TERMINAL_32.addFollower(TERMINAL_21);
    		TERMINAL_32.addFollower(TERMINAL_22);
    		TERMINAL_32.addFollower(TERMINAL_23);
    		TERMINAL_32.addFollower(TERMINAL_24);
    		TERMINAL_32.addFollower(TERMINAL_25);
    		TERMINAL_32.addFollower(TERMINAL_26);
    		TERMINAL_32.addFollower(TERMINAL_27);
    		TERMINAL_32.addFollower(TERMINAL_28);
    		TERMINAL_32.addFollower(TERMINAL_29);
    		TERMINAL_32.addFollower(TERMINAL_3);
    		TERMINAL_32.addFollower(TERMINAL_4);
    		TERMINAL_32.addFollower(TERMINAL_18);
    		TERMINAL_32.addFollower(TERMINAL_19);
    		TERMINAL_32.addFollower(TERMINAL_20);
    		TERMINAL_33.addFollower(TERMINAL_3);
    		TERMINAL_33.addFollower(TERMINAL_4);
    		TERMINAL_34.addFollower(TERMINAL_3);
    		TERMINAL_34.addFollower(TERMINAL_4);
    		TERMINAL_34.addFollower(TERMINAL_36);
    		TERMINAL_36.addFollower(TERMINAL_3);
    		TERMINAL_36.addFollower(TERMINAL_4);
    		TERMINAL_36.addFollower(TERMINAL_18);
    		TERMINAL_36.addFollower(TERMINAL_19);
    		TERMINAL_36.addFollower(TERMINAL_20);
    		TERMINAL_36.addFollower(TERMINAL_21);
    		TERMINAL_36.addFollower(TERMINAL_22);
    		TERMINAL_36.addFollower(TERMINAL_23);
    		TERMINAL_36.addFollower(TERMINAL_24);
    		TERMINAL_36.addFollower(TERMINAL_25);
    		TERMINAL_36.addFollower(TERMINAL_26);
    		TERMINAL_36.addFollower(TERMINAL_27);
    		TERMINAL_36.addFollower(TERMINAL_28);
    		TERMINAL_36.addFollower(TERMINAL_29);
    		TERMINAL_35.addFollower(TERMINAL_21);
    		TERMINAL_35.addFollower(TERMINAL_22);
    		TERMINAL_35.addFollower(TERMINAL_23);
    		TERMINAL_35.addFollower(TERMINAL_24);
    		TERMINAL_35.addFollower(TERMINAL_25);
    		TERMINAL_35.addFollower(TERMINAL_26);
    		TERMINAL_35.addFollower(TERMINAL_27);
    		TERMINAL_35.addFollower(TERMINAL_28);
    		TERMINAL_35.addFollower(TERMINAL_29);
    		TERMINAL_37.addFollower(TERMINAL_3);
    		TERMINAL_37.addFollower(TERMINAL_4);
    		TERMINAL_37.addFollower(TERMINAL_18);
    		TERMINAL_37.addFollower(TERMINAL_19);
    		TERMINAL_37.addFollower(TERMINAL_20);
    		TERMINAL_37.addFollower(TERMINAL_21);
    		TERMINAL_37.addFollower(TERMINAL_22);
    		TERMINAL_37.addFollower(TERMINAL_23);
    		TERMINAL_37.addFollower(TERMINAL_24);
    		TERMINAL_37.addFollower(TERMINAL_25);
    		TERMINAL_37.addFollower(TERMINAL_26);
    		TERMINAL_37.addFollower(TERMINAL_27);
    		TERMINAL_37.addFollower(TERMINAL_28);
    		TERMINAL_37.addFollower(TERMINAL_29);
    		TERMINAL_21.addFollower(TERMINAL_22);
    		TERMINAL_21.addFollower(TERMINAL_23);
    		TERMINAL_22.addFollower(TERMINAL_23);
    		TERMINAL_23.addFollower(TERMINAL_38);
    		TERMINAL_38.addFollower(TERMINAL_39);
    		TERMINAL_38.addFollower(TERMINAL_40);
    		TERMINAL_39.addFollower(TERMINAL_41);
    		TERMINAL_41.addFollower(TERMINAL_42);
    		TERMINAL_41.addFollower(TERMINAL_40);
    		TERMINAL_42.addFollower(TERMINAL_43);
    		TERMINAL_43.addFollower(TERMINAL_42);
    		TERMINAL_43.addFollower(TERMINAL_40);
    		TERMINAL_40.addFollower(TERMINAL_9);
    		TERMINAL_40.addFollower(TERMINAL_6);
    		TERMINAL_40.addFollower(TERMINAL_7);
    		TERMINAL_40.addFollower(TERMINAL_8);
    		TERMINAL_40.addFollower(TERMINAL_10);
    		TERMINAL_40.addFollower(TERMINAL_44);
    		TERMINAL_44.addFollower(TERMINAL_21);
    		TERMINAL_44.addFollower(TERMINAL_22);
    		TERMINAL_44.addFollower(TERMINAL_23);
    		TERMINAL_44.addFollower(TERMINAL_24);
    		TERMINAL_44.addFollower(TERMINAL_25);
    		TERMINAL_44.addFollower(TERMINAL_26);
    		TERMINAL_44.addFollower(TERMINAL_27);
    		TERMINAL_44.addFollower(TERMINAL_28);
    		TERMINAL_44.addFollower(TERMINAL_29);
    		TERMINAL_44.addFollower(TERMINAL_31);
    		TERMINAL_6.addFollower(TERMINAL_45);
    		TERMINAL_7.addFollower(TERMINAL_45);
    		TERMINAL_45.addFollower(TERMINAL_46);
    		TERMINAL_45.addFollower(TERMINAL_6);
    		TERMINAL_45.addFollower(TERMINAL_7);
    		TERMINAL_45.addFollower(TERMINAL_8);
    		TERMINAL_45.addFollower(TERMINAL_9);
    		TERMINAL_45.addFollower(TERMINAL_10);
    		TERMINAL_45.addFollower(TERMINAL_44);
    		TERMINAL_46.addFollower(TERMINAL_47);
    		TERMINAL_47.addFollower(TERMINAL_6);
    		TERMINAL_47.addFollower(TERMINAL_7);
    		TERMINAL_47.addFollower(TERMINAL_8);
    		TERMINAL_47.addFollower(TERMINAL_9);
    		TERMINAL_47.addFollower(TERMINAL_10);
    		TERMINAL_47.addFollower(TERMINAL_44);
    		TERMINAL_8.addFollower(TERMINAL_48);
    		TERMINAL_48.addFollower(TERMINAL_49);
    		TERMINAL_48.addFollower(TERMINAL_50);
    		TERMINAL_48.addFollower(TERMINAL_51);
    		TERMINAL_48.addFollower(TERMINAL_6);
    		TERMINAL_48.addFollower(TERMINAL_7);
    		TERMINAL_48.addFollower(TERMINAL_8);
    		TERMINAL_48.addFollower(TERMINAL_9);
    		TERMINAL_48.addFollower(TERMINAL_10);
    		TERMINAL_48.addFollower(TERMINAL_44);
    		TERMINAL_49.addFollower(TERMINAL_52);
    		TERMINAL_52.addFollower(TERMINAL_50);
    		TERMINAL_52.addFollower(TERMINAL_51);
    		TERMINAL_52.addFollower(TERMINAL_6);
    		TERMINAL_52.addFollower(TERMINAL_7);
    		TERMINAL_52.addFollower(TERMINAL_8);
    		TERMINAL_52.addFollower(TERMINAL_9);
    		TERMINAL_52.addFollower(TERMINAL_10);
    		TERMINAL_52.addFollower(TERMINAL_44);
    		TERMINAL_50.addFollower(TERMINAL_53);
    		TERMINAL_50.addFollower(TERMINAL_54);
    		TERMINAL_50.addFollower(TERMINAL_55);
    		TERMINAL_50.addFollower(TERMINAL_56);
    		TERMINAL_50.addFollower(TERMINAL_57);
    		TERMINAL_50.addFollower(TERMINAL_58);
    		TERMINAL_50.addFollower(TERMINAL_59);
    		TERMINAL_50.addFollower(TERMINAL_60);
    		TERMINAL_50.addFollower(TERMINAL_15);
    		TERMINAL_50.addFollower(TERMINAL_61);
    		TERMINAL_50.addFollower(TERMINAL_62);
    		TERMINAL_50.addFollower(TERMINAL_63);
    		TERMINAL_50.addFollower(TERMINAL_64);
    		TERMINAL_50.addFollower(TERMINAL_65);
    		TERMINAL_50.addFollower(TERMINAL_66);
    		TERMINAL_50.addFollower(TERMINAL_67);
    		TERMINAL_50.addFollower(TERMINAL_68);
    		TERMINAL_50.addFollower(TERMINAL_69);
    		TERMINAL_50.addFollower(TERMINAL_70);
    		TERMINAL_50.addFollower(TERMINAL_71);
    		TERMINAL_51.addFollower(TERMINAL_53);
    		TERMINAL_51.addFollower(TERMINAL_54);
    		TERMINAL_51.addFollower(TERMINAL_55);
    		TERMINAL_51.addFollower(TERMINAL_56);
    		TERMINAL_51.addFollower(TERMINAL_57);
    		TERMINAL_51.addFollower(TERMINAL_58);
    		TERMINAL_51.addFollower(TERMINAL_59);
    		TERMINAL_51.addFollower(TERMINAL_60);
    		TERMINAL_51.addFollower(TERMINAL_15);
    		TERMINAL_51.addFollower(TERMINAL_61);
    		TERMINAL_51.addFollower(TERMINAL_62);
    		TERMINAL_51.addFollower(TERMINAL_63);
    		TERMINAL_51.addFollower(TERMINAL_64);
    		TERMINAL_51.addFollower(TERMINAL_65);
    		TERMINAL_51.addFollower(TERMINAL_66);
    		TERMINAL_51.addFollower(TERMINAL_67);
    		TERMINAL_51.addFollower(TERMINAL_68);
    		TERMINAL_51.addFollower(TERMINAL_69);
    		TERMINAL_51.addFollower(TERMINAL_70);
    		TERMINAL_51.addFollower(TERMINAL_71);
    		TERMINAL_10.addFollower(TERMINAL_72);
    		TERMINAL_72.addFollower(TERMINAL_73);
    		TERMINAL_73.addFollower(TERMINAL_11);
    		TERMINAL_73.addFollower(TERMINAL_74);
    		TERMINAL_75.addFollower(TERMINAL_77);
    		TERMINAL_77.addFollower(TERMINAL_76);
    		TERMINAL_77.addFollower(TERMINAL_74);
    		TERMINAL_76.addFollower(TERMINAL_11);
    		TERMINAL_78.addFollower(TERMINAL_79);
    		TERMINAL_79.addFollower(TERMINAL_76);
    		TERMINAL_79.addFollower(TERMINAL_74);
    		TERMINAL_74.addFollower(TERMINAL_80);
    		TERMINAL_74.addFollower(TERMINAL_81);
    		TERMINAL_80.addFollower(TERMINAL_82);
    		TERMINAL_82.addFollower(TERMINAL_81);
    		TERMINAL_81.addFollower(TERMINAL_53);
    		TERMINAL_81.addFollower(TERMINAL_83);
    		TERMINAL_83.addFollower(TERMINAL_9);
    		TERMINAL_83.addFollower(TERMINAL_10);
    		TERMINAL_83.addFollower(TERMINAL_44);
    		TERMINAL_11.addFollower(TERMINAL_84);
    		TERMINAL_84.addFollower(TERMINAL_85);
    		TERMINAL_85.addFollower(TERMINAL_75);
    		TERMINAL_85.addFollower(TERMINAL_76);
    		TERMINAL_85.addFollower(TERMINAL_74);
    		TERMINAL_86.addFollower(TERMINAL_87);
    		TERMINAL_86.addFollower(TERMINAL_88);
    		TERMINAL_86.addFollower(TERMINAL_89);
    		TERMINAL_86.addFollower(TERMINAL_90);
    		TERMINAL_86.addFollower(TERMINAL_91);
    		TERMINAL_86.addFollower(TERMINAL_92);
    		TERMINAL_86.addFollower(TERMINAL_93);
    		TERMINAL_86.addFollower(TERMINAL_94);
    		TERMINAL_86.addFollower(TERMINAL_95);
    		TERMINAL_86.addFollower(TERMINAL_96);
    		TERMINAL_86.addFollower(TERMINAL_97);
    		TERMINAL_86.addFollower(TERMINAL_98);
    		TERMINAL_86.addFollower(TERMINAL_99);
    		TERMINAL_86.addFollower(TERMINAL_100);
    		TERMINAL_86.addFollower(TERMINAL_101);
    		TERMINAL_86.addFollower(TERMINAL_102);
    		TERMINAL_86.addFollower(TERMINAL_103);
    		TERMINAL_86.addFollower(TERMINAL_104);
    		TERMINAL_86.addFollower(TERMINAL_105);
    		TERMINAL_86.addFollower(TERMINAL_106);
    		TERMINAL_86.addFollower(TERMINAL_107);
    		TERMINAL_86.addFollower(TERMINAL_108);
    		TERMINAL_86.addFollower(TERMINAL_109);
    		TERMINAL_86.addFollower(TERMINAL_110);
    		TERMINAL_86.addFollower(TERMINAL_111);
    		TERMINAL_86.addFollower(TERMINAL_112);
    		TERMINAL_86.addFollower(TERMINAL_113);
    		TERMINAL_86.addFollower(TERMINAL_114);
    		TERMINAL_86.addFollower(TERMINAL_115);
    		TERMINAL_86.addFollower(TERMINAL_116);
    		TERMINAL_86.addFollower(TERMINAL_117);
    		TERMINAL_86.addFollower(TERMINAL_118);
    		TERMINAL_86.addFollower(TERMINAL_119);
    		TERMINAL_86.addFollower(TERMINAL_120);
    		TERMINAL_86.addFollower(TERMINAL_121);
    		TERMINAL_86.addFollower(TERMINAL_122);
    		TERMINAL_86.addFollower(TERMINAL_123);
    		TERMINAL_86.addFollower(TERMINAL_124);
    		TERMINAL_86.addFollower(TERMINAL_125);
    		TERMINAL_86.addFollower(TERMINAL_126);
    		TERMINAL_86.addFollower(TERMINAL_127);
    		TERMINAL_86.addFollower(TERMINAL_128);
    		TERMINAL_86.addFollower(TERMINAL_129);
    		TERMINAL_86.addFollower(TERMINAL_130);
    		TERMINAL_86.addFollower(TERMINAL_131);
    		TERMINAL_86.addFollower(TERMINAL_132);
    		TERMINAL_86.addFollower(TERMINAL_133);
    		TERMINAL_86.addFollower(TERMINAL_134);
    		TERMINAL_86.addFollower(TERMINAL_135);
    		TERMINAL_86.addFollower(TERMINAL_136);
    		TERMINAL_86.addFollower(TERMINAL_137);
    		TERMINAL_86.addFollower(TERMINAL_138);
    		TERMINAL_86.addFollower(TERMINAL_139);
    		TERMINAL_86.addFollower(TERMINAL_140);
    		TERMINAL_86.addFollower(TERMINAL_141);
    		TERMINAL_86.addFollower(TERMINAL_142);
    		TERMINAL_86.addFollower(TERMINAL_143);
    		TERMINAL_86.addFollower(TERMINAL_144);
    		TERMINAL_86.addFollower(TERMINAL_145);
    		TERMINAL_86.addFollower(TERMINAL_146);
    		TERMINAL_86.addFollower(TERMINAL_147);
    		TERMINAL_86.addFollower(TERMINAL_148);
    		TERMINAL_86.addFollower(TERMINAL_149);
    		TERMINAL_86.addFollower(TERMINAL_150);
    		TERMINAL_24.addFollower(TERMINAL_151);
    		TERMINAL_151.addFollower(TERMINAL_152);
    		TERMINAL_152.addFollower(TERMINAL_153);
    		TERMINAL_154.addFollower(TERMINAL_153);
    		TERMINAL_154.addFollower(TERMINAL_155);
    		TERMINAL_156.addFollower(TERMINAL_153);
    		TERMINAL_156.addFollower(TERMINAL_155);
    		TERMINAL_155.addFollower(TERMINAL_21);
    		TERMINAL_155.addFollower(TERMINAL_22);
    		TERMINAL_155.addFollower(TERMINAL_23);
    		TERMINAL_155.addFollower(TERMINAL_24);
    		TERMINAL_155.addFollower(TERMINAL_25);
    		TERMINAL_155.addFollower(TERMINAL_26);
    		TERMINAL_155.addFollower(TERMINAL_27);
    		TERMINAL_155.addFollower(TERMINAL_28);
    		TERMINAL_155.addFollower(TERMINAL_29);
    		TERMINAL_155.addFollower(TERMINAL_31);
    		TERMINAL_155.addFollower(TERMINAL_87);
    		TERMINAL_155.addFollower(TERMINAL_88);
    		TERMINAL_155.addFollower(TERMINAL_89);
    		TERMINAL_155.addFollower(TERMINAL_90);
    		TERMINAL_155.addFollower(TERMINAL_91);
    		TERMINAL_155.addFollower(TERMINAL_92);
    		TERMINAL_155.addFollower(TERMINAL_93);
    		TERMINAL_155.addFollower(TERMINAL_94);
    		TERMINAL_155.addFollower(TERMINAL_95);
    		TERMINAL_155.addFollower(TERMINAL_96);
    		TERMINAL_155.addFollower(TERMINAL_97);
    		TERMINAL_155.addFollower(TERMINAL_98);
    		TERMINAL_155.addFollower(TERMINAL_99);
    		TERMINAL_155.addFollower(TERMINAL_100);
    		TERMINAL_155.addFollower(TERMINAL_101);
    		TERMINAL_155.addFollower(TERMINAL_102);
    		TERMINAL_155.addFollower(TERMINAL_103);
    		TERMINAL_155.addFollower(TERMINAL_104);
    		TERMINAL_155.addFollower(TERMINAL_105);
    		TERMINAL_155.addFollower(TERMINAL_106);
    		TERMINAL_155.addFollower(TERMINAL_107);
    		TERMINAL_155.addFollower(TERMINAL_108);
    		TERMINAL_155.addFollower(TERMINAL_109);
    		TERMINAL_155.addFollower(TERMINAL_110);
    		TERMINAL_155.addFollower(TERMINAL_111);
    		TERMINAL_155.addFollower(TERMINAL_112);
    		TERMINAL_155.addFollower(TERMINAL_113);
    		TERMINAL_155.addFollower(TERMINAL_114);
    		TERMINAL_155.addFollower(TERMINAL_115);
    		TERMINAL_155.addFollower(TERMINAL_116);
    		TERMINAL_155.addFollower(TERMINAL_117);
    		TERMINAL_155.addFollower(TERMINAL_118);
    		TERMINAL_155.addFollower(TERMINAL_119);
    		TERMINAL_155.addFollower(TERMINAL_120);
    		TERMINAL_155.addFollower(TERMINAL_121);
    		TERMINAL_155.addFollower(TERMINAL_122);
    		TERMINAL_155.addFollower(TERMINAL_123);
    		TERMINAL_155.addFollower(TERMINAL_124);
    		TERMINAL_155.addFollower(TERMINAL_125);
    		TERMINAL_155.addFollower(TERMINAL_126);
    		TERMINAL_155.addFollower(TERMINAL_127);
    		TERMINAL_155.addFollower(TERMINAL_128);
    		TERMINAL_155.addFollower(TERMINAL_129);
    		TERMINAL_155.addFollower(TERMINAL_130);
    		TERMINAL_155.addFollower(TERMINAL_131);
    		TERMINAL_155.addFollower(TERMINAL_132);
    		TERMINAL_155.addFollower(TERMINAL_133);
    		TERMINAL_155.addFollower(TERMINAL_134);
    		TERMINAL_155.addFollower(TERMINAL_135);
    		TERMINAL_155.addFollower(TERMINAL_136);
    		TERMINAL_155.addFollower(TERMINAL_137);
    		TERMINAL_155.addFollower(TERMINAL_138);
    		TERMINAL_155.addFollower(TERMINAL_139);
    		TERMINAL_155.addFollower(TERMINAL_140);
    		TERMINAL_155.addFollower(TERMINAL_141);
    		TERMINAL_155.addFollower(TERMINAL_142);
    		TERMINAL_155.addFollower(TERMINAL_143);
    		TERMINAL_155.addFollower(TERMINAL_144);
    		TERMINAL_155.addFollower(TERMINAL_145);
    		TERMINAL_155.addFollower(TERMINAL_146);
    		TERMINAL_155.addFollower(TERMINAL_147);
    		TERMINAL_155.addFollower(TERMINAL_148);
    		TERMINAL_155.addFollower(TERMINAL_149);
    		TERMINAL_155.addFollower(TERMINAL_150);
    		TERMINAL_153.addFollower(TERMINAL_154);
    		TERMINAL_9.addFollower(TERMINAL_157);
    		TERMINAL_157.addFollower(TERMINAL_9);
    		TERMINAL_157.addFollower(TERMINAL_6);
    		TERMINAL_157.addFollower(TERMINAL_7);
    		TERMINAL_157.addFollower(TERMINAL_8);
    		TERMINAL_157.addFollower(TERMINAL_10);
    		TERMINAL_157.addFollower(TERMINAL_44);
    		TERMINAL_25.addFollower(TERMINAL_21);
    		TERMINAL_25.addFollower(TERMINAL_22);
    		TERMINAL_25.addFollower(TERMINAL_23);
    		TERMINAL_25.addFollower(TERMINAL_24);
    		TERMINAL_25.addFollower(TERMINAL_25);
    		TERMINAL_25.addFollower(TERMINAL_26);
    		TERMINAL_25.addFollower(TERMINAL_27);
    		TERMINAL_25.addFollower(TERMINAL_28);
    		TERMINAL_25.addFollower(TERMINAL_29);
    		TERMINAL_25.addFollower(TERMINAL_31);
    		TERMINAL_25.addFollower(TERMINAL_87);
    		TERMINAL_25.addFollower(TERMINAL_88);
    		TERMINAL_25.addFollower(TERMINAL_89);
    		TERMINAL_25.addFollower(TERMINAL_90);
    		TERMINAL_25.addFollower(TERMINAL_91);
    		TERMINAL_25.addFollower(TERMINAL_92);
    		TERMINAL_25.addFollower(TERMINAL_93);
    		TERMINAL_25.addFollower(TERMINAL_94);
    		TERMINAL_25.addFollower(TERMINAL_95);
    		TERMINAL_25.addFollower(TERMINAL_96);
    		TERMINAL_25.addFollower(TERMINAL_97);
    		TERMINAL_25.addFollower(TERMINAL_98);
    		TERMINAL_25.addFollower(TERMINAL_99);
    		TERMINAL_25.addFollower(TERMINAL_100);
    		TERMINAL_25.addFollower(TERMINAL_101);
    		TERMINAL_25.addFollower(TERMINAL_102);
    		TERMINAL_25.addFollower(TERMINAL_103);
    		TERMINAL_25.addFollower(TERMINAL_104);
    		TERMINAL_25.addFollower(TERMINAL_105);
    		TERMINAL_25.addFollower(TERMINAL_106);
    		TERMINAL_25.addFollower(TERMINAL_107);
    		TERMINAL_25.addFollower(TERMINAL_108);
    		TERMINAL_25.addFollower(TERMINAL_109);
    		TERMINAL_25.addFollower(TERMINAL_110);
    		TERMINAL_25.addFollower(TERMINAL_111);
    		TERMINAL_25.addFollower(TERMINAL_112);
    		TERMINAL_25.addFollower(TERMINAL_113);
    		TERMINAL_25.addFollower(TERMINAL_114);
    		TERMINAL_25.addFollower(TERMINAL_115);
    		TERMINAL_25.addFollower(TERMINAL_116);
    		TERMINAL_25.addFollower(TERMINAL_117);
    		TERMINAL_25.addFollower(TERMINAL_118);
    		TERMINAL_25.addFollower(TERMINAL_119);
    		TERMINAL_25.addFollower(TERMINAL_120);
    		TERMINAL_25.addFollower(TERMINAL_121);
    		TERMINAL_25.addFollower(TERMINAL_122);
    		TERMINAL_25.addFollower(TERMINAL_123);
    		TERMINAL_25.addFollower(TERMINAL_124);
    		TERMINAL_25.addFollower(TERMINAL_125);
    		TERMINAL_25.addFollower(TERMINAL_126);
    		TERMINAL_25.addFollower(TERMINAL_127);
    		TERMINAL_25.addFollower(TERMINAL_128);
    		TERMINAL_25.addFollower(TERMINAL_129);
    		TERMINAL_25.addFollower(TERMINAL_130);
    		TERMINAL_25.addFollower(TERMINAL_131);
    		TERMINAL_25.addFollower(TERMINAL_132);
    		TERMINAL_25.addFollower(TERMINAL_133);
    		TERMINAL_25.addFollower(TERMINAL_134);
    		TERMINAL_25.addFollower(TERMINAL_135);
    		TERMINAL_25.addFollower(TERMINAL_136);
    		TERMINAL_25.addFollower(TERMINAL_137);
    		TERMINAL_25.addFollower(TERMINAL_138);
    		TERMINAL_25.addFollower(TERMINAL_139);
    		TERMINAL_25.addFollower(TERMINAL_140);
    		TERMINAL_25.addFollower(TERMINAL_141);
    		TERMINAL_25.addFollower(TERMINAL_142);
    		TERMINAL_25.addFollower(TERMINAL_143);
    		TERMINAL_25.addFollower(TERMINAL_144);
    		TERMINAL_25.addFollower(TERMINAL_145);
    		TERMINAL_25.addFollower(TERMINAL_146);
    		TERMINAL_25.addFollower(TERMINAL_147);
    		TERMINAL_25.addFollower(TERMINAL_148);
    		TERMINAL_25.addFollower(TERMINAL_149);
    		TERMINAL_25.addFollower(TERMINAL_150);
    		TERMINAL_158.addFollower(TERMINAL_87);
    		TERMINAL_158.addFollower(TERMINAL_88);
    		TERMINAL_158.addFollower(TERMINAL_89);
    		TERMINAL_158.addFollower(TERMINAL_90);
    		TERMINAL_158.addFollower(TERMINAL_91);
    		TERMINAL_158.addFollower(TERMINAL_92);
    		TERMINAL_158.addFollower(TERMINAL_93);
    		TERMINAL_158.addFollower(TERMINAL_94);
    		TERMINAL_158.addFollower(TERMINAL_95);
    		TERMINAL_158.addFollower(TERMINAL_96);
    		TERMINAL_158.addFollower(TERMINAL_97);
    		TERMINAL_158.addFollower(TERMINAL_98);
    		TERMINAL_158.addFollower(TERMINAL_99);
    		TERMINAL_158.addFollower(TERMINAL_100);
    		TERMINAL_158.addFollower(TERMINAL_101);
    		TERMINAL_158.addFollower(TERMINAL_102);
    		TERMINAL_158.addFollower(TERMINAL_103);
    		TERMINAL_158.addFollower(TERMINAL_104);
    		TERMINAL_158.addFollower(TERMINAL_105);
    		TERMINAL_158.addFollower(TERMINAL_106);
    		TERMINAL_158.addFollower(TERMINAL_107);
    		TERMINAL_158.addFollower(TERMINAL_108);
    		TERMINAL_158.addFollower(TERMINAL_109);
    		TERMINAL_158.addFollower(TERMINAL_110);
    		TERMINAL_158.addFollower(TERMINAL_111);
    		TERMINAL_158.addFollower(TERMINAL_112);
    		TERMINAL_158.addFollower(TERMINAL_113);
    		TERMINAL_158.addFollower(TERMINAL_114);
    		TERMINAL_158.addFollower(TERMINAL_115);
    		TERMINAL_158.addFollower(TERMINAL_116);
    		TERMINAL_158.addFollower(TERMINAL_117);
    		TERMINAL_158.addFollower(TERMINAL_118);
    		TERMINAL_158.addFollower(TERMINAL_119);
    		TERMINAL_158.addFollower(TERMINAL_120);
    		TERMINAL_158.addFollower(TERMINAL_121);
    		TERMINAL_158.addFollower(TERMINAL_122);
    		TERMINAL_158.addFollower(TERMINAL_123);
    		TERMINAL_158.addFollower(TERMINAL_124);
    		TERMINAL_158.addFollower(TERMINAL_125);
    		TERMINAL_158.addFollower(TERMINAL_126);
    		TERMINAL_158.addFollower(TERMINAL_127);
    		TERMINAL_158.addFollower(TERMINAL_128);
    		TERMINAL_158.addFollower(TERMINAL_129);
    		TERMINAL_158.addFollower(TERMINAL_130);
    		TERMINAL_158.addFollower(TERMINAL_131);
    		TERMINAL_158.addFollower(TERMINAL_132);
    		TERMINAL_158.addFollower(TERMINAL_133);
    		TERMINAL_158.addFollower(TERMINAL_134);
    		TERMINAL_158.addFollower(TERMINAL_135);
    		TERMINAL_158.addFollower(TERMINAL_136);
    		TERMINAL_158.addFollower(TERMINAL_137);
    		TERMINAL_158.addFollower(TERMINAL_138);
    		TERMINAL_158.addFollower(TERMINAL_139);
    		TERMINAL_158.addFollower(TERMINAL_140);
    		TERMINAL_158.addFollower(TERMINAL_141);
    		TERMINAL_158.addFollower(TERMINAL_142);
    		TERMINAL_158.addFollower(TERMINAL_143);
    		TERMINAL_158.addFollower(TERMINAL_144);
    		TERMINAL_158.addFollower(TERMINAL_145);
    		TERMINAL_158.addFollower(TERMINAL_146);
    		TERMINAL_158.addFollower(TERMINAL_147);
    		TERMINAL_158.addFollower(TERMINAL_148);
    		TERMINAL_158.addFollower(TERMINAL_149);
    		TERMINAL_158.addFollower(TERMINAL_150);
    		TERMINAL_159.addFollower(TERMINAL_87);
    		TERMINAL_159.addFollower(TERMINAL_88);
    		TERMINAL_159.addFollower(TERMINAL_89);
    		TERMINAL_159.addFollower(TERMINAL_90);
    		TERMINAL_159.addFollower(TERMINAL_91);
    		TERMINAL_159.addFollower(TERMINAL_92);
    		TERMINAL_159.addFollower(TERMINAL_93);
    		TERMINAL_159.addFollower(TERMINAL_94);
    		TERMINAL_159.addFollower(TERMINAL_95);
    		TERMINAL_159.addFollower(TERMINAL_96);
    		TERMINAL_159.addFollower(TERMINAL_97);
    		TERMINAL_159.addFollower(TERMINAL_98);
    		TERMINAL_159.addFollower(TERMINAL_99);
    		TERMINAL_159.addFollower(TERMINAL_100);
    		TERMINAL_159.addFollower(TERMINAL_101);
    		TERMINAL_159.addFollower(TERMINAL_102);
    		TERMINAL_159.addFollower(TERMINAL_103);
    		TERMINAL_159.addFollower(TERMINAL_104);
    		TERMINAL_159.addFollower(TERMINAL_105);
    		TERMINAL_159.addFollower(TERMINAL_106);
    		TERMINAL_159.addFollower(TERMINAL_107);
    		TERMINAL_159.addFollower(TERMINAL_108);
    		TERMINAL_159.addFollower(TERMINAL_109);
    		TERMINAL_159.addFollower(TERMINAL_110);
    		TERMINAL_159.addFollower(TERMINAL_111);
    		TERMINAL_159.addFollower(TERMINAL_112);
    		TERMINAL_159.addFollower(TERMINAL_113);
    		TERMINAL_159.addFollower(TERMINAL_114);
    		TERMINAL_159.addFollower(TERMINAL_115);
    		TERMINAL_159.addFollower(TERMINAL_116);
    		TERMINAL_159.addFollower(TERMINAL_117);
    		TERMINAL_159.addFollower(TERMINAL_118);
    		TERMINAL_159.addFollower(TERMINAL_119);
    		TERMINAL_159.addFollower(TERMINAL_120);
    		TERMINAL_159.addFollower(TERMINAL_121);
    		TERMINAL_159.addFollower(TERMINAL_122);
    		TERMINAL_159.addFollower(TERMINAL_123);
    		TERMINAL_159.addFollower(TERMINAL_124);
    		TERMINAL_159.addFollower(TERMINAL_125);
    		TERMINAL_159.addFollower(TERMINAL_126);
    		TERMINAL_159.addFollower(TERMINAL_127);
    		TERMINAL_159.addFollower(TERMINAL_128);
    		TERMINAL_159.addFollower(TERMINAL_129);
    		TERMINAL_159.addFollower(TERMINAL_130);
    		TERMINAL_159.addFollower(TERMINAL_131);
    		TERMINAL_159.addFollower(TERMINAL_132);
    		TERMINAL_159.addFollower(TERMINAL_133);
    		TERMINAL_159.addFollower(TERMINAL_134);
    		TERMINAL_159.addFollower(TERMINAL_135);
    		TERMINAL_159.addFollower(TERMINAL_136);
    		TERMINAL_159.addFollower(TERMINAL_137);
    		TERMINAL_159.addFollower(TERMINAL_138);
    		TERMINAL_159.addFollower(TERMINAL_139);
    		TERMINAL_159.addFollower(TERMINAL_140);
    		TERMINAL_159.addFollower(TERMINAL_141);
    		TERMINAL_159.addFollower(TERMINAL_142);
    		TERMINAL_159.addFollower(TERMINAL_143);
    		TERMINAL_159.addFollower(TERMINAL_144);
    		TERMINAL_159.addFollower(TERMINAL_145);
    		TERMINAL_159.addFollower(TERMINAL_146);
    		TERMINAL_159.addFollower(TERMINAL_147);
    		TERMINAL_159.addFollower(TERMINAL_148);
    		TERMINAL_159.addFollower(TERMINAL_149);
    		TERMINAL_159.addFollower(TERMINAL_150);
    		TERMINAL_160.addFollower(TERMINAL_161);
    		TERMINAL_161.addFollower(TERMINAL_162);
    		TERMINAL_161.addFollower(TERMINAL_163);
    		TERMINAL_161.addFollower(TERMINAL_164);
    		TERMINAL_162.addFollower(TERMINAL_165);
    		TERMINAL_165.addFollower(TERMINAL_166);
    		TERMINAL_166.addFollower(TERMINAL_162);
    		TERMINAL_166.addFollower(TERMINAL_163);
    		TERMINAL_166.addFollower(TERMINAL_164);
    		TERMINAL_163.addFollower(TERMINAL_167);
    		TERMINAL_167.addFollower(TERMINAL_168);
    		TERMINAL_5.addFollower(TERMINAL_169);
    		TERMINAL_169.addFollower(TERMINAL_170);
    		TERMINAL_169.addFollower(TERMINAL_171);
    		TERMINAL_169.addFollower(TERMINAL_172);
    		TERMINAL_170.addFollower(TERMINAL_173);
    		TERMINAL_173.addFollower(TERMINAL_174);
    		TERMINAL_174.addFollower(TERMINAL_170);
    		TERMINAL_174.addFollower(TERMINAL_171);
    		TERMINAL_174.addFollower(TERMINAL_172);
    		TERMINAL_171.addFollower(TERMINAL_175);
    		TERMINAL_175.addFollower(TERMINAL_168);
    		TERMINAL_26.addFollower(TERMINAL_27);
    		TERMINAL_27.addFollower(TERMINAL_176);
    		TERMINAL_176.addFollower(TERMINAL_177);
    		TERMINAL_176.addFollower(TERMINAL_178);
    		TERMINAL_176.addFollower(TERMINAL_179);
    		TERMINAL_176.addFollower(TERMINAL_180);
    		TERMINAL_176.addFollower(TERMINAL_181);
    		TERMINAL_176.addFollower(TERMINAL_182);
    		TERMINAL_177.addFollower(TERMINAL_183);
    		TERMINAL_183.addFollower(TERMINAL_184);
    		TERMINAL_184.addFollower(TERMINAL_177);
    		TERMINAL_184.addFollower(TERMINAL_178);
    		TERMINAL_184.addFollower(TERMINAL_179);
    		TERMINAL_184.addFollower(TERMINAL_180);
    		TERMINAL_184.addFollower(TERMINAL_181);
    		TERMINAL_184.addFollower(TERMINAL_182);
    		TERMINAL_178.addFollower(TERMINAL_185);
    		TERMINAL_185.addFollower(TERMINAL_168);
    		TERMINAL_179.addFollower(TERMINAL_186);
    		TERMINAL_186.addFollower(TERMINAL_187);
    		TERMINAL_187.addFollower(TERMINAL_177);
    		TERMINAL_187.addFollower(TERMINAL_178);
    		TERMINAL_187.addFollower(TERMINAL_179);
    		TERMINAL_187.addFollower(TERMINAL_180);
    		TERMINAL_187.addFollower(TERMINAL_181);
    		TERMINAL_187.addFollower(TERMINAL_182);
    		TERMINAL_180.addFollower(TERMINAL_188);
    		TERMINAL_188.addFollower(TERMINAL_189);
    		TERMINAL_189.addFollower(TERMINAL_177);
    		TERMINAL_189.addFollower(TERMINAL_178);
    		TERMINAL_189.addFollower(TERMINAL_179);
    		TERMINAL_189.addFollower(TERMINAL_180);
    		TERMINAL_189.addFollower(TERMINAL_181);
    		TERMINAL_189.addFollower(TERMINAL_182);
    		TERMINAL_181.addFollower(TERMINAL_190);
    		TERMINAL_190.addFollower(TERMINAL_191);
    	}
    	public static void wire1() {
    		TERMINAL_191.addFollower(TERMINAL_177);
    		TERMINAL_191.addFollower(TERMINAL_178);
    		TERMINAL_191.addFollower(TERMINAL_179);
    		TERMINAL_191.addFollower(TERMINAL_180);
    		TERMINAL_191.addFollower(TERMINAL_181);
    		TERMINAL_191.addFollower(TERMINAL_182);
    		TERMINAL_182.addFollower(TERMINAL_21);
    		TERMINAL_182.addFollower(TERMINAL_22);
    		TERMINAL_182.addFollower(TERMINAL_23);
    		TERMINAL_182.addFollower(TERMINAL_24);
    		TERMINAL_182.addFollower(TERMINAL_25);
    		TERMINAL_182.addFollower(TERMINAL_26);
    		TERMINAL_182.addFollower(TERMINAL_27);
    		TERMINAL_182.addFollower(TERMINAL_28);
    		TERMINAL_182.addFollower(TERMINAL_29);
    		TERMINAL_182.addFollower(TERMINAL_31);
    		TERMINAL_182.addFollower(TERMINAL_87);
    		TERMINAL_182.addFollower(TERMINAL_88);
    		TERMINAL_182.addFollower(TERMINAL_89);
    		TERMINAL_182.addFollower(TERMINAL_90);
    		TERMINAL_182.addFollower(TERMINAL_91);
    		TERMINAL_182.addFollower(TERMINAL_92);
    		TERMINAL_182.addFollower(TERMINAL_93);
    		TERMINAL_182.addFollower(TERMINAL_94);
    		TERMINAL_182.addFollower(TERMINAL_95);
    		TERMINAL_182.addFollower(TERMINAL_96);
    		TERMINAL_182.addFollower(TERMINAL_97);
    		TERMINAL_182.addFollower(TERMINAL_98);
    		TERMINAL_182.addFollower(TERMINAL_99);
    		TERMINAL_182.addFollower(TERMINAL_100);
    		TERMINAL_182.addFollower(TERMINAL_101);
    		TERMINAL_182.addFollower(TERMINAL_102);
    		TERMINAL_182.addFollower(TERMINAL_103);
    		TERMINAL_182.addFollower(TERMINAL_104);
    		TERMINAL_182.addFollower(TERMINAL_105);
    		TERMINAL_182.addFollower(TERMINAL_106);
    		TERMINAL_182.addFollower(TERMINAL_107);
    		TERMINAL_182.addFollower(TERMINAL_108);
    		TERMINAL_182.addFollower(TERMINAL_109);
    		TERMINAL_182.addFollower(TERMINAL_110);
    		TERMINAL_182.addFollower(TERMINAL_111);
    		TERMINAL_182.addFollower(TERMINAL_112);
    		TERMINAL_182.addFollower(TERMINAL_113);
    		TERMINAL_182.addFollower(TERMINAL_114);
    		TERMINAL_182.addFollower(TERMINAL_115);
    		TERMINAL_182.addFollower(TERMINAL_116);
    		TERMINAL_182.addFollower(TERMINAL_117);
    		TERMINAL_182.addFollower(TERMINAL_118);
    		TERMINAL_182.addFollower(TERMINAL_119);
    		TERMINAL_182.addFollower(TERMINAL_120);
    		TERMINAL_182.addFollower(TERMINAL_121);
    		TERMINAL_182.addFollower(TERMINAL_122);
    		TERMINAL_182.addFollower(TERMINAL_123);
    		TERMINAL_182.addFollower(TERMINAL_124);
    		TERMINAL_182.addFollower(TERMINAL_125);
    		TERMINAL_182.addFollower(TERMINAL_126);
    		TERMINAL_182.addFollower(TERMINAL_127);
    		TERMINAL_182.addFollower(TERMINAL_128);
    		TERMINAL_182.addFollower(TERMINAL_129);
    		TERMINAL_182.addFollower(TERMINAL_130);
    		TERMINAL_182.addFollower(TERMINAL_131);
    		TERMINAL_182.addFollower(TERMINAL_132);
    		TERMINAL_182.addFollower(TERMINAL_133);
    		TERMINAL_182.addFollower(TERMINAL_134);
    		TERMINAL_182.addFollower(TERMINAL_135);
    		TERMINAL_182.addFollower(TERMINAL_136);
    		TERMINAL_182.addFollower(TERMINAL_137);
    		TERMINAL_182.addFollower(TERMINAL_138);
    		TERMINAL_182.addFollower(TERMINAL_139);
    		TERMINAL_182.addFollower(TERMINAL_140);
    		TERMINAL_182.addFollower(TERMINAL_141);
    		TERMINAL_182.addFollower(TERMINAL_142);
    		TERMINAL_182.addFollower(TERMINAL_143);
    		TERMINAL_182.addFollower(TERMINAL_144);
    		TERMINAL_182.addFollower(TERMINAL_145);
    		TERMINAL_182.addFollower(TERMINAL_146);
    		TERMINAL_182.addFollower(TERMINAL_147);
    		TERMINAL_182.addFollower(TERMINAL_148);
    		TERMINAL_182.addFollower(TERMINAL_149);
    		TERMINAL_182.addFollower(TERMINAL_150);
    		TERMINAL_192.addFollower(TERMINAL_193);
    		TERMINAL_193.addFollower(TERMINAL_87);
    		TERMINAL_193.addFollower(TERMINAL_88);
    		TERMINAL_193.addFollower(TERMINAL_89);
    		TERMINAL_193.addFollower(TERMINAL_90);
    		TERMINAL_193.addFollower(TERMINAL_91);
    		TERMINAL_193.addFollower(TERMINAL_92);
    		TERMINAL_87.addFollower(TERMINAL_194);
    		TERMINAL_194.addFollower(TERMINAL_195);
    		TERMINAL_195.addFollower(TERMINAL_87);
    		TERMINAL_195.addFollower(TERMINAL_88);
    		TERMINAL_195.addFollower(TERMINAL_89);
    		TERMINAL_195.addFollower(TERMINAL_90);
    		TERMINAL_195.addFollower(TERMINAL_91);
    		TERMINAL_195.addFollower(TERMINAL_92);
    		TERMINAL_88.addFollower(TERMINAL_196);
    		TERMINAL_196.addFollower(TERMINAL_168);
    		TERMINAL_89.addFollower(TERMINAL_197);
    		TERMINAL_197.addFollower(TERMINAL_86);
    		TERMINAL_197.addFollower(TERMINAL_24);
    		TERMINAL_197.addFollower(TERMINAL_25);
    		TERMINAL_197.addFollower(TERMINAL_158);
    		TERMINAL_197.addFollower(TERMINAL_159);
    		TERMINAL_197.addFollower(TERMINAL_26);
    		TERMINAL_197.addFollower(TERMINAL_27);
    		TERMINAL_197.addFollower(TERMINAL_198);
    		TERMINAL_197.addFollower(TERMINAL_199);
    		TERMINAL_197.addFollower(TERMINAL_200);
    		TERMINAL_197.addFollower(TERMINAL_201);
    		TERMINAL_197.addFollower(TERMINAL_202);
    		TERMINAL_90.addFollower(TERMINAL_203);
    		TERMINAL_203.addFollower(TERMINAL_204);
    		TERMINAL_204.addFollower(TERMINAL_87);
    		TERMINAL_204.addFollower(TERMINAL_88);
    		TERMINAL_204.addFollower(TERMINAL_89);
    		TERMINAL_204.addFollower(TERMINAL_90);
    		TERMINAL_204.addFollower(TERMINAL_91);
    		TERMINAL_204.addFollower(TERMINAL_92);
    		TERMINAL_91.addFollower(TERMINAL_205);
    		TERMINAL_205.addFollower(TERMINAL_206);
    		TERMINAL_206.addFollower(TERMINAL_87);
    		TERMINAL_206.addFollower(TERMINAL_88);
    		TERMINAL_206.addFollower(TERMINAL_89);
    		TERMINAL_206.addFollower(TERMINAL_90);
    		TERMINAL_206.addFollower(TERMINAL_91);
    		TERMINAL_206.addFollower(TERMINAL_92);
    		TERMINAL_92.addFollower(TERMINAL_116);
    		TERMINAL_92.addFollower(TERMINAL_117);
    		TERMINAL_92.addFollower(TERMINAL_118);
    		TERMINAL_92.addFollower(TERMINAL_119);
    		TERMINAL_92.addFollower(TERMINAL_120);
    		TERMINAL_92.addFollower(TERMINAL_121);
    		TERMINAL_92.addFollower(TERMINAL_122);
    		TERMINAL_92.addFollower(TERMINAL_123);
    		TERMINAL_92.addFollower(TERMINAL_124);
    		TERMINAL_92.addFollower(TERMINAL_125);
    		TERMINAL_12.addFollower(TERMINAL_13);
    		TERMINAL_12.addFollower(TERMINAL_14);
    		TERMINAL_13.addFollower(TERMINAL_14);
    		TERMINAL_14.addFollower(TERMINAL_207);
    		TERMINAL_207.addFollower(TERMINAL_93);
    		TERMINAL_207.addFollower(TERMINAL_94);
    		TERMINAL_207.addFollower(TERMINAL_95);
    		TERMINAL_207.addFollower(TERMINAL_96);
    		TERMINAL_207.addFollower(TERMINAL_97);
    		TERMINAL_207.addFollower(TERMINAL_98);
    		TERMINAL_207.addFollower(TERMINAL_99);
    		TERMINAL_207.addFollower(TERMINAL_100);
    		TERMINAL_93.addFollower(TERMINAL_208);
    		TERMINAL_208.addFollower(TERMINAL_209);
    		TERMINAL_209.addFollower(TERMINAL_93);
    		TERMINAL_209.addFollower(TERMINAL_94);
    		TERMINAL_209.addFollower(TERMINAL_95);
    		TERMINAL_209.addFollower(TERMINAL_96);
    		TERMINAL_209.addFollower(TERMINAL_97);
    		TERMINAL_209.addFollower(TERMINAL_98);
    		TERMINAL_209.addFollower(TERMINAL_99);
    		TERMINAL_209.addFollower(TERMINAL_100);
    		TERMINAL_94.addFollower(TERMINAL_210);
    		TERMINAL_210.addFollower(TERMINAL_168);
    		TERMINAL_95.addFollower(TERMINAL_211);
    		TERMINAL_211.addFollower(TERMINAL_86);
    		TERMINAL_211.addFollower(TERMINAL_24);
    		TERMINAL_211.addFollower(TERMINAL_25);
    		TERMINAL_211.addFollower(TERMINAL_158);
    		TERMINAL_211.addFollower(TERMINAL_159);
    		TERMINAL_211.addFollower(TERMINAL_26);
    		TERMINAL_211.addFollower(TERMINAL_27);
    		TERMINAL_211.addFollower(TERMINAL_198);
    		TERMINAL_211.addFollower(TERMINAL_199);
    		TERMINAL_211.addFollower(TERMINAL_200);
    		TERMINAL_211.addFollower(TERMINAL_201);
    		TERMINAL_211.addFollower(TERMINAL_202);
    		TERMINAL_96.addFollower(TERMINAL_212);
    		TERMINAL_212.addFollower(TERMINAL_213);
    		TERMINAL_213.addFollower(TERMINAL_93);
    		TERMINAL_213.addFollower(TERMINAL_94);
    		TERMINAL_213.addFollower(TERMINAL_95);
    		TERMINAL_213.addFollower(TERMINAL_96);
    		TERMINAL_213.addFollower(TERMINAL_97);
    		TERMINAL_213.addFollower(TERMINAL_98);
    		TERMINAL_213.addFollower(TERMINAL_99);
    		TERMINAL_213.addFollower(TERMINAL_100);
    		TERMINAL_97.addFollower(TERMINAL_214);
    		TERMINAL_214.addFollower(TERMINAL_215);
    		TERMINAL_215.addFollower(TERMINAL_93);
    		TERMINAL_215.addFollower(TERMINAL_94);
    		TERMINAL_215.addFollower(TERMINAL_95);
    		TERMINAL_215.addFollower(TERMINAL_96);
    		TERMINAL_215.addFollower(TERMINAL_97);
    		TERMINAL_215.addFollower(TERMINAL_98);
    		TERMINAL_215.addFollower(TERMINAL_99);
    		TERMINAL_215.addFollower(TERMINAL_100);
    		TERMINAL_98.addFollower(TERMINAL_216);
    		TERMINAL_216.addFollower(TERMINAL_217);
    		TERMINAL_217.addFollower(TERMINAL_93);
    		TERMINAL_217.addFollower(TERMINAL_94);
    		TERMINAL_217.addFollower(TERMINAL_95);
    		TERMINAL_217.addFollower(TERMINAL_96);
    		TERMINAL_217.addFollower(TERMINAL_97);
    		TERMINAL_217.addFollower(TERMINAL_98);
    		TERMINAL_217.addFollower(TERMINAL_99);
    		TERMINAL_217.addFollower(TERMINAL_100);
    		TERMINAL_99.addFollower(TERMINAL_218);
    		TERMINAL_218.addFollower(TERMINAL_219);
    		TERMINAL_219.addFollower(TERMINAL_93);
    		TERMINAL_219.addFollower(TERMINAL_94);
    		TERMINAL_219.addFollower(TERMINAL_95);
    		TERMINAL_219.addFollower(TERMINAL_96);
    		TERMINAL_219.addFollower(TERMINAL_97);
    		TERMINAL_219.addFollower(TERMINAL_98);
    		TERMINAL_219.addFollower(TERMINAL_99);
    		TERMINAL_219.addFollower(TERMINAL_100);
    		TERMINAL_28.addFollower(TERMINAL_29);
    		TERMINAL_29.addFollower(TERMINAL_220);
    		TERMINAL_220.addFollower(TERMINAL_221);
    		TERMINAL_220.addFollower(TERMINAL_222);
    		TERMINAL_220.addFollower(TERMINAL_223);
    		TERMINAL_220.addFollower(TERMINAL_224);
    		TERMINAL_221.addFollower(TERMINAL_225);
    		TERMINAL_225.addFollower(TERMINAL_226);
    		TERMINAL_226.addFollower(TERMINAL_221);
    		TERMINAL_226.addFollower(TERMINAL_222);
    		TERMINAL_226.addFollower(TERMINAL_223);
    		TERMINAL_226.addFollower(TERMINAL_224);
    		TERMINAL_222.addFollower(TERMINAL_227);
    		TERMINAL_227.addFollower(TERMINAL_168);
    		TERMINAL_223.addFollower(TERMINAL_228);
    		TERMINAL_228.addFollower(TERMINAL_229);
    		TERMINAL_229.addFollower(TERMINAL_221);
    		TERMINAL_229.addFollower(TERMINAL_222);
    		TERMINAL_229.addFollower(TERMINAL_223);
    		TERMINAL_229.addFollower(TERMINAL_224);
    		TERMINAL_224.addFollower(TERMINAL_21);
    		TERMINAL_224.addFollower(TERMINAL_22);
    		TERMINAL_224.addFollower(TERMINAL_23);
    		TERMINAL_224.addFollower(TERMINAL_24);
    		TERMINAL_224.addFollower(TERMINAL_25);
    		TERMINAL_224.addFollower(TERMINAL_26);
    		TERMINAL_224.addFollower(TERMINAL_27);
    		TERMINAL_224.addFollower(TERMINAL_28);
    		TERMINAL_224.addFollower(TERMINAL_29);
    		TERMINAL_224.addFollower(TERMINAL_31);
    		TERMINAL_168.addFollower(TERMINAL_230);
    		TERMINAL_230.addFollower(TERMINAL_231);
    		TERMINAL_230.addFollower(TERMINAL_232);
    		TERMINAL_230.addFollower(TERMINAL_233);
    		TERMINAL_230.addFollower(TERMINAL_234);
    		TERMINAL_230.addFollower(TERMINAL_235);
    		TERMINAL_230.addFollower(TERMINAL_236);
    		TERMINAL_231.addFollower(TERMINAL_237);
    		TERMINAL_237.addFollower(TERMINAL_238);
    		TERMINAL_238.addFollower(TERMINAL_231);
    		TERMINAL_238.addFollower(TERMINAL_232);
    		TERMINAL_238.addFollower(TERMINAL_233);
    		TERMINAL_238.addFollower(TERMINAL_234);
    		TERMINAL_238.addFollower(TERMINAL_235);
    		TERMINAL_238.addFollower(TERMINAL_236);
    		TERMINAL_232.addFollower(TERMINAL_239);
    		TERMINAL_239.addFollower(TERMINAL_168);
    		TERMINAL_233.addFollower(TERMINAL_240);
    		TERMINAL_240.addFollower(TERMINAL_241);
    		TERMINAL_241.addFollower(TERMINAL_231);
    		TERMINAL_241.addFollower(TERMINAL_232);
    		TERMINAL_241.addFollower(TERMINAL_233);
    		TERMINAL_241.addFollower(TERMINAL_234);
    		TERMINAL_241.addFollower(TERMINAL_235);
    		TERMINAL_241.addFollower(TERMINAL_236);
    		TERMINAL_234.addFollower(TERMINAL_242);
    		TERMINAL_242.addFollower(TERMINAL_243);
    		TERMINAL_243.addFollower(TERMINAL_231);
    		TERMINAL_243.addFollower(TERMINAL_232);
    		TERMINAL_243.addFollower(TERMINAL_233);
    		TERMINAL_243.addFollower(TERMINAL_234);
    		TERMINAL_243.addFollower(TERMINAL_235);
    		TERMINAL_243.addFollower(TERMINAL_236);
    		TERMINAL_235.addFollower(TERMINAL_244);
    		TERMINAL_244.addFollower(TERMINAL_245);
    		TERMINAL_245.addFollower(TERMINAL_231);
    		TERMINAL_245.addFollower(TERMINAL_232);
    		TERMINAL_245.addFollower(TERMINAL_233);
    		TERMINAL_245.addFollower(TERMINAL_234);
    		TERMINAL_245.addFollower(TERMINAL_235);
    		TERMINAL_245.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_162);
    		TERMINAL_236.addFollower(TERMINAL_163);
    		TERMINAL_236.addFollower(TERMINAL_164);
    		TERMINAL_236.addFollower(TERMINAL_170);
    		TERMINAL_236.addFollower(TERMINAL_171);
    		TERMINAL_236.addFollower(TERMINAL_172);
    		TERMINAL_236.addFollower(TERMINAL_177);
    		TERMINAL_236.addFollower(TERMINAL_178);
    		TERMINAL_236.addFollower(TERMINAL_179);
    		TERMINAL_236.addFollower(TERMINAL_180);
    		TERMINAL_236.addFollower(TERMINAL_181);
    		TERMINAL_236.addFollower(TERMINAL_182);
    		TERMINAL_236.addFollower(TERMINAL_87);
    		TERMINAL_236.addFollower(TERMINAL_88);
    		TERMINAL_236.addFollower(TERMINAL_89);
    		TERMINAL_236.addFollower(TERMINAL_90);
    		TERMINAL_236.addFollower(TERMINAL_91);
    		TERMINAL_236.addFollower(TERMINAL_92);
    		TERMINAL_236.addFollower(TERMINAL_93);
    		TERMINAL_236.addFollower(TERMINAL_94);
    		TERMINAL_236.addFollower(TERMINAL_95);
    		TERMINAL_236.addFollower(TERMINAL_96);
    		TERMINAL_236.addFollower(TERMINAL_97);
    		TERMINAL_236.addFollower(TERMINAL_98);
    		TERMINAL_236.addFollower(TERMINAL_99);
    		TERMINAL_236.addFollower(TERMINAL_100);
    		TERMINAL_236.addFollower(TERMINAL_221);
    		TERMINAL_236.addFollower(TERMINAL_222);
    		TERMINAL_236.addFollower(TERMINAL_223);
    		TERMINAL_236.addFollower(TERMINAL_224);
    		TERMINAL_236.addFollower(TERMINAL_231);
    		TERMINAL_236.addFollower(TERMINAL_232);
    		TERMINAL_236.addFollower(TERMINAL_233);
    		TERMINAL_236.addFollower(TERMINAL_234);
    		TERMINAL_236.addFollower(TERMINAL_235);
    		TERMINAL_236.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_101);
    		TERMINAL_236.addFollower(TERMINAL_102);
    		TERMINAL_236.addFollower(TERMINAL_103);
    		TERMINAL_236.addFollower(TERMINAL_104);
    		TERMINAL_236.addFollower(TERMINAL_105);
    		TERMINAL_236.addFollower(TERMINAL_106);
    		TERMINAL_236.addFollower(TERMINAL_107);
    		TERMINAL_236.addFollower(TERMINAL_108);
    		TERMINAL_236.addFollower(TERMINAL_109);
    		TERMINAL_236.addFollower(TERMINAL_110);
    		TERMINAL_236.addFollower(TERMINAL_111);
    		TERMINAL_236.addFollower(TERMINAL_112);
    		TERMINAL_236.addFollower(TERMINAL_113);
    		TERMINAL_236.addFollower(TERMINAL_114);
    		TERMINAL_236.addFollower(TERMINAL_115);
    		TERMINAL_236.addFollower(TERMINAL_116);
    		TERMINAL_236.addFollower(TERMINAL_117);
    		TERMINAL_236.addFollower(TERMINAL_118);
    		TERMINAL_236.addFollower(TERMINAL_119);
    		TERMINAL_236.addFollower(TERMINAL_120);
    		TERMINAL_236.addFollower(TERMINAL_121);
    		TERMINAL_236.addFollower(TERMINAL_122);
    		TERMINAL_236.addFollower(TERMINAL_123);
    		TERMINAL_236.addFollower(TERMINAL_124);
    		TERMINAL_236.addFollower(TERMINAL_125);
    		TERMINAL_236.addFollower(TERMINAL_126);
    		TERMINAL_236.addFollower(TERMINAL_127);
    		TERMINAL_236.addFollower(TERMINAL_128);
    		TERMINAL_236.addFollower(TERMINAL_129);
    		TERMINAL_236.addFollower(TERMINAL_130);
    		TERMINAL_236.addFollower(TERMINAL_131);
    		TERMINAL_236.addFollower(TERMINAL_132);
    		TERMINAL_236.addFollower(TERMINAL_133);
    		TERMINAL_236.addFollower(TERMINAL_134);
    		TERMINAL_236.addFollower(TERMINAL_135);
    		TERMINAL_236.addFollower(TERMINAL_136);
    		TERMINAL_236.addFollower(TERMINAL_137);
    		TERMINAL_236.addFollower(TERMINAL_138);
    		TERMINAL_236.addFollower(TERMINAL_139);
    		TERMINAL_236.addFollower(TERMINAL_140);
    		TERMINAL_236.addFollower(TERMINAL_141);
    		TERMINAL_236.addFollower(TERMINAL_142);
    		TERMINAL_236.addFollower(TERMINAL_143);
    		TERMINAL_236.addFollower(TERMINAL_144);
    		TERMINAL_236.addFollower(TERMINAL_145);
    		TERMINAL_236.addFollower(TERMINAL_146);
    		TERMINAL_236.addFollower(TERMINAL_147);
    		TERMINAL_236.addFollower(TERMINAL_148);
    		TERMINAL_236.addFollower(TERMINAL_149);
    		TERMINAL_236.addFollower(TERMINAL_150);
    		TERMINAL_236.addFollower(TERMINAL_246);
    		TERMINAL_236.addFollower(TERMINAL_247);
    		TERMINAL_236.addFollower(TERMINAL_248);
    		TERMINAL_236.addFollower(TERMINAL_249);
    		TERMINAL_236.addFollower(TERMINAL_250);
    		TERMINAL_198.addFollower(TERMINAL_251);
    		TERMINAL_251.addFollower(TERMINAL_101);
    		TERMINAL_251.addFollower(TERMINAL_102);
    		TERMINAL_251.addFollower(TERMINAL_103);
    		TERMINAL_251.addFollower(TERMINAL_104);
    		TERMINAL_251.addFollower(TERMINAL_105);
    		TERMINAL_251.addFollower(TERMINAL_106);
    		TERMINAL_251.addFollower(TERMINAL_107);
    		TERMINAL_101.addFollower(TERMINAL_252);
    		TERMINAL_252.addFollower(TERMINAL_253);
    		TERMINAL_253.addFollower(TERMINAL_101);
    		TERMINAL_253.addFollower(TERMINAL_102);
    		TERMINAL_253.addFollower(TERMINAL_103);
    		TERMINAL_253.addFollower(TERMINAL_104);
    		TERMINAL_253.addFollower(TERMINAL_105);
    		TERMINAL_253.addFollower(TERMINAL_106);
    		TERMINAL_253.addFollower(TERMINAL_107);
    		TERMINAL_102.addFollower(TERMINAL_254);
    		TERMINAL_254.addFollower(TERMINAL_168);
    		TERMINAL_103.addFollower(TERMINAL_255);
    		TERMINAL_255.addFollower(TERMINAL_86);
    		TERMINAL_255.addFollower(TERMINAL_24);
    		TERMINAL_255.addFollower(TERMINAL_25);
    		TERMINAL_255.addFollower(TERMINAL_158);
    		TERMINAL_255.addFollower(TERMINAL_159);
    		TERMINAL_255.addFollower(TERMINAL_26);
    		TERMINAL_255.addFollower(TERMINAL_27);
    		TERMINAL_255.addFollower(TERMINAL_198);
    		TERMINAL_255.addFollower(TERMINAL_199);
    		TERMINAL_255.addFollower(TERMINAL_200);
    		TERMINAL_255.addFollower(TERMINAL_201);
    		TERMINAL_255.addFollower(TERMINAL_202);
    		TERMINAL_104.addFollower(TERMINAL_256);
    		TERMINAL_256.addFollower(TERMINAL_257);
    		TERMINAL_257.addFollower(TERMINAL_101);
    		TERMINAL_257.addFollower(TERMINAL_102);
    		TERMINAL_257.addFollower(TERMINAL_103);
    		TERMINAL_257.addFollower(TERMINAL_104);
    		TERMINAL_257.addFollower(TERMINAL_105);
    		TERMINAL_257.addFollower(TERMINAL_106);
    		TERMINAL_257.addFollower(TERMINAL_107);
    		TERMINAL_105.addFollower(TERMINAL_258);
    		TERMINAL_258.addFollower(TERMINAL_259);
    		TERMINAL_259.addFollower(TERMINAL_101);
    		TERMINAL_259.addFollower(TERMINAL_102);
    		TERMINAL_259.addFollower(TERMINAL_103);
    		TERMINAL_259.addFollower(TERMINAL_104);
    		TERMINAL_259.addFollower(TERMINAL_105);
    		TERMINAL_259.addFollower(TERMINAL_106);
    		TERMINAL_259.addFollower(TERMINAL_107);
    		TERMINAL_106.addFollower(TERMINAL_260);
    		TERMINAL_260.addFollower(TERMINAL_261);
    		TERMINAL_261.addFollower(TERMINAL_101);
    		TERMINAL_261.addFollower(TERMINAL_102);
    		TERMINAL_261.addFollower(TERMINAL_103);
    		TERMINAL_261.addFollower(TERMINAL_104);
    		TERMINAL_261.addFollower(TERMINAL_105);
    		TERMINAL_261.addFollower(TERMINAL_106);
    		TERMINAL_261.addFollower(TERMINAL_107);
    		TERMINAL_107.addFollower(TERMINAL_87);
    		TERMINAL_107.addFollower(TERMINAL_88);
    		TERMINAL_107.addFollower(TERMINAL_89);
    		TERMINAL_107.addFollower(TERMINAL_90);
    		TERMINAL_107.addFollower(TERMINAL_91);
    		TERMINAL_107.addFollower(TERMINAL_92);
    		TERMINAL_107.addFollower(TERMINAL_93);
    		TERMINAL_107.addFollower(TERMINAL_94);
    		TERMINAL_107.addFollower(TERMINAL_95);
    		TERMINAL_107.addFollower(TERMINAL_96);
    		TERMINAL_107.addFollower(TERMINAL_97);
    		TERMINAL_107.addFollower(TERMINAL_98);
    		TERMINAL_107.addFollower(TERMINAL_99);
    		TERMINAL_107.addFollower(TERMINAL_100);
    		TERMINAL_107.addFollower(TERMINAL_101);
    		TERMINAL_107.addFollower(TERMINAL_102);
    		TERMINAL_107.addFollower(TERMINAL_103);
    		TERMINAL_107.addFollower(TERMINAL_104);
    		TERMINAL_107.addFollower(TERMINAL_105);
    		TERMINAL_107.addFollower(TERMINAL_106);
    		TERMINAL_107.addFollower(TERMINAL_107);
    		TERMINAL_107.addFollower(TERMINAL_108);
    		TERMINAL_107.addFollower(TERMINAL_109);
    		TERMINAL_107.addFollower(TERMINAL_110);
    		TERMINAL_107.addFollower(TERMINAL_111);
    		TERMINAL_107.addFollower(TERMINAL_112);
    		TERMINAL_107.addFollower(TERMINAL_113);
    		TERMINAL_107.addFollower(TERMINAL_114);
    		TERMINAL_107.addFollower(TERMINAL_115);
    		TERMINAL_107.addFollower(TERMINAL_116);
    		TERMINAL_107.addFollower(TERMINAL_117);
    		TERMINAL_107.addFollower(TERMINAL_118);
    		TERMINAL_107.addFollower(TERMINAL_119);
    		TERMINAL_107.addFollower(TERMINAL_120);
    		TERMINAL_107.addFollower(TERMINAL_121);
    		TERMINAL_107.addFollower(TERMINAL_122);
    		TERMINAL_107.addFollower(TERMINAL_123);
    		TERMINAL_107.addFollower(TERMINAL_124);
    		TERMINAL_107.addFollower(TERMINAL_125);
    		TERMINAL_107.addFollower(TERMINAL_126);
    		TERMINAL_107.addFollower(TERMINAL_127);
    		TERMINAL_107.addFollower(TERMINAL_128);
    		TERMINAL_107.addFollower(TERMINAL_129);
    		TERMINAL_107.addFollower(TERMINAL_130);
    		TERMINAL_107.addFollower(TERMINAL_131);
    		TERMINAL_107.addFollower(TERMINAL_132);
    		TERMINAL_107.addFollower(TERMINAL_133);
    		TERMINAL_107.addFollower(TERMINAL_134);
    		TERMINAL_107.addFollower(TERMINAL_135);
    		TERMINAL_107.addFollower(TERMINAL_136);
    		TERMINAL_107.addFollower(TERMINAL_137);
    		TERMINAL_107.addFollower(TERMINAL_138);
    		TERMINAL_107.addFollower(TERMINAL_139);
    		TERMINAL_107.addFollower(TERMINAL_140);
    		TERMINAL_107.addFollower(TERMINAL_141);
    		TERMINAL_107.addFollower(TERMINAL_142);
    		TERMINAL_107.addFollower(TERMINAL_143);
    		TERMINAL_107.addFollower(TERMINAL_144);
    		TERMINAL_107.addFollower(TERMINAL_145);
    		TERMINAL_107.addFollower(TERMINAL_146);
    		TERMINAL_107.addFollower(TERMINAL_147);
    		TERMINAL_107.addFollower(TERMINAL_148);
    		TERMINAL_107.addFollower(TERMINAL_149);
    		TERMINAL_107.addFollower(TERMINAL_150);
    		TERMINAL_199.addFollower(TERMINAL_262);
    		TERMINAL_262.addFollower(TERMINAL_108);
    		TERMINAL_262.addFollower(TERMINAL_109);
    		TERMINAL_262.addFollower(TERMINAL_110);
    		TERMINAL_262.addFollower(TERMINAL_111);
    		TERMINAL_262.addFollower(TERMINAL_112);
    		TERMINAL_262.addFollower(TERMINAL_113);
    		TERMINAL_262.addFollower(TERMINAL_114);
    		TERMINAL_262.addFollower(TERMINAL_115);
    		TERMINAL_108.addFollower(TERMINAL_263);
    		TERMINAL_263.addFollower(TERMINAL_264);
    		TERMINAL_264.addFollower(TERMINAL_108);
    		TERMINAL_264.addFollower(TERMINAL_109);
    		TERMINAL_264.addFollower(TERMINAL_110);
    		TERMINAL_264.addFollower(TERMINAL_111);
    		TERMINAL_264.addFollower(TERMINAL_112);
    		TERMINAL_264.addFollower(TERMINAL_113);
    		TERMINAL_264.addFollower(TERMINAL_114);
    		TERMINAL_264.addFollower(TERMINAL_115);
    		TERMINAL_109.addFollower(TERMINAL_265);
    		TERMINAL_265.addFollower(TERMINAL_168);
    		TERMINAL_110.addFollower(TERMINAL_266);
    		TERMINAL_266.addFollower(TERMINAL_86);
    		TERMINAL_266.addFollower(TERMINAL_24);
    		TERMINAL_266.addFollower(TERMINAL_25);
    		TERMINAL_266.addFollower(TERMINAL_158);
    		TERMINAL_266.addFollower(TERMINAL_159);
    		TERMINAL_266.addFollower(TERMINAL_26);
    		TERMINAL_266.addFollower(TERMINAL_27);
    		TERMINAL_266.addFollower(TERMINAL_198);
    		TERMINAL_266.addFollower(TERMINAL_199);
    		TERMINAL_266.addFollower(TERMINAL_200);
    		TERMINAL_266.addFollower(TERMINAL_201);
    		TERMINAL_266.addFollower(TERMINAL_202);
    		TERMINAL_111.addFollower(TERMINAL_267);
    	}
    	public static void wire2() {
    		TERMINAL_267.addFollower(TERMINAL_268);
    		TERMINAL_268.addFollower(TERMINAL_108);
    		TERMINAL_268.addFollower(TERMINAL_109);
    		TERMINAL_268.addFollower(TERMINAL_110);
    		TERMINAL_268.addFollower(TERMINAL_111);
    		TERMINAL_268.addFollower(TERMINAL_112);
    		TERMINAL_268.addFollower(TERMINAL_113);
    		TERMINAL_268.addFollower(TERMINAL_114);
    		TERMINAL_268.addFollower(TERMINAL_115);
    		TERMINAL_112.addFollower(TERMINAL_269);
    		TERMINAL_269.addFollower(TERMINAL_270);
    		TERMINAL_270.addFollower(TERMINAL_108);
    		TERMINAL_270.addFollower(TERMINAL_109);
    		TERMINAL_270.addFollower(TERMINAL_110);
    		TERMINAL_270.addFollower(TERMINAL_111);
    		TERMINAL_270.addFollower(TERMINAL_112);
    		TERMINAL_270.addFollower(TERMINAL_113);
    		TERMINAL_270.addFollower(TERMINAL_114);
    		TERMINAL_270.addFollower(TERMINAL_115);
    		TERMINAL_113.addFollower(TERMINAL_271);
    		TERMINAL_271.addFollower(TERMINAL_272);
    		TERMINAL_272.addFollower(TERMINAL_108);
    		TERMINAL_272.addFollower(TERMINAL_109);
    		TERMINAL_272.addFollower(TERMINAL_110);
    		TERMINAL_272.addFollower(TERMINAL_111);
    		TERMINAL_272.addFollower(TERMINAL_112);
    		TERMINAL_272.addFollower(TERMINAL_113);
    		TERMINAL_272.addFollower(TERMINAL_114);
    		TERMINAL_272.addFollower(TERMINAL_115);
    		TERMINAL_114.addFollower(TERMINAL_273);
    		TERMINAL_273.addFollower(TERMINAL_200);
    		TERMINAL_115.addFollower(TERMINAL_87);
    		TERMINAL_115.addFollower(TERMINAL_88);
    		TERMINAL_115.addFollower(TERMINAL_89);
    		TERMINAL_115.addFollower(TERMINAL_90);
    		TERMINAL_115.addFollower(TERMINAL_91);
    		TERMINAL_115.addFollower(TERMINAL_92);
    		TERMINAL_115.addFollower(TERMINAL_93);
    		TERMINAL_115.addFollower(TERMINAL_94);
    		TERMINAL_115.addFollower(TERMINAL_95);
    		TERMINAL_115.addFollower(TERMINAL_96);
    		TERMINAL_115.addFollower(TERMINAL_97);
    		TERMINAL_115.addFollower(TERMINAL_98);
    		TERMINAL_115.addFollower(TERMINAL_99);
    		TERMINAL_115.addFollower(TERMINAL_100);
    		TERMINAL_115.addFollower(TERMINAL_101);
    		TERMINAL_115.addFollower(TERMINAL_102);
    		TERMINAL_115.addFollower(TERMINAL_103);
    		TERMINAL_115.addFollower(TERMINAL_104);
    		TERMINAL_115.addFollower(TERMINAL_105);
    		TERMINAL_115.addFollower(TERMINAL_106);
    		TERMINAL_115.addFollower(TERMINAL_107);
    		TERMINAL_115.addFollower(TERMINAL_108);
    		TERMINAL_115.addFollower(TERMINAL_109);
    		TERMINAL_115.addFollower(TERMINAL_110);
    		TERMINAL_115.addFollower(TERMINAL_111);
    		TERMINAL_115.addFollower(TERMINAL_112);
    		TERMINAL_115.addFollower(TERMINAL_113);
    		TERMINAL_115.addFollower(TERMINAL_114);
    		TERMINAL_115.addFollower(TERMINAL_115);
    		TERMINAL_115.addFollower(TERMINAL_116);
    		TERMINAL_115.addFollower(TERMINAL_117);
    		TERMINAL_115.addFollower(TERMINAL_118);
    		TERMINAL_115.addFollower(TERMINAL_119);
    		TERMINAL_115.addFollower(TERMINAL_120);
    		TERMINAL_115.addFollower(TERMINAL_121);
    		TERMINAL_115.addFollower(TERMINAL_122);
    		TERMINAL_115.addFollower(TERMINAL_123);
    		TERMINAL_115.addFollower(TERMINAL_124);
    		TERMINAL_115.addFollower(TERMINAL_125);
    		TERMINAL_115.addFollower(TERMINAL_126);
    		TERMINAL_115.addFollower(TERMINAL_127);
    		TERMINAL_115.addFollower(TERMINAL_128);
    		TERMINAL_115.addFollower(TERMINAL_129);
    		TERMINAL_115.addFollower(TERMINAL_130);
    		TERMINAL_115.addFollower(TERMINAL_131);
    		TERMINAL_115.addFollower(TERMINAL_132);
    		TERMINAL_115.addFollower(TERMINAL_133);
    		TERMINAL_115.addFollower(TERMINAL_134);
    		TERMINAL_115.addFollower(TERMINAL_135);
    		TERMINAL_115.addFollower(TERMINAL_136);
    		TERMINAL_115.addFollower(TERMINAL_137);
    		TERMINAL_115.addFollower(TERMINAL_138);
    		TERMINAL_115.addFollower(TERMINAL_139);
    		TERMINAL_115.addFollower(TERMINAL_140);
    		TERMINAL_115.addFollower(TERMINAL_141);
    		TERMINAL_115.addFollower(TERMINAL_142);
    		TERMINAL_115.addFollower(TERMINAL_143);
    		TERMINAL_115.addFollower(TERMINAL_144);
    		TERMINAL_115.addFollower(TERMINAL_145);
    		TERMINAL_115.addFollower(TERMINAL_146);
    		TERMINAL_115.addFollower(TERMINAL_147);
    		TERMINAL_115.addFollower(TERMINAL_148);
    		TERMINAL_115.addFollower(TERMINAL_149);
    		TERMINAL_115.addFollower(TERMINAL_150);
    		TERMINAL_200.addFollower(TERMINAL_274);
    		TERMINAL_274.addFollower(TERMINAL_116);
    		TERMINAL_274.addFollower(TERMINAL_117);
    		TERMINAL_274.addFollower(TERMINAL_118);
    		TERMINAL_274.addFollower(TERMINAL_119);
    		TERMINAL_274.addFollower(TERMINAL_120);
    		TERMINAL_274.addFollower(TERMINAL_121);
    		TERMINAL_274.addFollower(TERMINAL_122);
    		TERMINAL_274.addFollower(TERMINAL_123);
    		TERMINAL_274.addFollower(TERMINAL_124);
    		TERMINAL_274.addFollower(TERMINAL_125);
    		TERMINAL_116.addFollower(TERMINAL_275);
    		TERMINAL_275.addFollower(TERMINAL_276);
    		TERMINAL_276.addFollower(TERMINAL_116);
    		TERMINAL_276.addFollower(TERMINAL_117);
    		TERMINAL_276.addFollower(TERMINAL_118);
    		TERMINAL_276.addFollower(TERMINAL_119);
    		TERMINAL_276.addFollower(TERMINAL_120);
    		TERMINAL_276.addFollower(TERMINAL_121);
    		TERMINAL_276.addFollower(TERMINAL_122);
    		TERMINAL_276.addFollower(TERMINAL_123);
    		TERMINAL_276.addFollower(TERMINAL_124);
    		TERMINAL_276.addFollower(TERMINAL_125);
    		TERMINAL_117.addFollower(TERMINAL_277);
    		TERMINAL_277.addFollower(TERMINAL_168);
    		TERMINAL_118.addFollower(TERMINAL_278);
    		TERMINAL_278.addFollower(TERMINAL_86);
    		TERMINAL_278.addFollower(TERMINAL_24);
    		TERMINAL_278.addFollower(TERMINAL_25);
    		TERMINAL_278.addFollower(TERMINAL_158);
    		TERMINAL_278.addFollower(TERMINAL_159);
    		TERMINAL_278.addFollower(TERMINAL_26);
    		TERMINAL_278.addFollower(TERMINAL_27);
    		TERMINAL_278.addFollower(TERMINAL_198);
    		TERMINAL_278.addFollower(TERMINAL_199);
    		TERMINAL_278.addFollower(TERMINAL_200);
    		TERMINAL_278.addFollower(TERMINAL_201);
    		TERMINAL_278.addFollower(TERMINAL_202);
    		TERMINAL_119.addFollower(TERMINAL_279);
    		TERMINAL_279.addFollower(TERMINAL_280);
    		TERMINAL_280.addFollower(TERMINAL_116);
    		TERMINAL_280.addFollower(TERMINAL_117);
    		TERMINAL_280.addFollower(TERMINAL_118);
    		TERMINAL_280.addFollower(TERMINAL_119);
    		TERMINAL_280.addFollower(TERMINAL_120);
    		TERMINAL_280.addFollower(TERMINAL_121);
    		TERMINAL_280.addFollower(TERMINAL_122);
    		TERMINAL_280.addFollower(TERMINAL_123);
    		TERMINAL_280.addFollower(TERMINAL_124);
    		TERMINAL_280.addFollower(TERMINAL_125);
    		TERMINAL_120.addFollower(TERMINAL_281);
    		TERMINAL_281.addFollower(TERMINAL_282);
    		TERMINAL_282.addFollower(TERMINAL_116);
    		TERMINAL_282.addFollower(TERMINAL_117);
    		TERMINAL_282.addFollower(TERMINAL_118);
    		TERMINAL_282.addFollower(TERMINAL_119);
    		TERMINAL_282.addFollower(TERMINAL_120);
    		TERMINAL_282.addFollower(TERMINAL_121);
    		TERMINAL_282.addFollower(TERMINAL_122);
    		TERMINAL_282.addFollower(TERMINAL_123);
    		TERMINAL_282.addFollower(TERMINAL_124);
    		TERMINAL_282.addFollower(TERMINAL_125);
    		TERMINAL_121.addFollower(TERMINAL_283);
    		TERMINAL_283.addFollower(TERMINAL_284);
    		TERMINAL_284.addFollower(TERMINAL_116);
    		TERMINAL_284.addFollower(TERMINAL_117);
    		TERMINAL_284.addFollower(TERMINAL_118);
    		TERMINAL_284.addFollower(TERMINAL_119);
    		TERMINAL_284.addFollower(TERMINAL_120);
    		TERMINAL_284.addFollower(TERMINAL_121);
    		TERMINAL_284.addFollower(TERMINAL_122);
    		TERMINAL_284.addFollower(TERMINAL_123);
    		TERMINAL_284.addFollower(TERMINAL_124);
    		TERMINAL_284.addFollower(TERMINAL_125);
    		TERMINAL_122.addFollower(TERMINAL_285);
    		TERMINAL_285.addFollower(TERMINAL_286);
    		TERMINAL_286.addFollower(TERMINAL_116);
    		TERMINAL_286.addFollower(TERMINAL_117);
    		TERMINAL_286.addFollower(TERMINAL_118);
    		TERMINAL_286.addFollower(TERMINAL_119);
    		TERMINAL_286.addFollower(TERMINAL_120);
    		TERMINAL_286.addFollower(TERMINAL_121);
    		TERMINAL_286.addFollower(TERMINAL_122);
    		TERMINAL_286.addFollower(TERMINAL_123);
    		TERMINAL_286.addFollower(TERMINAL_124);
    		TERMINAL_286.addFollower(TERMINAL_125);
    		TERMINAL_123.addFollower(TERMINAL_287);
    		TERMINAL_287.addFollower(TERMINAL_288);
    		TERMINAL_288.addFollower(TERMINAL_116);
    		TERMINAL_288.addFollower(TERMINAL_117);
    		TERMINAL_288.addFollower(TERMINAL_118);
    		TERMINAL_288.addFollower(TERMINAL_119);
    		TERMINAL_288.addFollower(TERMINAL_120);
    		TERMINAL_288.addFollower(TERMINAL_121);
    		TERMINAL_288.addFollower(TERMINAL_122);
    		TERMINAL_288.addFollower(TERMINAL_123);
    		TERMINAL_288.addFollower(TERMINAL_124);
    		TERMINAL_288.addFollower(TERMINAL_125);
    		TERMINAL_124.addFollower(TERMINAL_289);
    		TERMINAL_289.addFollower(TERMINAL_192);
    		TERMINAL_125.addFollower(TERMINAL_87);
    		TERMINAL_125.addFollower(TERMINAL_88);
    		TERMINAL_125.addFollower(TERMINAL_89);
    		TERMINAL_125.addFollower(TERMINAL_90);
    		TERMINAL_125.addFollower(TERMINAL_91);
    		TERMINAL_125.addFollower(TERMINAL_92);
    		TERMINAL_125.addFollower(TERMINAL_93);
    		TERMINAL_125.addFollower(TERMINAL_94);
    		TERMINAL_125.addFollower(TERMINAL_95);
    		TERMINAL_125.addFollower(TERMINAL_96);
    		TERMINAL_125.addFollower(TERMINAL_97);
    		TERMINAL_125.addFollower(TERMINAL_98);
    		TERMINAL_125.addFollower(TERMINAL_99);
    		TERMINAL_125.addFollower(TERMINAL_100);
    		TERMINAL_125.addFollower(TERMINAL_101);
    		TERMINAL_125.addFollower(TERMINAL_102);
    		TERMINAL_125.addFollower(TERMINAL_103);
    		TERMINAL_125.addFollower(TERMINAL_104);
    		TERMINAL_125.addFollower(TERMINAL_105);
    		TERMINAL_125.addFollower(TERMINAL_106);
    		TERMINAL_125.addFollower(TERMINAL_107);
    		TERMINAL_125.addFollower(TERMINAL_108);
    		TERMINAL_125.addFollower(TERMINAL_109);
    		TERMINAL_125.addFollower(TERMINAL_110);
    		TERMINAL_125.addFollower(TERMINAL_111);
    		TERMINAL_125.addFollower(TERMINAL_112);
    		TERMINAL_125.addFollower(TERMINAL_113);
    		TERMINAL_125.addFollower(TERMINAL_114);
    		TERMINAL_125.addFollower(TERMINAL_115);
    		TERMINAL_125.addFollower(TERMINAL_116);
    		TERMINAL_125.addFollower(TERMINAL_117);
    		TERMINAL_125.addFollower(TERMINAL_118);
    		TERMINAL_125.addFollower(TERMINAL_119);
    		TERMINAL_125.addFollower(TERMINAL_120);
    		TERMINAL_125.addFollower(TERMINAL_121);
    		TERMINAL_125.addFollower(TERMINAL_122);
    		TERMINAL_125.addFollower(TERMINAL_123);
    		TERMINAL_125.addFollower(TERMINAL_124);
    		TERMINAL_125.addFollower(TERMINAL_125);
    		TERMINAL_125.addFollower(TERMINAL_126);
    		TERMINAL_125.addFollower(TERMINAL_127);
    		TERMINAL_125.addFollower(TERMINAL_128);
    		TERMINAL_125.addFollower(TERMINAL_129);
    		TERMINAL_125.addFollower(TERMINAL_130);
    		TERMINAL_125.addFollower(TERMINAL_131);
    		TERMINAL_125.addFollower(TERMINAL_132);
    		TERMINAL_125.addFollower(TERMINAL_133);
    		TERMINAL_125.addFollower(TERMINAL_134);
    		TERMINAL_125.addFollower(TERMINAL_135);
    		TERMINAL_125.addFollower(TERMINAL_136);
    		TERMINAL_125.addFollower(TERMINAL_137);
    		TERMINAL_125.addFollower(TERMINAL_138);
    		TERMINAL_125.addFollower(TERMINAL_139);
    		TERMINAL_125.addFollower(TERMINAL_140);
    		TERMINAL_125.addFollower(TERMINAL_141);
    		TERMINAL_125.addFollower(TERMINAL_142);
    		TERMINAL_125.addFollower(TERMINAL_143);
    		TERMINAL_125.addFollower(TERMINAL_144);
    		TERMINAL_125.addFollower(TERMINAL_145);
    		TERMINAL_125.addFollower(TERMINAL_146);
    		TERMINAL_125.addFollower(TERMINAL_147);
    		TERMINAL_125.addFollower(TERMINAL_148);
    		TERMINAL_125.addFollower(TERMINAL_149);
    		TERMINAL_125.addFollower(TERMINAL_150);
    		TERMINAL_201.addFollower(TERMINAL_290);
    		TERMINAL_290.addFollower(TERMINAL_126);
    		TERMINAL_290.addFollower(TERMINAL_127);
    		TERMINAL_290.addFollower(TERMINAL_128);
    		TERMINAL_290.addFollower(TERMINAL_129);
    		TERMINAL_290.addFollower(TERMINAL_130);
    		TERMINAL_290.addFollower(TERMINAL_131);
    		TERMINAL_126.addFollower(TERMINAL_291);
    		TERMINAL_291.addFollower(TERMINAL_292);
    		TERMINAL_292.addFollower(TERMINAL_126);
    		TERMINAL_292.addFollower(TERMINAL_127);
    		TERMINAL_292.addFollower(TERMINAL_128);
    		TERMINAL_292.addFollower(TERMINAL_129);
    		TERMINAL_292.addFollower(TERMINAL_130);
    		TERMINAL_292.addFollower(TERMINAL_131);
    		TERMINAL_127.addFollower(TERMINAL_293);
    		TERMINAL_293.addFollower(TERMINAL_168);
    		TERMINAL_128.addFollower(TERMINAL_294);
    		TERMINAL_294.addFollower(TERMINAL_86);
    		TERMINAL_294.addFollower(TERMINAL_24);
    		TERMINAL_294.addFollower(TERMINAL_25);
    		TERMINAL_294.addFollower(TERMINAL_158);
    		TERMINAL_294.addFollower(TERMINAL_159);
    		TERMINAL_294.addFollower(TERMINAL_26);
    		TERMINAL_294.addFollower(TERMINAL_27);
    		TERMINAL_294.addFollower(TERMINAL_198);
    		TERMINAL_294.addFollower(TERMINAL_199);
    		TERMINAL_294.addFollower(TERMINAL_200);
    		TERMINAL_294.addFollower(TERMINAL_201);
    		TERMINAL_294.addFollower(TERMINAL_202);
    		TERMINAL_129.addFollower(TERMINAL_295);
    		TERMINAL_295.addFollower(TERMINAL_296);
    		TERMINAL_296.addFollower(TERMINAL_126);
    		TERMINAL_296.addFollower(TERMINAL_127);
    		TERMINAL_296.addFollower(TERMINAL_128);
    		TERMINAL_296.addFollower(TERMINAL_129);
    		TERMINAL_296.addFollower(TERMINAL_130);
    		TERMINAL_296.addFollower(TERMINAL_131);
    		TERMINAL_130.addFollower(TERMINAL_297);
    		TERMINAL_297.addFollower(TERMINAL_298);
    		TERMINAL_298.addFollower(TERMINAL_126);
    		TERMINAL_298.addFollower(TERMINAL_127);
    		TERMINAL_298.addFollower(TERMINAL_128);
    		TERMINAL_298.addFollower(TERMINAL_129);
    		TERMINAL_298.addFollower(TERMINAL_130);
    		TERMINAL_298.addFollower(TERMINAL_131);
    		TERMINAL_131.addFollower(TERMINAL_87);
    		TERMINAL_131.addFollower(TERMINAL_88);
    		TERMINAL_131.addFollower(TERMINAL_89);
    		TERMINAL_131.addFollower(TERMINAL_90);
    		TERMINAL_131.addFollower(TERMINAL_91);
    		TERMINAL_131.addFollower(TERMINAL_92);
    		TERMINAL_131.addFollower(TERMINAL_93);
    		TERMINAL_131.addFollower(TERMINAL_94);
    		TERMINAL_131.addFollower(TERMINAL_95);
    		TERMINAL_131.addFollower(TERMINAL_96);
    		TERMINAL_131.addFollower(TERMINAL_97);
    		TERMINAL_131.addFollower(TERMINAL_98);
    		TERMINAL_131.addFollower(TERMINAL_99);
    		TERMINAL_131.addFollower(TERMINAL_100);
    		TERMINAL_131.addFollower(TERMINAL_101);
    		TERMINAL_131.addFollower(TERMINAL_102);
    		TERMINAL_131.addFollower(TERMINAL_103);
    		TERMINAL_131.addFollower(TERMINAL_104);
    		TERMINAL_131.addFollower(TERMINAL_105);
    		TERMINAL_131.addFollower(TERMINAL_106);
    		TERMINAL_131.addFollower(TERMINAL_107);
    		TERMINAL_131.addFollower(TERMINAL_108);
    		TERMINAL_131.addFollower(TERMINAL_109);
    		TERMINAL_131.addFollower(TERMINAL_110);
    		TERMINAL_131.addFollower(TERMINAL_111);
    		TERMINAL_131.addFollower(TERMINAL_112);
    		TERMINAL_131.addFollower(TERMINAL_113);
    		TERMINAL_131.addFollower(TERMINAL_114);
    		TERMINAL_131.addFollower(TERMINAL_115);
    		TERMINAL_131.addFollower(TERMINAL_116);
    		TERMINAL_131.addFollower(TERMINAL_117);
    		TERMINAL_131.addFollower(TERMINAL_118);
    		TERMINAL_131.addFollower(TERMINAL_119);
    		TERMINAL_131.addFollower(TERMINAL_120);
    		TERMINAL_131.addFollower(TERMINAL_121);
    		TERMINAL_131.addFollower(TERMINAL_122);
    		TERMINAL_131.addFollower(TERMINAL_123);
    		TERMINAL_131.addFollower(TERMINAL_124);
    		TERMINAL_131.addFollower(TERMINAL_125);
    		TERMINAL_131.addFollower(TERMINAL_126);
    		TERMINAL_131.addFollower(TERMINAL_127);
    		TERMINAL_131.addFollower(TERMINAL_128);
    		TERMINAL_131.addFollower(TERMINAL_129);
    		TERMINAL_131.addFollower(TERMINAL_130);
    		TERMINAL_131.addFollower(TERMINAL_131);
    		TERMINAL_131.addFollower(TERMINAL_132);
    		TERMINAL_131.addFollower(TERMINAL_133);
    		TERMINAL_131.addFollower(TERMINAL_134);
    		TERMINAL_131.addFollower(TERMINAL_135);
    		TERMINAL_131.addFollower(TERMINAL_136);
    		TERMINAL_131.addFollower(TERMINAL_137);
    		TERMINAL_131.addFollower(TERMINAL_138);
    		TERMINAL_131.addFollower(TERMINAL_139);
    		TERMINAL_131.addFollower(TERMINAL_140);
    		TERMINAL_131.addFollower(TERMINAL_141);
    		TERMINAL_131.addFollower(TERMINAL_142);
    		TERMINAL_131.addFollower(TERMINAL_143);
    		TERMINAL_131.addFollower(TERMINAL_144);
    		TERMINAL_131.addFollower(TERMINAL_145);
    		TERMINAL_131.addFollower(TERMINAL_146);
    		TERMINAL_131.addFollower(TERMINAL_147);
    		TERMINAL_131.addFollower(TERMINAL_148);
    		TERMINAL_131.addFollower(TERMINAL_149);
    		TERMINAL_131.addFollower(TERMINAL_150);
    		TERMINAL_202.addFollower(TERMINAL_299);
    		TERMINAL_299.addFollower(TERMINAL_132);
    		TERMINAL_299.addFollower(TERMINAL_133);
    		TERMINAL_299.addFollower(TERMINAL_134);
    		TERMINAL_299.addFollower(TERMINAL_135);
    		TERMINAL_299.addFollower(TERMINAL_136);
    		TERMINAL_299.addFollower(TERMINAL_137);
    		TERMINAL_299.addFollower(TERMINAL_138);
    		TERMINAL_132.addFollower(TERMINAL_300);
    		TERMINAL_300.addFollower(TERMINAL_301);
    		TERMINAL_301.addFollower(TERMINAL_132);
    		TERMINAL_301.addFollower(TERMINAL_133);
    		TERMINAL_301.addFollower(TERMINAL_134);
    		TERMINAL_301.addFollower(TERMINAL_135);
    		TERMINAL_301.addFollower(TERMINAL_136);
    		TERMINAL_301.addFollower(TERMINAL_137);
    		TERMINAL_301.addFollower(TERMINAL_138);
    		TERMINAL_133.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_168);
    		TERMINAL_134.addFollower(TERMINAL_303);
    		TERMINAL_303.addFollower(TERMINAL_86);
    		TERMINAL_303.addFollower(TERMINAL_24);
    		TERMINAL_303.addFollower(TERMINAL_25);
    		TERMINAL_303.addFollower(TERMINAL_158);
    		TERMINAL_303.addFollower(TERMINAL_159);
    		TERMINAL_303.addFollower(TERMINAL_26);
    		TERMINAL_303.addFollower(TERMINAL_27);
    		TERMINAL_303.addFollower(TERMINAL_198);
    		TERMINAL_303.addFollower(TERMINAL_199);
    		TERMINAL_303.addFollower(TERMINAL_200);
    		TERMINAL_303.addFollower(TERMINAL_201);
    		TERMINAL_303.addFollower(TERMINAL_202);
    		TERMINAL_135.addFollower(TERMINAL_304);
    		TERMINAL_304.addFollower(TERMINAL_305);
    		TERMINAL_305.addFollower(TERMINAL_132);
    		TERMINAL_305.addFollower(TERMINAL_133);
    		TERMINAL_305.addFollower(TERMINAL_134);
    		TERMINAL_305.addFollower(TERMINAL_135);
    		TERMINAL_305.addFollower(TERMINAL_136);
    		TERMINAL_305.addFollower(TERMINAL_137);
    		TERMINAL_305.addFollower(TERMINAL_138);
    		TERMINAL_136.addFollower(TERMINAL_306);
    		TERMINAL_306.addFollower(TERMINAL_307);
    		TERMINAL_307.addFollower(TERMINAL_132);
    		TERMINAL_307.addFollower(TERMINAL_133);
    		TERMINAL_307.addFollower(TERMINAL_134);
    		TERMINAL_307.addFollower(TERMINAL_135);
    		TERMINAL_307.addFollower(TERMINAL_136);
    		TERMINAL_307.addFollower(TERMINAL_137);
    		TERMINAL_307.addFollower(TERMINAL_138);
    		TERMINAL_137.addFollower(TERMINAL_308);
    		TERMINAL_308.addFollower(TERMINAL_309);
    		TERMINAL_309.addFollower(TERMINAL_132);
    		TERMINAL_309.addFollower(TERMINAL_133);
    		TERMINAL_309.addFollower(TERMINAL_134);
    		TERMINAL_309.addFollower(TERMINAL_135);
    		TERMINAL_309.addFollower(TERMINAL_136);
    		TERMINAL_309.addFollower(TERMINAL_137);
    		TERMINAL_309.addFollower(TERMINAL_138);
    		TERMINAL_138.addFollower(TERMINAL_87);
    		TERMINAL_138.addFollower(TERMINAL_88);
    		TERMINAL_138.addFollower(TERMINAL_89);
    		TERMINAL_138.addFollower(TERMINAL_90);
    		TERMINAL_138.addFollower(TERMINAL_91);
    		TERMINAL_138.addFollower(TERMINAL_92);
    		TERMINAL_138.addFollower(TERMINAL_93);
    		TERMINAL_138.addFollower(TERMINAL_94);
    		TERMINAL_138.addFollower(TERMINAL_95);
    		TERMINAL_138.addFollower(TERMINAL_96);
    		TERMINAL_138.addFollower(TERMINAL_97);
    		TERMINAL_138.addFollower(TERMINAL_98);
    		TERMINAL_138.addFollower(TERMINAL_99);
    		TERMINAL_138.addFollower(TERMINAL_100);
    		TERMINAL_138.addFollower(TERMINAL_101);
    		TERMINAL_138.addFollower(TERMINAL_102);
    		TERMINAL_138.addFollower(TERMINAL_103);
    		TERMINAL_138.addFollower(TERMINAL_104);
    		TERMINAL_138.addFollower(TERMINAL_105);
    		TERMINAL_138.addFollower(TERMINAL_106);
    		TERMINAL_138.addFollower(TERMINAL_107);
    		TERMINAL_138.addFollower(TERMINAL_108);
    		TERMINAL_138.addFollower(TERMINAL_109);
    		TERMINAL_138.addFollower(TERMINAL_110);
    		TERMINAL_138.addFollower(TERMINAL_111);
    		TERMINAL_138.addFollower(TERMINAL_112);
    		TERMINAL_138.addFollower(TERMINAL_113);
    		TERMINAL_138.addFollower(TERMINAL_114);
    		TERMINAL_138.addFollower(TERMINAL_115);
    		TERMINAL_138.addFollower(TERMINAL_116);
    		TERMINAL_138.addFollower(TERMINAL_117);
    		TERMINAL_138.addFollower(TERMINAL_118);
    		TERMINAL_138.addFollower(TERMINAL_119);
    		TERMINAL_138.addFollower(TERMINAL_120);
    		TERMINAL_138.addFollower(TERMINAL_121);
    		TERMINAL_138.addFollower(TERMINAL_122);
    		TERMINAL_138.addFollower(TERMINAL_123);
    		TERMINAL_138.addFollower(TERMINAL_124);
    		TERMINAL_138.addFollower(TERMINAL_125);
    		TERMINAL_138.addFollower(TERMINAL_126);
    		TERMINAL_138.addFollower(TERMINAL_127);
    		TERMINAL_138.addFollower(TERMINAL_128);
    		TERMINAL_138.addFollower(TERMINAL_129);
    		TERMINAL_138.addFollower(TERMINAL_130);
    		TERMINAL_138.addFollower(TERMINAL_131);
    		TERMINAL_138.addFollower(TERMINAL_132);
    		TERMINAL_138.addFollower(TERMINAL_133);
    		TERMINAL_138.addFollower(TERMINAL_134);
    		TERMINAL_138.addFollower(TERMINAL_135);
    		TERMINAL_138.addFollower(TERMINAL_136);
    		TERMINAL_138.addFollower(TERMINAL_137);
    		TERMINAL_138.addFollower(TERMINAL_138);
    		TERMINAL_138.addFollower(TERMINAL_139);
    		TERMINAL_138.addFollower(TERMINAL_140);
    		TERMINAL_138.addFollower(TERMINAL_141);
    		TERMINAL_138.addFollower(TERMINAL_142);
    		TERMINAL_138.addFollower(TERMINAL_143);
    		TERMINAL_138.addFollower(TERMINAL_144);
    		TERMINAL_138.addFollower(TERMINAL_145);
    		TERMINAL_138.addFollower(TERMINAL_146);
    		TERMINAL_138.addFollower(TERMINAL_147);
    		TERMINAL_138.addFollower(TERMINAL_148);
    		TERMINAL_138.addFollower(TERMINAL_149);
    		TERMINAL_138.addFollower(TERMINAL_150);
    		TERMINAL_53.addFollower(TERMINAL_60);
    		TERMINAL_53.addFollower(TERMINAL_59);
    		TERMINAL_53.addFollower(TERMINAL_58);
    		TERMINAL_53.addFollower(TERMINAL_64);
    		TERMINAL_53.addFollower(TERMINAL_55);
    		TERMINAL_53.addFollower(TERMINAL_61);
    		TERMINAL_53.addFollower(TERMINAL_62);
    		TERMINAL_53.addFollower(TERMINAL_65);
    		TERMINAL_53.addFollower(TERMINAL_66);
    		TERMINAL_53.addFollower(TERMINAL_67);
    		TERMINAL_53.addFollower(TERMINAL_57);
    		TERMINAL_53.addFollower(TERMINAL_56);
    		TERMINAL_53.addFollower(TERMINAL_63);
    		TERMINAL_53.addFollower(TERMINAL_70);
    		TERMINAL_53.addFollower(TERMINAL_69);
    		TERMINAL_53.addFollower(TERMINAL_53);
    		TERMINAL_53.addFollower(TERMINAL_310);
    		TERMINAL_53.addFollower(TERMINAL_311);
    		TERMINAL_311.addFollower(TERMINAL_51);
    		TERMINAL_311.addFollower(TERMINAL_6);
    		TERMINAL_311.addFollower(TERMINAL_7);
    		TERMINAL_311.addFollower(TERMINAL_8);
    		TERMINAL_311.addFollower(TERMINAL_9);
    		TERMINAL_311.addFollower(TERMINAL_10);
    		TERMINAL_311.addFollower(TERMINAL_44);
    		TERMINAL_311.addFollower(TERMINAL_60);
    		TERMINAL_311.addFollower(TERMINAL_59);
    		TERMINAL_311.addFollower(TERMINAL_58);
    		TERMINAL_311.addFollower(TERMINAL_64);
    		TERMINAL_311.addFollower(TERMINAL_55);
    		TERMINAL_311.addFollower(TERMINAL_61);
    		TERMINAL_311.addFollower(TERMINAL_62);
    		TERMINAL_311.addFollower(TERMINAL_65);
    		TERMINAL_311.addFollower(TERMINAL_66);
    		TERMINAL_311.addFollower(TERMINAL_67);
    		TERMINAL_311.addFollower(TERMINAL_57);
    		TERMINAL_311.addFollower(TERMINAL_56);
    		TERMINAL_311.addFollower(TERMINAL_63);
    		TERMINAL_311.addFollower(TERMINAL_70);
    		TERMINAL_311.addFollower(TERMINAL_69);
    		TERMINAL_311.addFollower(TERMINAL_53);
    		TERMINAL_311.addFollower(TERMINAL_310);
    		TERMINAL_311.addFollower(TERMINAL_311);
    		TERMINAL_311.addFollower(TERMINAL_312);
    		TERMINAL_311.addFollower(TERMINAL_313);
    		TERMINAL_311.addFollower(TERMINAL_314);
    		TERMINAL_311.addFollower(TERMINAL_315);
    		TERMINAL_311.addFollower(TERMINAL_316);
    		TERMINAL_311.addFollower(TERMINAL_317);
    		TERMINAL_311.addFollower(TERMINAL_318);
    		TERMINAL_311.addFollower(TERMINAL_319);
    		TERMINAL_311.addFollower(TERMINAL_320);
    		TERMINAL_311.addFollower(TERMINAL_144);
    		TERMINAL_311.addFollower(TERMINAL_145);
    		TERMINAL_311.addFollower(TERMINAL_146);
    		TERMINAL_311.addFollower(TERMINAL_147);
    		TERMINAL_311.addFollower(TERMINAL_148);
    		TERMINAL_311.addFollower(TERMINAL_149);
    		TERMINAL_311.addFollower(TERMINAL_150);
    		TERMINAL_310.addFollower(TERMINAL_321);
    		TERMINAL_310.addFollower(TERMINAL_53);
    		TERMINAL_310.addFollower(TERMINAL_54);
    		TERMINAL_310.addFollower(TERMINAL_55);
    		TERMINAL_310.addFollower(TERMINAL_56);
    		TERMINAL_310.addFollower(TERMINAL_57);
    		TERMINAL_310.addFollower(TERMINAL_58);
    		TERMINAL_310.addFollower(TERMINAL_59);
    		TERMINAL_310.addFollower(TERMINAL_60);
    		TERMINAL_310.addFollower(TERMINAL_15);
    		TERMINAL_310.addFollower(TERMINAL_61);
    		TERMINAL_310.addFollower(TERMINAL_62);
    		TERMINAL_310.addFollower(TERMINAL_63);
    		TERMINAL_310.addFollower(TERMINAL_64);
    		TERMINAL_310.addFollower(TERMINAL_65);
    		TERMINAL_310.addFollower(TERMINAL_66);
    		TERMINAL_310.addFollower(TERMINAL_67);
    		TERMINAL_310.addFollower(TERMINAL_68);
    		TERMINAL_310.addFollower(TERMINAL_69);
    		TERMINAL_310.addFollower(TERMINAL_70);
    		TERMINAL_310.addFollower(TERMINAL_71);
    		TERMINAL_310.addFollower(TERMINAL_310);
    		TERMINAL_310.addFollower(TERMINAL_311);
    		TERMINAL_321.addFollower(TERMINAL_322);
    		TERMINAL_322.addFollower(TERMINAL_323);
    		TERMINAL_323.addFollower(TERMINAL_15);
    		TERMINAL_324.addFollower(TERMINAL_53);
    		TERMINAL_324.addFollower(TERMINAL_54);
    		TERMINAL_324.addFollower(TERMINAL_55);
    		TERMINAL_324.addFollower(TERMINAL_56);
    		TERMINAL_324.addFollower(TERMINAL_57);
    		TERMINAL_324.addFollower(TERMINAL_58);
    		TERMINAL_324.addFollower(TERMINAL_59);
    		TERMINAL_324.addFollower(TERMINAL_60);
    		TERMINAL_324.addFollower(TERMINAL_15);
    		TERMINAL_324.addFollower(TERMINAL_61);
    		TERMINAL_324.addFollower(TERMINAL_62);
    		TERMINAL_324.addFollower(TERMINAL_63);
    		TERMINAL_324.addFollower(TERMINAL_64);
    		TERMINAL_324.addFollower(TERMINAL_65);
    		TERMINAL_324.addFollower(TERMINAL_66);
    		TERMINAL_324.addFollower(TERMINAL_67);
    		TERMINAL_324.addFollower(TERMINAL_68);
    		TERMINAL_324.addFollower(TERMINAL_69);
    		TERMINAL_324.addFollower(TERMINAL_70);
    		TERMINAL_324.addFollower(TERMINAL_71);
    		TERMINAL_324.addFollower(TERMINAL_310);
    		TERMINAL_324.addFollower(TERMINAL_311);
    		TERMINAL_15.addFollower(TERMINAL_324);
    		TERMINAL_15.addFollower(TERMINAL_325);
    		TERMINAL_15.addFollower(TERMINAL_51);
    		TERMINAL_15.addFollower(TERMINAL_6);
    		TERMINAL_15.addFollower(TERMINAL_7);
    		TERMINAL_15.addFollower(TERMINAL_8);
    		TERMINAL_15.addFollower(TERMINAL_9);
    		TERMINAL_15.addFollower(TERMINAL_10);
    		TERMINAL_15.addFollower(TERMINAL_44);
    		TERMINAL_15.addFollower(TERMINAL_60);
    		TERMINAL_15.addFollower(TERMINAL_59);
    		TERMINAL_15.addFollower(TERMINAL_58);
    		TERMINAL_15.addFollower(TERMINAL_64);
    		TERMINAL_15.addFollower(TERMINAL_55);
    		TERMINAL_15.addFollower(TERMINAL_61);
    		TERMINAL_15.addFollower(TERMINAL_62);
    		TERMINAL_15.addFollower(TERMINAL_65);
    		TERMINAL_15.addFollower(TERMINAL_66);
    		TERMINAL_15.addFollower(TERMINAL_67);
    		TERMINAL_15.addFollower(TERMINAL_57);
    		TERMINAL_15.addFollower(TERMINAL_56);
    		TERMINAL_15.addFollower(TERMINAL_63);
    		TERMINAL_15.addFollower(TERMINAL_70);
    		TERMINAL_15.addFollower(TERMINAL_69);
    		TERMINAL_15.addFollower(TERMINAL_53);
    		TERMINAL_15.addFollower(TERMINAL_310);
    		TERMINAL_15.addFollower(TERMINAL_311);
    		TERMINAL_15.addFollower(TERMINAL_312);
    		TERMINAL_15.addFollower(TERMINAL_315);
    		TERMINAL_15.addFollower(TERMINAL_316);
    		TERMINAL_15.addFollower(TERMINAL_317);
    		TERMINAL_15.addFollower(TERMINAL_318);
    		TERMINAL_15.addFollower(TERMINAL_319);
    		TERMINAL_15.addFollower(TERMINAL_320);
    		TERMINAL_15.addFollower(TERMINAL_144);
    		TERMINAL_15.addFollower(TERMINAL_145);
    		TERMINAL_15.addFollower(TERMINAL_146);
    		TERMINAL_15.addFollower(TERMINAL_147);
    		TERMINAL_15.addFollower(TERMINAL_148);
    		TERMINAL_15.addFollower(TERMINAL_149);
    		TERMINAL_15.addFollower(TERMINAL_150);
    		TERMINAL_15.addFollower(TERMINAL_313);
    		TERMINAL_15.addFollower(TERMINAL_314);
    		TERMINAL_15.addFollower(TERMINAL_246);
    		TERMINAL_15.addFollower(TERMINAL_247);
    		TERMINAL_15.addFollower(TERMINAL_248);
    		TERMINAL_15.addFollower(TERMINAL_249);
    		TERMINAL_15.addFollower(TERMINAL_250);
    		TERMINAL_54.addFollower(TERMINAL_53);
    		TERMINAL_54.addFollower(TERMINAL_54);
    		TERMINAL_54.addFollower(TERMINAL_55);
    		TERMINAL_54.addFollower(TERMINAL_56);
    		TERMINAL_54.addFollower(TERMINAL_57);
    		TERMINAL_54.addFollower(TERMINAL_58);
    		TERMINAL_54.addFollower(TERMINAL_59);
    		TERMINAL_54.addFollower(TERMINAL_60);
    		TERMINAL_54.addFollower(TERMINAL_15);
    		TERMINAL_54.addFollower(TERMINAL_61);
    		TERMINAL_54.addFollower(TERMINAL_62);
    		TERMINAL_54.addFollower(TERMINAL_63);
    		TERMINAL_54.addFollower(TERMINAL_64);
    		TERMINAL_54.addFollower(TERMINAL_65);
    		TERMINAL_54.addFollower(TERMINAL_66);
    		TERMINAL_54.addFollower(TERMINAL_67);
    		TERMINAL_54.addFollower(TERMINAL_68);
    		TERMINAL_54.addFollower(TERMINAL_69);
    		TERMINAL_54.addFollower(TERMINAL_70);
    		TERMINAL_54.addFollower(TERMINAL_71);
    		TERMINAL_55.addFollower(TERMINAL_51);
    		TERMINAL_55.addFollower(TERMINAL_6);
    		TERMINAL_55.addFollower(TERMINAL_7);
    		TERMINAL_55.addFollower(TERMINAL_8);
    		TERMINAL_55.addFollower(TERMINAL_9);
    		TERMINAL_55.addFollower(TERMINAL_10);
    		TERMINAL_55.addFollower(TERMINAL_44);
    		TERMINAL_55.addFollower(TERMINAL_310);
    		TERMINAL_55.addFollower(TERMINAL_311);
    		TERMINAL_55.addFollower(TERMINAL_312);
    		TERMINAL_55.addFollower(TERMINAL_313);
    		TERMINAL_55.addFollower(TERMINAL_53);
    		TERMINAL_55.addFollower(TERMINAL_64);
    		TERMINAL_55.addFollower(TERMINAL_55);
    		TERMINAL_55.addFollower(TERMINAL_61);
    		TERMINAL_55.addFollower(TERMINAL_62);
    		TERMINAL_55.addFollower(TERMINAL_65);
    		TERMINAL_55.addFollower(TERMINAL_66);
    		TERMINAL_55.addFollower(TERMINAL_67);
    		TERMINAL_55.addFollower(TERMINAL_57);
    		TERMINAL_55.addFollower(TERMINAL_56);
    		TERMINAL_55.addFollower(TERMINAL_63);
    		TERMINAL_55.addFollower(TERMINAL_60);
    		TERMINAL_55.addFollower(TERMINAL_69);
    		TERMINAL_55.addFollower(TERMINAL_314);
    		TERMINAL_55.addFollower(TERMINAL_315);
    		TERMINAL_55.addFollower(TERMINAL_316);
    		TERMINAL_55.addFollower(TERMINAL_317);
    		TERMINAL_55.addFollower(TERMINAL_318);
    		TERMINAL_55.addFollower(TERMINAL_319);
    		TERMINAL_55.addFollower(TERMINAL_320);
    		TERMINAL_55.addFollower(TERMINAL_144);
    		TERMINAL_55.addFollower(TERMINAL_145);
    		TERMINAL_55.addFollower(TERMINAL_146);
    		TERMINAL_55.addFollower(TERMINAL_147);
    		TERMINAL_55.addFollower(TERMINAL_148);
    		TERMINAL_55.addFollower(TERMINAL_149);
    		TERMINAL_55.addFollower(TERMINAL_150);
    		TERMINAL_56.addFollower(TERMINAL_51);
    		TERMINAL_56.addFollower(TERMINAL_6);
    		TERMINAL_56.addFollower(TERMINAL_7);
    		TERMINAL_56.addFollower(TERMINAL_8);
    		TERMINAL_56.addFollower(TERMINAL_9);
    		TERMINAL_56.addFollower(TERMINAL_10);
    		TERMINAL_56.addFollower(TERMINAL_44);
    		TERMINAL_56.addFollower(TERMINAL_310);
    		TERMINAL_56.addFollower(TERMINAL_311);
    		TERMINAL_56.addFollower(TERMINAL_312);
    		TERMINAL_56.addFollower(TERMINAL_313);
    		TERMINAL_56.addFollower(TERMINAL_53);
    		TERMINAL_56.addFollower(TERMINAL_64);
    		TERMINAL_56.addFollower(TERMINAL_55);
    		TERMINAL_56.addFollower(TERMINAL_61);
    		TERMINAL_56.addFollower(TERMINAL_62);
    		TERMINAL_56.addFollower(TERMINAL_65);
    		TERMINAL_56.addFollower(TERMINAL_66);
    		TERMINAL_56.addFollower(TERMINAL_67);
    		TERMINAL_56.addFollower(TERMINAL_57);
    		TERMINAL_56.addFollower(TERMINAL_56);
    		TERMINAL_56.addFollower(TERMINAL_63);
    		TERMINAL_56.addFollower(TERMINAL_60);
    		TERMINAL_56.addFollower(TERMINAL_69);
    		TERMINAL_56.addFollower(TERMINAL_314);
    		TERMINAL_56.addFollower(TERMINAL_315);
    		TERMINAL_56.addFollower(TERMINAL_316);
    		TERMINAL_56.addFollower(TERMINAL_317);
    		TERMINAL_56.addFollower(TERMINAL_318);
    		TERMINAL_56.addFollower(TERMINAL_319);
    		TERMINAL_56.addFollower(TERMINAL_320);
    		TERMINAL_56.addFollower(TERMINAL_144);
    		TERMINAL_56.addFollower(TERMINAL_145);
    		TERMINAL_56.addFollower(TERMINAL_146);
    		TERMINAL_56.addFollower(TERMINAL_147);
    		TERMINAL_56.addFollower(TERMINAL_148);
    		TERMINAL_56.addFollower(TERMINAL_149);
    		TERMINAL_56.addFollower(TERMINAL_150);
    		TERMINAL_57.addFollower(TERMINAL_51);
    		TERMINAL_57.addFollower(TERMINAL_6);
    		TERMINAL_57.addFollower(TERMINAL_7);
    		TERMINAL_57.addFollower(TERMINAL_8);
    		TERMINAL_57.addFollower(TERMINAL_9);
    		TERMINAL_57.addFollower(TERMINAL_10);
    		TERMINAL_57.addFollower(TERMINAL_44);
    		TERMINAL_57.addFollower(TERMINAL_310);
    		TERMINAL_57.addFollower(TERMINAL_311);
    		TERMINAL_57.addFollower(TERMINAL_312);
    		TERMINAL_57.addFollower(TERMINAL_313);
    		TERMINAL_57.addFollower(TERMINAL_53);
    		TERMINAL_57.addFollower(TERMINAL_64);
    		TERMINAL_57.addFollower(TERMINAL_55);
    		TERMINAL_57.addFollower(TERMINAL_61);
    		TERMINAL_57.addFollower(TERMINAL_62);
    		TERMINAL_57.addFollower(TERMINAL_65);
    		TERMINAL_57.addFollower(TERMINAL_66);
    		TERMINAL_57.addFollower(TERMINAL_67);
    		TERMINAL_57.addFollower(TERMINAL_57);
    		TERMINAL_57.addFollower(TERMINAL_56);
    		TERMINAL_57.addFollower(TERMINAL_63);
    		TERMINAL_57.addFollower(TERMINAL_60);
    		TERMINAL_57.addFollower(TERMINAL_69);
    		TERMINAL_57.addFollower(TERMINAL_314);
    		TERMINAL_57.addFollower(TERMINAL_315);
    		TERMINAL_57.addFollower(TERMINAL_316);
    		TERMINAL_57.addFollower(TERMINAL_317);
    		TERMINAL_57.addFollower(TERMINAL_318);
    		TERMINAL_57.addFollower(TERMINAL_319);
    		TERMINAL_57.addFollower(TERMINAL_320);
    		TERMINAL_57.addFollower(TERMINAL_144);
    		TERMINAL_57.addFollower(TERMINAL_145);
    		TERMINAL_57.addFollower(TERMINAL_146);
    		TERMINAL_57.addFollower(TERMINAL_147);
    		TERMINAL_57.addFollower(TERMINAL_148);
    		TERMINAL_57.addFollower(TERMINAL_149);
    		TERMINAL_57.addFollower(TERMINAL_150);
    		TERMINAL_58.addFollower(TERMINAL_64);
    		TERMINAL_58.addFollower(TERMINAL_55);
    		TERMINAL_58.addFollower(TERMINAL_61);
    		TERMINAL_58.addFollower(TERMINAL_62);
    		TERMINAL_58.addFollower(TERMINAL_65);
    		TERMINAL_58.addFollower(TERMINAL_66);
    		TERMINAL_58.addFollower(TERMINAL_67);
    		TERMINAL_58.addFollower(TERMINAL_57);
    		TERMINAL_58.addFollower(TERMINAL_56);
    		TERMINAL_58.addFollower(TERMINAL_58);
    		TERMINAL_326.addFollower(TERMINAL_55);
    		TERMINAL_326.addFollower(TERMINAL_53);
    		TERMINAL_326.addFollower(TERMINAL_64);
    		TERMINAL_326.addFollower(TERMINAL_61);
    		TERMINAL_326.addFollower(TERMINAL_62);
    		TERMINAL_326.addFollower(TERMINAL_65);
    		TERMINAL_326.addFollower(TERMINAL_66);
    		TERMINAL_326.addFollower(TERMINAL_67);
    		TERMINAL_326.addFollower(TERMINAL_57);
    		TERMINAL_326.addFollower(TERMINAL_56);
    		TERMINAL_326.addFollower(TERMINAL_63);
    		TERMINAL_326.addFollower(TERMINAL_69);
    		TERMINAL_326.addFollower(TERMINAL_60);
    		TERMINAL_313.addFollower(TERMINAL_55);
    		TERMINAL_314.addFollower(TERMINAL_51);
    		TERMINAL_314.addFollower(TERMINAL_6);
    		TERMINAL_314.addFollower(TERMINAL_7);
    		TERMINAL_314.addFollower(TERMINAL_8);
    		TERMINAL_314.addFollower(TERMINAL_9);
    		TERMINAL_314.addFollower(TERMINAL_10);
    		TERMINAL_314.addFollower(TERMINAL_44);
    		TERMINAL_314.addFollower(TERMINAL_60);
    		TERMINAL_314.addFollower(TERMINAL_59);
    		TERMINAL_314.addFollower(TERMINAL_58);
    		TERMINAL_314.addFollower(TERMINAL_64);
    		TERMINAL_314.addFollower(TERMINAL_55);
    		TERMINAL_314.addFollower(TERMINAL_61);
    		TERMINAL_314.addFollower(TERMINAL_62);
    		TERMINAL_314.addFollower(TERMINAL_65);
    		TERMINAL_314.addFollower(TERMINAL_66);
    		TERMINAL_314.addFollower(TERMINAL_67);
    		TERMINAL_314.addFollower(TERMINAL_57);
    		TERMINAL_314.addFollower(TERMINAL_56);
    		TERMINAL_314.addFollower(TERMINAL_63);
    		TERMINAL_314.addFollower(TERMINAL_70);
    		TERMINAL_314.addFollower(TERMINAL_69);
    		TERMINAL_314.addFollower(TERMINAL_53);
    		TERMINAL_314.addFollower(TERMINAL_310);
    		TERMINAL_314.addFollower(TERMINAL_311);
    		TERMINAL_314.addFollower(TERMINAL_312);
    		TERMINAL_314.addFollower(TERMINAL_313);
    		TERMINAL_314.addFollower(TERMINAL_314);
    		TERMINAL_314.addFollower(TERMINAL_315);
    		TERMINAL_314.addFollower(TERMINAL_316);
    		TERMINAL_314.addFollower(TERMINAL_317);
    		TERMINAL_314.addFollower(TERMINAL_318);
    		TERMINAL_314.addFollower(TERMINAL_319);
    		TERMINAL_314.addFollower(TERMINAL_320);
    		TERMINAL_314.addFollower(TERMINAL_144);
    		TERMINAL_314.addFollower(TERMINAL_145);
    		TERMINAL_314.addFollower(TERMINAL_146);
    		TERMINAL_314.addFollower(TERMINAL_147);
    		TERMINAL_314.addFollower(TERMINAL_148);
    		TERMINAL_314.addFollower(TERMINAL_149);
    		TERMINAL_314.addFollower(TERMINAL_150);
    		TERMINAL_59.addFollower(TERMINAL_53);
    		TERMINAL_59.addFollower(TERMINAL_54);
    		TERMINAL_59.addFollower(TERMINAL_55);
    		TERMINAL_59.addFollower(TERMINAL_56);
    		TERMINAL_59.addFollower(TERMINAL_57);
    		TERMINAL_59.addFollower(TERMINAL_58);
    		TERMINAL_59.addFollower(TERMINAL_59);
    		TERMINAL_59.addFollower(TERMINAL_60);
    		TERMINAL_59.addFollower(TERMINAL_15);
    		TERMINAL_59.addFollower(TERMINAL_61);
    		TERMINAL_59.addFollower(TERMINAL_62);
    		TERMINAL_59.addFollower(TERMINAL_63);
    		TERMINAL_59.addFollower(TERMINAL_64);
    		TERMINAL_59.addFollower(TERMINAL_65);
    		TERMINAL_59.addFollower(TERMINAL_66);
    		TERMINAL_59.addFollower(TERMINAL_67);
    		TERMINAL_59.addFollower(TERMINAL_68);
    		TERMINAL_59.addFollower(TERMINAL_69);
    		TERMINAL_59.addFollower(TERMINAL_70);
    		TERMINAL_59.addFollower(TERMINAL_71);
    		TERMINAL_59.addFollower(TERMINAL_312);
    		TERMINAL_312.addFollower(TERMINAL_53);
    		TERMINAL_312.addFollower(TERMINAL_54);
    		TERMINAL_312.addFollower(TERMINAL_55);
    		TERMINAL_312.addFollower(TERMINAL_56);
    		TERMINAL_312.addFollower(TERMINAL_57);
    		TERMINAL_312.addFollower(TERMINAL_58);
    		TERMINAL_312.addFollower(TERMINAL_59);
    		TERMINAL_312.addFollower(TERMINAL_60);
    		TERMINAL_312.addFollower(TERMINAL_15);
    		TERMINAL_312.addFollower(TERMINAL_61);
    		TERMINAL_312.addFollower(TERMINAL_62);
    		TERMINAL_312.addFollower(TERMINAL_63);
    		TERMINAL_312.addFollower(TERMINAL_64);
    		TERMINAL_312.addFollower(TERMINAL_65);
    		TERMINAL_312.addFollower(TERMINAL_66);
    		TERMINAL_312.addFollower(TERMINAL_67);
    		TERMINAL_312.addFollower(TERMINAL_68);
    		TERMINAL_312.addFollower(TERMINAL_69);
    		TERMINAL_312.addFollower(TERMINAL_70);
    		TERMINAL_312.addFollower(TERMINAL_71);
    		TERMINAL_327.addFollower(TERMINAL_53);
    		TERMINAL_327.addFollower(TERMINAL_54);
    		TERMINAL_327.addFollower(TERMINAL_55);
    		TERMINAL_327.addFollower(TERMINAL_56);
    		TERMINAL_327.addFollower(TERMINAL_57);
    		TERMINAL_327.addFollower(TERMINAL_58);
    		TERMINAL_327.addFollower(TERMINAL_59);
    		TERMINAL_327.addFollower(TERMINAL_60);
    		TERMINAL_327.addFollower(TERMINAL_15);
    		TERMINAL_327.addFollower(TERMINAL_61);
    		TERMINAL_327.addFollower(TERMINAL_62);
    		TERMINAL_327.addFollower(TERMINAL_63);
    		TERMINAL_327.addFollower(TERMINAL_64);
    		TERMINAL_327.addFollower(TERMINAL_65);
    		TERMINAL_327.addFollower(TERMINAL_66);
    		TERMINAL_327.addFollower(TERMINAL_67);
    		TERMINAL_327.addFollower(TERMINAL_68);
    		TERMINAL_327.addFollower(TERMINAL_69);
    		TERMINAL_327.addFollower(TERMINAL_70);
    		TERMINAL_327.addFollower(TERMINAL_71);
    		TERMINAL_60.addFollower(TERMINAL_328);
    		TERMINAL_328.addFollower(TERMINAL_329);
    		TERMINAL_329.addFollower(TERMINAL_15);
    		TERMINAL_325.addFollower(TERMINAL_53);
    		TERMINAL_325.addFollower(TERMINAL_54);
    		TERMINAL_325.addFollower(TERMINAL_55);
    		TERMINAL_325.addFollower(TERMINAL_56);
    		TERMINAL_325.addFollower(TERMINAL_57);
    		TERMINAL_325.addFollower(TERMINAL_58);
    		TERMINAL_325.addFollower(TERMINAL_59);
    		TERMINAL_325.addFollower(TERMINAL_60);
    		TERMINAL_325.addFollower(TERMINAL_15);
    		TERMINAL_325.addFollower(TERMINAL_61);
    		TERMINAL_325.addFollower(TERMINAL_62);
    		TERMINAL_325.addFollower(TERMINAL_63);
    		TERMINAL_325.addFollower(TERMINAL_64);
    		TERMINAL_325.addFollower(TERMINAL_65);
    		TERMINAL_325.addFollower(TERMINAL_66);
    		TERMINAL_325.addFollower(TERMINAL_67);
    		TERMINAL_325.addFollower(TERMINAL_68);
    		TERMINAL_325.addFollower(TERMINAL_69);
    		TERMINAL_325.addFollower(TERMINAL_70);
    		TERMINAL_325.addFollower(TERMINAL_71);
    		TERMINAL_61.addFollower(TERMINAL_62);
    		TERMINAL_62.addFollower(TERMINAL_51);
    		TERMINAL_62.addFollower(TERMINAL_6);
    		TERMINAL_62.addFollower(TERMINAL_7);
    		TERMINAL_62.addFollower(TERMINAL_8);
    		TERMINAL_62.addFollower(TERMINAL_9);
    		TERMINAL_62.addFollower(TERMINAL_10);
    		TERMINAL_62.addFollower(TERMINAL_44);
    		TERMINAL_62.addFollower(TERMINAL_60);
    		TERMINAL_62.addFollower(TERMINAL_59);
    		TERMINAL_62.addFollower(TERMINAL_58);
    		TERMINAL_62.addFollower(TERMINAL_64);
    		TERMINAL_62.addFollower(TERMINAL_55);
    		TERMINAL_62.addFollower(TERMINAL_61);
    		TERMINAL_62.addFollower(TERMINAL_62);
    		TERMINAL_62.addFollower(TERMINAL_65);
    		TERMINAL_62.addFollower(TERMINAL_66);
    		TERMINAL_62.addFollower(TERMINAL_67);
    		TERMINAL_62.addFollower(TERMINAL_57);
    		TERMINAL_62.addFollower(TERMINAL_56);
    		TERMINAL_62.addFollower(TERMINAL_63);
    		TERMINAL_62.addFollower(TERMINAL_70);
    		TERMINAL_62.addFollower(TERMINAL_69);
    		TERMINAL_62.addFollower(TERMINAL_53);
    		TERMINAL_62.addFollower(TERMINAL_310);
    		TERMINAL_62.addFollower(TERMINAL_311);
    		TERMINAL_62.addFollower(TERMINAL_312);
    		TERMINAL_62.addFollower(TERMINAL_313);
    		TERMINAL_62.addFollower(TERMINAL_314);
    		TERMINAL_62.addFollower(TERMINAL_315);
    		TERMINAL_62.addFollower(TERMINAL_316);
    		TERMINAL_62.addFollower(TERMINAL_317);
    		TERMINAL_62.addFollower(TERMINAL_318);
    		TERMINAL_62.addFollower(TERMINAL_319);
    		TERMINAL_62.addFollower(TERMINAL_320);
    		TERMINAL_62.addFollower(TERMINAL_144);
    		TERMINAL_62.addFollower(TERMINAL_145);
    		TERMINAL_62.addFollower(TERMINAL_146);
    		TERMINAL_62.addFollower(TERMINAL_147);
    		TERMINAL_62.addFollower(TERMINAL_148);
    		TERMINAL_62.addFollower(TERMINAL_149);
    		TERMINAL_62.addFollower(TERMINAL_150);
    		TERMINAL_62.addFollower(TERMINAL_330);
    		TERMINAL_62.addFollower(TERMINAL_331);
    		TERMINAL_63.addFollower(TERMINAL_332);
    		TERMINAL_332.addFollower(TERMINAL_53);
    		TERMINAL_332.addFollower(TERMINAL_54);
    		TERMINAL_332.addFollower(TERMINAL_55);
    		TERMINAL_332.addFollower(TERMINAL_56);
    		TERMINAL_332.addFollower(TERMINAL_57);
    		TERMINAL_332.addFollower(TERMINAL_58);
    		TERMINAL_332.addFollower(TERMINAL_59);
    		TERMINAL_332.addFollower(TERMINAL_60);
    		TERMINAL_332.addFollower(TERMINAL_15);
    		TERMINAL_332.addFollower(TERMINAL_61);
    		TERMINAL_332.addFollower(TERMINAL_62);
    		TERMINAL_332.addFollower(TERMINAL_63);
    		TERMINAL_332.addFollower(TERMINAL_64);
    		TERMINAL_332.addFollower(TERMINAL_65);
    		TERMINAL_332.addFollower(TERMINAL_66);
    		TERMINAL_332.addFollower(TERMINAL_67);
    		TERMINAL_332.addFollower(TERMINAL_68);
    		TERMINAL_332.addFollower(TERMINAL_69);
    		TERMINAL_332.addFollower(TERMINAL_70);
    		TERMINAL_332.addFollower(TERMINAL_71);
    		TERMINAL_332.addFollower(TERMINAL_316);
    	}
    	public static void wire3() {
    		TERMINAL_315.addFollower(TERMINAL_53);
    		TERMINAL_315.addFollower(TERMINAL_54);
    		TERMINAL_315.addFollower(TERMINAL_55);
    		TERMINAL_315.addFollower(TERMINAL_56);
    		TERMINAL_315.addFollower(TERMINAL_57);
    		TERMINAL_315.addFollower(TERMINAL_58);
    		TERMINAL_315.addFollower(TERMINAL_59);
    		TERMINAL_315.addFollower(TERMINAL_60);
    		TERMINAL_315.addFollower(TERMINAL_15);
    		TERMINAL_315.addFollower(TERMINAL_61);
    		TERMINAL_315.addFollower(TERMINAL_62);
    		TERMINAL_315.addFollower(TERMINAL_63);
    		TERMINAL_315.addFollower(TERMINAL_64);
    		TERMINAL_315.addFollower(TERMINAL_65);
    		TERMINAL_315.addFollower(TERMINAL_66);
    		TERMINAL_315.addFollower(TERMINAL_67);
    		TERMINAL_315.addFollower(TERMINAL_68);
    		TERMINAL_315.addFollower(TERMINAL_69);
    		TERMINAL_315.addFollower(TERMINAL_70);
    		TERMINAL_315.addFollower(TERMINAL_71);
    		TERMINAL_316.addFollower(TERMINAL_51);
    		TERMINAL_316.addFollower(TERMINAL_6);
    		TERMINAL_316.addFollower(TERMINAL_7);
    		TERMINAL_316.addFollower(TERMINAL_8);
    		TERMINAL_316.addFollower(TERMINAL_9);
    		TERMINAL_316.addFollower(TERMINAL_10);
    		TERMINAL_316.addFollower(TERMINAL_44);
    		TERMINAL_316.addFollower(TERMINAL_60);
    		TERMINAL_316.addFollower(TERMINAL_59);
    		TERMINAL_316.addFollower(TERMINAL_58);
    		TERMINAL_316.addFollower(TERMINAL_64);
    		TERMINAL_316.addFollower(TERMINAL_55);
    		TERMINAL_316.addFollower(TERMINAL_61);
    		TERMINAL_316.addFollower(TERMINAL_62);
    		TERMINAL_316.addFollower(TERMINAL_65);
    		TERMINAL_316.addFollower(TERMINAL_66);
    		TERMINAL_316.addFollower(TERMINAL_67);
    		TERMINAL_316.addFollower(TERMINAL_57);
    		TERMINAL_316.addFollower(TERMINAL_56);
    		TERMINAL_316.addFollower(TERMINAL_63);
    		TERMINAL_316.addFollower(TERMINAL_70);
    		TERMINAL_316.addFollower(TERMINAL_69);
    		TERMINAL_316.addFollower(TERMINAL_53);
    		TERMINAL_316.addFollower(TERMINAL_310);
    		TERMINAL_316.addFollower(TERMINAL_311);
    		TERMINAL_316.addFollower(TERMINAL_312);
    		TERMINAL_316.addFollower(TERMINAL_313);
    		TERMINAL_316.addFollower(TERMINAL_314);
    		TERMINAL_316.addFollower(TERMINAL_315);
    		TERMINAL_316.addFollower(TERMINAL_316);
    		TERMINAL_316.addFollower(TERMINAL_317);
    		TERMINAL_316.addFollower(TERMINAL_318);
    		TERMINAL_316.addFollower(TERMINAL_319);
    		TERMINAL_316.addFollower(TERMINAL_320);
    		TERMINAL_316.addFollower(TERMINAL_144);
    		TERMINAL_316.addFollower(TERMINAL_145);
    		TERMINAL_316.addFollower(TERMINAL_146);
    		TERMINAL_316.addFollower(TERMINAL_147);
    		TERMINAL_316.addFollower(TERMINAL_148);
    		TERMINAL_316.addFollower(TERMINAL_149);
    		TERMINAL_316.addFollower(TERMINAL_150);
    		TERMINAL_330.addFollower(TERMINAL_64);
    		TERMINAL_330.addFollower(TERMINAL_55);
    		TERMINAL_330.addFollower(TERMINAL_61);
    		TERMINAL_330.addFollower(TERMINAL_62);
    		TERMINAL_330.addFollower(TERMINAL_65);
    		TERMINAL_330.addFollower(TERMINAL_66);
    		TERMINAL_330.addFollower(TERMINAL_67);
    		TERMINAL_330.addFollower(TERMINAL_57);
    		TERMINAL_330.addFollower(TERMINAL_56);
    		TERMINAL_330.addFollower(TERMINAL_63);
    		TERMINAL_330.addFollower(TERMINAL_69);
    		TERMINAL_330.addFollower(TERMINAL_68);
    		TERMINAL_331.addFollower(TERMINAL_333);
    		TERMINAL_333.addFollower(TERMINAL_64);
    		TERMINAL_333.addFollower(TERMINAL_55);
    		TERMINAL_333.addFollower(TERMINAL_61);
    		TERMINAL_333.addFollower(TERMINAL_62);
    		TERMINAL_333.addFollower(TERMINAL_65);
    		TERMINAL_333.addFollower(TERMINAL_66);
    		TERMINAL_333.addFollower(TERMINAL_67);
    		TERMINAL_333.addFollower(TERMINAL_57);
    		TERMINAL_333.addFollower(TERMINAL_56);
    		TERMINAL_333.addFollower(TERMINAL_63);
    		TERMINAL_333.addFollower(TERMINAL_69);
    		TERMINAL_333.addFollower(TERMINAL_68);
    		TERMINAL_65.addFollower(TERMINAL_51);
    		TERMINAL_65.addFollower(TERMINAL_6);
    		TERMINAL_65.addFollower(TERMINAL_7);
    		TERMINAL_65.addFollower(TERMINAL_8);
    		TERMINAL_65.addFollower(TERMINAL_9);
    		TERMINAL_65.addFollower(TERMINAL_10);
    		TERMINAL_65.addFollower(TERMINAL_44);
    		TERMINAL_65.addFollower(TERMINAL_60);
    		TERMINAL_65.addFollower(TERMINAL_59);
    		TERMINAL_65.addFollower(TERMINAL_58);
    		TERMINAL_65.addFollower(TERMINAL_64);
    		TERMINAL_65.addFollower(TERMINAL_55);
    		TERMINAL_65.addFollower(TERMINAL_61);
    		TERMINAL_65.addFollower(TERMINAL_62);
    		TERMINAL_65.addFollower(TERMINAL_65);
    		TERMINAL_65.addFollower(TERMINAL_66);
    		TERMINAL_65.addFollower(TERMINAL_67);
    		TERMINAL_65.addFollower(TERMINAL_57);
    		TERMINAL_65.addFollower(TERMINAL_56);
    		TERMINAL_65.addFollower(TERMINAL_63);
    		TERMINAL_65.addFollower(TERMINAL_70);
    		TERMINAL_65.addFollower(TERMINAL_69);
    		TERMINAL_65.addFollower(TERMINAL_53);
    		TERMINAL_65.addFollower(TERMINAL_310);
    		TERMINAL_65.addFollower(TERMINAL_311);
    		TERMINAL_65.addFollower(TERMINAL_312);
    		TERMINAL_65.addFollower(TERMINAL_313);
    		TERMINAL_65.addFollower(TERMINAL_314);
    		TERMINAL_65.addFollower(TERMINAL_315);
    		TERMINAL_65.addFollower(TERMINAL_316);
    		TERMINAL_65.addFollower(TERMINAL_317);
    		TERMINAL_65.addFollower(TERMINAL_318);
    		TERMINAL_65.addFollower(TERMINAL_319);
    		TERMINAL_65.addFollower(TERMINAL_320);
    		TERMINAL_65.addFollower(TERMINAL_144);
    		TERMINAL_65.addFollower(TERMINAL_145);
    		TERMINAL_65.addFollower(TERMINAL_146);
    		TERMINAL_65.addFollower(TERMINAL_147);
    		TERMINAL_65.addFollower(TERMINAL_148);
    		TERMINAL_65.addFollower(TERMINAL_149);
    		TERMINAL_65.addFollower(TERMINAL_150);
    		TERMINAL_65.addFollower(TERMINAL_330);
    		TERMINAL_65.addFollower(TERMINAL_331);
    		TERMINAL_67.addFollower(TERMINAL_51);
    		TERMINAL_67.addFollower(TERMINAL_6);
    		TERMINAL_67.addFollower(TERMINAL_7);
    		TERMINAL_67.addFollower(TERMINAL_8);
    		TERMINAL_67.addFollower(TERMINAL_9);
    		TERMINAL_67.addFollower(TERMINAL_10);
    		TERMINAL_67.addFollower(TERMINAL_44);
    		TERMINAL_67.addFollower(TERMINAL_310);
    		TERMINAL_67.addFollower(TERMINAL_311);
    		TERMINAL_67.addFollower(TERMINAL_312);
    		TERMINAL_67.addFollower(TERMINAL_313);
    		TERMINAL_67.addFollower(TERMINAL_53);
    		TERMINAL_67.addFollower(TERMINAL_64);
    		TERMINAL_67.addFollower(TERMINAL_55);
    		TERMINAL_67.addFollower(TERMINAL_61);
    		TERMINAL_67.addFollower(TERMINAL_62);
    		TERMINAL_67.addFollower(TERMINAL_65);
    		TERMINAL_67.addFollower(TERMINAL_66);
    		TERMINAL_67.addFollower(TERMINAL_67);
    		TERMINAL_67.addFollower(TERMINAL_57);
    		TERMINAL_67.addFollower(TERMINAL_56);
    		TERMINAL_67.addFollower(TERMINAL_63);
    		TERMINAL_67.addFollower(TERMINAL_60);
    		TERMINAL_67.addFollower(TERMINAL_69);
    		TERMINAL_67.addFollower(TERMINAL_314);
    		TERMINAL_67.addFollower(TERMINAL_315);
    		TERMINAL_67.addFollower(TERMINAL_316);
    		TERMINAL_67.addFollower(TERMINAL_317);
    		TERMINAL_67.addFollower(TERMINAL_318);
    		TERMINAL_67.addFollower(TERMINAL_319);
    		TERMINAL_67.addFollower(TERMINAL_320);
    		TERMINAL_67.addFollower(TERMINAL_144);
    		TERMINAL_67.addFollower(TERMINAL_145);
    		TERMINAL_67.addFollower(TERMINAL_146);
    		TERMINAL_67.addFollower(TERMINAL_147);
    		TERMINAL_67.addFollower(TERMINAL_148);
    		TERMINAL_67.addFollower(TERMINAL_149);
    		TERMINAL_67.addFollower(TERMINAL_150);
    		TERMINAL_64.addFollower(TERMINAL_55);
    		TERMINAL_64.addFollower(TERMINAL_61);
    		TERMINAL_64.addFollower(TERMINAL_62);
    		TERMINAL_64.addFollower(TERMINAL_65);
    		TERMINAL_64.addFollower(TERMINAL_66);
    		TERMINAL_64.addFollower(TERMINAL_67);
    		TERMINAL_64.addFollower(TERMINAL_57);
    		TERMINAL_64.addFollower(TERMINAL_56);
    		TERMINAL_334.addFollower(TERMINAL_344);
    		TERMINAL_344.addFollower(TERMINAL_334);
    		TERMINAL_344.addFollower(TERMINAL_335);
    		TERMINAL_344.addFollower(TERMINAL_336);
    		TERMINAL_344.addFollower(TERMINAL_337);
    		TERMINAL_344.addFollower(TERMINAL_338);
    		TERMINAL_344.addFollower(TERMINAL_339);
    		TERMINAL_344.addFollower(TERMINAL_340);
    		TERMINAL_344.addFollower(TERMINAL_341);
    		TERMINAL_344.addFollower(TERMINAL_342);
    		TERMINAL_344.addFollower(TERMINAL_343);
    		TERMINAL_335.addFollower(TERMINAL_345);
    		TERMINAL_345.addFollower(TERMINAL_346);
    		TERMINAL_346.addFollower(TERMINAL_53);
    		TERMINAL_346.addFollower(TERMINAL_54);
    		TERMINAL_346.addFollower(TERMINAL_55);
    		TERMINAL_346.addFollower(TERMINAL_56);
    		TERMINAL_346.addFollower(TERMINAL_57);
    		TERMINAL_346.addFollower(TERMINAL_58);
    		TERMINAL_346.addFollower(TERMINAL_59);
    		TERMINAL_346.addFollower(TERMINAL_60);
    		TERMINAL_346.addFollower(TERMINAL_15);
    		TERMINAL_346.addFollower(TERMINAL_61);
    		TERMINAL_346.addFollower(TERMINAL_62);
    		TERMINAL_346.addFollower(TERMINAL_63);
    		TERMINAL_346.addFollower(TERMINAL_64);
    		TERMINAL_346.addFollower(TERMINAL_65);
    		TERMINAL_346.addFollower(TERMINAL_66);
    		TERMINAL_346.addFollower(TERMINAL_67);
    		TERMINAL_346.addFollower(TERMINAL_68);
    		TERMINAL_346.addFollower(TERMINAL_69);
    		TERMINAL_346.addFollower(TERMINAL_70);
    		TERMINAL_346.addFollower(TERMINAL_71);
    		TERMINAL_346.addFollower(TERMINAL_318);
    		TERMINAL_317.addFollower(TERMINAL_53);
    		TERMINAL_317.addFollower(TERMINAL_54);
    		TERMINAL_317.addFollower(TERMINAL_55);
    		TERMINAL_317.addFollower(TERMINAL_56);
    		TERMINAL_317.addFollower(TERMINAL_57);
    		TERMINAL_317.addFollower(TERMINAL_58);
    		TERMINAL_317.addFollower(TERMINAL_59);
    		TERMINAL_317.addFollower(TERMINAL_60);
    		TERMINAL_317.addFollower(TERMINAL_15);
    		TERMINAL_317.addFollower(TERMINAL_61);
    		TERMINAL_317.addFollower(TERMINAL_62);
    		TERMINAL_317.addFollower(TERMINAL_63);
    		TERMINAL_317.addFollower(TERMINAL_64);
    		TERMINAL_317.addFollower(TERMINAL_65);
    		TERMINAL_317.addFollower(TERMINAL_66);
    		TERMINAL_317.addFollower(TERMINAL_67);
    		TERMINAL_317.addFollower(TERMINAL_68);
    		TERMINAL_317.addFollower(TERMINAL_69);
    		TERMINAL_317.addFollower(TERMINAL_70);
    		TERMINAL_317.addFollower(TERMINAL_71);
    		TERMINAL_318.addFollower(TERMINAL_334);
    		TERMINAL_318.addFollower(TERMINAL_335);
    		TERMINAL_318.addFollower(TERMINAL_336);
    		TERMINAL_318.addFollower(TERMINAL_337);
    		TERMINAL_318.addFollower(TERMINAL_338);
    		TERMINAL_318.addFollower(TERMINAL_339);
    		TERMINAL_318.addFollower(TERMINAL_340);
    		TERMINAL_318.addFollower(TERMINAL_341);
    		TERMINAL_318.addFollower(TERMINAL_342);
    		TERMINAL_318.addFollower(TERMINAL_343);
    		TERMINAL_336.addFollower(TERMINAL_347);
    		TERMINAL_347.addFollower(TERMINAL_334);
    		TERMINAL_347.addFollower(TERMINAL_335);
    		TERMINAL_347.addFollower(TERMINAL_336);
    		TERMINAL_347.addFollower(TERMINAL_337);
    		TERMINAL_347.addFollower(TERMINAL_338);
    		TERMINAL_347.addFollower(TERMINAL_339);
    		TERMINAL_347.addFollower(TERMINAL_340);
    		TERMINAL_347.addFollower(TERMINAL_341);
    		TERMINAL_347.addFollower(TERMINAL_342);
    		TERMINAL_347.addFollower(TERMINAL_343);
    		TERMINAL_337.addFollower(TERMINAL_348);
    		TERMINAL_348.addFollower(TERMINAL_334);
    		TERMINAL_348.addFollower(TERMINAL_335);
    		TERMINAL_348.addFollower(TERMINAL_336);
    		TERMINAL_348.addFollower(TERMINAL_337);
    		TERMINAL_348.addFollower(TERMINAL_338);
    		TERMINAL_348.addFollower(TERMINAL_339);
    		TERMINAL_348.addFollower(TERMINAL_340);
    		TERMINAL_348.addFollower(TERMINAL_341);
    		TERMINAL_348.addFollower(TERMINAL_342);
    		TERMINAL_348.addFollower(TERMINAL_343);
    		TERMINAL_338.addFollower(TERMINAL_53);
    		TERMINAL_338.addFollower(TERMINAL_54);
    		TERMINAL_338.addFollower(TERMINAL_55);
    		TERMINAL_338.addFollower(TERMINAL_56);
    		TERMINAL_338.addFollower(TERMINAL_57);
    		TERMINAL_338.addFollower(TERMINAL_58);
    		TERMINAL_338.addFollower(TERMINAL_59);
    		TERMINAL_338.addFollower(TERMINAL_60);
    		TERMINAL_338.addFollower(TERMINAL_15);
    		TERMINAL_338.addFollower(TERMINAL_61);
    		TERMINAL_338.addFollower(TERMINAL_62);
    		TERMINAL_338.addFollower(TERMINAL_63);
    		TERMINAL_338.addFollower(TERMINAL_64);
    		TERMINAL_338.addFollower(TERMINAL_65);
    		TERMINAL_338.addFollower(TERMINAL_66);
    		TERMINAL_338.addFollower(TERMINAL_67);
    		TERMINAL_338.addFollower(TERMINAL_68);
    		TERMINAL_338.addFollower(TERMINAL_69);
    		TERMINAL_338.addFollower(TERMINAL_70);
    		TERMINAL_338.addFollower(TERMINAL_71);
    		TERMINAL_349.addFollower(TERMINAL_51);
    		TERMINAL_349.addFollower(TERMINAL_6);
    		TERMINAL_349.addFollower(TERMINAL_7);
    		TERMINAL_349.addFollower(TERMINAL_8);
    		TERMINAL_349.addFollower(TERMINAL_9);
    		TERMINAL_349.addFollower(TERMINAL_10);
    		TERMINAL_349.addFollower(TERMINAL_44);
    		TERMINAL_349.addFollower(TERMINAL_60);
    		TERMINAL_349.addFollower(TERMINAL_59);
    		TERMINAL_349.addFollower(TERMINAL_58);
    		TERMINAL_349.addFollower(TERMINAL_64);
    		TERMINAL_349.addFollower(TERMINAL_55);
    		TERMINAL_349.addFollower(TERMINAL_61);
    		TERMINAL_349.addFollower(TERMINAL_62);
    		TERMINAL_349.addFollower(TERMINAL_65);
    		TERMINAL_349.addFollower(TERMINAL_66);
    		TERMINAL_349.addFollower(TERMINAL_67);
    		TERMINAL_349.addFollower(TERMINAL_57);
    		TERMINAL_349.addFollower(TERMINAL_56);
    		TERMINAL_349.addFollower(TERMINAL_63);
    		TERMINAL_349.addFollower(TERMINAL_70);
    		TERMINAL_349.addFollower(TERMINAL_69);
    		TERMINAL_349.addFollower(TERMINAL_53);
    		TERMINAL_349.addFollower(TERMINAL_310);
    		TERMINAL_349.addFollower(TERMINAL_311);
    		TERMINAL_349.addFollower(TERMINAL_312);
    		TERMINAL_349.addFollower(TERMINAL_313);
    		TERMINAL_349.addFollower(TERMINAL_314);
    		TERMINAL_349.addFollower(TERMINAL_315);
    		TERMINAL_349.addFollower(TERMINAL_316);
    		TERMINAL_349.addFollower(TERMINAL_317);
    		TERMINAL_349.addFollower(TERMINAL_318);
    		TERMINAL_349.addFollower(TERMINAL_319);
    		TERMINAL_349.addFollower(TERMINAL_320);
    		TERMINAL_349.addFollower(TERMINAL_144);
    		TERMINAL_349.addFollower(TERMINAL_145);
    		TERMINAL_349.addFollower(TERMINAL_146);
    		TERMINAL_349.addFollower(TERMINAL_147);
    		TERMINAL_349.addFollower(TERMINAL_148);
    		TERMINAL_349.addFollower(TERMINAL_149);
    		TERMINAL_349.addFollower(TERMINAL_150);
    		TERMINAL_349.addFollower(TERMINAL_330);
    		TERMINAL_349.addFollower(TERMINAL_331);
    		TERMINAL_339.addFollower(TERMINAL_53);
    		TERMINAL_339.addFollower(TERMINAL_54);
    		TERMINAL_339.addFollower(TERMINAL_55);
    		TERMINAL_339.addFollower(TERMINAL_56);
    		TERMINAL_339.addFollower(TERMINAL_57);
    		TERMINAL_339.addFollower(TERMINAL_58);
    		TERMINAL_339.addFollower(TERMINAL_59);
    		TERMINAL_339.addFollower(TERMINAL_60);
    		TERMINAL_339.addFollower(TERMINAL_15);
    		TERMINAL_339.addFollower(TERMINAL_61);
    		TERMINAL_339.addFollower(TERMINAL_62);
    		TERMINAL_339.addFollower(TERMINAL_63);
    		TERMINAL_339.addFollower(TERMINAL_64);
    		TERMINAL_339.addFollower(TERMINAL_65);
    		TERMINAL_339.addFollower(TERMINAL_66);
    		TERMINAL_339.addFollower(TERMINAL_67);
    		TERMINAL_339.addFollower(TERMINAL_68);
    		TERMINAL_339.addFollower(TERMINAL_69);
    		TERMINAL_339.addFollower(TERMINAL_70);
    		TERMINAL_339.addFollower(TERMINAL_71);
    		TERMINAL_340.addFollower(TERMINAL_53);
    		TERMINAL_340.addFollower(TERMINAL_54);
    		TERMINAL_340.addFollower(TERMINAL_55);
    		TERMINAL_340.addFollower(TERMINAL_56);
    		TERMINAL_340.addFollower(TERMINAL_57);
    		TERMINAL_340.addFollower(TERMINAL_58);
    		TERMINAL_340.addFollower(TERMINAL_59);
    		TERMINAL_340.addFollower(TERMINAL_60);
    		TERMINAL_340.addFollower(TERMINAL_15);
    		TERMINAL_340.addFollower(TERMINAL_61);
    		TERMINAL_340.addFollower(TERMINAL_62);
    		TERMINAL_340.addFollower(TERMINAL_63);
    		TERMINAL_340.addFollower(TERMINAL_64);
    		TERMINAL_340.addFollower(TERMINAL_65);
    		TERMINAL_340.addFollower(TERMINAL_66);
    		TERMINAL_340.addFollower(TERMINAL_67);
    		TERMINAL_340.addFollower(TERMINAL_68);
    		TERMINAL_340.addFollower(TERMINAL_69);
    		TERMINAL_340.addFollower(TERMINAL_70);
    		TERMINAL_340.addFollower(TERMINAL_71);
    		TERMINAL_341.addFollower(TERMINAL_53);
    		TERMINAL_341.addFollower(TERMINAL_54);
    		TERMINAL_341.addFollower(TERMINAL_55);
    		TERMINAL_341.addFollower(TERMINAL_56);
    		TERMINAL_341.addFollower(TERMINAL_57);
    		TERMINAL_341.addFollower(TERMINAL_58);
    		TERMINAL_341.addFollower(TERMINAL_59);
    		TERMINAL_341.addFollower(TERMINAL_60);
    		TERMINAL_341.addFollower(TERMINAL_15);
    		TERMINAL_341.addFollower(TERMINAL_61);
    		TERMINAL_341.addFollower(TERMINAL_62);
    		TERMINAL_341.addFollower(TERMINAL_63);
    		TERMINAL_341.addFollower(TERMINAL_64);
    		TERMINAL_341.addFollower(TERMINAL_65);
    		TERMINAL_341.addFollower(TERMINAL_66);
    		TERMINAL_341.addFollower(TERMINAL_67);
    		TERMINAL_341.addFollower(TERMINAL_68);
    		TERMINAL_341.addFollower(TERMINAL_69);
    		TERMINAL_341.addFollower(TERMINAL_70);
    		TERMINAL_341.addFollower(TERMINAL_71);
    		TERMINAL_342.addFollower(TERMINAL_53);
    		TERMINAL_342.addFollower(TERMINAL_54);
    		TERMINAL_342.addFollower(TERMINAL_55);
    		TERMINAL_342.addFollower(TERMINAL_56);
    		TERMINAL_342.addFollower(TERMINAL_57);
    		TERMINAL_342.addFollower(TERMINAL_58);
    		TERMINAL_342.addFollower(TERMINAL_59);
    		TERMINAL_342.addFollower(TERMINAL_60);
    		TERMINAL_342.addFollower(TERMINAL_15);
    		TERMINAL_342.addFollower(TERMINAL_61);
    		TERMINAL_342.addFollower(TERMINAL_62);
    		TERMINAL_342.addFollower(TERMINAL_63);
    		TERMINAL_342.addFollower(TERMINAL_64);
    		TERMINAL_342.addFollower(TERMINAL_65);
    		TERMINAL_342.addFollower(TERMINAL_66);
    		TERMINAL_342.addFollower(TERMINAL_67);
    		TERMINAL_342.addFollower(TERMINAL_68);
    		TERMINAL_342.addFollower(TERMINAL_69);
    		TERMINAL_342.addFollower(TERMINAL_70);
    		TERMINAL_342.addFollower(TERMINAL_71);
    		TERMINAL_343.addFollower(TERMINAL_350);
    		TERMINAL_343.addFollower(TERMINAL_351);
    		TERMINAL_343.addFollower(TERMINAL_352);
    		TERMINAL_343.addFollower(TERMINAL_353);
    		TERMINAL_343.addFollower(TERMINAL_51);
    		TERMINAL_343.addFollower(TERMINAL_6);
    		TERMINAL_343.addFollower(TERMINAL_7);
    		TERMINAL_343.addFollower(TERMINAL_8);
    		TERMINAL_343.addFollower(TERMINAL_9);
    		TERMINAL_343.addFollower(TERMINAL_10);
    		TERMINAL_343.addFollower(TERMINAL_44);
    		TERMINAL_343.addFollower(TERMINAL_60);
    		TERMINAL_343.addFollower(TERMINAL_59);
    		TERMINAL_343.addFollower(TERMINAL_58);
    		TERMINAL_343.addFollower(TERMINAL_64);
    		TERMINAL_343.addFollower(TERMINAL_55);
    		TERMINAL_343.addFollower(TERMINAL_61);
    		TERMINAL_343.addFollower(TERMINAL_62);
    		TERMINAL_343.addFollower(TERMINAL_65);
    		TERMINAL_343.addFollower(TERMINAL_66);
    		TERMINAL_343.addFollower(TERMINAL_67);
    		TERMINAL_343.addFollower(TERMINAL_57);
    		TERMINAL_343.addFollower(TERMINAL_56);
    		TERMINAL_343.addFollower(TERMINAL_63);
    		TERMINAL_343.addFollower(TERMINAL_70);
    		TERMINAL_343.addFollower(TERMINAL_69);
    		TERMINAL_343.addFollower(TERMINAL_53);
    		TERMINAL_343.addFollower(TERMINAL_310);
    		TERMINAL_343.addFollower(TERMINAL_311);
    		TERMINAL_343.addFollower(TERMINAL_312);
    		TERMINAL_343.addFollower(TERMINAL_313);
    		TERMINAL_343.addFollower(TERMINAL_314);
    		TERMINAL_343.addFollower(TERMINAL_315);
    		TERMINAL_343.addFollower(TERMINAL_316);
    		TERMINAL_343.addFollower(TERMINAL_317);
    		TERMINAL_343.addFollower(TERMINAL_318);
    		TERMINAL_343.addFollower(TERMINAL_319);
    		TERMINAL_343.addFollower(TERMINAL_320);
    		TERMINAL_343.addFollower(TERMINAL_144);
    		TERMINAL_343.addFollower(TERMINAL_145);
    		TERMINAL_343.addFollower(TERMINAL_146);
    		TERMINAL_343.addFollower(TERMINAL_147);
    		TERMINAL_343.addFollower(TERMINAL_148);
    		TERMINAL_343.addFollower(TERMINAL_149);
    		TERMINAL_343.addFollower(TERMINAL_150);
    		TERMINAL_343.addFollower(TERMINAL_330);
    		TERMINAL_343.addFollower(TERMINAL_331);
    		TERMINAL_350.addFollower(TERMINAL_53);
    		TERMINAL_350.addFollower(TERMINAL_54);
    		TERMINAL_350.addFollower(TERMINAL_55);
    		TERMINAL_350.addFollower(TERMINAL_56);
    		TERMINAL_350.addFollower(TERMINAL_57);
    		TERMINAL_350.addFollower(TERMINAL_58);
    		TERMINAL_350.addFollower(TERMINAL_59);
    		TERMINAL_350.addFollower(TERMINAL_60);
    		TERMINAL_350.addFollower(TERMINAL_15);
    		TERMINAL_350.addFollower(TERMINAL_61);
    		TERMINAL_350.addFollower(TERMINAL_62);
    		TERMINAL_350.addFollower(TERMINAL_63);
    		TERMINAL_350.addFollower(TERMINAL_64);
    		TERMINAL_350.addFollower(TERMINAL_65);
    		TERMINAL_350.addFollower(TERMINAL_66);
    		TERMINAL_350.addFollower(TERMINAL_67);
    		TERMINAL_350.addFollower(TERMINAL_68);
    		TERMINAL_350.addFollower(TERMINAL_69);
    		TERMINAL_350.addFollower(TERMINAL_70);
    		TERMINAL_350.addFollower(TERMINAL_71);
    		TERMINAL_351.addFollower(TERMINAL_53);
    		TERMINAL_351.addFollower(TERMINAL_54);
    		TERMINAL_351.addFollower(TERMINAL_55);
    		TERMINAL_351.addFollower(TERMINAL_56);
    		TERMINAL_351.addFollower(TERMINAL_57);
    		TERMINAL_351.addFollower(TERMINAL_58);
    		TERMINAL_351.addFollower(TERMINAL_59);
    		TERMINAL_351.addFollower(TERMINAL_60);
    		TERMINAL_351.addFollower(TERMINAL_15);
    		TERMINAL_351.addFollower(TERMINAL_61);
    		TERMINAL_351.addFollower(TERMINAL_62);
    		TERMINAL_351.addFollower(TERMINAL_63);
    		TERMINAL_351.addFollower(TERMINAL_64);
    		TERMINAL_351.addFollower(TERMINAL_65);
    		TERMINAL_351.addFollower(TERMINAL_66);
    		TERMINAL_351.addFollower(TERMINAL_67);
    		TERMINAL_351.addFollower(TERMINAL_68);
    		TERMINAL_351.addFollower(TERMINAL_69);
    		TERMINAL_351.addFollower(TERMINAL_70);
    		TERMINAL_351.addFollower(TERMINAL_71);
    		TERMINAL_352.addFollower(TERMINAL_53);
    		TERMINAL_352.addFollower(TERMINAL_54);
    		TERMINAL_352.addFollower(TERMINAL_55);
    		TERMINAL_352.addFollower(TERMINAL_56);
    		TERMINAL_352.addFollower(TERMINAL_57);
    		TERMINAL_352.addFollower(TERMINAL_58);
    		TERMINAL_352.addFollower(TERMINAL_59);
    		TERMINAL_352.addFollower(TERMINAL_60);
    		TERMINAL_352.addFollower(TERMINAL_15);
    		TERMINAL_352.addFollower(TERMINAL_61);
    		TERMINAL_352.addFollower(TERMINAL_62);
    		TERMINAL_352.addFollower(TERMINAL_63);
    		TERMINAL_352.addFollower(TERMINAL_64);
    		TERMINAL_352.addFollower(TERMINAL_65);
    		TERMINAL_352.addFollower(TERMINAL_66);
    		TERMINAL_352.addFollower(TERMINAL_67);
    		TERMINAL_352.addFollower(TERMINAL_68);
    		TERMINAL_352.addFollower(TERMINAL_69);
    		TERMINAL_352.addFollower(TERMINAL_70);
    		TERMINAL_352.addFollower(TERMINAL_71);
    		TERMINAL_353.addFollower(TERMINAL_53);
    		TERMINAL_353.addFollower(TERMINAL_54);
    		TERMINAL_353.addFollower(TERMINAL_55);
    		TERMINAL_353.addFollower(TERMINAL_56);
    		TERMINAL_353.addFollower(TERMINAL_57);
    		TERMINAL_353.addFollower(TERMINAL_58);
    		TERMINAL_353.addFollower(TERMINAL_59);
    		TERMINAL_353.addFollower(TERMINAL_60);
    		TERMINAL_353.addFollower(TERMINAL_15);
    		TERMINAL_353.addFollower(TERMINAL_61);
    		TERMINAL_353.addFollower(TERMINAL_62);
    		TERMINAL_353.addFollower(TERMINAL_63);
    		TERMINAL_353.addFollower(TERMINAL_64);
    		TERMINAL_353.addFollower(TERMINAL_65);
    		TERMINAL_353.addFollower(TERMINAL_66);
    		TERMINAL_353.addFollower(TERMINAL_67);
    		TERMINAL_353.addFollower(TERMINAL_68);
    		TERMINAL_353.addFollower(TERMINAL_69);
    		TERMINAL_353.addFollower(TERMINAL_70);
    		TERMINAL_353.addFollower(TERMINAL_71);
    		TERMINAL_354.addFollower(TERMINAL_363);
    		TERMINAL_363.addFollower(TERMINAL_354);
    		TERMINAL_363.addFollower(TERMINAL_355);
    		TERMINAL_363.addFollower(TERMINAL_356);
    		TERMINAL_363.addFollower(TERMINAL_357);
    		TERMINAL_363.addFollower(TERMINAL_358);
    		TERMINAL_363.addFollower(TERMINAL_359);
    		TERMINAL_363.addFollower(TERMINAL_360);
    		TERMINAL_363.addFollower(TERMINAL_361);
    		TERMINAL_363.addFollower(TERMINAL_362);
    		TERMINAL_363.addFollower(TERMINAL_51);
    		TERMINAL_363.addFollower(TERMINAL_6);
    		TERMINAL_363.addFollower(TERMINAL_7);
    		TERMINAL_363.addFollower(TERMINAL_8);
    		TERMINAL_363.addFollower(TERMINAL_9);
    		TERMINAL_363.addFollower(TERMINAL_10);
    		TERMINAL_363.addFollower(TERMINAL_44);
    		TERMINAL_363.addFollower(TERMINAL_60);
    		TERMINAL_363.addFollower(TERMINAL_59);
    		TERMINAL_363.addFollower(TERMINAL_58);
    		TERMINAL_363.addFollower(TERMINAL_64);
    		TERMINAL_363.addFollower(TERMINAL_55);
    		TERMINAL_363.addFollower(TERMINAL_61);
    		TERMINAL_363.addFollower(TERMINAL_62);
    		TERMINAL_363.addFollower(TERMINAL_65);
    		TERMINAL_363.addFollower(TERMINAL_66);
    		TERMINAL_363.addFollower(TERMINAL_67);
    		TERMINAL_363.addFollower(TERMINAL_57);
    		TERMINAL_363.addFollower(TERMINAL_56);
    		TERMINAL_363.addFollower(TERMINAL_63);
    		TERMINAL_363.addFollower(TERMINAL_70);
    		TERMINAL_363.addFollower(TERMINAL_69);
    		TERMINAL_363.addFollower(TERMINAL_53);
    		TERMINAL_363.addFollower(TERMINAL_310);
    		TERMINAL_363.addFollower(TERMINAL_311);
    		TERMINAL_363.addFollower(TERMINAL_312);
    		TERMINAL_363.addFollower(TERMINAL_313);
    		TERMINAL_363.addFollower(TERMINAL_314);
    		TERMINAL_363.addFollower(TERMINAL_315);
    		TERMINAL_363.addFollower(TERMINAL_316);
    		TERMINAL_363.addFollower(TERMINAL_317);
    		TERMINAL_363.addFollower(TERMINAL_318);
    		TERMINAL_363.addFollower(TERMINAL_319);
    		TERMINAL_363.addFollower(TERMINAL_320);
    		TERMINAL_363.addFollower(TERMINAL_144);
    		TERMINAL_363.addFollower(TERMINAL_145);
    		TERMINAL_363.addFollower(TERMINAL_146);
    		TERMINAL_363.addFollower(TERMINAL_147);
    		TERMINAL_363.addFollower(TERMINAL_148);
    		TERMINAL_363.addFollower(TERMINAL_149);
    		TERMINAL_363.addFollower(TERMINAL_150);
    		TERMINAL_363.addFollower(TERMINAL_330);
    		TERMINAL_363.addFollower(TERMINAL_331);
    		TERMINAL_355.addFollower(TERMINAL_364);
    		TERMINAL_364.addFollower(TERMINAL_365);
    		TERMINAL_365.addFollower(TERMINAL_53);
    		TERMINAL_365.addFollower(TERMINAL_54);
    		TERMINAL_365.addFollower(TERMINAL_55);
    		TERMINAL_365.addFollower(TERMINAL_56);
    		TERMINAL_365.addFollower(TERMINAL_57);
    		TERMINAL_365.addFollower(TERMINAL_58);
    		TERMINAL_365.addFollower(TERMINAL_59);
    		TERMINAL_365.addFollower(TERMINAL_60);
    		TERMINAL_365.addFollower(TERMINAL_15);
    		TERMINAL_365.addFollower(TERMINAL_61);
    		TERMINAL_365.addFollower(TERMINAL_62);
    		TERMINAL_365.addFollower(TERMINAL_63);
    		TERMINAL_365.addFollower(TERMINAL_64);
    		TERMINAL_365.addFollower(TERMINAL_65);
    		TERMINAL_365.addFollower(TERMINAL_66);
    		TERMINAL_365.addFollower(TERMINAL_67);
    		TERMINAL_365.addFollower(TERMINAL_68);
    		TERMINAL_365.addFollower(TERMINAL_69);
    		TERMINAL_365.addFollower(TERMINAL_70);
    		TERMINAL_365.addFollower(TERMINAL_71);
    		TERMINAL_365.addFollower(TERMINAL_366);
    		TERMINAL_367.addFollower(TERMINAL_53);
    		TERMINAL_367.addFollower(TERMINAL_54);
    		TERMINAL_367.addFollower(TERMINAL_55);
    		TERMINAL_367.addFollower(TERMINAL_56);
    		TERMINAL_367.addFollower(TERMINAL_57);
    		TERMINAL_367.addFollower(TERMINAL_58);
    		TERMINAL_367.addFollower(TERMINAL_59);
    		TERMINAL_367.addFollower(TERMINAL_60);
    		TERMINAL_367.addFollower(TERMINAL_15);
    		TERMINAL_367.addFollower(TERMINAL_61);
    		TERMINAL_367.addFollower(TERMINAL_62);
    		TERMINAL_367.addFollower(TERMINAL_63);
    		TERMINAL_367.addFollower(TERMINAL_64);
    		TERMINAL_367.addFollower(TERMINAL_65);
    		TERMINAL_367.addFollower(TERMINAL_66);
    		TERMINAL_367.addFollower(TERMINAL_67);
    		TERMINAL_367.addFollower(TERMINAL_68);
    		TERMINAL_367.addFollower(TERMINAL_69);
    		TERMINAL_367.addFollower(TERMINAL_70);
    		TERMINAL_367.addFollower(TERMINAL_71);
    		TERMINAL_366.addFollower(TERMINAL_354);
    		TERMINAL_366.addFollower(TERMINAL_355);
    		TERMINAL_366.addFollower(TERMINAL_356);
    		TERMINAL_366.addFollower(TERMINAL_357);
    		TERMINAL_366.addFollower(TERMINAL_358);
    		TERMINAL_366.addFollower(TERMINAL_359);
    		TERMINAL_366.addFollower(TERMINAL_360);
    		TERMINAL_366.addFollower(TERMINAL_361);
    		TERMINAL_366.addFollower(TERMINAL_362);
    		TERMINAL_366.addFollower(TERMINAL_51);
    		TERMINAL_366.addFollower(TERMINAL_6);
    		TERMINAL_366.addFollower(TERMINAL_7);
    		TERMINAL_366.addFollower(TERMINAL_8);
    		TERMINAL_366.addFollower(TERMINAL_9);
    		TERMINAL_366.addFollower(TERMINAL_10);
    		TERMINAL_366.addFollower(TERMINAL_44);
    		TERMINAL_366.addFollower(TERMINAL_60);
    		TERMINAL_366.addFollower(TERMINAL_59);
    		TERMINAL_366.addFollower(TERMINAL_58);
    		TERMINAL_366.addFollower(TERMINAL_64);
    		TERMINAL_366.addFollower(TERMINAL_55);
    		TERMINAL_366.addFollower(TERMINAL_61);
    		TERMINAL_366.addFollower(TERMINAL_62);
    		TERMINAL_366.addFollower(TERMINAL_65);
    		TERMINAL_366.addFollower(TERMINAL_66);
    		TERMINAL_366.addFollower(TERMINAL_67);
    		TERMINAL_366.addFollower(TERMINAL_57);
    		TERMINAL_366.addFollower(TERMINAL_56);
    		TERMINAL_366.addFollower(TERMINAL_63);
    		TERMINAL_366.addFollower(TERMINAL_70);
    		TERMINAL_366.addFollower(TERMINAL_69);
    		TERMINAL_366.addFollower(TERMINAL_53);
    		TERMINAL_366.addFollower(TERMINAL_310);
    		TERMINAL_366.addFollower(TERMINAL_311);
    		TERMINAL_366.addFollower(TERMINAL_312);
    		TERMINAL_366.addFollower(TERMINAL_313);
    		TERMINAL_366.addFollower(TERMINAL_314);
    		TERMINAL_366.addFollower(TERMINAL_315);
    		TERMINAL_366.addFollower(TERMINAL_316);
    		TERMINAL_366.addFollower(TERMINAL_317);
    		TERMINAL_366.addFollower(TERMINAL_318);
    		TERMINAL_366.addFollower(TERMINAL_319);
    		TERMINAL_366.addFollower(TERMINAL_320);
    		TERMINAL_366.addFollower(TERMINAL_144);
    		TERMINAL_366.addFollower(TERMINAL_145);
    		TERMINAL_366.addFollower(TERMINAL_146);
    		TERMINAL_366.addFollower(TERMINAL_147);
    		TERMINAL_366.addFollower(TERMINAL_148);
    		TERMINAL_366.addFollower(TERMINAL_149);
    		TERMINAL_366.addFollower(TERMINAL_150);
    		TERMINAL_366.addFollower(TERMINAL_330);
    		TERMINAL_366.addFollower(TERMINAL_331);
    		TERMINAL_356.addFollower(TERMINAL_368);
    		TERMINAL_368.addFollower(TERMINAL_354);
    		TERMINAL_368.addFollower(TERMINAL_355);
    		TERMINAL_368.addFollower(TERMINAL_356);
    		TERMINAL_368.addFollower(TERMINAL_357);
    		TERMINAL_368.addFollower(TERMINAL_358);
    		TERMINAL_368.addFollower(TERMINAL_359);
    		TERMINAL_368.addFollower(TERMINAL_360);
    		TERMINAL_368.addFollower(TERMINAL_361);
    		TERMINAL_368.addFollower(TERMINAL_362);
    		TERMINAL_368.addFollower(TERMINAL_51);
    		TERMINAL_368.addFollower(TERMINAL_6);
    		TERMINAL_368.addFollower(TERMINAL_7);
    		TERMINAL_368.addFollower(TERMINAL_8);
    		TERMINAL_368.addFollower(TERMINAL_9);
    		TERMINAL_368.addFollower(TERMINAL_10);
    		TERMINAL_368.addFollower(TERMINAL_44);
    		TERMINAL_368.addFollower(TERMINAL_60);
    		TERMINAL_368.addFollower(TERMINAL_59);
    		TERMINAL_368.addFollower(TERMINAL_58);
    		TERMINAL_368.addFollower(TERMINAL_64);
    		TERMINAL_368.addFollower(TERMINAL_55);
    		TERMINAL_368.addFollower(TERMINAL_61);
    		TERMINAL_368.addFollower(TERMINAL_62);
    		TERMINAL_368.addFollower(TERMINAL_65);
    		TERMINAL_368.addFollower(TERMINAL_66);
    		TERMINAL_368.addFollower(TERMINAL_67);
    		TERMINAL_368.addFollower(TERMINAL_57);
    		TERMINAL_368.addFollower(TERMINAL_56);
    		TERMINAL_368.addFollower(TERMINAL_63);
    		TERMINAL_368.addFollower(TERMINAL_70);
    		TERMINAL_368.addFollower(TERMINAL_69);
    		TERMINAL_368.addFollower(TERMINAL_53);
    		TERMINAL_368.addFollower(TERMINAL_310);
    		TERMINAL_368.addFollower(TERMINAL_311);
    		TERMINAL_368.addFollower(TERMINAL_312);
    		TERMINAL_368.addFollower(TERMINAL_313);
    		TERMINAL_368.addFollower(TERMINAL_314);
    		TERMINAL_368.addFollower(TERMINAL_315);
    		TERMINAL_368.addFollower(TERMINAL_316);
    		TERMINAL_368.addFollower(TERMINAL_317);
    		TERMINAL_368.addFollower(TERMINAL_318);
    		TERMINAL_368.addFollower(TERMINAL_319);
    		TERMINAL_368.addFollower(TERMINAL_320);
    		TERMINAL_368.addFollower(TERMINAL_144);
    		TERMINAL_368.addFollower(TERMINAL_145);
    		TERMINAL_368.addFollower(TERMINAL_146);
    		TERMINAL_368.addFollower(TERMINAL_147);
    		TERMINAL_368.addFollower(TERMINAL_148);
    		TERMINAL_368.addFollower(TERMINAL_149);
    		TERMINAL_368.addFollower(TERMINAL_150);
    		TERMINAL_368.addFollower(TERMINAL_330);
    		TERMINAL_368.addFollower(TERMINAL_331);
    		TERMINAL_357.addFollower(TERMINAL_369);
    		TERMINAL_369.addFollower(TERMINAL_354);
    		TERMINAL_369.addFollower(TERMINAL_355);
    		TERMINAL_369.addFollower(TERMINAL_356);
    		TERMINAL_369.addFollower(TERMINAL_357);
    		TERMINAL_369.addFollower(TERMINAL_358);
    		TERMINAL_369.addFollower(TERMINAL_359);
    		TERMINAL_369.addFollower(TERMINAL_360);
    		TERMINAL_369.addFollower(TERMINAL_361);
    		TERMINAL_369.addFollower(TERMINAL_362);
    		TERMINAL_369.addFollower(TERMINAL_51);
    		TERMINAL_369.addFollower(TERMINAL_6);
    		TERMINAL_369.addFollower(TERMINAL_7);
    		TERMINAL_369.addFollower(TERMINAL_8);
    		TERMINAL_369.addFollower(TERMINAL_9);
    		TERMINAL_369.addFollower(TERMINAL_10);
    		TERMINAL_369.addFollower(TERMINAL_44);
    		TERMINAL_369.addFollower(TERMINAL_60);
    		TERMINAL_369.addFollower(TERMINAL_59);
    		TERMINAL_369.addFollower(TERMINAL_58);
    		TERMINAL_369.addFollower(TERMINAL_64);
    		TERMINAL_369.addFollower(TERMINAL_55);
    		TERMINAL_369.addFollower(TERMINAL_61);
    		TERMINAL_369.addFollower(TERMINAL_62);
    		TERMINAL_369.addFollower(TERMINAL_65);
    		TERMINAL_369.addFollower(TERMINAL_66);
    		TERMINAL_369.addFollower(TERMINAL_67);
    		TERMINAL_369.addFollower(TERMINAL_57);
    		TERMINAL_369.addFollower(TERMINAL_56);
    		TERMINAL_369.addFollower(TERMINAL_63);
    		TERMINAL_369.addFollower(TERMINAL_70);
    		TERMINAL_369.addFollower(TERMINAL_69);
    		TERMINAL_369.addFollower(TERMINAL_53);
    		TERMINAL_369.addFollower(TERMINAL_310);
    		TERMINAL_369.addFollower(TERMINAL_311);
    		TERMINAL_369.addFollower(TERMINAL_312);
    		TERMINAL_369.addFollower(TERMINAL_313);
    		TERMINAL_369.addFollower(TERMINAL_314);
    		TERMINAL_369.addFollower(TERMINAL_315);
    		TERMINAL_369.addFollower(TERMINAL_316);
    		TERMINAL_369.addFollower(TERMINAL_317);
    		TERMINAL_369.addFollower(TERMINAL_318);
    		TERMINAL_369.addFollower(TERMINAL_319);
    		TERMINAL_369.addFollower(TERMINAL_320);
    		TERMINAL_369.addFollower(TERMINAL_144);
    		TERMINAL_369.addFollower(TERMINAL_145);
    		TERMINAL_369.addFollower(TERMINAL_146);
    		TERMINAL_369.addFollower(TERMINAL_147);
    		TERMINAL_369.addFollower(TERMINAL_148);
    		TERMINAL_369.addFollower(TERMINAL_149);
    		TERMINAL_369.addFollower(TERMINAL_150);
    		TERMINAL_369.addFollower(TERMINAL_330);
    		TERMINAL_369.addFollower(TERMINAL_331);
    		TERMINAL_358.addFollower(TERMINAL_53);
    		TERMINAL_358.addFollower(TERMINAL_54);
    		TERMINAL_358.addFollower(TERMINAL_55);
    		TERMINAL_358.addFollower(TERMINAL_56);
    		TERMINAL_358.addFollower(TERMINAL_57);
    		TERMINAL_358.addFollower(TERMINAL_58);
    		TERMINAL_358.addFollower(TERMINAL_59);
    		TERMINAL_358.addFollower(TERMINAL_60);
    		TERMINAL_358.addFollower(TERMINAL_15);
    		TERMINAL_358.addFollower(TERMINAL_61);
    		TERMINAL_358.addFollower(TERMINAL_62);
    		TERMINAL_358.addFollower(TERMINAL_63);
    		TERMINAL_358.addFollower(TERMINAL_64);
    		TERMINAL_358.addFollower(TERMINAL_65);
    		TERMINAL_358.addFollower(TERMINAL_66);
    		TERMINAL_358.addFollower(TERMINAL_67);
    		TERMINAL_358.addFollower(TERMINAL_68);
    		TERMINAL_358.addFollower(TERMINAL_69);
    		TERMINAL_358.addFollower(TERMINAL_70);
    		TERMINAL_358.addFollower(TERMINAL_71);
    		TERMINAL_359.addFollower(TERMINAL_53);
    		TERMINAL_359.addFollower(TERMINAL_54);
    		TERMINAL_359.addFollower(TERMINAL_55);
    		TERMINAL_359.addFollower(TERMINAL_56);
    		TERMINAL_359.addFollower(TERMINAL_57);
    		TERMINAL_359.addFollower(TERMINAL_58);
    		TERMINAL_359.addFollower(TERMINAL_59);
    		TERMINAL_359.addFollower(TERMINAL_60);
    		TERMINAL_359.addFollower(TERMINAL_15);
    		TERMINAL_359.addFollower(TERMINAL_61);
    		TERMINAL_359.addFollower(TERMINAL_62);
    		TERMINAL_359.addFollower(TERMINAL_63);
    		TERMINAL_359.addFollower(TERMINAL_64);
    		TERMINAL_359.addFollower(TERMINAL_65);
    		TERMINAL_359.addFollower(TERMINAL_66);
    		TERMINAL_359.addFollower(TERMINAL_67);
    		TERMINAL_359.addFollower(TERMINAL_68);
    		TERMINAL_359.addFollower(TERMINAL_69);
    		TERMINAL_359.addFollower(TERMINAL_70);
    		TERMINAL_359.addFollower(TERMINAL_71);
    		TERMINAL_360.addFollower(TERMINAL_53);
    		TERMINAL_360.addFollower(TERMINAL_54);
    		TERMINAL_360.addFollower(TERMINAL_55);
    		TERMINAL_360.addFollower(TERMINAL_56);
    		TERMINAL_360.addFollower(TERMINAL_57);
    		TERMINAL_360.addFollower(TERMINAL_58);
    		TERMINAL_360.addFollower(TERMINAL_59);
    		TERMINAL_360.addFollower(TERMINAL_60);
    		TERMINAL_360.addFollower(TERMINAL_15);
    		TERMINAL_360.addFollower(TERMINAL_61);
    		TERMINAL_360.addFollower(TERMINAL_62);
    		TERMINAL_360.addFollower(TERMINAL_63);
    		TERMINAL_360.addFollower(TERMINAL_64);
    		TERMINAL_360.addFollower(TERMINAL_65);
    		TERMINAL_360.addFollower(TERMINAL_66);
    		TERMINAL_360.addFollower(TERMINAL_67);
    		TERMINAL_360.addFollower(TERMINAL_68);
    		TERMINAL_360.addFollower(TERMINAL_69);
    		TERMINAL_360.addFollower(TERMINAL_70);
    		TERMINAL_360.addFollower(TERMINAL_71);
    		TERMINAL_361.addFollower(TERMINAL_53);
    		TERMINAL_361.addFollower(TERMINAL_54);
    		TERMINAL_361.addFollower(TERMINAL_55);
    		TERMINAL_361.addFollower(TERMINAL_56);
    		TERMINAL_361.addFollower(TERMINAL_57);
    		TERMINAL_361.addFollower(TERMINAL_58);
    		TERMINAL_361.addFollower(TERMINAL_59);
    		TERMINAL_361.addFollower(TERMINAL_60);
    		TERMINAL_361.addFollower(TERMINAL_15);
    		TERMINAL_361.addFollower(TERMINAL_61);
    		TERMINAL_361.addFollower(TERMINAL_62);
    		TERMINAL_361.addFollower(TERMINAL_63);
    		TERMINAL_361.addFollower(TERMINAL_64);
    		TERMINAL_361.addFollower(TERMINAL_65);
    		TERMINAL_361.addFollower(TERMINAL_66);
    		TERMINAL_361.addFollower(TERMINAL_67);
    		TERMINAL_361.addFollower(TERMINAL_68);
    		TERMINAL_361.addFollower(TERMINAL_69);
    		TERMINAL_361.addFollower(TERMINAL_70);
    		TERMINAL_361.addFollower(TERMINAL_71);
    		TERMINAL_362.addFollower(TERMINAL_53);
    		TERMINAL_362.addFollower(TERMINAL_54);
    		TERMINAL_362.addFollower(TERMINAL_55);
    		TERMINAL_362.addFollower(TERMINAL_56);
    		TERMINAL_362.addFollower(TERMINAL_57);
    		TERMINAL_362.addFollower(TERMINAL_58);
    		TERMINAL_362.addFollower(TERMINAL_59);
    		TERMINAL_362.addFollower(TERMINAL_60);
    		TERMINAL_362.addFollower(TERMINAL_15);
    		TERMINAL_362.addFollower(TERMINAL_61);
    		TERMINAL_362.addFollower(TERMINAL_62);
    		TERMINAL_362.addFollower(TERMINAL_63);
    		TERMINAL_362.addFollower(TERMINAL_64);
    		TERMINAL_362.addFollower(TERMINAL_65);
    		TERMINAL_362.addFollower(TERMINAL_66);
    		TERMINAL_362.addFollower(TERMINAL_67);
    		TERMINAL_362.addFollower(TERMINAL_68);
    		TERMINAL_362.addFollower(TERMINAL_69);
    		TERMINAL_362.addFollower(TERMINAL_70);
    		TERMINAL_362.addFollower(TERMINAL_71);
    		TERMINAL_66.addFollower(TERMINAL_370);
    		TERMINAL_370.addFollower(TERMINAL_371);
    		TERMINAL_371.addFollower(TERMINAL_372);
    		TERMINAL_372.addFollower(TERMINAL_373);
    		TERMINAL_373.addFollower(TERMINAL_53);
    		TERMINAL_373.addFollower(TERMINAL_54);
    		TERMINAL_373.addFollower(TERMINAL_55);
    		TERMINAL_373.addFollower(TERMINAL_56);
    		TERMINAL_373.addFollower(TERMINAL_57);
    		TERMINAL_373.addFollower(TERMINAL_58);
    		TERMINAL_373.addFollower(TERMINAL_59);
    		TERMINAL_373.addFollower(TERMINAL_60);
    		TERMINAL_373.addFollower(TERMINAL_15);
    		TERMINAL_373.addFollower(TERMINAL_61);
    		TERMINAL_373.addFollower(TERMINAL_62);
    		TERMINAL_373.addFollower(TERMINAL_63);
    		TERMINAL_373.addFollower(TERMINAL_64);
    		TERMINAL_373.addFollower(TERMINAL_65);
    		TERMINAL_373.addFollower(TERMINAL_66);
    		TERMINAL_373.addFollower(TERMINAL_67);
    		TERMINAL_373.addFollower(TERMINAL_68);
    		TERMINAL_373.addFollower(TERMINAL_69);
    		TERMINAL_373.addFollower(TERMINAL_70);
    		TERMINAL_373.addFollower(TERMINAL_71);
    		TERMINAL_373.addFollower(TERMINAL_320);
    		TERMINAL_319.addFollower(TERMINAL_53);
    		TERMINAL_319.addFollower(TERMINAL_54);
    		TERMINAL_319.addFollower(TERMINAL_55);
    		TERMINAL_319.addFollower(TERMINAL_56);
    		TERMINAL_319.addFollower(TERMINAL_57);
    		TERMINAL_319.addFollower(TERMINAL_58);
    		TERMINAL_319.addFollower(TERMINAL_59);
    		TERMINAL_319.addFollower(TERMINAL_60);
    		TERMINAL_319.addFollower(TERMINAL_15);
    		TERMINAL_319.addFollower(TERMINAL_61);
    		TERMINAL_319.addFollower(TERMINAL_62);
    		TERMINAL_319.addFollower(TERMINAL_63);
    		TERMINAL_319.addFollower(TERMINAL_64);
    		TERMINAL_319.addFollower(TERMINAL_65);
    		TERMINAL_319.addFollower(TERMINAL_66);
    		TERMINAL_319.addFollower(TERMINAL_67);
    		TERMINAL_319.addFollower(TERMINAL_68);
    		TERMINAL_319.addFollower(TERMINAL_69);
    		TERMINAL_319.addFollower(TERMINAL_70);
    		TERMINAL_319.addFollower(TERMINAL_71);
    		TERMINAL_320.addFollower(TERMINAL_51);
    		TERMINAL_320.addFollower(TERMINAL_6);
    		TERMINAL_320.addFollower(TERMINAL_7);
    		TERMINAL_320.addFollower(TERMINAL_8);
    		TERMINAL_320.addFollower(TERMINAL_9);
    		TERMINAL_320.addFollower(TERMINAL_10);
    		TERMINAL_320.addFollower(TERMINAL_44);
    		TERMINAL_320.addFollower(TERMINAL_60);
    		TERMINAL_320.addFollower(TERMINAL_59);
    		TERMINAL_320.addFollower(TERMINAL_58);
    		TERMINAL_320.addFollower(TERMINAL_64);
    		TERMINAL_320.addFollower(TERMINAL_55);
    		TERMINAL_320.addFollower(TERMINAL_61);
    		TERMINAL_320.addFollower(TERMINAL_62);
    		TERMINAL_320.addFollower(TERMINAL_65);
    		TERMINAL_320.addFollower(TERMINAL_66);
    		TERMINAL_320.addFollower(TERMINAL_67);
    		TERMINAL_320.addFollower(TERMINAL_57);
    		TERMINAL_320.addFollower(TERMINAL_56);
    		TERMINAL_320.addFollower(TERMINAL_63);
    		TERMINAL_320.addFollower(TERMINAL_70);
    		TERMINAL_320.addFollower(TERMINAL_69);
    		TERMINAL_320.addFollower(TERMINAL_53);
    		TERMINAL_320.addFollower(TERMINAL_310);
    		TERMINAL_320.addFollower(TERMINAL_311);
    		TERMINAL_320.addFollower(TERMINAL_312);
    		TERMINAL_320.addFollower(TERMINAL_313);
    		TERMINAL_320.addFollower(TERMINAL_314);
    		TERMINAL_320.addFollower(TERMINAL_315);
    		TERMINAL_320.addFollower(TERMINAL_316);
    		TERMINAL_320.addFollower(TERMINAL_317);
    		TERMINAL_320.addFollower(TERMINAL_318);
    		TERMINAL_320.addFollower(TERMINAL_319);
    		TERMINAL_320.addFollower(TERMINAL_320);
    		TERMINAL_320.addFollower(TERMINAL_144);
    		TERMINAL_320.addFollower(TERMINAL_145);
    		TERMINAL_320.addFollower(TERMINAL_146);
    		TERMINAL_320.addFollower(TERMINAL_147);
    		TERMINAL_320.addFollower(TERMINAL_148);
    		TERMINAL_320.addFollower(TERMINAL_149);
    		TERMINAL_320.addFollower(TERMINAL_150);
    		TERMINAL_68.addFollower(TERMINAL_51);
    		TERMINAL_68.addFollower(TERMINAL_6);
    		TERMINAL_68.addFollower(TERMINAL_7);
    		TERMINAL_68.addFollower(TERMINAL_8);
    		TERMINAL_68.addFollower(TERMINAL_9);
    		TERMINAL_68.addFollower(TERMINAL_10);
    		TERMINAL_68.addFollower(TERMINAL_44);
    		TERMINAL_68.addFollower(TERMINAL_310);
    		TERMINAL_68.addFollower(TERMINAL_311);
    		TERMINAL_68.addFollower(TERMINAL_312);
    		TERMINAL_68.addFollower(TERMINAL_313);
    		TERMINAL_68.addFollower(TERMINAL_53);
    		TERMINAL_68.addFollower(TERMINAL_64);
    		TERMINAL_68.addFollower(TERMINAL_55);
    		TERMINAL_68.addFollower(TERMINAL_61);
    		TERMINAL_68.addFollower(TERMINAL_62);
    		TERMINAL_68.addFollower(TERMINAL_65);
    		TERMINAL_68.addFollower(TERMINAL_66);
    		TERMINAL_68.addFollower(TERMINAL_67);
    		TERMINAL_68.addFollower(TERMINAL_57);
    		TERMINAL_68.addFollower(TERMINAL_56);
    		TERMINAL_68.addFollower(TERMINAL_63);
    		TERMINAL_68.addFollower(TERMINAL_60);
    		TERMINAL_68.addFollower(TERMINAL_69);
    		TERMINAL_68.addFollower(TERMINAL_314);
    		TERMINAL_68.addFollower(TERMINAL_315);
    		TERMINAL_68.addFollower(TERMINAL_316);
    		TERMINAL_68.addFollower(TERMINAL_317);
    		TERMINAL_68.addFollower(TERMINAL_318);
    		TERMINAL_68.addFollower(TERMINAL_319);
    		TERMINAL_68.addFollower(TERMINAL_320);
    		TERMINAL_68.addFollower(TERMINAL_144);
    		TERMINAL_68.addFollower(TERMINAL_145);
    		TERMINAL_68.addFollower(TERMINAL_146);
    		TERMINAL_68.addFollower(TERMINAL_147);
    		TERMINAL_68.addFollower(TERMINAL_148);
    		TERMINAL_68.addFollower(TERMINAL_149);
    		TERMINAL_68.addFollower(TERMINAL_150);
    		TERMINAL_69.addFollower(TERMINAL_51);
    		TERMINAL_69.addFollower(TERMINAL_6);
    		TERMINAL_69.addFollower(TERMINAL_7);
    		TERMINAL_69.addFollower(TERMINAL_8);
    		TERMINAL_69.addFollower(TERMINAL_9);
    		TERMINAL_69.addFollower(TERMINAL_10);
    		TERMINAL_69.addFollower(TERMINAL_44);
    		TERMINAL_69.addFollower(TERMINAL_60);
    		TERMINAL_69.addFollower(TERMINAL_59);
    		TERMINAL_69.addFollower(TERMINAL_58);
    		TERMINAL_69.addFollower(TERMINAL_64);
    		TERMINAL_69.addFollower(TERMINAL_55);
    		TERMINAL_69.addFollower(TERMINAL_61);
    		TERMINAL_69.addFollower(TERMINAL_62);
    		TERMINAL_69.addFollower(TERMINAL_65);
    		TERMINAL_69.addFollower(TERMINAL_66);
    		TERMINAL_69.addFollower(TERMINAL_67);
    		TERMINAL_69.addFollower(TERMINAL_57);
    		TERMINAL_69.addFollower(TERMINAL_56);
    		TERMINAL_69.addFollower(TERMINAL_63);
    		TERMINAL_69.addFollower(TERMINAL_70);
    		TERMINAL_69.addFollower(TERMINAL_69);
    		TERMINAL_69.addFollower(TERMINAL_53);
    		TERMINAL_69.addFollower(TERMINAL_310);
    		TERMINAL_69.addFollower(TERMINAL_311);
    		TERMINAL_69.addFollower(TERMINAL_312);
    		TERMINAL_69.addFollower(TERMINAL_313);
    		TERMINAL_69.addFollower(TERMINAL_314);
    		TERMINAL_69.addFollower(TERMINAL_315);
    		TERMINAL_69.addFollower(TERMINAL_316);
    		TERMINAL_69.addFollower(TERMINAL_317);
    		TERMINAL_69.addFollower(TERMINAL_318);
    		TERMINAL_69.addFollower(TERMINAL_319);
    		TERMINAL_69.addFollower(TERMINAL_320);
    		TERMINAL_69.addFollower(TERMINAL_144);
    		TERMINAL_69.addFollower(TERMINAL_145);
    		TERMINAL_69.addFollower(TERMINAL_146);
    		TERMINAL_69.addFollower(TERMINAL_147);
    		TERMINAL_69.addFollower(TERMINAL_148);
    		TERMINAL_69.addFollower(TERMINAL_149);
    		TERMINAL_69.addFollower(TERMINAL_150);
    		TERMINAL_70.addFollower(TERMINAL_374);
    		TERMINAL_374.addFollower(TERMINAL_139);
    		TERMINAL_374.addFollower(TERMINAL_140);
    		TERMINAL_374.addFollower(TERMINAL_141);
    		TERMINAL_374.addFollower(TERMINAL_142);
    		TERMINAL_374.addFollower(TERMINAL_143);
    		TERMINAL_139.addFollower(TERMINAL_375);
    		TERMINAL_375.addFollower(TERMINAL_376);
    		TERMINAL_376.addFollower(TERMINAL_139);
    		TERMINAL_376.addFollower(TERMINAL_140);
    		TERMINAL_376.addFollower(TERMINAL_141);
    		TERMINAL_376.addFollower(TERMINAL_142);
    		TERMINAL_376.addFollower(TERMINAL_143);
    		TERMINAL_140.addFollower(TERMINAL_377);
    		TERMINAL_377.addFollower(TERMINAL_168);
    		TERMINAL_141.addFollower(TERMINAL_378);
    		TERMINAL_378.addFollower(TERMINAL_86);
    		TERMINAL_378.addFollower(TERMINAL_24);
    		TERMINAL_378.addFollower(TERMINAL_25);
    		TERMINAL_378.addFollower(TERMINAL_158);
    		TERMINAL_378.addFollower(TERMINAL_159);
    		TERMINAL_378.addFollower(TERMINAL_26);
    		TERMINAL_378.addFollower(TERMINAL_27);
    		TERMINAL_378.addFollower(TERMINAL_198);
    		TERMINAL_378.addFollower(TERMINAL_199);
    		TERMINAL_378.addFollower(TERMINAL_200);
    		TERMINAL_378.addFollower(TERMINAL_201);
    		TERMINAL_378.addFollower(TERMINAL_202);
    		TERMINAL_142.addFollower(TERMINAL_379);
    		TERMINAL_379.addFollower(TERMINAL_380);
    		TERMINAL_380.addFollower(TERMINAL_139);
    		TERMINAL_380.addFollower(TERMINAL_140);
    		TERMINAL_380.addFollower(TERMINAL_141);
    		TERMINAL_380.addFollower(TERMINAL_142);
    		TERMINAL_380.addFollower(TERMINAL_143);
    		TERMINAL_143.addFollower(TERMINAL_51);
    		TERMINAL_143.addFollower(TERMINAL_6);
    		TERMINAL_143.addFollower(TERMINAL_7);
    		TERMINAL_143.addFollower(TERMINAL_8);
    		TERMINAL_143.addFollower(TERMINAL_9);
    		TERMINAL_143.addFollower(TERMINAL_10);
    		TERMINAL_143.addFollower(TERMINAL_44);
    		TERMINAL_143.addFollower(TERMINAL_60);
    		TERMINAL_143.addFollower(TERMINAL_59);
    		TERMINAL_143.addFollower(TERMINAL_58);
    		TERMINAL_143.addFollower(TERMINAL_64);
    		TERMINAL_143.addFollower(TERMINAL_55);
    		TERMINAL_143.addFollower(TERMINAL_61);
    		TERMINAL_143.addFollower(TERMINAL_62);
    		TERMINAL_143.addFollower(TERMINAL_65);
    		TERMINAL_143.addFollower(TERMINAL_66);
    		TERMINAL_143.addFollower(TERMINAL_67);
    		TERMINAL_143.addFollower(TERMINAL_57);
    		TERMINAL_143.addFollower(TERMINAL_56);
    		TERMINAL_143.addFollower(TERMINAL_63);
    		TERMINAL_143.addFollower(TERMINAL_70);
    		TERMINAL_143.addFollower(TERMINAL_69);
    		TERMINAL_143.addFollower(TERMINAL_53);
    		TERMINAL_143.addFollower(TERMINAL_310);
    		TERMINAL_143.addFollower(TERMINAL_311);
    		TERMINAL_143.addFollower(TERMINAL_312);
    		TERMINAL_143.addFollower(TERMINAL_313);
    		TERMINAL_143.addFollower(TERMINAL_314);
    		TERMINAL_143.addFollower(TERMINAL_315);
    		TERMINAL_143.addFollower(TERMINAL_316);
    		TERMINAL_143.addFollower(TERMINAL_317);
    		TERMINAL_143.addFollower(TERMINAL_318);
    		TERMINAL_143.addFollower(TERMINAL_319);
    		TERMINAL_143.addFollower(TERMINAL_320);
    		TERMINAL_143.addFollower(TERMINAL_144);
    		TERMINAL_143.addFollower(TERMINAL_145);
    		TERMINAL_143.addFollower(TERMINAL_146);
    		TERMINAL_143.addFollower(TERMINAL_147);
    		TERMINAL_143.addFollower(TERMINAL_148);
    		TERMINAL_143.addFollower(TERMINAL_149);
    		TERMINAL_143.addFollower(TERMINAL_150);
    		TERMINAL_71.addFollower(TERMINAL_381);
    		TERMINAL_381.addFollower(TERMINAL_144);
    		TERMINAL_381.addFollower(TERMINAL_145);
    		TERMINAL_381.addFollower(TERMINAL_146);
    		TERMINAL_381.addFollower(TERMINAL_147);
    		TERMINAL_381.addFollower(TERMINAL_148);
    		TERMINAL_381.addFollower(TERMINAL_149);
    		TERMINAL_381.addFollower(TERMINAL_150);
    		TERMINAL_144.addFollower(TERMINAL_382);
    		TERMINAL_382.addFollower(TERMINAL_383);
    		TERMINAL_383.addFollower(TERMINAL_144);
    		TERMINAL_383.addFollower(TERMINAL_145);
    		TERMINAL_383.addFollower(TERMINAL_146);
    		TERMINAL_383.addFollower(TERMINAL_147);
    		TERMINAL_383.addFollower(TERMINAL_148);
    		TERMINAL_383.addFollower(TERMINAL_149);
    		TERMINAL_383.addFollower(TERMINAL_150);
    		TERMINAL_145.addFollower(TERMINAL_384);
    		TERMINAL_384.addFollower(TERMINAL_168);
    		TERMINAL_146.addFollower(TERMINAL_385);
    		TERMINAL_385.addFollower(TERMINAL_86);
    		TERMINAL_385.addFollower(TERMINAL_24);
    		TERMINAL_385.addFollower(TERMINAL_25);
    		TERMINAL_385.addFollower(TERMINAL_158);
    		TERMINAL_385.addFollower(TERMINAL_159);
    		TERMINAL_385.addFollower(TERMINAL_26);
    		TERMINAL_385.addFollower(TERMINAL_27);
    		TERMINAL_385.addFollower(TERMINAL_198);
    		TERMINAL_385.addFollower(TERMINAL_199);
    		TERMINAL_385.addFollower(TERMINAL_200);
    		TERMINAL_385.addFollower(TERMINAL_201);
    		TERMINAL_385.addFollower(TERMINAL_202);
    		TERMINAL_147.addFollower(TERMINAL_386);
    		TERMINAL_386.addFollower(TERMINAL_387);
    		TERMINAL_387.addFollower(TERMINAL_144);
    		TERMINAL_387.addFollower(TERMINAL_145);
    		TERMINAL_387.addFollower(TERMINAL_146);
    		TERMINAL_387.addFollower(TERMINAL_147);
    		TERMINAL_387.addFollower(TERMINAL_148);
    		TERMINAL_387.addFollower(TERMINAL_149);
    		TERMINAL_387.addFollower(TERMINAL_150);
    		TERMINAL_148.addFollower(TERMINAL_388);
    		TERMINAL_388.addFollower(TERMINAL_389);
    		TERMINAL_149.addFollower(TERMINAL_390);
    		TERMINAL_390.addFollower(TERMINAL_53);
    		TERMINAL_390.addFollower(TERMINAL_54);
    		TERMINAL_390.addFollower(TERMINAL_55);
    		TERMINAL_390.addFollower(TERMINAL_56);
    		TERMINAL_390.addFollower(TERMINAL_57);
    		TERMINAL_390.addFollower(TERMINAL_58);
    		TERMINAL_390.addFollower(TERMINAL_59);
    		TERMINAL_390.addFollower(TERMINAL_60);
    		TERMINAL_390.addFollower(TERMINAL_15);
    		TERMINAL_390.addFollower(TERMINAL_61);
    		TERMINAL_390.addFollower(TERMINAL_62);
    		TERMINAL_390.addFollower(TERMINAL_63);
    		TERMINAL_390.addFollower(TERMINAL_64);
    		TERMINAL_390.addFollower(TERMINAL_65);
    		TERMINAL_390.addFollower(TERMINAL_66);
    		TERMINAL_390.addFollower(TERMINAL_67);
    		TERMINAL_390.addFollower(TERMINAL_68);
    		TERMINAL_390.addFollower(TERMINAL_69);
    		TERMINAL_390.addFollower(TERMINAL_70);
    		TERMINAL_390.addFollower(TERMINAL_71);
    		TERMINAL_150.addFollower(TERMINAL_51);
    		TERMINAL_150.addFollower(TERMINAL_6);
    		TERMINAL_150.addFollower(TERMINAL_7);
    		TERMINAL_150.addFollower(TERMINAL_8);
    		TERMINAL_150.addFollower(TERMINAL_9);
    		TERMINAL_150.addFollower(TERMINAL_10);
    		TERMINAL_150.addFollower(TERMINAL_44);
    		TERMINAL_150.addFollower(TERMINAL_310);
    		TERMINAL_150.addFollower(TERMINAL_311);
    		TERMINAL_150.addFollower(TERMINAL_312);
    		TERMINAL_150.addFollower(TERMINAL_313);
    		TERMINAL_150.addFollower(TERMINAL_53);
    		TERMINAL_150.addFollower(TERMINAL_64);
    		TERMINAL_150.addFollower(TERMINAL_55);
    		TERMINAL_150.addFollower(TERMINAL_61);
    		TERMINAL_150.addFollower(TERMINAL_62);
    		TERMINAL_150.addFollower(TERMINAL_65);
    		TERMINAL_150.addFollower(TERMINAL_66);
    		TERMINAL_150.addFollower(TERMINAL_67);
    		TERMINAL_150.addFollower(TERMINAL_57);
    		TERMINAL_150.addFollower(TERMINAL_56);
    		TERMINAL_150.addFollower(TERMINAL_63);
    		TERMINAL_150.addFollower(TERMINAL_60);
    		TERMINAL_150.addFollower(TERMINAL_69);
    		TERMINAL_150.addFollower(TERMINAL_314);
    		TERMINAL_150.addFollower(TERMINAL_315);
    		TERMINAL_150.addFollower(TERMINAL_316);
    		TERMINAL_150.addFollower(TERMINAL_317);
    		TERMINAL_150.addFollower(TERMINAL_318);
    		TERMINAL_150.addFollower(TERMINAL_319);
    		TERMINAL_150.addFollower(TERMINAL_320);
    		TERMINAL_150.addFollower(TERMINAL_144);
    		TERMINAL_150.addFollower(TERMINAL_145);
    		TERMINAL_150.addFollower(TERMINAL_146);
    		TERMINAL_150.addFollower(TERMINAL_147);
    		TERMINAL_150.addFollower(TERMINAL_148);
    		TERMINAL_150.addFollower(TERMINAL_149);
    		TERMINAL_150.addFollower(TERMINAL_150);
    		TERMINAL_389.addFollower(TERMINAL_391);
    		TERMINAL_391.addFollower(TERMINAL_246);
    		TERMINAL_391.addFollower(TERMINAL_247);
    		TERMINAL_391.addFollower(TERMINAL_248);
    		TERMINAL_391.addFollower(TERMINAL_249);
    		TERMINAL_391.addFollower(TERMINAL_250);
    		TERMINAL_246.addFollower(TERMINAL_392);
    		TERMINAL_392.addFollower(TERMINAL_393);
    		TERMINAL_393.addFollower(TERMINAL_246);
    		TERMINAL_393.addFollower(TERMINAL_247);
    		TERMINAL_393.addFollower(TERMINAL_248);
    		TERMINAL_393.addFollower(TERMINAL_249);
    		TERMINAL_393.addFollower(TERMINAL_250);
    		TERMINAL_247.addFollower(TERMINAL_394);
    		TERMINAL_394.addFollower(TERMINAL_168);
    		TERMINAL_248.addFollower(TERMINAL_395);
    		TERMINAL_395.addFollower(TERMINAL_396);
    		TERMINAL_396.addFollower(TERMINAL_246);
    		TERMINAL_396.addFollower(TERMINAL_247);
    		TERMINAL_396.addFollower(TERMINAL_248);
    		TERMINAL_396.addFollower(TERMINAL_249);
    		TERMINAL_396.addFollower(TERMINAL_250);
    		TERMINAL_249.addFollower(TERMINAL_397);
    		TERMINAL_397.addFollower(TERMINAL_15);
    		TERMINAL_250.addFollower(TERMINAL_144);
    		TERMINAL_250.addFollower(TERMINAL_145);
    		TERMINAL_250.addFollower(TERMINAL_146);
    		TERMINAL_250.addFollower(TERMINAL_147);
    		TERMINAL_250.addFollower(TERMINAL_148);
    		TERMINAL_250.addFollower(TERMINAL_149);
    		TERMINAL_250.addFollower(TERMINAL_150);
    	}
    	// wire the terminals
    	static {
    		wire0();
    		wire1();
    		wire2();
    		wire3();
    	}



    // $ANTLR start "start"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4529:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;
        int start_StartIndex = input.index();
        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Model c1 = null;

        org.kermeta.language.structure.Property c2 = null;

        org.kermeta.language.structure.Operation c3 = null;

        org.kermeta.language.structure.Parameter c4 = null;

        org.kermeta.language.structure.MultiplicityElement c5 = null;

        org.kermeta.language.behavior.TypeReference c6 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4530:1: ( (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4531:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF
            {
            if ( state.backtracking==0 ) {

              		// follow set for start rule(s)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 0));
              		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4551:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )
            int alt1=7;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4552:3: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4553:8: c1= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_start96);
                    c1=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4554:8: c2= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_start110);
                    c2=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4555:8: c3= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124);
                    c3=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4556:8: c4= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138);
                    c4=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4557:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152);
                    c5=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4558:8: c6= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166);
                    c6=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; 
                    }

                    }
                    break;

            }

            match(input,EOF,FOLLOW_EOF_in_start173); if (state.failed) return element;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "start"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelingUnit"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4563:1: parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null] : ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ;
    public final org.kermeta.language.structure.ModelingUnit parse_org_kermeta_language_structure_ModelingUnit() throws RecognitionException {
        org.kermeta.language.structure.ModelingUnit element =  null;
        int parse_org_kermeta_language_structure_ModelingUnit_StartIndex = input.index();
        org.kermeta.language.structure.Require a0_0 = null;

        org.kermeta.language.structure.Using a1_0 = null;

        org.kermeta.language.structure.Package a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4566:1: ( ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4567:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4567:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==17) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4568:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4568:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4569:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4569:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4570:5: a0_0= parse_org_kermeta_language_structure_Require
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211);
            	    a0_0=parse_org_kermeta_language_structure_Require();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a0_0 != null) {
            	      						if (a0_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
            	      							completedElement(a0_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a0_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 1));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 2));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4606:2: ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==16) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4607:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4607:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4608:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4608:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4609:5: a1_0= parse_org_kermeta_language_structure_Using
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267);
            	    a1_0=parse_org_kermeta_language_structure_Using();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a1_0 != null) {
            	      						if (a1_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
            	      							completedElement(a1_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a1_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 3));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 4));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4641:2: ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==IDENTIFIER||LA4_0==21) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4642:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4642:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4643:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4643:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4644:5: a2_0= parse_org_kermeta_language_structure_Package
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323);
            	    a2_0=parse_org_kermeta_language_structure_Package();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a2_0 != null) {
            	      						if (a2_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
            	      							completedElement(a2_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a2_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 5));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 6));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_kermeta_language_structure_ModelingUnit_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelingUnit"


    // $ANTLR start "parse_org_kermeta_language_structure_Using"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4676:1: parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null] : a0= 'using' ;
    public final org.kermeta.language.structure.Using parse_org_kermeta_language_structure_Using() throws RecognitionException {
        org.kermeta.language.structure.Using element =  null;
        int parse_org_kermeta_language_structure_Using_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4679:1: (a0= 'using' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4680:2: a0= 'using'
            {
            a0=(Token)match(input,16,FOLLOW_16_in_parse_org_kermeta_language_structure_Using379); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 7));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_kermeta_language_structure_Using_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Using"


    // $ANTLR start "parse_org_kermeta_language_structure_Require"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4696:1: parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null] : (a0= 'require' (a1= QUOTED_34_34 ) | a2= 'require' (a3= KERMETA_LITERAL ) );
    public final org.kermeta.language.structure.Require parse_org_kermeta_language_structure_Require() throws RecognitionException {
        org.kermeta.language.structure.Require element =  null;
        int parse_org_kermeta_language_structure_Require_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4699:1: (a0= 'require' (a1= QUOTED_34_34 ) | a2= 'require' (a3= KERMETA_LITERAL ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==17) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==KERMETA_LITERAL) ) {
                    alt5=2;
                }
                else if ( (LA5_1==QUOTED_34_34) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4700:2: a0= 'require' (a1= QUOTED_34_34 )
                    {
                    a0=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Require408); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 8));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4712:2: (a1= QUOTED_34_34 )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4713:3: a1= QUOTED_34_34
                    {
                    a1=(Token)match(input,QUOTED_34_34,FOLLOW_QUOTED_34_34_in_parse_org_kermeta_language_structure_Require426); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
                      			}
                      			if (a1 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_34_34");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 9));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4750:4: a2= 'require' (a3= KERMETA_LITERAL )
                    {
                    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Require451); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 10));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4762:2: (a3= KERMETA_LITERAL )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4763:3: a3= KERMETA_LITERAL
                    {
                    a3=(Token)match(input,KERMETA_LITERAL,FOLLOW_KERMETA_LITERAL_in_parse_org_kermeta_language_structure_Require469); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
                      			}
                      			if (a3 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("KERMETA_LITERAL");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.REQUIRE__URI), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 11));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 11));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 11));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 11));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 11));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_kermeta_language_structure_Require_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Require"


    // $ANTLR start "parse_org_kermeta_language_structure_Package"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4801:1: parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null] : ( (a0= IDENTIFIER ) ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )? | a10= 'package' (a11= IDENTIFIER ) ( (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )? );
    public final org.kermeta.language.structure.Package parse_org_kermeta_language_structure_Package() throws RecognitionException {
        org.kermeta.language.structure.Package element =  null;
        int parse_org_kermeta_language_structure_Package_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a14=null;
        Token a16=null;
        Token a17=null;
        Token a19=null;
        org.kermeta.language.structure.Package a2_0 = null;

        org.kermeta.language.structure.Package a4_0 = null;

        org.kermeta.language.structure.TypeDefinition a7_0 = null;

        org.kermeta.language.structure.TypeDefinition a9_0 = null;

        org.kermeta.language.structure.Package a13_0 = null;

        org.kermeta.language.structure.Package a15_0 = null;

        org.kermeta.language.structure.TypeDefinition a18_0 = null;

        org.kermeta.language.structure.TypeDefinition a20_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4804:1: ( (a0= IDENTIFIER ) ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )? | a10= 'package' (a11= IDENTIFIER ) ( (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )? )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==IDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==21) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4805:2: (a0= IDENTIFIER ) ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )?
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4805:2: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4806:3: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package509); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 12));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4851:2: ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==18) ) {
                            int LA6_2 = input.LA(2);

                            if ( (synpred11_Kermeta()) ) {
                                alt6=1;
                            }


                        }


                        switch (alt6) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4852:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4852:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4853:4: a1= '::' (a2_0= parse_org_kermeta_language_structure_Package )
                    	    {
                    	    a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package539); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      				if (element == null) {
                    	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      				}
                    	      				collectHiddenTokens(element);
                    	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                    	      			
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 13));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 13));
                    	      			
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4866:4: (a2_0= parse_org_kermeta_language_structure_Package )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4867:5: a2_0= parse_org_kermeta_language_structure_Package
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package565);
                    	    a2_0=parse_org_kermeta_language_structure_Package();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					if (a2_0 != null) {
                    	      						if (a2_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a2_0);
                    	      							completedElement(a2_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a2_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 14));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 14));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 15));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 15));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4921:2: ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )?
                    int alt11=2;
                    alt11 = dfa11.predict(input);
                    switch (alt11) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4922:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4922:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
                            int alt10=3;
                            alt10 = dfa10.predict(input);
                            switch (alt10) {
                                case 1 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4923:4: a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}'
                                    {
                                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package615); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 16));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4937:4: ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )*
                                    loop7:
                                    do {
                                        int alt7=2;
                                        int LA7_0 = input.LA(1);

                                        if ( (LA7_0==IDENTIFIER||LA7_0==21) ) {
                                            alt7=1;
                                        }


                                        switch (alt7) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4938:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4938:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4939:6: (a4_0= parse_org_kermeta_language_structure_Package )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4939:6: (a4_0= parse_org_kermeta_language_structure_Package )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4940:7: a4_0= parse_org_kermeta_language_structure_Package
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package656);
                                    	    a4_0=parse_org_kermeta_language_structure_Package();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a4_0 != null) {
                                    	      								if (a4_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a4_0);
                                    	      									completedElement(a4_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a4_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 17));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 17));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop7;
                                        }
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 18));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 18));
                                      			
                                    }
                                    a5=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Package717); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 19));
                                      			
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4998:8: a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}'
                                    {
                                    a6=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package745); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 20));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5018:4: ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt8=0;
                                    loop8:
                                    do {
                                        int alt8=2;
                                        int LA8_0 = input.LA(1);

                                        if ( ((LA8_0>=IDENTIFIER && LA8_0<=PRIMITIVE_TYPE)||(LA8_0>=22 && LA8_0<=24)||LA8_0==37||LA8_0==44||LA8_0==55) ) {
                                            alt8=1;
                                        }


                                        switch (alt8) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5021:7: a7_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package786);
                                    	    a7_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a7_0 != null) {
                                    	      								if (a7_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a7_0);
                                    	      									completedElement(a7_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a7_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 21));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 21));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt8 >= 1 ) break loop8;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(8, input);
                                                throw eee;
                                        }
                                        cnt8++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 22));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 22));
                                      			
                                    }
                                    a8=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Package847); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 23));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 23));
                                      			
                                    }

                                    }
                                    break;
                                case 3 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5093:8: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    {
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5093:8: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt9=0;
                                    loop9:
                                    do {
                                        int alt9=2;
                                        alt9 = dfa9.predict(input);
                                        switch (alt9) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5095:6: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5095:6: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5096:7: a9_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package896);
                                    	    a9_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a9_0 != null) {
                                    	      								if (a9_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a9_0);
                                    	      									completedElement(a9_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a9_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 24));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 24));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt9 >= 1 ) break loop9;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(9, input);
                                                throw eee;
                                        }
                                        cnt9++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 25));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 25));
                                      			
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 26));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5171:4: a10= 'package' (a11= IDENTIFIER ) ( (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )?
                    {
                    a10=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Package974); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 27));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5183:2: (a11= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5184:3: a11= IDENTIFIER
                    {
                    a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package992); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			if (a11 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 28));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 28));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5232:2: ( (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==18) ) {
                            int LA12_2 = input.LA(2);

                            if ( (synpred19_Kermeta()) ) {
                                alt12=1;
                            }


                        }


                        switch (alt12) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5233:3: (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5233:3: (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5234:4: a12= '::' (a13_0= parse_org_kermeta_language_structure_Package )
                    	    {
                    	    a12=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package1022); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      				if (element == null) {
                    	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      				}
                    	      				collectHiddenTokens(element);
                    	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                    	      			
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 29));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 29));
                    	      			
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5247:4: (a13_0= parse_org_kermeta_language_structure_Package )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5248:5: a13_0= parse_org_kermeta_language_structure_Package
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package1048);
                    	    a13_0=parse_org_kermeta_language_structure_Package();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					if (a13_0 != null) {
                    	      						if (a13_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a13_0);
                    	      							completedElement(a13_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a13_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 30));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 30));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 31));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 31));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5308:2: ( (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )?
                    int alt17=2;
                    alt17 = dfa17.predict(input);
                    switch (alt17) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5309:3: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5309:3: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
                            int alt16=3;
                            alt16 = dfa16.predict(input);
                            switch (alt16) {
                                case 1 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5310:4: a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}'
                                    {
                                    a14=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package1098); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 32));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 32));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 32));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5324:4: ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )*
                                    loop13:
                                    do {
                                        int alt13=2;
                                        int LA13_0 = input.LA(1);

                                        if ( (LA13_0==IDENTIFIER||LA13_0==21) ) {
                                            alt13=1;
                                        }


                                        switch (alt13) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:5: ( (a15_0= parse_org_kermeta_language_structure_Package ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:5: ( (a15_0= parse_org_kermeta_language_structure_Package ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5326:6: (a15_0= parse_org_kermeta_language_structure_Package )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5326:6: (a15_0= parse_org_kermeta_language_structure_Package )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5327:7: a15_0= parse_org_kermeta_language_structure_Package
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package1139);
                                    	    a15_0=parse_org_kermeta_language_structure_Package();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a15_0 != null) {
                                    	      								if (a15_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a15_0);
                                    	      									completedElement(a15_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a15_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 33));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 33));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 33));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop13;
                                        }
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 34));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 34));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 34));
                                      			
                                    }
                                    a16=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Package1200); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 35));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 35));
                                      			
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5385:8: a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}'
                                    {
                                    a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package1228); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 36));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 36));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5405:4: ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt14=0;
                                    loop14:
                                    do {
                                        int alt14=2;
                                        int LA14_0 = input.LA(1);

                                        if ( ((LA14_0>=IDENTIFIER && LA14_0<=PRIMITIVE_TYPE)||(LA14_0>=22 && LA14_0<=24)||LA14_0==37||LA14_0==44||LA14_0==55) ) {
                                            alt14=1;
                                        }


                                        switch (alt14) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5406:5: ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5406:5: ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5407:6: (a18_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5407:6: (a18_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5408:7: a18_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1269);
                                    	    a18_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a18_0 != null) {
                                    	      								if (a18_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a18_0);
                                    	      									completedElement(a18_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a18_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 37));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 37));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt14 >= 1 ) break loop14;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(14, input);
                                                throw eee;
                                        }
                                        cnt14++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 38));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 38));
                                      			
                                    }
                                    a19=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Package1330); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 39));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 39));
                                      			
                                    }

                                    }
                                    break;
                                case 3 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5480:8: ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    {
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5480:8: ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt15=0;
                                    loop15:
                                    do {
                                        int alt15=2;
                                        alt15 = dfa15.predict(input);
                                        switch (alt15) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5482:6: (a20_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5482:6: (a20_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5483:7: a20_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1379);
                                    	    a20_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a20_0 != null) {
                                    	      								if (a20_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a20_0);
                                    	      									completedElement(a20_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a20_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 40));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 40));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt15 >= 1 ) break loop15;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(15, input);
                                                throw eee;
                                        }
                                        cnt15++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 41));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 41));
                                      			
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 42));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 42));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_kermeta_language_structure_Package_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Package"


    // $ANTLR start "parse_org_kermeta_language_structure_ClassDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5559:1: parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null] : ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' ;
    public final org.kermeta.language.structure.ClassDefinition parse_org_kermeta_language_structure_ClassDefinition() throws RecognitionException {
        org.kermeta.language.structure.ClassDefinition element =  null;
        int parse_org_kermeta_language_structure_ClassDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a12=null;
        org.kermeta.language.structure.Constraint a9_0 = null;

        org.kermeta.language.structure.Property a10_0 = null;

        org.kermeta.language.structure.Operation a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5562:1: ( ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5563:2: ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5563:2: ( (a0= 'aspect' ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==22) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5564:3: (a0= 'aspect' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5564:3: (a0= 'aspect' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5565:4: a0= 'aspect'
                    {
                    a0=(Token)match(input,22,FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1477); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 43));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 43));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 44));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 44));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5586:2: ( (a1= 'abstract' ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==23) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5587:3: (a1= 'abstract' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5587:3: (a1= 'abstract' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5588:4: a1= 'abstract'
                    {
                    a1=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1519); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 45));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 46));
              	
            }
            a2=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1552); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 47));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5619:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5620:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1570); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 48));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 48));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5653:2: ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==25) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5654:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5654:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5655:4: a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    {
                    a4=(Token)match(input,25,FOLLOW_25_in_parse_org_kermeta_language_structure_ClassDefinition1600); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 49));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5667:4: (a5= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5668:5: a5= IDENTIFIER
                    {
                    a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1626); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      					}
                      					if (a5 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 50));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 50));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5705:4: ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==26) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5706:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5706:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5707:6: a6= ',' (a7= IDENTIFIER )
                    	    {
                    	    a6=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_ClassDefinition1672); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 51));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5719:6: (a7= IDENTIFIER )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5720:7: a7= IDENTIFIER
                    	    {
                    	    a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1706); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      							}
                    	      							if (a7 != null) {
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	      								tokenResolver.setOptions(getOptions());
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                    	      								java.lang.Object resolvedObject = result.getResolvedToken();
                    	      								if (resolvedObject == null) {
                    	      									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                    	      								}
                    	      								String resolved = (String) resolvedObject;
                    	      								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	      								collectHiddenTokens(element);
                    	      								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                    	      								if (proxy != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                    	      									completedElement(proxy);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                    	      							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 52));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 52));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 53));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 53));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 54));
              	
            }
            a8=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ClassDefinition1787); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 55));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5789:2: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==IDENTIFIER) ) {
                    int LA23_2 = input.LA(2);

                    if ( (LA23_2==IDENTIFIER) ) {
                        int LA23_3 = input.LA(3);

                        if ( (synpred30_Kermeta()) ) {
                            alt23=1;
                        }


                    }


                }


                switch (alt23) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5790:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5790:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5791:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5791:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5792:5: a9_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1816);
            	    a9_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a9_0 != null) {
            	      						if (a9_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
            	      							completedElement(a9_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a9_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 56));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 56));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 56));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 56));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 56));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 56));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 57));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 57));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 57));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 57));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 57));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 57));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5830:2: ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0>=27 && LA24_0<=28)||LA24_0==30) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5831:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5831:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5832:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5832:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5833:5: a10_0= parse_org_kermeta_language_structure_Property
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1872);
            	    a10_0=parse_org_kermeta_language_structure_Property();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a10_0 != null) {
            	      						if (a10_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
            	      							completedElement(a10_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a10_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 58));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 58));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 58));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 58));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 58));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 58));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 59));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 59));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 59));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 59));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 59));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 59));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5871:2: ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==IDENTIFIER||LA25_0==33) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5872:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5872:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5873:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5873:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5874:5: a11_0= parse_org_kermeta_language_structure_Operation
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1928);
            	    a11_0=parse_org_kermeta_language_structure_Operation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a11_0 != null) {
            	      						if (a11_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
            	      							completedElement(a11_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a11_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 60));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 60));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 60));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 61));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 61));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 61));
              	
            }
            a12=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1969); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 62));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 62));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_kermeta_language_structure_ClassDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ClassDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Property"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5929:1: parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null] : ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? );
    public final org.kermeta.language.structure.Property parse_org_kermeta_language_structure_Property() throws RecognitionException {
        org.kermeta.language.structure.Property element =  null;
        int parse_org_kermeta_language_structure_Property_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        org.kermeta.language.behavior.Expression a10_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5932:1: ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=27 && LA31_0<=28)) ) {
                alt31=1;
            }
            else if ( (LA31_0==30) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5933:2: (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5933:2: (a0= 'attribute' | a1= 'reference' )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==27) ) {
                        alt26=1;
                    }
                    else if ( (LA26_0==28) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }
                    switch (alt26) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5934:3: a0= 'attribute'
                            {
                            a0=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property2002); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 63));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5947:6: a1= 'reference'
                            {
                            a1=(Token)match(input,28,FOLLOW_28_in_parse_org_kermeta_language_structure_Property2025); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 64));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 65));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5965:2: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5966:3: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2053); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a2 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 66));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 66));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 66));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 66));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 66));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 66));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 66));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6004:2: ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==29) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6005:3: (a3= ':' (a4= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6005:3: (a3= ':' (a4= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6006:4: a3= ':' (a4= IDENTIFIER )
                            {
                            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property2083); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 67));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6018:4: (a4= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6019:5: a4= IDENTIFIER
                            {
                            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2109); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a4 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 68));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 69));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 69));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 69));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 69));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 69));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 69));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6073:4: a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    {
                    a5=(Token)match(input,30,FOLLOW_30_in_parse_org_kermeta_language_structure_Property2159); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 70));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6085:2: (a6= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6086:3: a6= IDENTIFIER
                    {
                    a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2177); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a6 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 71));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 71));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6126:2: ( (a7= ':' (a8= IDENTIFIER ) ) )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==29) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6127:3: (a7= ':' (a8= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6127:3: (a7= ':' (a8= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6128:4: a7= ':' (a8= IDENTIFIER )
                            {
                            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property2207); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 72));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6140:4: (a8= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6141:5: a8= IDENTIFIER
                            {
                            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2233); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a8 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 73));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 73));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 74));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 74));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6198:2: ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==31) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6199:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6199:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6200:4: a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a9=(Token)match(input,31,FOLLOW_31_in_parse_org_kermeta_language_structure_Property2288); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 75));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 75));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6231:4: (a10_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6232:5: a10_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2314);
                            a10_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a10_0 != null) {
                              						if (a10_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a10_0);
                              							completedElement(a10_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a10_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 76));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 76));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 76));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 76));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 76));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 76));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 76));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 77));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 77));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 77));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 77));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 77));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 77));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 77));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6272:2: ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==32) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6273:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6273:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6274:4: a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a11=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_structure_Property2364); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 78));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 78));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6305:4: (a12_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6306:5: a12_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2390);
                            a12_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a12_0 != null) {
                              						if (a12_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a12_0);
                              							completedElement(a12_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a12_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 79));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 79));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 79));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 79));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 79));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 79));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 80));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 80));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 80));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 80));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 80));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 80));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_kermeta_language_structure_Property_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Property"


    // $ANTLR start "parse_org_kermeta_language_structure_Operation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6346:1: parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null] : ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) ;
    public final org.kermeta.language.structure.Operation parse_org_kermeta_language_structure_Operation() throws RecognitionException {
        org.kermeta.language.structure.Operation element =  null;
        int parse_org_kermeta_language_structure_Operation_StartIndex = input.index();
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        org.kermeta.language.structure.Constraint a0_0 = null;

        org.kermeta.language.structure.Constraint a1_0 = null;

        org.kermeta.language.structure.Parameter a5_0 = null;

        org.kermeta.language.structure.Parameter a9_0 = null;

        org.kermeta.language.behavior.Block a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6349:1: ( ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6350:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6350:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==IDENTIFIER) ) {
                    int LA32_1 = input.LA(2);

                    if ( (LA32_1==IDENTIFIER) ) {
                        int LA32_3 = input.LA(3);

                        if ( (synpred39_Kermeta()) ) {
                            alt32=1;
                        }


                    }


                }


                switch (alt32) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6351:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6351:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6352:4: a0_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2455);
            	    a0_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a0_0 != null) {
            	      					if (a0_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
            	      						completedElement(a0_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a0_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 81));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 81));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6375:2: ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==IDENTIFIER) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6376:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6376:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6377:4: a1_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2490);
            	    a1_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a1_0 != null) {
            	      					if (a1_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
            	      						completedElement(a1_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a1_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 82));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 82));
              	
            }
            a2=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2516); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 83));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6412:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6413:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2534); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 84));
              	
            }
            a4=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2555); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 85));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 85));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6458:2: ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==IDENTIFIER) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6459:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6459:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6460:4: (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6460:4: (a5_0= parse_org_kermeta_language_structure_Parameter )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6461:5: a5_0= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2584);
                    a5_0=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 86));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 86));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 86));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6484:4: ( (a6= ':' (a7= IDENTIFIER ) ) )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==29) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6485:5: (a6= ':' (a7= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6485:5: (a6= ':' (a7= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6486:6: a6= ':' (a7= IDENTIFIER )
                            {
                            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2625); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 87));
                              					
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6498:6: (a7= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6499:7: a7= IDENTIFIER
                            {
                            a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2659); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              							if (terminateParsing) {
                              								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              							}
                              							if (element == null) {
                              								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              							}
                              							if (a7 != null) {
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              								tokenResolver.setOptions(getOptions());
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                              								java.lang.Object resolvedObject = result.getResolvedToken();
                              								if (resolvedObject == null) {
                              									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                              								}
                              								String resolved = (String) resolvedObject;
                              								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              								collectHiddenTokens(element);
                              								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                              								if (proxy != null) {
                              									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                              									completedElement(proxy);
                              								}
                              								collectHiddenTokens(element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                              							}
                              						
                            }

                            }

                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 88));
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 88));
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 89));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 89));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6544:4: ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==26) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6545:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6545:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6546:6: a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    {
                    	    a8=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_Operation2740); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 90));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6558:6: (a9_0= parse_org_kermeta_language_structure_Parameter )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6559:7: a9_0= parse_org_kermeta_language_structure_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2774);
                    	    a9_0=parse_org_kermeta_language_structure_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      							}
                    	      							if (a9_0 != null) {
                    	      								if (a9_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
                    	      									completedElement(a9_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a9_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 91));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 91));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 91));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6582:6: ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    int alt35=2;
                    	    int LA35_0 = input.LA(1);

                    	    if ( (LA35_0==29) ) {
                    	        alt35=1;
                    	    }
                    	    switch (alt35) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6583:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            {
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6583:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6584:8: a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2829); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              								if (element == null) {
                    	              									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              								}
                    	              								collectHiddenTokens(element);
                    	              								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 92));
                    	              							
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6596:8: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6597:9: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2871); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              									if (terminateParsing) {
                    	              										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              									}
                    	              									if (element == null) {
                    	              										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              									}
                    	              									if (a11 != null) {
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              										tokenResolver.setOptions(getOptions());
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                    	              										java.lang.Object resolvedObject = result.getResolvedToken();
                    	              										if (resolvedObject == null) {
                    	              											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              										}
                    	              										String resolved = (String) resolvedObject;
                    	              										org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              										collectHiddenTokens(element);
                    	              										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                    	              										if (proxy != null) {
                    	              											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                    	              											completedElement(proxy);
                    	              										}
                    	              										collectHiddenTokens(element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
                    	              									}
                    	              								
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 93));
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 93));
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 94));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 94));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 95));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 95));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 96));
              	
            }
            a12=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_structure_Operation2997); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 97));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 97));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6670:2: ( (a13= ':' (a14= IDENTIFIER ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==29) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6671:3: (a13= ':' (a14= IDENTIFIER ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6671:3: (a13= ':' (a14= IDENTIFIER ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6672:4: a13= ':' (a14= IDENTIFIER )
                    {
                    a13=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Operation3020); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 98));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6684:4: (a14= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6685:5: a14= IDENTIFIER
                    {
                    a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation3046); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a14 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 99));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 100));
              	
            }
            a15=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Operation3092); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 101));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6741:2: ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==71) ) {
                alt39=1;
            }
            else if ( (LA39_0==23) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6742:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6742:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6743:4: a16_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation3115);
                    a16_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				if (a16_0 != null) {
                      					if (a16_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
                      						completedElement(a16_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a16_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 102));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 102));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 102));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6767:6: a17= 'abstract'
                    {
                    a17=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_Operation3144); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 103));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 103));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 103));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 104));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 104));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 104));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_kermeta_language_structure_Operation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Operation"


    // $ANTLR start "parse_org_kermeta_language_structure_Parameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6791:1: parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null] : (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Parameter parse_org_kermeta_language_structure_Parameter() throws RecognitionException {
        org.kermeta.language.structure.Parameter element =  null;
        int parse_org_kermeta_language_structure_Parameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6794:1: ( (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6795:2: (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6795:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6796:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter3187); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 105));
              	
            }
            a1=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Parameter3208); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 106));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6840:2: (a2= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6841:3: a2= IDENTIFIER
            {
            a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter3226); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a2 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 107));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_kermeta_language_structure_Parameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Parameter"


    // $ANTLR start "parse_org_kermeta_language_structure_Class"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6881:1: parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Class parse_org_kermeta_language_structure_Class() throws RecognitionException {
        org.kermeta.language.structure.Class element =  null;
        int parse_org_kermeta_language_structure_Class_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6884:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6885:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6885:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6886:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class3266); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 108));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_kermeta_language_structure_Class_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Class"


    // $ANTLR start "parse_org_kermeta_language_structure_Enumeration"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6987:1: parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null] : a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' ;
    public final org.kermeta.language.structure.Enumeration parse_org_kermeta_language_structure_Enumeration() throws RecognitionException {
        org.kermeta.language.structure.Enumeration element =  null;
        int parse_org_kermeta_language_structure_Enumeration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        org.kermeta.language.structure.EnumerationLiteral a3_0 = null;

        org.kermeta.language.structure.EnumerationLiteral a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6990:1: (a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6991:2: a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_structure_Enumeration3302); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 109));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7003:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7004:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration3320); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 110));
              	
            }
            a2=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Enumeration3341); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 111));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7048:2: ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7049:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7049:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7050:4: a3_0= parse_org_kermeta_language_structure_EnumerationLiteral
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3364);
            a3_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              				if (terminateParsing) {
              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              				}
              				if (element == null) {
              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              				}
              				if (a3_0 != null) {
              					if (a3_0 != null) {
              						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
              						completedElement(a3_0);
              					}
              					collectHiddenTokens(element);
              					copyLocalizationInfos(a3_0, element); 				}
              			
            }

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 112));
              		
            }
            a4=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Enumeration3387); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			collectHiddenTokens(element);
              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              		
            }
            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 113));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 113));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7084:3: ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==IDENTIFIER) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7085:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7085:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7086:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';'
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7086:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7087:6: a5_0= parse_org_kermeta_language_structure_EnumerationLiteral
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3422);
            	    a5_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      						if (terminateParsing) {
            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      						}
            	      						if (element == null) {
            	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      						}
            	      						if (a5_0 != null) {
            	      							if (a5_0 != null) {
            	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
            	      								completedElement(a5_0);
            	      							}
            	      							collectHiddenTokens(element);
            	      							copyLocalizationInfos(a5_0, element); 						}
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 114));
            	      				
            	    }
            	    a6=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Enumeration3455); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 115));
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 115));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 116));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 116));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 117));
              	
            }
            a7=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Enumeration3503); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 118));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 118));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_kermeta_language_structure_Enumeration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Enumeration"


    // $ANTLR start "parse_org_kermeta_language_structure_EnumerationLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7222:1: parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.EnumerationLiteral parse_org_kermeta_language_structure_EnumerationLiteral() throws RecognitionException {
        org.kermeta.language.structure.EnumerationLiteral element =  null;
        int parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7225:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7226:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7226:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7227:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3536); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 119));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_EnumerationLiteral"


    // $ANTLR start "parse_org_kermeta_language_structure_Constraint"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7261:1: parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null] : (a0= IDENTIFIER ) (a1= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Constraint parse_org_kermeta_language_structure_Constraint() throws RecognitionException {
        org.kermeta.language.structure.Constraint element =  null;
        int parse_org_kermeta_language_structure_Constraint_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7264:1: ( (a0= IDENTIFIER ) (a1= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7265:2: (a0= IDENTIFIER ) (a1= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7265:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7266:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3576); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 120));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7298:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7299:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3601); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 121));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_kermeta_language_structure_Constraint_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Constraint"


    // $ANTLR start "parse_org_kermeta_language_structure_PrimitiveType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7338:1: parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null] : (a0= PRIMITIVE_TYPE ) ;
    public final org.kermeta.language.structure.PrimitiveType parse_org_kermeta_language_structure_PrimitiveType() throws RecognitionException {
        org.kermeta.language.structure.PrimitiveType element =  null;
        int parse_org_kermeta_language_structure_PrimitiveType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7341:1: ( (a0= PRIMITIVE_TYPE ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7342:2: (a0= PRIMITIVE_TYPE )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7342:2: (a0= PRIMITIVE_TYPE )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7343:3: a0= PRIMITIVE_TYPE
            {
            a0=(Token)match(input,PRIMITIVE_TYPE,FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3641); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("PRIMITIVE_TYPE");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 122));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 122));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_kermeta_language_structure_PrimitiveType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_PrimitiveType"


    // $ANTLR start "parse_org_kermeta_language_structure_UnresolvedType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7450:1: parse_org_kermeta_language_structure_UnresolvedType returns [org.kermeta.language.structure.UnresolvedType element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.UnresolvedType parse_org_kermeta_language_structure_UnresolvedType() throws RecognitionException {
        org.kermeta.language.structure.UnresolvedType element =  null;
        int parse_org_kermeta_language_structure_UnresolvedType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7453:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7454:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7454:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7455:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3681); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUnresolvedType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 123));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 123));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_kermeta_language_structure_UnresolvedType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_UnresolvedType"


    // $ANTLR start "parse_org_kermeta_language_structure_VoidType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7552:1: parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null] : a0= 'Void' ;
    public final org.kermeta.language.structure.VoidType parse_org_kermeta_language_structure_VoidType() throws RecognitionException {
        org.kermeta.language.structure.VoidType element =  null;
        int parse_org_kermeta_language_structure_VoidType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7555:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7556:2: a0= 'Void'
            {
            a0=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_VoidType3717); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 124));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 124));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_kermeta_language_structure_VoidType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VoidType"


    // $ANTLR start "parse_org_kermeta_language_structure_Object"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7633:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );
    public final org.kermeta.language.structure.Object parse_org_kermeta_language_structure_Object() throws RecognitionException {
        org.kermeta.language.structure.Object element =  null;
        int parse_org_kermeta_language_structure_Object_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Using c1 = null;

        org.kermeta.language.structure.Require c2 = null;

        org.kermeta.language.structure.Package c3 = null;

        org.kermeta.language.structure.ClassDefinition c4 = null;

        org.kermeta.language.structure.Property c5 = null;

        org.kermeta.language.structure.Operation c6 = null;

        org.kermeta.language.structure.Parameter c7 = null;

        org.kermeta.language.structure.Class c8 = null;

        org.kermeta.language.structure.Enumeration c9 = null;

        org.kermeta.language.structure.EnumerationLiteral c10 = null;

        org.kermeta.language.structure.Constraint c11 = null;

        org.kermeta.language.structure.PrimitiveType c12 = null;

        org.kermeta.language.structure.UnresolvedType c13 = null;

        org.kermeta.language.structure.VoidType c14 = null;

        org.kermeta.language.structure.Model c15 = null;

        org.kermeta.language.structure.ModelType c16 = null;

        org.kermeta.language.structure.TypeVariableBinding c17 = null;

        org.kermeta.language.structure.MultiplicityElement c18 = null;

        org.kermeta.language.structure.TypeDefinition c19 = null;

        org.kermeta.language.structure.Tag c20 = null;

        org.kermeta.language.structure.ObjectTypeVariable c21 = null;

        org.kermeta.language.structure.ModelTypeVariable c22 = null;

        org.kermeta.language.structure.VirtualType c23 = null;

        org.kermeta.language.structure.ProductType c24 = null;

        org.kermeta.language.structure.FunctionType c25 = null;

        org.kermeta.language.behavior.Block c26 = null;

        org.kermeta.language.behavior.Rescue c27 = null;

        org.kermeta.language.behavior.TypeReference c28 = null;

        org.kermeta.language.behavior.Raise c29 = null;

        org.kermeta.language.behavior.BooleanLiteral c30 = null;

        org.kermeta.language.behavior.IntegerLiteral c31 = null;

        org.kermeta.language.behavior.StringLiteral c32 = null;

        org.kermeta.language.behavior.Conditional c33 = null;

        org.kermeta.language.behavior.Loop c34 = null;

        org.kermeta.language.behavior.VariableDecl c35 = null;

        org.kermeta.language.behavior.TypeLiteral c36 = null;

        org.kermeta.language.behavior.CallResult c37 = null;

        org.kermeta.language.behavior.CallSuperOperation c38 = null;

        org.kermeta.language.behavior.Assignment c39 = null;

        org.kermeta.language.behavior.CallVariable c40 = null;

        org.kermeta.language.behavior.SelfExpression c41 = null;

        org.kermeta.language.behavior.CallFeature c42 = null;

        org.kermeta.language.behavior.JavaStaticCall c43 = null;

        org.kermeta.language.behavior.VoidLiteral c44 = null;

        org.kermeta.language.behavior.CallValue c45 = null;

        org.kermeta.language.behavior.EmptyExpression c46 = null;

        org.kermeta.language.behavior.LambdaExpression c47 = null;

        org.kermeta.language.behavior.LambdaParameter c48 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7636:1: (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter )
            int alt43=50;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7637:2: a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
                    {
                    a0=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Object3746); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 125));
                      	
                    }
                    a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Object3760); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 126));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 126));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 126));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7663:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( ((LA42_0>=41 && LA42_0<=42)) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7664:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7664:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    int alt41=2;
                    	    int LA41_0 = input.LA(1);

                    	    if ( (LA41_0==41) ) {
                    	        alt41=1;
                    	    }
                    	    else if ( (LA41_0==42) ) {
                    	        alt41=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 41, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt41) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7665:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_Object3783); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 127));
                    	              			
                    	            }
                    	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Object3803); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 128));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7689:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7690:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3829); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 129));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 129));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 129));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7729:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_Object3870); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 130));
                    	              			
                    	            }
                    	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Object3890); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 131));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7753:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7754:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3916);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 132));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 132));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 132));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop42;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 133));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 133));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 133));
                      	
                    }
                    a8=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Object3957); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7799:2: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3976);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7800:4: c1= parse_org_kermeta_language_structure_Using
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3986);
                    c1=parse_org_kermeta_language_structure_Using();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7801:4: c2= parse_org_kermeta_language_structure_Require
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3996);
                    c2=parse_org_kermeta_language_structure_Require();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7802:4: c3= parse_org_kermeta_language_structure_Package
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object4006);
                    c3=parse_org_kermeta_language_structure_Package();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7803:4: c4= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object4016);
                    c4=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7804:4: c5= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object4026);
                    c5=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7805:4: c6= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object4036);
                    c6=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7806:4: c7= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object4046);
                    c7=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7807:4: c8= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object4056);
                    c8=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7808:4: c9= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object4066);
                    c9=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7809:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object4076);
                    c10=parse_org_kermeta_language_structure_EnumerationLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7810:4: c11= parse_org_kermeta_language_structure_Constraint
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object4086);
                    c11=parse_org_kermeta_language_structure_Constraint();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7811:4: c12= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object4096);
                    c12=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7812:4: c13= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object4106);
                    c13=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7813:4: c14= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object4116);
                    c14=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7814:4: c15= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object4126);
                    c15=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7815:4: c16= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object4136);
                    c16=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7816:4: c17= parse_org_kermeta_language_structure_TypeVariableBinding
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object4146);
                    c17=parse_org_kermeta_language_structure_TypeVariableBinding();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7817:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object4156);
                    c18=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 21 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7818:4: c19= parse_org_kermeta_language_structure_TypeDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object4166);
                    c19=parse_org_kermeta_language_structure_TypeDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 22 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7819:4: c20= parse_org_kermeta_language_structure_Tag
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object4176);
                    c20=parse_org_kermeta_language_structure_Tag();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c20; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 23 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7820:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object4186);
                    c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c21; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 24 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7821:4: c22= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object4196);
                    c22=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c22; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 25 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7822:4: c23= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object4206);
                    c23=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c23; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 26 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7823:4: c24= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object4216);
                    c24=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c24; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 27 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7824:4: c25= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object4226);
                    c25=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c25; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 28 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7825:4: c26= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object4236);
                    c26=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c26; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 29 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7826:4: c27= parse_org_kermeta_language_behavior_Rescue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object4246);
                    c27=parse_org_kermeta_language_behavior_Rescue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c27; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 30 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7827:4: c28= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object4256);
                    c28=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c28; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 31 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7828:4: c29= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object4266);
                    c29=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c29; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 32 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7829:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object4276);
                    c30=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c30; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 33 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7830:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object4286);
                    c31=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c31; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 34 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7831:4: c32= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object4296);
                    c32=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c32; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 35 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7832:4: c33= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object4306);
                    c33=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c33; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 36 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7833:4: c34= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object4316);
                    c34=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c34; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 37 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7834:4: c35= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object4326);
                    c35=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c35; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 38 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7835:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object4336);
                    c36=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c36; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 39 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7836:4: c37= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object4346);
                    c37=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c37; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 40 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7837:4: c38= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object4356);
                    c38=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c38; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 41 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7838:4: c39= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object4366);
                    c39=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c39; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 42 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7839:4: c40= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object4376);
                    c40=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c40; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 43 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7840:4: c41= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object4386);
                    c41=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c41; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 44 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7841:4: c42= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object4396);
                    c42=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c42; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 45 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7842:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object4406);
                    c43=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c43; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 46 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7843:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object4416);
                    c44=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c44; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 47 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7844:4: c45= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object4426);
                    c45=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c45; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 48 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7845:4: c46= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object4436);
                    c46=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c46; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 49 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7846:4: c47= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object4446);
                    c47=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c47; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 50 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7847:4: c48= parse_org_kermeta_language_behavior_LambdaParameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object4456);
                    c48=parse_org_kermeta_language_behavior_LambdaParameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c48; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_kermeta_language_structure_Object_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Object"


    // $ANTLR start "parse_org_kermeta_language_structure_Model"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7851:1: parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null] : a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' ;
    public final org.kermeta.language.structure.Model parse_org_kermeta_language_structure_Model() throws RecognitionException {
        org.kermeta.language.structure.Model element =  null;
        int parse_org_kermeta_language_structure_Model_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7854:1: (a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7855:2: a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_Model4481); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 135));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Model4495); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 136));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 136));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 136));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7881:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=41 && LA45_0<=42)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7882:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7882:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    int alt44=2;
            	    int LA44_0 = input.LA(1);

            	    if ( (LA44_0==41) ) {
            	        alt44=1;
            	    }
            	    else if ( (LA44_0==42) ) {
            	        alt44=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt44) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7883:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_Model4518); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 137));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Model4538); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 138));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7907:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7908:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4564); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 139));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 139));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 139));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7947:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_Model4605); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 140));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Model4625); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 141));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7971:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7972:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4651);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 142));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 142));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 142));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 143));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 143));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 143));
              	
            }
            a8=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Model4692); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_kermeta_language_structure_Model_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Model"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8017:1: parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null] : ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' ;
    public final org.kermeta.language.structure.ModelType parse_org_kermeta_language_structure_ModelType() throws RecognitionException {
        org.kermeta.language.structure.ModelType element =  null;
        int parse_org_kermeta_language_structure_ModelType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        org.kermeta.language.structure.Tag a8_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8020:1: ( ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8021:2: ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8021:2: ( (a0= IDENTIFIER ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==IDENTIFIER) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8022:3: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8022:3: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8023:4: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4730); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
                      				}
                      				if (a0 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 145));
              	
            }
            a1=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4760); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 146));
              	
            }
            a2=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ModelType4774); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 147));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 147));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8085:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( ((LA48_0>=41 && LA48_0<=42)||(LA48_0>=45 && LA48_0<=47)) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8086:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8086:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    int alt47=5;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt47=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt47=2;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt47=3;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt47=4;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt47=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 47, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt47) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8087:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
            	            {
            	            a3=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_ModelType4797); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 148));
            	              			
            	            }
            	            a4=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4817); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 149));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8111:4: (a5= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8112:5: a5= IDENTIFIER
            	            {
            	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4843); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a5 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 150));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 150));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 150));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 150));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 150));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 150));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8154:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a6=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4884); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 151));
            	              			
            	            }
            	            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4904); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 152));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8178:4: (a8_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8179:5: a8_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4930);
            	            a8_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 153));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 153));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8206:8: a9= 'typeContainer' a10= ':' (a11= IDENTIFIER )
            	            {
            	            a9=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4966); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 154));
            	              			
            	            }
            	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4986); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 155));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8230:4: (a11= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8231:5: a11= IDENTIFIER
            	            {
            	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType5012); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a11 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 156));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 156));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8273:8: a12= 'name' a13= ':' (a14= IDENTIFIER )
            	            {
            	            a12=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_ModelType5053); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 157));
            	              			
            	            }
            	            a13=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType5073); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 158));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8297:4: (a14= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8298:5: a14= IDENTIFIER
            	            {
            	            a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType5099); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a14 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 159));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8336:8: a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER )
            	            {
            	            a15=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ModelType5140); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 160));
            	              			
            	            }
            	            a16=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType5160); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 161));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8360:4: (a17= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8361:5: a17= IDENTIFIER
            	            {
            	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType5186); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a17 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 162));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 163));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 163));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 163));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 163));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 163));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 163));
              	
            }
            a18=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ModelType5232); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 164));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 164));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_kermeta_language_structure_ModelType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelType"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeVariableBinding"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8501:1: parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null] : a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.TypeVariableBinding parse_org_kermeta_language_structure_TypeVariableBinding() throws RecognitionException {
        org.kermeta.language.structure.TypeVariableBinding element =  null;
        int parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8504:1: (a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8505:2: a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5261); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 165));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_TypeVariableBinding5275); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 166));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 166));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8534:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( ((LA50_0>=41 && LA50_0<=42)||(LA50_0>=49 && LA50_0<=51)) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8535:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8535:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt49=5;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt49=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt49=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt49=3;
            	        }
            	        break;
            	    case 50:
            	        {
            	        alt49=4;
            	        }
            	        break;
            	    case 51:
            	        {
            	        alt49=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 49, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt49) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8536:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_TypeVariableBinding5298); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 167));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5318); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 168));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8560:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8561:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5344); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 169));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 169));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 169));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 169));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 169));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 169));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8603:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_TypeVariableBinding5385); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 170));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5405); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 171));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8627:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8628:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding5431);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 172));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 172));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 172));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 172));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 172));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 172));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8655:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5467); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 173));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5487); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 174));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8690:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8691:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5513);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 175));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 175));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 175));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 175));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 175));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 175));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8718:8: a11= 'variable' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,50,FOLLOW_50_in_parse_org_kermeta_language_structure_TypeVariableBinding5549); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 176));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5569); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 177));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8742:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8743:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5595); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ObjectTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 178));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 178));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 178));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 178));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 178));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 178));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8785:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_TypeVariableBinding5636); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 179));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5656); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 180));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8809:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8810:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5682); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 181));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 181));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 181));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 181));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 181));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 181));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 182));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 182));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 182));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 182));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 182));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 182));
              	
            }
            a17=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_TypeVariableBinding5728); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 183));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 183));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeVariableBinding"


    // $ANTLR start "parse_org_kermeta_language_structure_MultiplicityElement"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8886:1: parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null] : ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference );
    public final org.kermeta.language.structure.MultiplicityElement parse_org_kermeta_language_structure_MultiplicityElement() throws RecognitionException {
        org.kermeta.language.structure.MultiplicityElement element =  null;
        int parse_org_kermeta_language_structure_MultiplicityElement_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        org.kermeta.language.structure.Tag a9_0 = null;

        org.kermeta.language.structure.Type a12_0 = null;

        org.kermeta.language.structure.Property c0 = null;

        org.kermeta.language.structure.Operation c1 = null;

        org.kermeta.language.structure.Parameter c2 = null;

        org.kermeta.language.behavior.TypeReference c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8889:1: ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference )
            int alt55=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                switch ( input.LA(2) ) {
                case IDENTIFIER:
                    {
                    int LA55_5 = input.LA(3);

                    if ( (LA55_5==IDENTIFIER||LA55_5==33) ) {
                        alt55=3;
                    }
                    else if ( (LA55_5==52) ) {
                        alt55=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 52:
                    {
                    alt55=1;
                    }
                    break;
                case EOF:
                    {
                    alt55=5;
                    }
                    break;
                case 29:
                    {
                    alt55=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;
                }

                }
                break;
            case 52:
                {
                alt55=1;
                }
                break;
            case 27:
            case 28:
            case 30:
                {
                alt55=2;
                }
                break;
            case 33:
                {
                alt55=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8890:2: ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8890:2: ( (a0= IDENTIFIER ) )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==IDENTIFIER) ) {
                        int LA51_1 = input.LA(2);

                        if ( (synpred112_Kermeta()) ) {
                            alt51=1;
                        }
                    }
                    switch (alt51) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8891:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8891:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8892:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5766); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 184));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 184));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8926:2: ( (a1= IDENTIFIER ) )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==IDENTIFIER) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8927:3: (a1= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8927:3: (a1= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8928:4: a1= IDENTIFIER
                            {
                            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5805); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a1 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 185));
                      	
                    }
                    a2=(Token)match(input,52,FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement5835); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 186));
                      	
                    }
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_MultiplicityElement5849); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 187));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 187));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8992:2: ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( ((LA54_0>=41 && LA54_0<=42)||LA54_0==46||LA54_0==49||LA54_0==51||(LA54_0>=53 && LA54_0<=54)) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8993:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8993:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    int alt53=7;
                    	    switch ( input.LA(1) ) {
                    	    case 41:
                    	        {
                    	        alt53=1;
                    	        }
                    	        break;
                    	    case 42:
                    	        {
                    	        alt53=2;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt53=3;
                    	        }
                    	        break;
                    	    case 46:
                    	        {
                    	        alt53=4;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt53=5;
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        alt53=6;
                    	        }
                    	        break;
                    	    case 54:
                    	        {
                    	        alt53=7;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 53, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt53) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8994:4: a4= 'tag' a5= ':' (a6= IDENTIFIER )
                    	            {
                    	            a4=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_MultiplicityElement5872); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 188));
                    	              			
                    	            }
                    	            a5=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5892); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 189));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9018:4: (a6= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9019:5: a6= IDENTIFIER
                    	            {
                    	            a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5918); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a6 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 190));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9063:8: a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a7=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_MultiplicityElement5959); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 191));
                    	              			
                    	            }
                    	            a8=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5979); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 192));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9087:4: (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9088:5: a9_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement6005);
                    	            a9_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a9_0 != null) {
                    	              						if (a9_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
                    	              							completedElement(a9_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a9_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 193));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9117:8: a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a10=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement6041); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 194));
                    	              			
                    	            }
                    	            a11=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6061); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 195));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9152:4: (a12_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9153:5: a12_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement6087);
                    	            a12_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a12_0 != null) {
                    	              						if (a12_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
                    	              							completedElement(a12_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a12_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 196));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 196));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9182:8: a13= 'name' a14= ':' (a15= IDENTIFIER )
                    	            {
                    	            a13=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_MultiplicityElement6123); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 197));
                    	              			
                    	            }
                    	            a14=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6143); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 198));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9206:4: (a15= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9207:5: a15= IDENTIFIER
                    	            {
                    	            a15=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement6169); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a15 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 199));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 199));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9247:8: a16= 'type' a17= ':' (a18= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement6210); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 200));
                    	              			
                    	            }
                    	            a17=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6230); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 201));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9271:4: (a18= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9272:5: a18= IDENTIFIER
                    	            {
                    	            a18=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement6256); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a18 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 202));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 202));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9316:8: a19= 'lower' a20= ':' (a21= INTEGER )
                    	            {
                    	            a19=(Token)match(input,53,FOLLOW_53_in_parse_org_kermeta_language_structure_MultiplicityElement6297); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 203));
                    	              			
                    	            }
                    	            a20=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6317); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 204));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9340:4: (a21= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9341:5: a21= INTEGER
                    	            {
                    	            a21=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6343); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a21 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 205));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 205));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9381:8: a22= 'upper' a23= ':' (a24= INTEGER )
                    	            {
                    	            a22=(Token)match(input,54,FOLLOW_54_in_parse_org_kermeta_language_structure_MultiplicityElement6384); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 206));
                    	              			
                    	            }
                    	            a23=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6404); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 207));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9405:4: (a24= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9406:5: a24= INTEGER
                    	            {
                    	            a24=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6430); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a24 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 208));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 208));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 209));
                      	
                    }
                    a25=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_MultiplicityElement6476); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9472:2: c0= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6495);
                    c0=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9473:4: c1= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6505);
                    c1=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9474:4: c2= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6515);
                    c2=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9475:4: c3= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6525);
                    c3=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_kermeta_language_structure_MultiplicityElement_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_MultiplicityElement"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9479:1: parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null] : ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType );
    public final org.kermeta.language.structure.TypeDefinition parse_org_kermeta_language_structure_TypeDefinition() throws RecognitionException {
        org.kermeta.language.structure.TypeDefinition element =  null;
        int parse_org_kermeta_language_structure_TypeDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        org.kermeta.language.structure.Tag a8_0 = null;

        org.kermeta.language.structure.ClassDefinition c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.ModelType c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9482:1: ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType )
            int alt59=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA59_1 = input.LA(2);

                if ( (LA59_1==55) ) {
                    alt59=1;
                }
                else if ( (LA59_1==44) ) {
                    alt59=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;
                }
                }
                break;
            case 55:
                {
                alt59=1;
                }
                break;
            case 22:
            case 23:
            case 24:
                {
                alt59=2;
                }
                break;
            case 37:
                {
                alt59=3;
                }
                break;
            case PRIMITIVE_TYPE:
                {
                alt59=4;
                }
                break;
            case 44:
                {
                alt59=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }

            switch (alt59) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9483:2: ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9483:2: ( (a0= IDENTIFIER ) )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==IDENTIFIER) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9484:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9484:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9485:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6559); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 211));
                      	
                    }
                    a1=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_structure_TypeDefinition6589); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 212));
                      	
                    }
                    a2=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_TypeDefinition6603); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 213));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 213));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 213));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 213));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9545:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( ((LA58_0>=41 && LA58_0<=42)||LA58_0==46) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9546:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9546:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    int alt57=3;
                    	    switch ( input.LA(1) ) {
                    	    case 41:
                    	        {
                    	        alt57=1;
                    	        }
                    	        break;
                    	    case 42:
                    	        {
                    	        alt57=2;
                    	        }
                    	        break;
                    	    case 46:
                    	        {
                    	        alt57=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 57, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt57) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9547:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
                    	            {
                    	            a3=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_TypeDefinition6626); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 214));
                    	              			
                    	            }
                    	            a4=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6646); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 215));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9571:4: (a5= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9572:5: a5= IDENTIFIER
                    	            {
                    	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6672); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a5 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 216));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 216));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 216));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 216));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9612:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a6=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_TypeDefinition6713); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 217));
                    	              			
                    	            }
                    	            a7=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6733); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 218));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9636:4: (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9637:5: a8_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6759);
                    	            a8_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a8_0 != null) {
                    	              						if (a8_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
                    	              							completedElement(a8_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a8_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 219));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 219));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 219));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 219));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9662:8: a9= 'name' a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a9=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_TypeDefinition6795); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 220));
                    	              			
                    	            }
                    	            a10=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6815); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 221));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9686:4: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9687:5: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6841); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a11 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 222));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 222));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 222));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 222));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 223));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 223));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 223));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 223));
                      	
                    }
                    a12=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_TypeDefinition6887); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 224));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 224));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9755:2: c0= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6906);
                    c0=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9756:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6916);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9757:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6926);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9758:4: c3= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6936);
                    c3=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_kermeta_language_structure_TypeDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Tag"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9762:1: parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null] : a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.Tag parse_org_kermeta_language_structure_Tag() throws RecognitionException {
        org.kermeta.language.structure.Tag element =  null;
        int parse_org_kermeta_language_structure_Tag_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9765:1: (a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9766:2: a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,56,FOLLOW_56_in_parse_org_kermeta_language_structure_Tag6961); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 225));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Tag6975); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 226));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 226));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9795:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=41 && LA61_0<=42)||LA61_0==46||(LA61_0>=57 && LA61_0<=58)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9796:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9796:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    int alt60=5;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt60=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt60=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt60=3;
            	        }
            	        break;
            	    case 57:
            	        {
            	        alt60=4;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt60=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 60, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt60) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9797:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_Tag6998); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 227));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7018); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 228));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9821:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9822:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7044); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 229));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 229));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9864:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_Tag7085); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 230));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7105); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 231));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9888:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9889:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag7131);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 232));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 232));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 232));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 232));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 232));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 232));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9916:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_Tag7167); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 233));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7187); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 234));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9940:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9941:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7213); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 235));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 235));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 235));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 235));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 235));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 235));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9979:8: a11= 'value' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,57,FOLLOW_57_in_parse_org_kermeta_language_structure_Tag7254); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 236));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7274); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 237));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10003:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10004:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7300); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 238));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 238));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 238));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 238));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 238));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 238));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10042:8: a14= 'object' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_Tag7341); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 239));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7361); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 240));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10066:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10067:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7387); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 241));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 241));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 241));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 241));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 241));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 241));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 242));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 242));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 242));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 242));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 242));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 242));
              	
            }
            a17=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_Tag7433); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 243));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 243));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_kermeta_language_structure_Tag_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Tag"


    // $ANTLR start "parse_org_kermeta_language_structure_ObjectTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10224:1: parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null] : (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType );
    public final org.kermeta.language.structure.ObjectTypeVariable parse_org_kermeta_language_structure_ObjectTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ObjectTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10227:1: (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==59) ) {
                alt64=1;
            }
            else if ( (LA64_0==63) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10228:2: a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
                    {
                    a0=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_ObjectTypeVariable7462); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 244));
                      	
                    }
                    a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ObjectTypeVariable7476); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 245));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 245));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 245));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 245));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 245));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 245));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 245));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10258:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( ((LA63_0>=41 && LA63_0<=42)||(LA63_0>=45 && LA63_0<=46)||LA63_0==49||LA63_0==60) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10259:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10259:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    int alt62=6;
                    	    switch ( input.LA(1) ) {
                    	    case 41:
                    	        {
                    	        alt62=1;
                    	        }
                    	        break;
                    	    case 42:
                    	        {
                    	        alt62=2;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt62=3;
                    	        }
                    	        break;
                    	    case 45:
                    	        {
                    	        alt62=4;
                    	        }
                    	        break;
                    	    case 46:
                    	        {
                    	        alt62=5;
                    	        }
                    	        break;
                    	    case 60:
                    	        {
                    	        alt62=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 62, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt62) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10260:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_ObjectTypeVariable7499); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 246));
                    	              			
                    	            }
                    	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7519); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 247));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10284:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10285:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7545); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 248));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10328:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ObjectTypeVariable7586); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 249));
                    	              			
                    	            }
                    	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7606); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 250));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10352:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10353:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7632);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 251));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 251));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 251));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 251));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 251));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 251));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 251));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10381:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_ObjectTypeVariable7668); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 252));
                    	              			
                    	            }
                    	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7688); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 253));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10416:4: (a10_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10417:5: a10_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7714);
                    	            a10_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a10_0 != null) {
                    	              						if (a10_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
                    	              							completedElement(a10_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a10_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 254));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 254));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 254));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 254));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 254));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 254));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 254));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10445:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
                    	            {
                    	            a11=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ObjectTypeVariable7750); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 255));
                    	              			
                    	            }
                    	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7770); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 256));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10469:4: (a13= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10470:5: a13= IDENTIFIER
                    	            {
                    	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7796); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a13 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 257));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 257));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 257));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 257));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 257));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 257));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 257));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10513:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
                    	            {
                    	            a14=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_ObjectTypeVariable7837); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 258));
                    	              			
                    	            }
                    	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7857); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 259));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10537:4: (a16= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10538:5: a16= IDENTIFIER
                    	            {
                    	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7883); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a16 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 260));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 260));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10577:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
                    	            {
                    	            a17=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_ObjectTypeVariable7924); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 261));
                    	              			
                    	            }
                    	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7944); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 262));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10601:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10602:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7970); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 263));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 263));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 263));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 263));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 263));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 263));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 263));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 264));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 264));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 264));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 264));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 264));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 264));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 264));
                      	
                    }
                    a20=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ObjectTypeVariable8016); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 265));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 265));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10734:2: c0= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable8035);
                    c0=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ObjectTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10738:1: parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null] : a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' ;
    public final org.kermeta.language.structure.ModelTypeVariable parse_org_kermeta_language_structure_ModelTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ModelTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10741:1: (a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10742:2: a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_org_kermeta_language_structure_ModelTypeVariable8060); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 266));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ModelTypeVariable8074); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 267));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 267));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10773:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=41 && LA66_0<=42)||(LA66_0>=45 && LA66_0<=46)||LA66_0==49||LA66_0==60||LA66_0==62) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10774:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10774:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    int alt65=7;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt65=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt65=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt65=3;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt65=4;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt65=5;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt65=6;
            	        }
            	        break;
            	    case 62:
            	        {
            	        alt65=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 65, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt65) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10775:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_ModelTypeVariable8097); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 268));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8117); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 269));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10799:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10800:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8143); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 270));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10844:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelTypeVariable8184); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 271));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8204); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 272));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10868:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10869:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable8230);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 273));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10898:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_ModelTypeVariable8266); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 274));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8286); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 275));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10933:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10934:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable8312);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 276));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 276));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10963:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ModelTypeVariable8348); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 277));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8368); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 278));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10987:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10988:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8394); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 279));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 279));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11032:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_ModelTypeVariable8435); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 280));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8455); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 281));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11056:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11057:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8481); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 282));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 282));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11097:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8522); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 283));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8542); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 284));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11121:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11122:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8568); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 285));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11166:8: a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            {
            	            a20=(Token)match(input,62,FOLLOW_62_in_parse_org_kermeta_language_structure_ModelTypeVariable8609); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 286));
            	              			
            	            }
            	            a21=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8629); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 287));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11190:4: (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11191:5: a22_0= parse_org_kermeta_language_structure_VirtualType
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8655);
            	            a22_0=parse_org_kermeta_language_structure_VirtualType();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a22_0 != null) {
            	              						if (a22_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
            	              							completedElement(a22_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a22_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 288));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 289));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 289));
              	
            }
            a23=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ModelTypeVariable8696); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 290));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 290));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_VirtualType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11310:1: parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null] : a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' ;
    public final org.kermeta.language.structure.VirtualType parse_org_kermeta_language_structure_VirtualType() throws RecognitionException {
        org.kermeta.language.structure.VirtualType element =  null;
        int parse_org_kermeta_language_structure_VirtualType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a27=null;
        Token a29=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.TypeVariableBinding a28_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11313:1: (a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11314:2: a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}'
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType8725); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 291));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_VirtualType8739); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 292));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 292));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11347:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=41 && LA68_0<=42)||(LA68_0>=45 && LA68_0<=46)||LA68_0==49||LA68_0==60||(LA68_0>=64 && LA68_0<=66)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11348:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11348:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    int alt67=9;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt67=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt67=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt67=3;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt67=4;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt67=5;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt67=6;
            	        }
            	        break;
            	    case 64:
            	        {
            	        alt67=7;
            	        }
            	        break;
            	    case 65:
            	        {
            	        alt67=8;
            	        }
            	        break;
            	    case 66:
            	        {
            	        alt67=9;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 67, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt67) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11349:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_VirtualType8762); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 293));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType8782); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 294));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11373:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11374:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8808); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 295));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11420:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_VirtualType8849); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 296));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType8869); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 297));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11444:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11445:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8895);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 298));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11476:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_VirtualType8931); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 299));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType8951); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 300));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11511:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11512:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8977);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 301));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11543:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_VirtualType9013); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 302));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9033); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 303));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11567:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11568:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9059); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 304));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11614:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_VirtualType9100); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 305));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9120); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 306));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11638:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11639:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9146); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 307));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 307));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11681:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_VirtualType9187); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 308));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9207); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 309));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11705:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11706:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9233); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 310));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 310));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11752:8: a20= 'classDefinition' a21= ':' (a22= IDENTIFIER )
            	            {
            	            a20=(Token)match(input,64,FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType9274); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 311));
            	              			
            	            }
            	            a21=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9294); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 312));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11776:4: (a22= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11777:5: a22= IDENTIFIER
            	            {
            	            a22=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9320); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 313));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 313));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11823:8: a23= 'modelType' a24= ':' (a25= IDENTIFIER )
            	            {
            	            a23=(Token)match(input,65,FOLLOW_65_in_parse_org_kermeta_language_structure_VirtualType9361); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 314));
            	              			
            	            }
            	            a24=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9381); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 315));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11847:4: (a25= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11848:5: a25= IDENTIFIER
            	            {
            	            a25=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9407); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a25 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 316));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11894:8: a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            {
            	            a26=(Token)match(input,66,FOLLOW_66_in_parse_org_kermeta_language_structure_VirtualType9448); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 317));
            	              			
            	            }
            	            a27=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9468); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 318));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11918:4: (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11919:5: a28_0= parse_org_kermeta_language_structure_TypeVariableBinding
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9494);
            	            a28_0=parse_org_kermeta_language_structure_TypeVariableBinding();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a28_0 != null) {
            	              						if (a28_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
            	              							completedElement(a28_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a28_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 319));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 320));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 320));
              	
            }
            a29=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_VirtualType9535); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 321));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 321));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_kermeta_language_structure_VirtualType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VirtualType"


    // $ANTLR start "parse_org_kermeta_language_structure_ProductType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12042:1: parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null] : a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.ProductType parse_org_kermeta_language_structure_ProductType() throws RecognitionException {
        org.kermeta.language.structure.ProductType element =  null;
        int parse_org_kermeta_language_structure_ProductType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12045:1: (a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12046:2: a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,67,FOLLOW_67_in_parse_org_kermeta_language_structure_ProductType9564); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 322));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ProductType9578); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 323));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 323));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12075:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( ((LA70_0>=41 && LA70_0<=42)||LA70_0==45||LA70_0==49||LA70_0==51) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12076:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12076:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt69=5;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt69=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt69=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt69=3;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt69=4;
            	        }
            	        break;
            	    case 51:
            	        {
            	        alt69=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 69, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt69) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12077:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_ProductType9601); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 324));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9621); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 325));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12101:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12102:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9647); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 326));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 326));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12144:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ProductType9688); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 327));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9708); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 328));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12168:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12169:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9734);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 329));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 329));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12196:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9770); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 330));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9790); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 331));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12231:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12232:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9816);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 332));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 332));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12259:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ProductType9852); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 333));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9872); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 334));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12283:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12284:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9898); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 335));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12326:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_ProductType9939); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 336));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9959); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 337));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12350:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12351:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9985); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 338));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 339));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 339));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 339));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 339));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 339));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 339));
              	
            }
            a17=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ProductType10031); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 340));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 340));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_kermeta_language_structure_ProductType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ProductType"


    // $ANTLR start "parse_org_kermeta_language_structure_FunctionType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12481:1: parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null] : a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' ;
    public final org.kermeta.language.structure.FunctionType parse_org_kermeta_language_structure_FunctionType() throws RecognitionException {
        org.kermeta.language.structure.FunctionType element =  null;
        int parse_org_kermeta_language_structure_FunctionType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12484:1: (a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12485:2: a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
            {
            a0=(Token)match(input,68,FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10060); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 341));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_FunctionType10074); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 342));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 342));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 342));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 342));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 342));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 342));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 342));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12515:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=41 && LA72_0<=42)||LA72_0==45||LA72_0==49||(LA72_0>=69 && LA72_0<=70)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12516:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12516:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    int alt71=6;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt71=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt71=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt71=3;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt71=4;
            	        }
            	        break;
            	    case 69:
            	        {
            	        alt71=5;
            	        }
            	        break;
            	    case 70:
            	        {
            	        alt71=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 71, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt71) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12517:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_FunctionType10097); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 343));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10117); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 344));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12541:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12542:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10143); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 345));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12585:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_FunctionType10184); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 346));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10204); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 347));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12609:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12610:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType10230);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 348));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 348));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12638:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_FunctionType10266); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 349));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10286); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 350));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12673:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12674:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType10312);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 351));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12702:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_FunctionType10348); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 352));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10368); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 353));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12726:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12727:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10394); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 354));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12770:8: a14= 'left' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,69,FOLLOW_69_in_parse_org_kermeta_language_structure_FunctionType10435); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 355));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10455); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 356));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12794:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12795:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10481); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 357));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12838:8: a17= 'right' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_structure_FunctionType10522); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 358));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10542); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 359));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12862:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12863:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10568); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 360));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 361));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 361));
              	
            }
            a20=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_FunctionType10614); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 362));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_kermeta_language_structure_FunctionType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_FunctionType"


    // $ANTLR start "parse_org_kermeta_language_behavior_Block"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12995:1: parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null] : a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a13_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a14= 'end' ;
    public final org.kermeta.language.behavior.Block parse_org_kermeta_language_behavior_Block() throws RecognitionException {
        org.kermeta.language.behavior.Block element =  null;
        int parse_org_kermeta_language_behavior_Block_StartIndex = input.index();
        Token a0=null;
        Token a14=null;
        org.kermeta.language.behavior.VariableDecl a1_0 = null;

        org.kermeta.language.behavior.Loop a2_0 = null;

        org.kermeta.language.behavior.Conditional a3_0 = null;

        org.kermeta.language.behavior.Assignment a4_0 = null;

        org.kermeta.language.behavior.CallFeature a5_0 = null;

        org.kermeta.language.behavior.CallVariable a6_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a7_0 = null;

        org.kermeta.language.behavior.CallResult a8_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;

        org.kermeta.language.behavior.EmptyExpression a10_0 = null;

        org.kermeta.language.behavior.CallValue a11_0 = null;

        org.kermeta.language.behavior.Block a12_0 = null;

        org.kermeta.language.behavior.Rescue a13_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12998:1: (a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a13_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a14= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12999:2: a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a13_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a14= 'end'
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_org_kermeta_language_behavior_Block10643); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 363));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13028:2: ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==IDENTIFIER||(LA74_0>=INTEGER && LA74_0<=BOOLEAN)||LA74_0==34||LA74_0==57||LA74_0==71||LA74_0==75||LA74_0==78||LA74_0==81||(LA74_0>=83 && LA74_0<=85)||LA74_0==88||(LA74_0>=95 && LA74_0<=96)) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13029:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13029:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) )
            	    int alt73=12;
            	    alt73 = dfa73.predict(input);
            	    switch (alt73) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13030:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13030:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13031:5: a1_0= parse_org_kermeta_language_behavior_VariableDecl
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10672);
            	            a1_0=parse_org_kermeta_language_behavior_VariableDecl();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a1_0 != null) {
            	              						if (a1_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
            	              							completedElement(a1_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a1_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 364));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13070:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13070:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13071:5: a2_0= parse_org_kermeta_language_behavior_Loop
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10714);
            	            a2_0=parse_org_kermeta_language_behavior_Loop();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a2_0 != null) {
            	              						if (a2_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
            	              							completedElement(a2_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a2_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 365));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13110:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13110:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13111:5: a3_0= parse_org_kermeta_language_behavior_Conditional
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10756);
            	            a3_0=parse_org_kermeta_language_behavior_Conditional();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a3_0 != null) {
            	              						if (a3_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
            	              							completedElement(a3_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a3_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 366));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13150:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13150:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13151:5: a4_0= parse_org_kermeta_language_behavior_Assignment
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10798);
            	            a4_0=parse_org_kermeta_language_behavior_Assignment();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a4_0 != null) {
            	              						if (a4_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
            	              							completedElement(a4_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a4_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 367));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13190:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13190:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13191:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10840);
            	            a5_0=parse_org_kermeta_language_behavior_CallFeature();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a5_0 != null) {
            	              						if (a5_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
            	              							completedElement(a5_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a5_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 368));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 368));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13230:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13230:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13231:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10882);
            	            a6_0=parse_org_kermeta_language_behavior_CallVariable();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a6_0 != null) {
            	              						if (a6_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
            	              							completedElement(a6_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a6_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 369));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 369));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13270:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13270:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13271:5: a7_0= parse_org_kermeta_language_behavior_CallSuperOperation
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10924);
            	            a7_0=parse_org_kermeta_language_behavior_CallSuperOperation();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 370));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 370));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13310:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13310:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13311:5: a8_0= parse_org_kermeta_language_behavior_CallResult
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10966);
            	            a8_0=parse_org_kermeta_language_behavior_CallResult();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 371));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 371));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13350:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13350:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13351:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block11008);
            	            a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a9_0 != null) {
            	              						if (a9_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
            	              							completedElement(a9_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a9_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 372));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 372));
            	              			
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13390:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13390:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13391:5: a10_0= parse_org_kermeta_language_behavior_EmptyExpression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block11050);
            	            a10_0=parse_org_kermeta_language_behavior_EmptyExpression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 373));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 373));
            	              			
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13430:8: (a11_0= parse_org_kermeta_language_behavior_CallValue )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13430:8: (a11_0= parse_org_kermeta_language_behavior_CallValue )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13431:5: a11_0= parse_org_kermeta_language_behavior_CallValue
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Block11092);
            	            a11_0=parse_org_kermeta_language_behavior_CallValue();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a11_0 != null) {
            	              						if (a11_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
            	              							completedElement(a11_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a11_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 374));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 374));
            	              			
            	            }

            	            }
            	            break;
            	        case 12 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13470:8: (a12_0= parse_org_kermeta_language_behavior_Block )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13470:8: (a12_0= parse_org_kermeta_language_behavior_Block )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13471:5: a12_0= parse_org_kermeta_language_behavior_Block
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block11134);
            	            a12_0=parse_org_kermeta_language_behavior_Block();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a12_0 != null) {
            	              						if (a12_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a12_0);
            	              							completedElement(a12_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a12_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 375));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 375));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 376));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13533:2: ( ( (a13_0= parse_org_kermeta_language_behavior_Rescue ) ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==73) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13534:3: ( (a13_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13534:3: ( (a13_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13535:4: (a13_0= parse_org_kermeta_language_behavior_Rescue )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13535:4: (a13_0= parse_org_kermeta_language_behavior_Rescue )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13536:5: a13_0= parse_org_kermeta_language_behavior_Rescue
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block11190);
            	    a13_0=parse_org_kermeta_language_behavior_Rescue();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	      					}
            	      					if (a13_0 != null) {
            	      						if (a13_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a13_0);
            	      							completedElement(a13_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a13_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 377));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 377));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 378));
              	
            }
            a14=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Block11231); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 379));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_kermeta_language_behavior_Block_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Block"


    // $ANTLR start "parse_org_kermeta_language_behavior_Rescue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13620:1: parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null] : a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.Rescue parse_org_kermeta_language_behavior_Rescue() throws RecognitionException {
        org.kermeta.language.behavior.Rescue element =  null;
        int parse_org_kermeta_language_behavior_Rescue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.TypeReference a4_0 = null;

        org.kermeta.language.behavior.Expression a6_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13623:1: (a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13624:2: a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_org_kermeta_language_behavior_Rescue11260); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 380));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13658:2: ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==34) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==IDENTIFIER) ) {
                    int LA76_3 = input.LA(3);

                    if ( (LA76_3==29) ) {
                        alt76=1;
                    }
                }
            }
            switch (alt76) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13659:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13659:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13660:4: a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')'
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_behavior_Rescue11283); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 381));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13672:4: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13673:5: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue11309); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a2 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      						}
                      						java.lang.String resolved = (java.lang.String)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 382));
                      			
                    }
                    a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_Rescue11342); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 383));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13717:4: (a4_0= parse_org_kermeta_language_behavior_TypeReference )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13718:5: a4_0= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue11368);
                    a4_0=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a4_0 != null) {
                      						if (a4_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
                      							completedElement(a4_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a4_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 384));
                      			
                    }
                    a5=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_Rescue11396); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 385));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 385));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 386));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13800:2: ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==IDENTIFIER||(LA77_0>=INTEGER && LA77_0<=BOOLEAN)||LA77_0==34||LA77_0==39||LA77_0==57||LA77_0==71||(LA77_0>=74 && LA77_0<=75)||LA77_0==78||LA77_0==81||(LA77_0>=83 && LA77_0<=85)||LA77_0==88||(LA77_0>=95 && LA77_0<=96)||LA77_0==98) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13801:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13801:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13802:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13802:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13803:5: a6_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue11444);
                    a6_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 387));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 387));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 388));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 388));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_kermeta_language_behavior_Rescue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Rescue"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeReference"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13835:1: parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.TypeReference parse_org_kermeta_language_behavior_TypeReference() throws RecognitionException {
        org.kermeta.language.behavior.TypeReference element =  null;
        int parse_org_kermeta_language_behavior_TypeReference_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13838:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13839:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13839:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13840:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference11504); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 389));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 389));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_kermeta_language_behavior_TypeReference_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeReference"


    // $ANTLR start "parse_org_kermeta_language_behavior_Raise"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13925:1: parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null] : a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) ;
    public final org.kermeta.language.behavior.Raise parse_org_kermeta_language_behavior_Raise() throws RecognitionException {
        org.kermeta.language.behavior.Raise element =  null;
        int parse_org_kermeta_language_behavior_Raise_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.Expression a1_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13928:1: (a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13929:2: a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression )
            {
            a0=(Token)match(input,74,FOLLOW_74_in_parse_org_kermeta_language_behavior_Raise11540); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 390));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 390));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13960:2: (a1_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13961:3: a1_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11558);
            a1_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              			}
              			if (a1_0 != null) {
              				if (a1_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
              					completedElement(a1_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a1_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 391));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_kermeta_language_behavior_Raise_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Raise"


    // $ANTLR start "parse_org_kermeta_language_behavior_BooleanLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14021:1: parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null] : (a0= BOOLEAN ) ;
    public final org.kermeta.language.behavior.BooleanLiteral parse_org_kermeta_language_behavior_BooleanLiteral() throws RecognitionException {
        org.kermeta.language.behavior.BooleanLiteral element =  null;
        int parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14024:1: ( (a0= BOOLEAN ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14025:2: (a0= BOOLEAN )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14025:2: (a0= BOOLEAN )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14026:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11595); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 392));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 392));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_BooleanLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_IntegerLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14097:1: parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null] : (a0= INTEGER ) ;
    public final org.kermeta.language.behavior.IntegerLiteral parse_org_kermeta_language_behavior_IntegerLiteral() throws RecognitionException {
        org.kermeta.language.behavior.IntegerLiteral element =  null;
        int parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14100:1: ( (a0= INTEGER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14101:2: (a0= INTEGER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14101:2: (a0= INTEGER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14102:3: a0= INTEGER
            {
            a0=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11635); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 393));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_IntegerLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_StringLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14173:1: parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.StringLiteral parse_org_kermeta_language_behavior_StringLiteral() throws RecognitionException {
        org.kermeta.language.behavior.StringLiteral element =  null;
        int parse_org_kermeta_language_behavior_StringLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14176:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14177:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14177:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14178:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11675); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 394));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 394));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_kermeta_language_behavior_StringLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_StringLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_Conditional"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14249:1: parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null] : a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' ;
    public final org.kermeta.language.behavior.Conditional parse_org_kermeta_language_behavior_Conditional() throws RecognitionException {
        org.kermeta.language.behavior.Conditional element =  null;
        int parse_org_kermeta_language_behavior_Conditional_StartIndex = input.index();
        Token a0=null;
        Token a3=null;
        Token a13=null;
        Token a23=null;
        org.kermeta.language.behavior.CallFeature a1_0 = null;

        org.kermeta.language.behavior.Conditional a2_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;

        org.kermeta.language.behavior.Block a5_0 = null;

        org.kermeta.language.behavior.Assignment a6_0 = null;

        org.kermeta.language.behavior.CallFeature a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallVariable a10_0 = null;

        org.kermeta.language.behavior.CallValue a11_0 = null;

        org.kermeta.language.behavior.VariableDecl a12_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.Block a15_0 = null;

        org.kermeta.language.behavior.Assignment a16_0 = null;

        org.kermeta.language.behavior.CallFeature a17_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a18_0 = null;

        org.kermeta.language.behavior.CallResult a19_0 = null;

        org.kermeta.language.behavior.VariableDecl a20_0 = null;

        org.kermeta.language.behavior.CallVariable a21_0 = null;

        org.kermeta.language.behavior.CallValue a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14252:1: (a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14253:2: a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end'
            {
            a0=(Token)match(input,75,FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11711); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 395));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 395));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14274:2: ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==IDENTIFIER||(LA78_0>=INTEGER && LA78_0<=BOOLEAN)||LA78_0==34||(LA78_0>=83 && LA78_0<=84)||LA78_0==88||LA78_0==95) ) {
                alt78=1;
            }
            else if ( (LA78_0==75) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14275:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14275:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14276:4: a1_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11734);
                    a1_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a1_0 != null) {
                      					if (a1_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
                      						completedElement(a1_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a1_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 396));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14298:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14298:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14299:4: a2_0= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11768);
                    a2_0=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a2_0 != null) {
                      					if (a2_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
                      						completedElement(a2_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a2_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 397));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 398));
              	
            }
            a3=(Token)match(input,76,FOLLOW_76_in_parse_org_kermeta_language_behavior_Conditional11798); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 399));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 399));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14350:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )
            int alt79=9;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14352:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11821);
                    a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 400));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14388:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14388:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14389:4: a5_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11855);
                    a5_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a5_0 != null) {
                      					if (a5_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
                      						completedElement(a5_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a5_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 401));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 401));
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14425:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14425:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14426:4: a6_0= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11889);
                    a6_0=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a6_0 != null) {
                      					if (a6_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
                      						completedElement(a6_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a6_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 402));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 402));
                      		
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14463:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11923);
                    a7_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a7_0 != null) {
                      					if (a7_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
                      						completedElement(a7_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a7_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 403));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 403));
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14499:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14499:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14500:4: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11957);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a8_0 != null) {
                      					if (a8_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
                      						completedElement(a8_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a8_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 404));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 404));
                      		
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14536:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14536:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14537:4: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11991);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a9_0 != null) {
                      					if (a9_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
                      						completedElement(a9_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a9_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 405));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 405));
                      		
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14573:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14573:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14574:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12025);
                    a10_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a10_0 != null) {
                      					if (a10_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
                      						completedElement(a10_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a10_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 406));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 406));
                      		
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14610:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14610:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14611:4: a11_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12059);
                    a11_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a11_0 != null) {
                      					if (a11_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
                      						completedElement(a11_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a11_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 407));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 407));
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14647:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14647:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14648:4: a12_0= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12093);
                    a12_0=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a12_0 != null) {
                      					if (a12_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
                      						completedElement(a12_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a12_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 408));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 408));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 409));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14703:2: ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==IDENTIFIER||(LA81_0>=INTEGER && LA81_0<=BOOLEAN)||LA81_0==34||LA81_0==57||LA81_0==71||LA81_0==77||LA81_0==81||(LA81_0>=83 && LA81_0<=85)||LA81_0==88||LA81_0==95) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14704:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14704:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    int alt80=8;
                    alt80 = dfa80.predict(input);
                    switch (alt80) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14705:4: a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            a13=(Token)match(input,77,FOLLOW_77_in_parse_org_kermeta_language_behavior_Conditional12132); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 410));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14717:4: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14718:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional12158);
                            a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a14_0 != null) {
                              						if (a14_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
                              							completedElement(a14_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a14_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 411));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14740:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14740:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14741:5: a15_0= parse_org_kermeta_language_behavior_Block
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional12200);
                            a15_0=parse_org_kermeta_language_behavior_Block();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a15_0 != null) {
                              						if (a15_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
                              							completedElement(a15_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a15_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 412));
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14763:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14763:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14764:5: a16_0= parse_org_kermeta_language_behavior_Assignment
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional12242);
                            a16_0=parse_org_kermeta_language_behavior_Assignment();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a16_0 != null) {
                              						if (a16_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
                              							completedElement(a16_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a16_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 413));
                              			
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14786:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14786:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14787:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12284);
                            a17_0=parse_org_kermeta_language_behavior_CallFeature();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a17_0 != null) {
                              						if (a17_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
                              							completedElement(a17_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a17_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 414));
                              			
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14809:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14809:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14810:5: a18_0= parse_org_kermeta_language_behavior_CallSuperOperation
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12326);
                            a18_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a18_0 != null) {
                              						if (a18_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
                              							completedElement(a18_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a18_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 415));
                              			
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14832:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14832:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14833:5: a19_0= parse_org_kermeta_language_behavior_CallResult
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12368);
                            a19_0=parse_org_kermeta_language_behavior_CallResult();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a19_0 != null) {
                              						if (a19_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
                              							completedElement(a19_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a19_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 416));
                              			
                            }

                            }
                            break;
                        case 7 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14855:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14855:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14856:5: a20_0= parse_org_kermeta_language_behavior_VariableDecl
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12410);
                            a20_0=parse_org_kermeta_language_behavior_VariableDecl();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a20_0 != null) {
                              						if (a20_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
                              							completedElement(a20_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a20_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 417));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 417));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 417));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14879:4: (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14880:5: a21_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12444);
                            a21_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a21_0 != null) {
                              						if (a21_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
                              							completedElement(a21_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a21_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 418));
                              			
                            }

                            }
                            break;
                        case 8 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14902:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14902:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14903:5: a22_0= parse_org_kermeta_language_behavior_CallValue
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12486);
                            a22_0=parse_org_kermeta_language_behavior_CallValue();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a22_0 != null) {
                              						if (a22_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
                              							completedElement(a22_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a22_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 419));
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 420));
              	
            }
            a23=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Conditional12527); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 421));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_kermeta_language_behavior_Conditional_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Conditional"


    // $ANTLR start "parse_org_kermeta_language_behavior_Loop"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14985:1: parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null] : a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? ;
    public final org.kermeta.language.behavior.Loop parse_org_kermeta_language_behavior_Loop() throws RecognitionException {
        org.kermeta.language.behavior.Loop element =  null;
        int parse_org_kermeta_language_behavior_Loop_StartIndex = input.index();
        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.Expression a1_0 = null;

        org.kermeta.language.behavior.Expression a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14988:1: (a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14989:2: a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12556); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 422));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15021:2: ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==IDENTIFIER||(LA82_0>=INTEGER && LA82_0<=BOOLEAN)||LA82_0==34||LA82_0==39||LA82_0==57||LA82_0==71||(LA82_0>=74 && LA82_0<=75)||LA82_0==78||LA82_0==81||(LA82_0>=83 && LA82_0<=85)||LA82_0==88||(LA82_0>=95 && LA82_0<=96)||LA82_0==98) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15022:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15022:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15023:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15023:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15024:5: a1_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12585);
                    a1_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 423));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 424));
              	
            }
            a2=(Token)match(input,79,FOLLOW_79_in_parse_org_kermeta_language_behavior_Loop12626); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 425));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15083:2: (a3_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15084:3: a3_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12644);
            a3_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 426));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15146:2: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==80) ) {
                int LA83_1 = input.LA(2);

                if ( (synpred205_Kermeta()) ) {
                    alt83=1;
                }
            }
            switch (alt83) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15147:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15147:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15148:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    a4=(Token)match(input,80,FOLLOW_80_in_parse_org_kermeta_language_behavior_Loop12671); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 427));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15179:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15180:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15180:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15181:6: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12704);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      						if (terminateParsing) {
                      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      						}
                      						if (element == null) {
                      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      						}
                      						if (a5_0 != null) {
                      							if (a5_0 != null) {
                      								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
                      								completedElement(a5_0);
                      							}
                      							collectHiddenTokens(element);
                      							copyLocalizationInfos(a5_0, element); 						}
                      					
                    }

                    }

                    if ( state.backtracking==0 ) {

                      					// expected elements (follow set)
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 428));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 428));
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 429));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 430));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_kermeta_language_behavior_Loop_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Loop"


    // $ANTLR start "parse_org_kermeta_language_behavior_VariableDecl"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15337:1: parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null] : a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.VariableDecl parse_org_kermeta_language_behavior_VariableDecl() throws RecognitionException {
        org.kermeta.language.behavior.VariableDecl element =  null;
        int parse_org_kermeta_language_behavior_VariableDecl_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.TypeReference a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15340:1: (a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15341:2: a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_kermeta_language_behavior_VariableDecl12778); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 431));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15353:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15354:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12796); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 432));
              	
            }
            a2=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_VariableDecl12817); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 433));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15398:2: (a3_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15399:3: a3_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12835);
            a3_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 434));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 434));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15461:2: ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==82) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15462:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15462:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15463:4: a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    a4=(Token)match(input,82,FOLLOW_82_in_parse_org_kermeta_language_behavior_VariableDecl12862); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 435));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 435));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15494:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15495:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12888);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 436));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 437));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 437));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_kermeta_language_behavior_VariableDecl_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VariableDecl"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15605:1: parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null] : (a0_0= parse_org_kermeta_language_behavior_TypeReference ) ;
    public final org.kermeta.language.behavior.TypeLiteral parse_org_kermeta_language_behavior_TypeLiteral() throws RecognitionException {
        org.kermeta.language.behavior.TypeLiteral element =  null;
        int parse_org_kermeta_language_behavior_TypeLiteral_StartIndex = input.index();
        org.kermeta.language.behavior.TypeReference a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15608:1: ( (a0_0= parse_org_kermeta_language_behavior_TypeReference ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15609:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15609:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15610:3: a0_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12948);
            a0_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 438));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 438));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_kermeta_language_behavior_TypeLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallResult"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15670:1: parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null] : ( (a0= '~' ) )? a1= 'result' ;
    public final org.kermeta.language.behavior.CallResult parse_org_kermeta_language_behavior_CallResult() throws RecognitionException {
        org.kermeta.language.behavior.CallResult element =  null;
        int parse_org_kermeta_language_behavior_CallResult_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15673:1: ( ( (a0= '~' ) )? a1= 'result' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15674:2: ( (a0= '~' ) )? a1= 'result'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15674:2: ( (a0= '~' ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==83) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15675:3: (a0= '~' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15675:3: (a0= '~' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15676:4: a0= '~'
                    {
                    a0=(Token)match(input,83,FOLLOW_83_in_parse_org_kermeta_language_behavior_CallResult12990); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 439));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 440));
              	
            }
            a1=(Token)match(input,84,FOLLOW_84_in_parse_org_kermeta_language_behavior_CallResult13023); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 441));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 441));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_kermeta_language_behavior_CallResult_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallResult"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallSuperOperation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15751:1: parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null] : a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' ;
    public final org.kermeta.language.behavior.CallSuperOperation parse_org_kermeta_language_behavior_CallSuperOperation() throws RecognitionException {
        org.kermeta.language.behavior.CallSuperOperation element =  null;
        int parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.Expression a2_0 = null;

        org.kermeta.language.behavior.Expression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15754:1: (a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15755:2: a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_org_kermeta_language_behavior_CallSuperOperation13052); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 442));
              	
            }
            a1=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_behavior_CallSuperOperation13066); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 443));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 443));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15799:2: ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==IDENTIFIER||(LA87_0>=INTEGER && LA87_0<=BOOLEAN)||LA87_0==34||LA87_0==39||LA87_0==57||LA87_0==71||(LA87_0>=74 && LA87_0<=75)||LA87_0==78||LA87_0==81||(LA87_0>=83 && LA87_0<=85)||LA87_0==88||(LA87_0>=95 && LA87_0<=96)||LA87_0==98) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15800:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15800:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15801:4: (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15801:4: (a2_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15802:5: a2_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13095);
                    a2_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 444));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15824:4: ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop86:
                    do {
                        int alt86=2;
                        int LA86_0 = input.LA(1);

                        if ( (LA86_0==26) ) {
                            alt86=1;
                        }


                        switch (alt86) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15825:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15825:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15826:6: a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a3=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallSuperOperation13136); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 445));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 445));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15857:6: (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15858:7: a4_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13170);
                    	    a4_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      							}
                    	      							if (a4_0 != null) {
                    	      								if (a4_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a4_0);
                    	      									completedElement(a4_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a4_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 446));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 446));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 447));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 448));
              	
            }
            a5=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_CallSuperOperation13244); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 449));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 449));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallSuperOperation"


    // $ANTLR start "parse_org_kermeta_language_behavior_Assignment"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15949:1: parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null] : ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) ;
    public final org.kermeta.language.behavior.Assignment parse_org_kermeta_language_behavior_Assignment() throws RecognitionException {
        org.kermeta.language.behavior.Assignment element =  null;
        int parse_org_kermeta_language_behavior_Assignment_StartIndex = input.index();
        Token a3=null;
        Token a4=null;
        Token a5=null;
        org.kermeta.language.behavior.CallFeature a0_0 = null;

        org.kermeta.language.behavior.CallVariable a1_0 = null;

        org.kermeta.language.behavior.CallResult a2_0 = null;

        org.kermeta.language.behavior.CallFeature a6_0 = null;

        org.kermeta.language.behavior.SelfExpression a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallValue a10_0 = null;

        org.kermeta.language.behavior.CallVariable a11_0 = null;

        org.kermeta.language.behavior.VoidLiteral a12_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.StringLiteral a15_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15952:1: ( ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15953:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15953:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15954:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15954:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) )
            int alt88=3;
            switch ( input.LA(1) ) {
            case INTEGER:
            case BOOLEAN:
            case 34:
            case 88:
            case 95:
                {
                alt88=1;
                }
                break;
            case IDENTIFIER:
                {
                int LA88_2 = input.LA(2);

                if ( (synpred210_Kermeta()) ) {
                    alt88=1;
                }
                else if ( (synpred211_Kermeta()) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 2, input);

                    throw nvae;
                }
                }
                break;
            case 83:
                {
                int LA88_3 = input.LA(2);

                if ( (LA88_3==84) ) {
                    int LA88_4 = input.LA(3);

                    if ( (synpred210_Kermeta()) ) {
                        alt88=1;
                    }
                    else if ( (synpred211_Kermeta()) ) {
                        alt88=2;
                    }
                    else if ( (true) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 88, 4, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 3, input);

                    throw nvae;
                }
                }
                break;
            case 84:
                {
                int LA88_4 = input.LA(2);

                if ( (synpred210_Kermeta()) ) {
                    alt88=1;
                }
                else if ( (synpred211_Kermeta()) ) {
                    alt88=2;
                }
                else if ( (true) ) {
                    alt88=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15955:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15955:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15956:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13288);
                    a0_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a0_0 != null) {
                      						if (a0_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
                      							completedElement(a0_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a0_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 450));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15979:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15979:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15980:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13330);
                    a1_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 451));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16003:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16003:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16004:5: a2_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13372);
                    a2_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 452));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 453));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 453));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16033:3: (a3= ':=' | (a4= CASTED ) a5= '=' )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==86) ) {
                alt89=1;
            }
            else if ( (LA89_0==CASTED) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16034:4: a3= ':='
                    {
                    a3=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_Assignment13415); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 454));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16058:8: (a4= CASTED ) a5= '='
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16058:8: (a4= CASTED )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16059:5: a4= CASTED
                    {
                    a4=(Token)match(input,CASTED,FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment13449); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a4 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                      						}
                      						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 455));
                      			
                    }
                    a5=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_Assignment13482); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 456));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 457));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 457));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16131:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            int alt90=10;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16132:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16132:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16133:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13523);
                    a6_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 458));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 458));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16195:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16195:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16196:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment13565);
                    a7_0=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a7_0 != null) {
                      						if (a7_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
                      							completedElement(a7_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a7_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 459));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 459));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16258:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16258:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16259:5: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13607);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a8_0 != null) {
                      						if (a8_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
                      							completedElement(a8_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a8_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 460));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 460));
                      			
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16321:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16321:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16322:5: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13649);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a9_0 != null) {
                      						if (a9_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
                      							completedElement(a9_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a9_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 461));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 461));
                      			
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16384:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16384:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16385:5: a10_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13691);
                    a10_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a10_0 != null) {
                      						if (a10_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
                      							completedElement(a10_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a10_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 462));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 462));
                      			
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16447:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16447:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16448:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13733);
                    a11_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a11_0 != null) {
                      						if (a11_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
                      							completedElement(a11_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a11_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 463));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 463));
                      			
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16510:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16510:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16511:5: a12_0= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13775);
                    a12_0=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a12_0 != null) {
                      						if (a12_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
                      							completedElement(a12_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a12_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 464));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 464));
                      			
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16573:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16573:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16574:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13817);
                    a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a13_0 != null) {
                      						if (a13_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
                      							completedElement(a13_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a13_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 465));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 465));
                      			
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16636:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16636:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16637:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13859);
                    a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a14_0 != null) {
                      						if (a14_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
                      							completedElement(a14_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a14_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 466));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 466));
                      			
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16699:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16699:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16700:5: a15_0= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13901);
                    a15_0=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a15_0 != null) {
                      						if (a15_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
                      							completedElement(a15_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a15_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 467));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 467));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 468));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 468));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 469));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 469));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_kermeta_language_behavior_Assignment_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Assignment"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16855:1: parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null] : ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult );
    public final org.kermeta.language.behavior.CallVariable parse_org_kermeta_language_behavior_CallVariable() throws RecognitionException {
        org.kermeta.language.behavior.CallVariable element =  null;
        int parse_org_kermeta_language_behavior_CallVariable_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.CallResult c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16858:1: ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult )
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==IDENTIFIER) ) {
                alt91=1;
            }
            else if ( ((LA91_0>=83 && LA91_0<=84)) ) {
                alt91=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }
            switch (alt91) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16859:2: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16859:2: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16860:3: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13965); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 470));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 470));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16936:2: c0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13991);
                    c0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_kermeta_language_behavior_CallVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallVariable"


    // $ANTLR start "parse_org_kermeta_language_behavior_SelfExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16940:1: parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null] : a0= 'self' ;
    public final org.kermeta.language.behavior.SelfExpression parse_org_kermeta_language_behavior_SelfExpression() throws RecognitionException {
        org.kermeta.language.behavior.SelfExpression element =  null;
        int parse_org_kermeta_language_behavior_SelfExpression_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16943:1: (a0= 'self' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16944:2: a0= 'self'
            {
            a0=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_SelfExpression14016); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 471));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 471));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_kermeta_language_behavior_SelfExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_SelfExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallFeature"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16995:1: parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null] : (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) );
    public final org.kermeta.language.behavior.CallFeature parse_org_kermeta_language_behavior_CallFeature() throws RecognitionException {
        org.kermeta.language.behavior.CallFeature element =  null;
        int parse_org_kermeta_language_behavior_CallFeature_StartIndex = input.index();
        Token a0=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a28=null;
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        Token a40=null;
        Token a41=null;
        Token a42=null;
        Token a43=null;
        Token a44=null;
        Token a46=null;
        Token a48=null;
        Token a49=null;
        Token a50=null;
        Token a51=null;
        Token a52=null;
        Token a53=null;
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.BooleanLiteral a1_0 = null;

        org.kermeta.language.behavior.CallVariable a2_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a3_0 = null;

        org.kermeta.language.behavior.SelfExpression a4_0 = null;

        org.kermeta.language.behavior.StringLiteral a5_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a6_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;

        org.kermeta.language.behavior.Expression a14_0 = null;

        org.kermeta.language.behavior.Expression a21_0 = null;

        org.kermeta.language.behavior.Expression a27_0 = null;

        org.kermeta.language.behavior.Expression a33_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a34_0 = null;

        org.kermeta.language.behavior.CallVariable a35_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a36_0 = null;

        org.kermeta.language.behavior.SelfExpression a37_0 = null;

        org.kermeta.language.behavior.StringLiteral a38_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a39_0 = null;

        org.kermeta.language.behavior.Expression a45_0 = null;

        org.kermeta.language.behavior.Expression a47_0 = null;

        org.kermeta.language.behavior.Expression a54_0 = null;

        org.kermeta.language.behavior.Expression a59_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16998:1: (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==34) ) {
                alt110=1;
            }
            else if ( (LA110_0==IDENTIFIER||(LA110_0>=INTEGER && LA110_0<=BOOLEAN)||(LA110_0>=83 && LA110_0<=84)||LA110_0==88||LA110_0==95) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16999:2: a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    a0=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_behavior_CallFeature14045); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 472));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 472));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17018:2: ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt92=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt92=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA92_2 = input.LA(2);

                        if ( (synpred224_Kermeta()) ) {
                            alt92=2;
                        }
                        else if ( (synpred227_Kermeta()) ) {
                            alt92=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 92, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 83:
                    case 84:
                        {
                        alt92=2;
                        }
                        break;
                    case 95:
                        {
                        alt92=3;
                        }
                        break;
                    case 88:
                        {
                        alt92=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt92=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 92, 0, input);

                        throw nvae;
                    }

                    switch (alt92) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17019:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17019:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17020:4: a1_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14068);
                            a1_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a1_0 != null) {
                              					if (a1_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
                              						completedElement(a1_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a1_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 473));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 473));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17051:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17051:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17052:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14102);
                            a2_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a2_0 != null) {
                              					if (a2_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
                              						completedElement(a2_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a2_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 474));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 474));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17083:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17083:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17084:4: a3_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14136);
                            a3_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a3_0 != null) {
                              					if (a3_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
                              						completedElement(a3_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a3_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 475));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 475));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17115:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17115:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17116:4: a4_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14170);
                            a4_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a4_0 != null) {
                              					if (a4_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
                              						completedElement(a4_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a4_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 476));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 476));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17147:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17147:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17148:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14204);
                            a5_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a5_0 != null) {
                              					if (a5_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
                              						completedElement(a5_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a5_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 477));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 477));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17179:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17179:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17180:4: a6_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14238);
                            a6_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a6_0 != null) {
                              					if (a6_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
                              						completedElement(a6_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a6_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 478));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 479));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 479));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17225:2: ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )*
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==89) ) {
                            alt96=1;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17226:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17226:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    int alt95=4;
                    	    int LA95_0 = input.LA(1);

                    	    if ( (LA95_0==89) ) {
                    	        int LA95_1 = input.LA(2);

                    	        if ( (LA95_1==IDENTIFIER) ) {
                    	            int LA95_2 = input.LA(3);

                    	            if ( (LA95_2==34) ) {
                    	                alt95=2;
                    	            }
                    	            else if ( (synpred228_Kermeta()) ) {
                    	                alt95=1;
                    	            }
                    	            else if ( (synpred232_Kermeta()) ) {
                    	                alt95=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt95=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 95, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 95, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 95, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt95) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17227:4: a7= '.' (a8= IDENTIFIER )
                    	            {
                    	            a7=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14277); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 480));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17239:4: (a8= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17240:5: a8= IDENTIFIER
                    	            {
                    	            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14303); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a8 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 481));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 481));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17286:8: a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')'
                    	            {
                    	            a9=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14344); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 482));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17298:4: (a10= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17299:5: a10= IDENTIFIER
                    	            {
                    	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14370); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a10 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 483));
                    	              			
                    	            }
                    	            a11=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_behavior_CallFeature14403); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 484));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17367:4: ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt94=2;
                    	            int LA94_0 = input.LA(1);

                    	            if ( (LA94_0==IDENTIFIER||(LA94_0>=INTEGER && LA94_0<=BOOLEAN)||LA94_0==34||LA94_0==39||LA94_0==57||LA94_0==71||(LA94_0>=74 && LA94_0<=75)||LA94_0==78||LA94_0==81||(LA94_0>=83 && LA94_0<=85)||LA94_0==88||(LA94_0>=95 && LA94_0<=96)||LA94_0==98) ) {
                    	                alt94=1;
                    	            }
                    	            switch (alt94) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17368:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17368:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17369:6: (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17369:6: (a12_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17370:7: a12_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14444);
                    	                    a12_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a12_0 != null) {
                    	                      								if (a12_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
                    	                      									completedElement(a12_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a12_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 485));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 485));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17392:6: ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop93:
                    	                    do {
                    	                        int alt93=2;
                    	                        int LA93_0 = input.LA(1);

                    	                        if ( (LA93_0==26) ) {
                    	                            alt93=1;
                    	                        }


                    	                        switch (alt93) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17393:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17393:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17394:8: a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a13=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature14499); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 486));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 486));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17425:8: (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17426:9: a14_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14541);
                    	                    	    a14_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a14_0 != null) {
                    	                    	      										if (a14_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
                    	                    	      											completedElement(a14_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a14_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 487));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 487));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop93;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 488));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 488));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 489));
                    	              			
                    	            }
                    	            a15=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature14645); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 490));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 490));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17485:8: a16= '.' (a17= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14673); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 491));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17497:4: (a17= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17498:5: a17= IDENTIFIER
                    	            {
                    	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14699); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a17 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 492));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 492));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17544:8: a18= '.' (a19= IDENTIFIER )
                    	            {
                    	            a18=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14740); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 493));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17556:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17557:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14766); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 494));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 494));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 495));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 495));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17618:2: (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==90) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==35||(LA101_0>=91 && LA101_0<=94)) ) {
                        alt101=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17619:3: a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')'
                            {
                            a20=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14816); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 496));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17650:3: (a21_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17651:4: a21_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14838);
                            a21_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a21_0 != null) {
                              					if (a21_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
                              						completedElement(a21_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a21_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 497));
                              		
                            }
                            a22=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature14861); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 498));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17727:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17727:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop98:
                            do {
                                int alt98=2;
                                int LA98_0 = input.LA(1);

                                if ( ((LA98_0>=91 && LA98_0<=94)) ) {
                                    alt98=1;
                                }


                                switch (alt98) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17728:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17728:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17729:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17729:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' )
                            	    int alt97=4;
                            	    switch ( input.LA(1) ) {
                            	    case 91:
                            	        {
                            	        alt97=1;
                            	        }
                            	        break;
                            	    case 92:
                            	        {
                            	        alt97=2;
                            	        }
                            	        break;
                            	    case 93:
                            	        {
                            	        alt97=3;
                            	        }
                            	        break;
                            	    case 94:
                            	        {
                            	        alt97=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 97, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt97) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17730:6: a23= '+'
                            	            {
                            	            a23=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14902); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 499));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17762:12: a24= '-'
                            	            {
                            	            a24=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature14940); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 500));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17794:12: a25= '/'
                            	            {
                            	            a25=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_CallFeature14978); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 501));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 501));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17826:12: a26= '*'
                            	            {
                            	            a26=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_CallFeature15016); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 502));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 502));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 503));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 503));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17882:5: (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17883:6: a27_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15065);
                            	    a27_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a27_0 != null) {
                            	      							if (a27_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a27_0);
                            	      								completedElement(a27_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a27_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 504));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 504));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 504));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 504));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 504));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop98;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 505));
                              		
                            }
                            a28=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature15116); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a28, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 506));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17977:3: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop100:
                            do {
                                int alt100=2;
                                switch ( input.LA(1) ) {
                                case 91:
                                    {
                                    int LA100_2 = input.LA(2);

                                    if ( (synpred242_Kermeta()) ) {
                                        alt100=1;
                                    }


                                    }
                                    break;
                                case 92:
                                    {
                                    int LA100_3 = input.LA(2);

                                    if ( (synpred242_Kermeta()) ) {
                                        alt100=1;
                                    }


                                    }
                                    break;
                                case 93:
                                    {
                                    int LA100_4 = input.LA(2);

                                    if ( (synpred242_Kermeta()) ) {
                                        alt100=1;
                                    }


                                    }
                                    break;
                                case 94:
                                    {
                                    int LA100_5 = input.LA(2);

                                    if ( (synpred242_Kermeta()) ) {
                                        alt100=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt100) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17978:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17978:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17979:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17979:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
                            	    int alt99=4;
                            	    switch ( input.LA(1) ) {
                            	    case 91:
                            	        {
                            	        alt99=1;
                            	        }
                            	        break;
                            	    case 92:
                            	        {
                            	        alt99=2;
                            	        }
                            	        break;
                            	    case 93:
                            	        {
                            	        alt99=3;
                            	        }
                            	        break;
                            	    case 94:
                            	        {
                            	        alt99=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 99, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt99) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17980:6: a29= '+'
                            	            {
                            	            a29=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15151); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 507));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 507));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18012:12: a30= '-'
                            	            {
                            	            a30=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature15189); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a30, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 508));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 508));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18044:12: a31= '/'
                            	            {
                            	            a31=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_CallFeature15227); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 509));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 509));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18076:12: a32= '*'
                            	            {
                            	            a32=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_CallFeature15265); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a32, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 510));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 510));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 511));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 511));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18132:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18133:6: a33_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15314);
                            	    a33_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a33_0 != null) {
                            	      							if (a33_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a33_0);
                            	      								completedElement(a33_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a33_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 512));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 512));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop100;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 513));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 513));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 514));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 514));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18302:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18302:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt102=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt102=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA102_2 = input.LA(2);

                        if ( (synpred245_Kermeta()) ) {
                            alt102=2;
                        }
                        else if ( (synpred248_Kermeta()) ) {
                            alt102=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 102, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 83:
                    case 84:
                        {
                        alt102=2;
                        }
                        break;
                    case 95:
                        {
                        alt102=3;
                        }
                        break;
                    case 88:
                        {
                        alt102=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt102=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 102, 0, input);

                        throw nvae;
                    }

                    switch (alt102) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18303:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18303:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18304:4: a34_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature15385);
                            a34_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a34_0 != null) {
                              					if (a34_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a34_0);
                              						completedElement(a34_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a34_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 515));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 515));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18377:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18377:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18378:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature15419);
                            a35_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a35_0 != null) {
                              					if (a35_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a35_0);
                              						completedElement(a35_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a35_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 516));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 516));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18451:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18451:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18452:4: a36_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature15453);
                            a36_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a36_0 != null) {
                              					if (a36_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a36_0);
                              						completedElement(a36_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a36_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 517));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 517));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18525:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18525:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18526:4: a37_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature15487);
                            a37_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a37_0 != null) {
                              					if (a37_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a37_0);
                              						completedElement(a37_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a37_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 518));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 518));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18599:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18599:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18600:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature15521);
                            a38_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a38_0 != null) {
                              					if (a38_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a38_0);
                              						completedElement(a38_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a38_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 519));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 519));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18673:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18673:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18674:4: a39_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature15555);
                            a39_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a39_0 != null) {
                              					if (a39_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a39_0);
                              						completedElement(a39_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a39_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 520));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 521));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 521));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18803:2: ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )*
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( (LA106_0==89) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18804:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18804:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    int alt105=4;
                    	    int LA105_0 = input.LA(1);

                    	    if ( (LA105_0==89) ) {
                    	        int LA105_1 = input.LA(2);

                    	        if ( (LA105_1==IDENTIFIER) ) {
                    	            int LA105_2 = input.LA(3);

                    	            if ( (LA105_2==34) ) {
                    	                alt105=2;
                    	            }
                    	            else if ( (synpred249_Kermeta()) ) {
                    	                alt105=1;
                    	            }
                    	            else if ( (synpred253_Kermeta()) ) {
                    	                alt105=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt105=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 105, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 105, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 105, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt105) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18805:4: a40= '.' (a41= IDENTIFIER )
                    	            {
                    	            a40=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15594); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 522));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18817:4: (a41= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18818:5: a41= IDENTIFIER
                    	            {
                    	            a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15620); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a41 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 523));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 523));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18906:8: a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')'
                    	            {
                    	            a42=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15661); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 524));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18918:4: (a43= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18919:5: a43= IDENTIFIER
                    	            {
                    	            a43=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15687); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a43 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a43.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a43).getLine(), ((org.antlr.runtime.CommonToken) a43).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a43).getStartIndex(), ((org.antlr.runtime.CommonToken) a43).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 525));
                    	              			
                    	            }
                    	            a44=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_behavior_CallFeature15720); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a44, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 526));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18987:4: ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt104=2;
                    	            int LA104_0 = input.LA(1);

                    	            if ( (LA104_0==IDENTIFIER||(LA104_0>=INTEGER && LA104_0<=BOOLEAN)||LA104_0==34||LA104_0==39||LA104_0==57||LA104_0==71||(LA104_0>=74 && LA104_0<=75)||LA104_0==78||LA104_0==81||(LA104_0>=83 && LA104_0<=85)||LA104_0==88||(LA104_0>=95 && LA104_0<=96)||LA104_0==98) ) {
                    	                alt104=1;
                    	            }
                    	            switch (alt104) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18988:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18988:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18989:6: (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18989:6: (a45_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18990:7: a45_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15761);
                    	                    a45_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a45_0 != null) {
                    	                      								if (a45_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a45_0);
                    	                      									completedElement(a45_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a45_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 527));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 527));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19012:6: ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop103:
                    	                    do {
                    	                        int alt103=2;
                    	                        int LA103_0 = input.LA(1);

                    	                        if ( (LA103_0==26) ) {
                    	                            alt103=1;
                    	                        }


                    	                        switch (alt103) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19013:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19013:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19014:8: a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a46=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature15816); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a46, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 528));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 528));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19045:8: (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19046:9: a47_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15858);
                    	                    	    a47_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a47_0 != null) {
                    	                    	      										if (a47_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a47_0);
                    	                    	      											completedElement(a47_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a47_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 529));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 529));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop103;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 530));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 530));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 531));
                    	              			
                    	            }
                    	            a48=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature15962); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a48, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 532));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 532));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19147:8: a49= '.' (a50= IDENTIFIER )
                    	            {
                    	            a49=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15990); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a49, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 533));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19159:4: (a50= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19160:5: a50= IDENTIFIER
                    	            {
                    	            a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature16016); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a50 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a50.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a50).getLine(), ((org.antlr.runtime.CommonToken) a50).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a50).getStartIndex(), ((org.antlr.runtime.CommonToken) a50).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 534));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 534));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19248:8: a51= '.' (a52= IDENTIFIER )
                    	            {
                    	            a51=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature16057); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a51, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 535));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19260:4: (a52= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19261:5: a52= IDENTIFIER
                    	            {
                    	            a52=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature16083); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a52 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a52.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a52).getLine(), ((org.antlr.runtime.CommonToken) a52).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a52).getStartIndex(), ((org.antlr.runtime.CommonToken) a52).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 536));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 536));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop106;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 537));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19406:2: (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==90) ) {
                        alt109=1;
                    }
                    else if ( (LA109_0==EOF||LA109_0==IDENTIFIER||(LA109_0>=INTEGER && LA109_0<=CASTED)||LA109_0==20||(LA109_0>=26 && LA109_0<=28)||LA109_0==30||(LA109_0>=32 && LA109_0<=35)||(LA109_0>=41 && LA109_0<=42)||LA109_0==49||LA109_0==57||(LA109_0>=71 && LA109_0<=73)||(LA109_0>=75 && LA109_0<=81)||(LA109_0>=83 && LA109_0<=86)||LA109_0==88||(LA109_0>=91 && LA109_0<=97)||(LA109_0>=99 && LA109_0<=100)) ) {
                        alt109=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 109, 0, input);

                        throw nvae;
                    }
                    switch (alt109) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19407:3: a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a53=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature16133); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a53, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 538));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 538));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19438:3: (a54_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19439:4: a54_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16155);
                            a54_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a54_0 != null) {
                              					if (a54_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a54_0);
                              						completedElement(a54_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a54_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 539));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 539));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19503:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19503:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop108:
                            do {
                                int alt108=2;
                                switch ( input.LA(1) ) {
                                case 91:
                                    {
                                    int LA108_2 = input.LA(2);

                                    if ( (synpred259_Kermeta()) ) {
                                        alt108=1;
                                    }


                                    }
                                    break;
                                case 92:
                                    {
                                    int LA108_3 = input.LA(2);

                                    if ( (synpred259_Kermeta()) ) {
                                        alt108=1;
                                    }


                                    }
                                    break;
                                case 93:
                                    {
                                    int LA108_4 = input.LA(2);

                                    if ( (synpred259_Kermeta()) ) {
                                        alt108=1;
                                    }


                                    }
                                    break;
                                case 94:
                                    {
                                    int LA108_5 = input.LA(2);

                                    if ( (synpred259_Kermeta()) ) {
                                        alt108=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt108) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19504:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19504:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19505:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19505:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
                            	    int alt107=4;
                            	    switch ( input.LA(1) ) {
                            	    case 91:
                            	        {
                            	        alt107=1;
                            	        }
                            	        break;
                            	    case 92:
                            	        {
                            	        alt107=2;
                            	        }
                            	        break;
                            	    case 93:
                            	        {
                            	        alt107=3;
                            	        }
                            	        break;
                            	    case 94:
                            	        {
                            	        alt107=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 107, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt107) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19506:6: a55= '+'
                            	            {
                            	            a55=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature16202); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a55, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 540));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 540));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19538:12: a56= '-'
                            	            {
                            	            a56=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature16240); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 541));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 541));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19570:12: a57= '/'
                            	            {
                            	            a57=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_CallFeature16278); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a57, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 542));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 542));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19602:12: a58= '*'
                            	            {
                            	            a58=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_CallFeature16316); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 543));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 543));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 544));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 544));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19658:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19659:6: a59_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16365);
                            	    a59_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a59_0 != null) {
                            	      							if (a59_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a59_0);
                            	      								completedElement(a59_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a59_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 545));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 545));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop108;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 546));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 546));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 547));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 547));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_kermeta_language_behavior_CallFeature_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallFeature"


    // $ANTLR start "parse_org_kermeta_language_behavior_JavaStaticCall"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19829:1: parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null] : a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' ;
    public final org.kermeta.language.behavior.JavaStaticCall parse_org_kermeta_language_behavior_JavaStaticCall() throws RecognitionException {
        org.kermeta.language.behavior.JavaStaticCall element =  null;
        int parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.behavior.Expression a5_0 = null;

        org.kermeta.language.behavior.Expression a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19832:1: (a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19833:2: a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')'
            {
            a0=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_JavaStaticCall16438); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 548));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19845:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19846:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16456); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 549));
              	
            }
            a2=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_JavaStaticCall16477); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 550));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19890:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19891:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16495); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 551));
              	
            }
            a4=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_behavior_JavaStaticCall16516); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 552));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19955:2: ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==IDENTIFIER||(LA112_0>=INTEGER && LA112_0<=BOOLEAN)||LA112_0==34||LA112_0==39||LA112_0==57||LA112_0==71||(LA112_0>=74 && LA112_0<=75)||LA112_0==78||LA112_0==81||(LA112_0>=83 && LA112_0<=85)||LA112_0==88||(LA112_0>=95 && LA112_0<=96)||LA112_0==98) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19956:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19956:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19957:4: (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19957:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19958:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16545);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 553));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 553));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19980:4: ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( (LA111_0==26) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19981:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19981:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19982:6: a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a6=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_behavior_JavaStaticCall16586); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 554));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 554));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20013:6: (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20014:7: a7_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16620);
                    	    a7_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      							}
                    	      							if (a7_0 != null) {
                    	      								if (a7_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a7_0);
                    	      									completedElement(a7_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a7_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 555));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 555));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop111;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 556));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 556));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 557));
              	
            }
            a8=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_behavior_JavaStaticCall16694); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 558));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_JavaStaticCall"


    // $ANTLR start "parse_org_kermeta_language_behavior_VoidLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20105:1: parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null] : a0= 'Void' ;
    public final org.kermeta.language.behavior.VoidLiteral parse_org_kermeta_language_behavior_VoidLiteral() throws RecognitionException {
        org.kermeta.language.behavior.VoidLiteral element =  null;
        int parse_org_kermeta_language_behavior_VoidLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20108:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20109:2: a0= 'Void'
            {
            a0=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_VoidLiteral16723); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 559));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 559));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_kermeta_language_behavior_VoidLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VoidLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallValue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20160:1: parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null] : a0= 'value' ;
    public final org.kermeta.language.behavior.CallValue parse_org_kermeta_language_behavior_CallValue() throws RecognitionException {
        org.kermeta.language.behavior.CallValue element =  null;
        int parse_org_kermeta_language_behavior_CallValue_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20163:1: (a0= 'value' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20164:2: a0= 'value'
            {
            a0=(Token)match(input,57,FOLLOW_57_in_parse_org_kermeta_language_behavior_CallValue16752); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 560));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_kermeta_language_behavior_CallValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallValue"


    // $ANTLR start "parse_org_kermeta_language_behavior_EmptyExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20218:1: parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null] : a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.EmptyExpression parse_org_kermeta_language_behavior_EmptyExpression() throws RecognitionException {
        org.kermeta.language.behavior.EmptyExpression element =  null;
        int parse_org_kermeta_language_behavior_EmptyExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20221:1: (a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20222:2: a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}'
            {
            a0=(Token)match(input,96,FOLLOW_96_in_parse_org_kermeta_language_behavior_EmptyExpression16781); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 561));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_EmptyExpression16795); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 562));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 562));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 562));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 562));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 562));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20250:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( ((LA114_0>=41 && LA114_0<=42)||LA114_0==49||LA114_0==97) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20251:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20251:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    int alt113=4;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt113=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt113=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt113=3;
            	        }
            	        break;
            	    case 97:
            	        {
            	        alt113=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 113, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt113) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20252:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_behavior_EmptyExpression16818); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 563));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression16838); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 564));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20276:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20277:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16864); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 565));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 565));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20318:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_behavior_EmptyExpression16905); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 566));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression16925); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 567));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20342:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20343:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16951);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 568));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20369:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_behavior_EmptyExpression16987); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 569));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression17007); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 570));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 570));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20404:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20405:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression17033);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 571));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20431:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,97,FOLLOW_97_in_parse_org_kermeta_language_behavior_EmptyExpression17069); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 572));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression17089); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 573));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20455:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20456:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression17115); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 574));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 575));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 575));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 575));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 575));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 575));
              	
            }
            a14=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_EmptyExpression17161); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 576));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 576));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_kermeta_language_behavior_EmptyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_EmptyExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20561:1: parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null] : a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' ;
    public final org.kermeta.language.behavior.LambdaExpression parse_org_kermeta_language_behavior_LambdaExpression() throws RecognitionException {
        org.kermeta.language.behavior.LambdaExpression element =  null;
        int parse_org_kermeta_language_behavior_LambdaExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.LambdaParameter a16_0 = null;

        org.kermeta.language.behavior.Expression a19_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20564:1: (a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20565:2: a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}'
            {
            a0=(Token)match(input,98,FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaExpression17190); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 577));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaExpression17204); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 578));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 578));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20595:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( ((LA116_0>=41 && LA116_0<=42)||LA116_0==49||LA116_0==97||(LA116_0>=99 && LA116_0<=100)) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20596:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20596:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    int alt115=6;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt115=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt115=2;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt115=3;
            	        }
            	        break;
            	    case 97:
            	        {
            	        alt115=4;
            	        }
            	        break;
            	    case 99:
            	        {
            	        alt115=5;
            	        }
            	        break;
            	    case 100:
            	        {
            	        alt115=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 115, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt115) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20597:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_behavior_LambdaExpression17227); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 579));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17247); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 580));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20621:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20622:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression17273); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 581));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 581));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 581));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 581));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 581));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 581));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 581));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20665:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_behavior_LambdaExpression17314); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 582));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17334); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 583));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20689:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20690:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression17360);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 584));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 584));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20718:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaExpression17396); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 585));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17416); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 586));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20753:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20754:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression17442);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 587));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 587));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20782:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,97,FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17478); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 588));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17498); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 589));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20806:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20807:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression17524); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 590));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 590));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20850:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            {
            	            a14=(Token)match(input,99,FOLLOW_99_in_parse_org_kermeta_language_behavior_LambdaExpression17565); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 591));
            	              			
            	            }
            	            a15=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17585); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_389, 592));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20874:4: (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20875:5: a16_0= parse_org_kermeta_language_behavior_LambdaParameter
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17611);
            	            a16_0=parse_org_kermeta_language_behavior_LambdaParameter();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 593));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20903:8: a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a17=(Token)match(input,100,FOLLOW_100_in_parse_org_kermeta_language_behavior_LambdaExpression17647); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_390, 594));
            	              			
            	            }
            	            a18=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17667); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 595));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 595));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20946:4: (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20947:5: a19_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17693);
            	            a19_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a19_0 != null) {
            	              						if (a19_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
            	              							completedElement(a19_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a19_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 596));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 597));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 597));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 597));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 597));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 597));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 597));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 597));
              	
            }
            a20=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaExpression17734); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 598));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 598));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_kermeta_language_behavior_LambdaExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaParameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21038:1: parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null] : a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.LambdaParameter parse_org_kermeta_language_behavior_LambdaParameter() throws RecognitionException {
        org.kermeta.language.behavior.LambdaParameter element =  null;
        int parse_org_kermeta_language_behavior_LambdaParameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.behavior.TypeReference a13_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21041:1: (a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21042:2: a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}'
            {
            a0=(Token)match(input,101,FOLLOW_101_in_parse_org_kermeta_language_behavior_LambdaParameter17763); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 599));
              	
            }
            a1=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaParameter17777); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 600));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 600));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 600));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 600));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 600));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21070:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( ((LA118_0>=41 && LA118_0<=42)||LA118_0==46||LA118_0==51) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21071:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21071:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    int alt117=4;
            	    switch ( input.LA(1) ) {
            	    case 41:
            	        {
            	        alt117=1;
            	        }
            	        break;
            	    case 42:
            	        {
            	        alt117=2;
            	        }
            	        break;
            	    case 46:
            	        {
            	        alt117=3;
            	        }
            	        break;
            	    case 51:
            	        {
            	        alt117=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 117, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt117) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21072:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_behavior_LambdaParameter17800); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 601));
            	              			
            	            }
            	            a3=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter17820); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 602));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21096:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21097:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17846); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 603));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 603));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 603));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 603));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 603));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21138:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_behavior_LambdaParameter17887); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_394, 604));
            	              			
            	            }
            	            a6=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter17907); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 605));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21162:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21163:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17933);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 606));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 606));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 606));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 606));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 606));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21189:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_behavior_LambdaParameter17969); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_395, 607));
            	              			
            	            }
            	            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter17989); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_396, 608));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21213:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21214:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter18015); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 609));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 609));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 609));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 609));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 609));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21251:8: a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            {
            	            a11=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_behavior_LambdaParameter18056); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_397, 610));
            	              			
            	            }
            	            a12=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter18076); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 611));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21275:4: (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21276:5: a13_0= parse_org_kermeta_language_behavior_TypeReference
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter18102);
            	            a13_0=parse_org_kermeta_language_behavior_TypeReference();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a13_0 != null) {
            	              						if (a13_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
            	              							completedElement(a13_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a13_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 612));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 612));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 612));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 612));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 612));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 613));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 613));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 613));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 613));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 613));
              	
            }
            a14=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaParameter18143); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 614));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 614));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 614));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 614));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 614));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 614));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 614));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_kermeta_language_behavior_LambdaParameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaParameter"


    // $ANTLR start "parse_org_kermeta_language_behavior_Expression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21332:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );
    public final org.kermeta.language.behavior.Expression parse_org_kermeta_language_behavior_Expression() throws RecognitionException {
        org.kermeta.language.behavior.Expression element =  null;
        int parse_org_kermeta_language_behavior_Expression_StartIndex = input.index();
        org.kermeta.language.behavior.Block c0 = null;

        org.kermeta.language.behavior.Raise c1 = null;

        org.kermeta.language.behavior.BooleanLiteral c2 = null;

        org.kermeta.language.behavior.IntegerLiteral c3 = null;

        org.kermeta.language.behavior.StringLiteral c4 = null;

        org.kermeta.language.behavior.Conditional c5 = null;

        org.kermeta.language.behavior.Loop c6 = null;

        org.kermeta.language.behavior.VariableDecl c7 = null;

        org.kermeta.language.behavior.TypeLiteral c8 = null;

        org.kermeta.language.behavior.CallResult c9 = null;

        org.kermeta.language.behavior.CallSuperOperation c10 = null;

        org.kermeta.language.behavior.Assignment c11 = null;

        org.kermeta.language.behavior.CallVariable c12 = null;

        org.kermeta.language.behavior.SelfExpression c13 = null;

        org.kermeta.language.behavior.CallFeature c14 = null;

        org.kermeta.language.behavior.JavaStaticCall c15 = null;

        org.kermeta.language.behavior.VoidLiteral c16 = null;

        org.kermeta.language.behavior.CallValue c17 = null;

        org.kermeta.language.behavior.EmptyExpression c18 = null;

        org.kermeta.language.behavior.LambdaExpression c19 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21333:1: (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression )
            int alt119=20;
            alt119 = dfa119.predict(input);
            switch (alt119) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21334:2: c0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression18168);
                    c0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21335:4: c1= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression18178);
                    c1=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21336:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression18188);
                    c2=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21337:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression18198);
                    c3=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21338:4: c4= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression18208);
                    c4=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21339:4: c5= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression18218);
                    c5=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21340:4: c6= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression18228);
                    c6=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21341:4: c7= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression18238);
                    c7=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21342:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression18248);
                    c8=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21343:4: c9= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression18258);
                    c9=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21344:4: c10= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression18268);
                    c10=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21345:4: c11= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression18278);
                    c11=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21346:4: c12= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression18288);
                    c12=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21347:4: c13= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression18298);
                    c13=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21348:4: c14= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression18308);
                    c14=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21349:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression18318);
                    c15=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21350:4: c16= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression18328);
                    c16=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21351:4: c17= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression18338);
                    c17=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21352:4: c18= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression18348);
                    c18=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21353:4: c19= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression18358);
                    c19=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_kermeta_language_behavior_Expression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Expression"


    // $ANTLR start "parse_org_kermeta_language_structure_Type"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21357:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );
    public final org.kermeta.language.structure.Type parse_org_kermeta_language_structure_Type() throws RecognitionException {
        org.kermeta.language.structure.Type element =  null;
        int parse_org_kermeta_language_structure_Type_StartIndex = input.index();
        org.kermeta.language.structure.Class c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.UnresolvedType c3 = null;

        org.kermeta.language.structure.VoidType c4 = null;

        org.kermeta.language.structure.ModelType c5 = null;

        org.kermeta.language.structure.ObjectTypeVariable c6 = null;

        org.kermeta.language.structure.ModelTypeVariable c7 = null;

        org.kermeta.language.structure.VirtualType c8 = null;

        org.kermeta.language.structure.ProductType c9 = null;

        org.kermeta.language.structure.FunctionType c10 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21358:1: (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType )
            int alt120=11;
            alt120 = dfa120.predict(input);
            switch (alt120) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21359:2: c0= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type18379);
                    c0=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21360:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type18389);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21361:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type18399);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21362:4: c3= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type18409);
                    c3=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21363:4: c4= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type18419);
                    c4=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21364:4: c5= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type18429);
                    c5=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21365:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type18439);
                    c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21366:4: c7= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type18449);
                    c7=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21367:4: c8= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type18459);
                    c8=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21368:4: c9= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type18469);
                    c9=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21369:4: c10= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type18479);
                    c10=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_kermeta_language_structure_Type_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Type"

    // $ANTLR start synpred1_Kermeta
    public final void synpred1_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4552:3: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4552:3: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_Kermeta

    // $ANTLR start synpred3_Kermeta
    public final void synpred3_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4554:8: (c2= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4554:8: c2= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110);
        c2=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_Kermeta

    // $ANTLR start synpred4_Kermeta
    public final void synpred4_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4555:8: (c3= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4555:8: c3= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124);
        c3=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_Kermeta

    // $ANTLR start synpred5_Kermeta
    public final void synpred5_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4556:8: (c4= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4556:8: c4= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138);
        c4=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_Kermeta

    // $ANTLR start synpred6_Kermeta
    public final void synpred6_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4557:8: (c5= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4557:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152);
        c5=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_Kermeta

    // $ANTLR start synpred11_Kermeta
    public final void synpred11_Kermeta_fragment() throws RecognitionException {   
        Token a1=null;
        org.kermeta.language.structure.Package a2_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4852:3: ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4852:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4852:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4853:4: a1= '::' (a2_0= parse_org_kermeta_language_structure_Package )
        {
        a1=(Token)match(input,18,FOLLOW_18_in_synpred11_Kermeta539); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4866:4: (a2_0= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4867:5: a2_0= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred11_Kermeta565);
        a2_0=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred11_Kermeta

    // $ANTLR start synpred13_Kermeta
    public final void synpred13_Kermeta_fragment() throws RecognitionException {   
        Token a3=null;
        Token a5=null;
        org.kermeta.language.structure.Package a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4923:4: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4923:4: a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}'
        {
        a3=(Token)match(input,19,FOLLOW_19_in_synpred13_Kermeta615); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4937:4: ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )*
        loop121:
        do {
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==IDENTIFIER||LA121_0==21) ) {
                alt121=1;
            }


            switch (alt121) {
        	case 1 :
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4938:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4938:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4939:6: (a4_0= parse_org_kermeta_language_structure_Package )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4939:6: (a4_0= parse_org_kermeta_language_structure_Package )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4940:7: a4_0= parse_org_kermeta_language_structure_Package
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred13_Kermeta656);
        	    a4_0=parse_org_kermeta_language_structure_Package();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop121;
            }
        } while (true);

        a5=(Token)match(input,20,FOLLOW_20_in_synpred13_Kermeta717); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_Kermeta

    // $ANTLR start synpred15_Kermeta
    public final void synpred15_Kermeta_fragment() throws RecognitionException {   
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.TypeDefinition a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4998:8: (a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4998:8: a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}'
        {
        a6=(Token)match(input,19,FOLLOW_19_in_synpred15_Kermeta745); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5018:4: ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
        int cnt122=0;
        loop122:
        do {
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=IDENTIFIER && LA122_0<=PRIMITIVE_TYPE)||(LA122_0>=22 && LA122_0<=24)||LA122_0==37||LA122_0==44||LA122_0==55) ) {
                alt122=1;
            }


            switch (alt122) {
        	case 1 :
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5021:7: a7_0= parse_org_kermeta_language_structure_TypeDefinition
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred15_Kermeta786);
        	    a7_0=parse_org_kermeta_language_structure_TypeDefinition();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt122 >= 1 ) break loop122;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(122, input);
                    throw eee;
            }
            cnt122++;
        } while (true);

        a8=(Token)match(input,20,FOLLOW_20_in_synpred15_Kermeta847); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_Kermeta

    // $ANTLR start synpred16_Kermeta
    public final void synpred16_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5095:6: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5095:6: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5096:7: a9_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred16_Kermeta896);
        a9_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred16_Kermeta

    // $ANTLR start synpred17_Kermeta
    public final void synpred17_Kermeta_fragment() throws RecognitionException {   
        Token a3=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Package a4_0 = null;

        org.kermeta.language.structure.TypeDefinition a7_0 = null;

        org.kermeta.language.structure.TypeDefinition a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4922:3: ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4922:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4922:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
        int alt126=3;
        alt126 = dfa126.predict(input);
        switch (alt126) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4923:4: a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}'
                {
                a3=(Token)match(input,19,FOLLOW_19_in_synpred17_Kermeta615); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4937:4: ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )*
                loop123:
                do {
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( (LA123_0==IDENTIFIER||LA123_0==21) ) {
                        alt123=1;
                    }


                    switch (alt123) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4938:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4938:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4939:6: (a4_0= parse_org_kermeta_language_structure_Package )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4939:6: (a4_0= parse_org_kermeta_language_structure_Package )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4940:7: a4_0= parse_org_kermeta_language_structure_Package
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred17_Kermeta656);
                	    a4_0=parse_org_kermeta_language_structure_Package();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop123;
                    }
                } while (true);

                a5=(Token)match(input,20,FOLLOW_20_in_synpred17_Kermeta717); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4998:8: a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}'
                {
                a6=(Token)match(input,19,FOLLOW_19_in_synpred17_Kermeta745); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5018:4: ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt124=0;
                loop124:
                do {
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( ((LA124_0>=IDENTIFIER && LA124_0<=PRIMITIVE_TYPE)||(LA124_0>=22 && LA124_0<=24)||LA124_0==37||LA124_0==44||LA124_0==55) ) {
                        alt124=1;
                    }


                    switch (alt124) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5021:7: a7_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta786);
                	    a7_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt124 >= 1 ) break loop124;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(124, input);
                            throw eee;
                    }
                    cnt124++;
                } while (true);

                a8=(Token)match(input,20,FOLLOW_20_in_synpred17_Kermeta847); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5093:8: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                {
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5093:8: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt125=0;
                loop125:
                do {
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( ((LA125_0>=IDENTIFIER && LA125_0<=PRIMITIVE_TYPE)||(LA125_0>=22 && LA125_0<=24)||LA125_0==37||LA125_0==44||LA125_0==55) ) {
                        alt125=1;
                    }


                    switch (alt125) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5094:5: ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5095:6: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5095:6: (a9_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5096:7: a9_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta896);
                	    a9_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt125 >= 1 ) break loop125;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(125, input);
                            throw eee;
                    }
                    cnt125++;
                } while (true);


                }
                break;

        }


        }
    }
    // $ANTLR end synpred17_Kermeta

    // $ANTLR start synpred19_Kermeta
    public final void synpred19_Kermeta_fragment() throws RecognitionException {   
        Token a12=null;
        org.kermeta.language.structure.Package a13_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5233:3: ( (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5233:3: (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5233:3: (a12= '::' (a13_0= parse_org_kermeta_language_structure_Package ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5234:4: a12= '::' (a13_0= parse_org_kermeta_language_structure_Package )
        {
        a12=(Token)match(input,18,FOLLOW_18_in_synpred19_Kermeta1022); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5247:4: (a13_0= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5248:5: a13_0= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred19_Kermeta1048);
        a13_0=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_Kermeta

    // $ANTLR start synpred21_Kermeta
    public final void synpred21_Kermeta_fragment() throws RecognitionException {   
        Token a14=null;
        Token a16=null;
        org.kermeta.language.structure.Package a15_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5310:4: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5310:4: a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}'
        {
        a14=(Token)match(input,19,FOLLOW_19_in_synpred21_Kermeta1098); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5324:4: ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )*
        loop133:
        do {
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==IDENTIFIER||LA133_0==21) ) {
                alt133=1;
            }


            switch (alt133) {
        	case 1 :
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:5: ( (a15_0= parse_org_kermeta_language_structure_Package ) )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:5: ( (a15_0= parse_org_kermeta_language_structure_Package ) )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5326:6: (a15_0= parse_org_kermeta_language_structure_Package )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5326:6: (a15_0= parse_org_kermeta_language_structure_Package )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5327:7: a15_0= parse_org_kermeta_language_structure_Package
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred21_Kermeta1139);
        	    a15_0=parse_org_kermeta_language_structure_Package();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop133;
            }
        } while (true);

        a16=(Token)match(input,20,FOLLOW_20_in_synpred21_Kermeta1200); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_Kermeta

    // $ANTLR start synpred23_Kermeta
    public final void synpred23_Kermeta_fragment() throws RecognitionException {   
        Token a17=null;
        Token a19=null;
        org.kermeta.language.structure.TypeDefinition a18_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5385:8: (a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5385:8: a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}'
        {
        a17=(Token)match(input,19,FOLLOW_19_in_synpred23_Kermeta1228); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5405:4: ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
        int cnt134=0;
        loop134:
        do {
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( ((LA134_0>=IDENTIFIER && LA134_0<=PRIMITIVE_TYPE)||(LA134_0>=22 && LA134_0<=24)||LA134_0==37||LA134_0==44||LA134_0==55) ) {
                alt134=1;
            }


            switch (alt134) {
        	case 1 :
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5406:5: ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5406:5: ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5407:6: (a18_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5407:6: (a18_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5408:7: a18_0= parse_org_kermeta_language_structure_TypeDefinition
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred23_Kermeta1269);
        	    a18_0=parse_org_kermeta_language_structure_TypeDefinition();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt134 >= 1 ) break loop134;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(134, input);
                    throw eee;
            }
            cnt134++;
        } while (true);

        a19=(Token)match(input,20,FOLLOW_20_in_synpred23_Kermeta1330); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred23_Kermeta

    // $ANTLR start synpred24_Kermeta
    public final void synpred24_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a20_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5482:6: (a20_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5482:6: (a20_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5483:7: a20_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred24_Kermeta1379);
        a20_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred24_Kermeta

    // $ANTLR start synpred25_Kermeta
    public final void synpred25_Kermeta_fragment() throws RecognitionException {   
        Token a14=null;
        Token a16=null;
        Token a17=null;
        Token a19=null;
        org.kermeta.language.structure.Package a15_0 = null;

        org.kermeta.language.structure.TypeDefinition a18_0 = null;

        org.kermeta.language.structure.TypeDefinition a20_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5309:3: ( (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5309:3: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5309:3: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )
        int alt138=3;
        alt138 = dfa138.predict(input);
        switch (alt138) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5310:4: a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}'
                {
                a14=(Token)match(input,19,FOLLOW_19_in_synpred25_Kermeta1098); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5324:4: ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )*
                loop135:
                do {
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==IDENTIFIER||LA135_0==21) ) {
                        alt135=1;
                    }


                    switch (alt135) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:5: ( (a15_0= parse_org_kermeta_language_structure_Package ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5325:5: ( (a15_0= parse_org_kermeta_language_structure_Package ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5326:6: (a15_0= parse_org_kermeta_language_structure_Package )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5326:6: (a15_0= parse_org_kermeta_language_structure_Package )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5327:7: a15_0= parse_org_kermeta_language_structure_Package
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred25_Kermeta1139);
                	    a15_0=parse_org_kermeta_language_structure_Package();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop135;
                    }
                } while (true);

                a16=(Token)match(input,20,FOLLOW_20_in_synpred25_Kermeta1200); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5385:8: a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}'
                {
                a17=(Token)match(input,19,FOLLOW_19_in_synpred25_Kermeta1228); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5405:4: ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt136=0;
                loop136:
                do {
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( ((LA136_0>=IDENTIFIER && LA136_0<=PRIMITIVE_TYPE)||(LA136_0>=22 && LA136_0<=24)||LA136_0==37||LA136_0==44||LA136_0==55) ) {
                        alt136=1;
                    }


                    switch (alt136) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5406:5: ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5406:5: ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5407:6: (a18_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5407:6: (a18_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5408:7: a18_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred25_Kermeta1269);
                	    a18_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt136 >= 1 ) break loop136;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(136, input);
                            throw eee;
                    }
                    cnt136++;
                } while (true);

                a19=(Token)match(input,20,FOLLOW_20_in_synpred25_Kermeta1330); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5480:8: ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                {
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5480:8: ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt137=0;
                loop137:
                do {
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( ((LA137_0>=IDENTIFIER && LA137_0<=PRIMITIVE_TYPE)||(LA137_0>=22 && LA137_0<=24)||LA137_0==37||LA137_0==44||LA137_0==55) ) {
                        alt137=1;
                    }


                    switch (alt137) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5481:5: ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5482:6: (a20_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5482:6: (a20_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5483:7: a20_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred25_Kermeta1379);
                	    a20_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt137 >= 1 ) break loop137;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(137, input);
                            throw eee;
                    }
                    cnt137++;
                } while (true);


                }
                break;

        }


        }
    }
    // $ANTLR end synpred25_Kermeta

    // $ANTLR start synpred30_Kermeta
    public final void synpred30_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5790:3: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5790:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5790:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5791:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5791:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5792:5: a9_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred30_Kermeta1816);
        a9_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred30_Kermeta

    // $ANTLR start synpred39_Kermeta
    public final void synpred39_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6351:3: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6351:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6351:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6352:4: a0_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred39_Kermeta2455);
        a0_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred39_Kermeta

    // $ANTLR start synpred51_Kermeta
    public final void synpred51_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7799:2: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7799:2: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred51_Kermeta3976);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_Kermeta

    // $ANTLR start synpred52_Kermeta
    public final void synpred52_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Using c1 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7800:4: (c1= parse_org_kermeta_language_structure_Using )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7800:4: c1= parse_org_kermeta_language_structure_Using
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred52_Kermeta3986);
        c1=parse_org_kermeta_language_structure_Using();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_Kermeta

    // $ANTLR start synpred53_Kermeta
    public final void synpred53_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Require c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7801:4: (c2= parse_org_kermeta_language_structure_Require )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7801:4: c2= parse_org_kermeta_language_structure_Require
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred53_Kermeta3996);
        c2=parse_org_kermeta_language_structure_Require();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_Kermeta

    // $ANTLR start synpred54_Kermeta
    public final void synpred54_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Package c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7802:4: (c3= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7802:4: c3= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred54_Kermeta4006);
        c3=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_Kermeta

    // $ANTLR start synpred55_Kermeta
    public final void synpred55_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ClassDefinition c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7803:4: (c4= parse_org_kermeta_language_structure_ClassDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7803:4: c4= parse_org_kermeta_language_structure_ClassDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred55_Kermeta4016);
        c4=parse_org_kermeta_language_structure_ClassDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_Kermeta

    // $ANTLR start synpred56_Kermeta
    public final void synpred56_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7804:4: (c5= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7804:4: c5= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred56_Kermeta4026);
        c5=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_Kermeta

    // $ANTLR start synpred57_Kermeta
    public final void synpred57_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7805:4: (c6= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7805:4: c6= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred57_Kermeta4036);
        c6=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_Kermeta

    // $ANTLR start synpred58_Kermeta
    public final void synpred58_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c7 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7806:4: (c7= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7806:4: c7= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred58_Kermeta4046);
        c7=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_Kermeta

    // $ANTLR start synpred59_Kermeta
    public final void synpred59_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7807:4: (c8= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7807:4: c8= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred59_Kermeta4056);
        c8=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred59_Kermeta

    // $ANTLR start synpred60_Kermeta
    public final void synpred60_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Enumeration c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7808:4: (c9= parse_org_kermeta_language_structure_Enumeration )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7808:4: c9= parse_org_kermeta_language_structure_Enumeration
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred60_Kermeta4066);
        c9=parse_org_kermeta_language_structure_Enumeration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_Kermeta

    // $ANTLR start synpred61_Kermeta
    public final void synpred61_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.EnumerationLiteral c10 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7809:4: (c10= parse_org_kermeta_language_structure_EnumerationLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7809:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred61_Kermeta4076);
        c10=parse_org_kermeta_language_structure_EnumerationLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_Kermeta

    // $ANTLR start synpred62_Kermeta
    public final void synpred62_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7810:4: (c11= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7810:4: c11= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred62_Kermeta4086);
        c11=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_Kermeta

    // $ANTLR start synpred63_Kermeta
    public final void synpred63_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.PrimitiveType c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7811:4: (c12= parse_org_kermeta_language_structure_PrimitiveType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7811:4: c12= parse_org_kermeta_language_structure_PrimitiveType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred63_Kermeta4096);
        c12=parse_org_kermeta_language_structure_PrimitiveType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_Kermeta

    // $ANTLR start synpred64_Kermeta
    public final void synpred64_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7812:4: (c13= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7812:4: c13= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred64_Kermeta4106);
        c13=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_Kermeta

    // $ANTLR start synpred65_Kermeta
    public final void synpred65_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VoidType c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7813:4: (c14= parse_org_kermeta_language_structure_VoidType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7813:4: c14= parse_org_kermeta_language_structure_VoidType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred65_Kermeta4116);
        c14=parse_org_kermeta_language_structure_VoidType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_Kermeta

    // $ANTLR start synpred67_Kermeta
    public final void synpred67_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c16 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7815:4: (c16= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7815:4: c16= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred67_Kermeta4136);
        c16=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_Kermeta

    // $ANTLR start synpred69_Kermeta
    public final void synpred69_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c18 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7817:4: (c18= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7817:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred69_Kermeta4156);
        c18=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_Kermeta

    // $ANTLR start synpred70_Kermeta
    public final void synpred70_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition c19 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7818:4: (c19= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7818:4: c19= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred70_Kermeta4166);
        c19=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_Kermeta

    // $ANTLR start synpred72_Kermeta
    public final void synpred72_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c21 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7820:4: (c21= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7820:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred72_Kermeta4186);
        c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_Kermeta

    // $ANTLR start synpred74_Kermeta
    public final void synpred74_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c23 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7822:4: (c23= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7822:4: c23= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred74_Kermeta4206);
        c23=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_Kermeta

    // $ANTLR start synpred79_Kermeta
    public final void synpred79_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeReference c28 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7827:4: (c28= parse_org_kermeta_language_behavior_TypeReference )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7827:4: c28= parse_org_kermeta_language_behavior_TypeReference
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred79_Kermeta4256);
        c28=parse_org_kermeta_language_behavior_TypeReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_Kermeta

    // $ANTLR start synpred81_Kermeta
    public final void synpred81_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c30 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7829:4: (c30= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7829:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred81_Kermeta4276);
        c30=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred81_Kermeta

    // $ANTLR start synpred82_Kermeta
    public final void synpred82_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c31 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7830:4: (c31= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7830:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred82_Kermeta4286);
        c31=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_Kermeta

    // $ANTLR start synpred83_Kermeta
    public final void synpred83_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c32 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7831:4: (c32= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7831:4: c32= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred83_Kermeta4296);
        c32=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_Kermeta

    // $ANTLR start synpred87_Kermeta
    public final void synpred87_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c36 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7835:4: (c36= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7835:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred87_Kermeta4336);
        c36=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_Kermeta

    // $ANTLR start synpred88_Kermeta
    public final void synpred88_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c37 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7836:4: (c37= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7836:4: c37= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred88_Kermeta4346);
        c37=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_Kermeta

    // $ANTLR start synpred90_Kermeta
    public final void synpred90_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c39 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7838:4: (c39= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7838:4: c39= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred90_Kermeta4366);
        c39=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_Kermeta

    // $ANTLR start synpred91_Kermeta
    public final void synpred91_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c40 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7839:4: (c40= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7839:4: c40= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred91_Kermeta4376);
        c40=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred91_Kermeta

    // $ANTLR start synpred92_Kermeta
    public final void synpred92_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c41 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7840:4: (c41= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7840:4: c41= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred92_Kermeta4386);
        c41=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred92_Kermeta

    // $ANTLR start synpred93_Kermeta
    public final void synpred93_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c42 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7841:4: (c42= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7841:4: c42= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred93_Kermeta4396);
        c42=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_Kermeta

    // $ANTLR start synpred94_Kermeta
    public final void synpred94_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c43 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7842:4: (c43= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7842:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred94_Kermeta4406);
        c43=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_Kermeta

    // $ANTLR start synpred95_Kermeta
    public final void synpred95_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.VoidLiteral c44 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7843:4: (c44= parse_org_kermeta_language_behavior_VoidLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7843:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred95_Kermeta4416);
        c44=parse_org_kermeta_language_behavior_VoidLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_Kermeta

    // $ANTLR start synpred112_Kermeta
    public final void synpred112_Kermeta_fragment() throws RecognitionException {   
        Token a0=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8891:3: ( (a0= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8891:3: (a0= IDENTIFIER )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8891:3: (a0= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8892:4: a0= IDENTIFIER
        {
        a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred112_Kermeta5766); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred112_Kermeta

    // $ANTLR start synpred175_Kermeta
    public final void synpred175_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13150:8: ( (a4_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13150:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13150:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13151:5: a4_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred175_Kermeta10798);
        a4_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred175_Kermeta

    // $ANTLR start synpred176_Kermeta
    public final void synpred176_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13190:8: ( (a5_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13190:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13190:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13191:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred176_Kermeta10840);
        a5_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred176_Kermeta

    // $ANTLR start synpred177_Kermeta
    public final void synpred177_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13230:8: ( (a6_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13230:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13230:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13231:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred177_Kermeta10882);
        a6_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred177_Kermeta

    // $ANTLR start synpred179_Kermeta
    public final void synpred179_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a8_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13310:8: ( (a8_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13310:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13310:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13311:5: a8_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred179_Kermeta10966);
        a8_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred179_Kermeta

    // $ANTLR start synpred180_Kermeta
    public final void synpred180_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13350:8: ( (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13350:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13350:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13351:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred180_Kermeta11008);
        a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred180_Kermeta

    // $ANTLR start synpred188_Kermeta
    public final void synpred188_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:3: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14351:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14352:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred188_Kermeta11821);
        a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred188_Kermeta

    // $ANTLR start synpred190_Kermeta
    public final void synpred190_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14425:6: ( (a6_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14425:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14425:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14426:4: a6_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred190_Kermeta11889);
        a6_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred190_Kermeta

    // $ANTLR start synpred191_Kermeta
    public final void synpred191_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:6: ( (a7_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14462:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14463:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred191_Kermeta11923);
        a7_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred191_Kermeta

    // $ANTLR start synpred193_Kermeta
    public final void synpred193_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14536:6: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14536:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14536:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14537:4: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred193_Kermeta11991);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred193_Kermeta

    // $ANTLR start synpred194_Kermeta
    public final void synpred194_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a10_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14573:6: ( (a10_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14573:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14573:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14574:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred194_Kermeta12025);
        a10_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred194_Kermeta

    // $ANTLR start synpred198_Kermeta
    public final void synpred198_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a16_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14763:8: ( (a16_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14763:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14763:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14764:5: a16_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred198_Kermeta12242);
        a16_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred198_Kermeta

    // $ANTLR start synpred199_Kermeta
    public final void synpred199_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a17_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14786:8: ( (a17_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14786:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14786:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14787:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred199_Kermeta12284);
        a17_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred199_Kermeta

    // $ANTLR start synpred201_Kermeta
    public final void synpred201_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a19_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14832:8: ( (a19_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14832:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14832:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14833:5: a19_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred201_Kermeta12368);
        a19_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred201_Kermeta

    // $ANTLR start synpred205_Kermeta
    public final void synpred205_Kermeta_fragment() throws RecognitionException {   
        Token a4=null;
        org.kermeta.language.behavior.Expression a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15147:3: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15147:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15147:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15148:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        a4=(Token)match(input,80,FOLLOW_80_in_synpred205_Kermeta12671); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15179:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15180:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15180:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15181:6: a5_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred205_Kermeta12704);
        a5_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred205_Kermeta

    // $ANTLR start synpred210_Kermeta
    public final void synpred210_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15955:4: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15955:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15955:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15956:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred210_Kermeta13288);
        a0_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred210_Kermeta

    // $ANTLR start synpred211_Kermeta
    public final void synpred211_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a1_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15979:8: ( (a1_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15979:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15979:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15980:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred211_Kermeta13330);
        a1_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred211_Kermeta

    // $ANTLR start synpred213_Kermeta
    public final void synpred213_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16132:4: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16132:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16132:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16133:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred213_Kermeta13523);
        a6_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred213_Kermeta

    // $ANTLR start synpred214_Kermeta
    public final void synpred214_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16195:8: ( (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16195:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16195:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16196:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred214_Kermeta13565);
        a7_0=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred214_Kermeta

    // $ANTLR start synpred216_Kermeta
    public final void synpred216_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16321:8: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16321:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16321:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16322:5: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred216_Kermeta13649);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred216_Kermeta

    // $ANTLR start synpred218_Kermeta
    public final void synpred218_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a11_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16447:8: ( (a11_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16447:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16447:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16448:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred218_Kermeta13733);
        a11_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred218_Kermeta

    // $ANTLR start synpred220_Kermeta
    public final void synpred220_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16573:8: ( (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16573:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16573:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16574:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred220_Kermeta13817);
        a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred220_Kermeta

    // $ANTLR start synpred221_Kermeta
    public final void synpred221_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16636:8: ( (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16636:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16636:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16637:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred221_Kermeta13859);
        a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred221_Kermeta

    // $ANTLR start synpred224_Kermeta
    public final void synpred224_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a2_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17051:6: ( (a2_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17051:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17051:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17052:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred224_Kermeta14102);
        a2_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred224_Kermeta

    // $ANTLR start synpred227_Kermeta
    public final void synpred227_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17147:6: ( (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17147:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17147:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17148:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred227_Kermeta14204);
        a5_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred227_Kermeta

    // $ANTLR start synpred228_Kermeta
    public final void synpred228_Kermeta_fragment() throws RecognitionException {   
        Token a7=null;
        Token a8=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17227:4: (a7= '.' (a8= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17227:4: a7= '.' (a8= IDENTIFIER )
        {
        a7=(Token)match(input,89,FOLLOW_89_in_synpred228_Kermeta14277); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17239:4: (a8= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17240:5: a8= IDENTIFIER
        {
        a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred228_Kermeta14303); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred228_Kermeta

    // $ANTLR start synpred232_Kermeta
    public final void synpred232_Kermeta_fragment() throws RecognitionException {   
        Token a16=null;
        Token a17=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17485:8: (a16= '.' (a17= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17485:8: a16= '.' (a17= IDENTIFIER )
        {
        a16=(Token)match(input,89,FOLLOW_89_in_synpred232_Kermeta14673); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17497:4: (a17= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17498:5: a17= IDENTIFIER
        {
        a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred232_Kermeta14699); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred232_Kermeta

    // $ANTLR start synpred242_Kermeta
    public final void synpred242_Kermeta_fragment() throws RecognitionException {   
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        org.kermeta.language.behavior.Expression a33_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17978:4: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17978:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17978:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17979:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17979:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
        int alt179=4;
        switch ( input.LA(1) ) {
        case 91:
            {
            alt179=1;
            }
            break;
        case 92:
            {
            alt179=2;
            }
            break;
        case 93:
            {
            alt179=3;
            }
            break;
        case 94:
            {
            alt179=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 179, 0, input);

            throw nvae;
        }

        switch (alt179) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17980:6: a29= '+'
                {
                a29=(Token)match(input,91,FOLLOW_91_in_synpred242_Kermeta15151); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18012:12: a30= '-'
                {
                a30=(Token)match(input,92,FOLLOW_92_in_synpred242_Kermeta15189); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18044:12: a31= '/'
                {
                a31=(Token)match(input,93,FOLLOW_93_in_synpred242_Kermeta15227); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18076:12: a32= '*'
                {
                a32=(Token)match(input,94,FOLLOW_94_in_synpred242_Kermeta15265); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18132:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18133:6: a33_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred242_Kermeta15314);
        a33_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred242_Kermeta

    // $ANTLR start synpred245_Kermeta
    public final void synpred245_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a35_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18377:6: ( (a35_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18377:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18377:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18378:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred245_Kermeta15419);
        a35_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred245_Kermeta

    // $ANTLR start synpred248_Kermeta
    public final void synpred248_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a38_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18599:6: ( (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18599:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18599:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18600:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred248_Kermeta15521);
        a38_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred248_Kermeta

    // $ANTLR start synpred249_Kermeta
    public final void synpred249_Kermeta_fragment() throws RecognitionException {   
        Token a40=null;
        Token a41=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18805:4: (a40= '.' (a41= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18805:4: a40= '.' (a41= IDENTIFIER )
        {
        a40=(Token)match(input,89,FOLLOW_89_in_synpred249_Kermeta15594); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18817:4: (a41= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18818:5: a41= IDENTIFIER
        {
        a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred249_Kermeta15620); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred249_Kermeta

    // $ANTLR start synpred253_Kermeta
    public final void synpred253_Kermeta_fragment() throws RecognitionException {   
        Token a49=null;
        Token a50=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19147:8: (a49= '.' (a50= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19147:8: a49= '.' (a50= IDENTIFIER )
        {
        a49=(Token)match(input,89,FOLLOW_89_in_synpred253_Kermeta15990); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19159:4: (a50= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19160:5: a50= IDENTIFIER
        {
        a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred253_Kermeta16016); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred253_Kermeta

    // $ANTLR start synpred259_Kermeta
    public final void synpred259_Kermeta_fragment() throws RecognitionException {   
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.Expression a59_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19504:4: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19504:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19504:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19505:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19505:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
        int alt196=4;
        switch ( input.LA(1) ) {
        case 91:
            {
            alt196=1;
            }
            break;
        case 92:
            {
            alt196=2;
            }
            break;
        case 93:
            {
            alt196=3;
            }
            break;
        case 94:
            {
            alt196=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 196, 0, input);

            throw nvae;
        }

        switch (alt196) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19506:6: a55= '+'
                {
                a55=(Token)match(input,91,FOLLOW_91_in_synpred259_Kermeta16202); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19538:12: a56= '-'
                {
                a56=(Token)match(input,92,FOLLOW_92_in_synpred259_Kermeta16240); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19570:12: a57= '/'
                {
                a57=(Token)match(input,93,FOLLOW_93_in_synpred259_Kermeta16278); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19602:12: a58= '*'
                {
                a58=(Token)match(input,94,FOLLOW_94_in_synpred259_Kermeta16316); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19658:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19659:6: a59_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred259_Kermeta16365);
        a59_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred259_Kermeta

    // $ANTLR start synpred278_Kermeta
    public final void synpred278_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21336:4: (c2= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21336:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred278_Kermeta18188);
        c2=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_Kermeta

    // $ANTLR start synpred279_Kermeta
    public final void synpred279_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21337:4: (c3= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21337:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred279_Kermeta18198);
        c3=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_Kermeta

    // $ANTLR start synpred280_Kermeta
    public final void synpred280_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21338:4: (c4= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21338:4: c4= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred280_Kermeta18208);
        c4=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_Kermeta

    // $ANTLR start synpred284_Kermeta
    public final void synpred284_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21342:4: (c8= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21342:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred284_Kermeta18248);
        c8=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred284_Kermeta

    // $ANTLR start synpred285_Kermeta
    public final void synpred285_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21343:4: (c9= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21343:4: c9= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred285_Kermeta18258);
        c9=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred285_Kermeta

    // $ANTLR start synpred287_Kermeta
    public final void synpred287_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21345:4: (c11= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21345:4: c11= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred287_Kermeta18278);
        c11=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred287_Kermeta

    // $ANTLR start synpred288_Kermeta
    public final void synpred288_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21346:4: (c12= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21346:4: c12= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred288_Kermeta18288);
        c12=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred288_Kermeta

    // $ANTLR start synpred289_Kermeta
    public final void synpred289_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21347:4: (c13= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21347:4: c13= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred289_Kermeta18298);
        c13=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred289_Kermeta

    // $ANTLR start synpred290_Kermeta
    public final void synpred290_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21348:4: (c14= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21348:4: c14= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred290_Kermeta18308);
        c14=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred290_Kermeta

    // $ANTLR start synpred291_Kermeta
    public final void synpred291_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c15 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21349:4: (c15= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21349:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred291_Kermeta18318);
        c15=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred291_Kermeta

    // $ANTLR start synpred295_Kermeta
    public final void synpred295_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21359:2: (c0= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21359:2: c0= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred295_Kermeta18379);
        c0=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred295_Kermeta

    // $ANTLR start synpred298_Kermeta
    public final void synpred298_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21362:4: (c3= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21362:4: c3= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred298_Kermeta18409);
        c3=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred298_Kermeta

    // $ANTLR start synpred300_Kermeta
    public final void synpred300_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21364:4: (c5= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21364:4: c5= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred300_Kermeta18429);
        c5=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred300_Kermeta

    // $ANTLR start synpred301_Kermeta
    public final void synpred301_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21365:4: (c6= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21365:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred301_Kermeta18439);
        c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred301_Kermeta

    // $ANTLR start synpred303_Kermeta
    public final void synpred303_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21367:4: (c8= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:21367:4: c8= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred303_Kermeta18459);
        c8=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred303_Kermeta

    // Delegated rules

    public final boolean synpred290_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred300_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred300_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred298_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred298_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred295_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred295_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred176_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred176_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA138 dfa138 = new DFA138(this);
    static final String DFA1_eotS =
        "\20\uffff";
    static final String DFA1_eofS =
        "\1\1\17\uffff";
    static final String DFA1_minS =
        "\1\6\2\uffff\1\0\3\uffff\4\0\5\uffff";
    static final String DFA1_maxS =
        "\1\64\2\uffff\1\0\3\uffff\4\0\5\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\4\uffff\1\2\4\uffff\1\6\1\4\1\5\1\7\1\3";
    static final String DFA1_specialS =
        "\3\uffff\1\0\3\uffff\1\1\1\2\1\3\1\4\5\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\11\uffff\2\1\3\uffff\1\1\5\uffff\1\7\1\10\1\uffff\1\11"+
            "\2\uffff\1\12\11\uffff\1\6\10\uffff\1\13",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "4551:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_Kermeta()) ) {s = 1;}

                        else if ( (synpred4_Kermeta()) ) {s = 12;}

                        else if ( (synpred5_Kermeta()) ) {s = 13;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_7 = input.LA(1);

                         
                        int index1_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_8 = input.LA(1);

                         
                        int index1_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_9 = input.LA(1);

                         
                        int index1_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_10 = input.LA(1);

                         
                        int index1_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_Kermeta()) ) {s = 12;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA11_eotS =
        "\14\uffff";
    static final String DFA11_eofS =
        "\1\12\13\uffff";
    static final String DFA11_minS =
        "\1\6\11\0\2\uffff";
    static final String DFA11_maxS =
        "\1\67\11\0\2\uffff";
    static final String DFA11_acceptS =
        "\12\uffff\1\2\1\1";
    static final String DFA11_specialS =
        "\1\uffff\1\4\1\10\1\3\1\6\1\2\1\7\1\1\1\0\1\5\2\uffff}>";
    static final String[] DFA11_transitionS = {
            "\1\2\1\10\12\uffff\1\12\1\1\2\12\1\4\1\5\1\6\14\uffff\1\7\6"+
            "\uffff\1\11\12\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA11_eot = DFA.unpackEncodedString(DFA11_eotS);
    static final short[] DFA11_eof = DFA.unpackEncodedString(DFA11_eofS);
    static final char[] DFA11_min = DFA.unpackEncodedStringToUnsignedChars(DFA11_minS);
    static final char[] DFA11_max = DFA.unpackEncodedStringToUnsignedChars(DFA11_maxS);
    static final short[] DFA11_accept = DFA.unpackEncodedString(DFA11_acceptS);
    static final short[] DFA11_special = DFA.unpackEncodedString(DFA11_specialS);
    static final short[][] DFA11_transition;

    static {
        int numStates = DFA11_transitionS.length;
        DFA11_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA11_transition[i] = DFA.unpackEncodedString(DFA11_transitionS[i]);
        }
    }

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = DFA11_eot;
            this.eof = DFA11_eof;
            this.min = DFA11_min;
            this.max = DFA11_max;
            this.accept = DFA11_accept;
            this.special = DFA11_special;
            this.transition = DFA11_transition;
        }
        public String getDescription() {
            return "4921:2: ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_5 = input.LA(1);

                         
                        int index11_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_1 = input.LA(1);

                         
                        int index11_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_1);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_9 = input.LA(1);

                         
                        int index11_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_4 = input.LA(1);

                         
                        int index11_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA10_eotS =
        "\14\uffff";
    static final String DFA10_eofS =
        "\14\uffff";
    static final String DFA10_minS =
        "\1\6\1\0\12\uffff";
    static final String DFA10_maxS =
        "\1\67\1\0\12\uffff";
    static final String DFA10_acceptS =
        "\2\uffff\1\3\7\uffff\1\1\1\2";
    static final String DFA10_specialS =
        "\1\uffff\1\0\12\uffff}>";
    static final String[] DFA10_transitionS = {
            "\2\2\13\uffff\1\1\2\uffff\3\2\14\uffff\1\2\6\uffff\1\2\12\uffff"+
            "\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
    static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
    static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
    static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
    static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
    static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
    static final short[][] DFA10_transition;

    static {
        int numStates = DFA10_transitionS.length;
        DFA10_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
        }
    }

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = DFA10_eot;
            this.eof = DFA10_eof;
            this.min = DFA10_min;
            this.max = DFA10_max;
            this.accept = DFA10_accept;
            this.special = DFA10_special;
            this.transition = DFA10_transition;
        }
        public String getDescription() {
            return "4922:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Kermeta()) ) {s = 10;}

                        else if ( (synpred15_Kermeta()) ) {s = 11;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA9_eotS =
        "\13\uffff";
    static final String DFA9_eofS =
        "\1\1\12\uffff";
    static final String DFA9_minS =
        "\1\6\1\uffff\10\0\1\uffff";
    static final String DFA9_maxS =
        "\1\67\1\uffff\10\0\1\uffff";
    static final String DFA9_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA9_specialS =
        "\2\uffff\1\7\1\3\1\5\1\2\1\6\1\1\1\0\1\4\1\uffff}>";
    static final String[] DFA9_transitionS = {
            "\1\2\1\10\12\uffff\4\1\1\4\1\5\1\6\14\uffff\1\7\6\uffff\1\11"+
            "\12\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA9_eot = DFA.unpackEncodedString(DFA9_eotS);
    static final short[] DFA9_eof = DFA.unpackEncodedString(DFA9_eofS);
    static final char[] DFA9_min = DFA.unpackEncodedStringToUnsignedChars(DFA9_minS);
    static final char[] DFA9_max = DFA.unpackEncodedStringToUnsignedChars(DFA9_maxS);
    static final short[] DFA9_accept = DFA.unpackEncodedString(DFA9_acceptS);
    static final short[] DFA9_special = DFA.unpackEncodedString(DFA9_specialS);
    static final short[][] DFA9_transition;

    static {
        int numStates = DFA9_transitionS.length;
        DFA9_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA9_transition[i] = DFA.unpackEncodedString(DFA9_transitionS[i]);
        }
    }

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = DFA9_eot;
            this.eof = DFA9_eof;
            this.min = DFA9_min;
            this.max = DFA9_max;
            this.accept = DFA9_accept;
            this.special = DFA9_special;
            this.transition = DFA9_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5093:8: ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_8 = input.LA(1);

                         
                        int index9_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA9_7 = input.LA(1);

                         
                        int index9_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA9_5 = input.LA(1);

                         
                        int index9_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA9_3 = input.LA(1);

                         
                        int index9_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA9_9 = input.LA(1);

                         
                        int index9_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA9_4 = input.LA(1);

                         
                        int index9_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA9_6 = input.LA(1);

                         
                        int index9_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA9_2 = input.LA(1);

                         
                        int index9_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index9_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA17_eotS =
        "\14\uffff";
    static final String DFA17_eofS =
        "\1\12\13\uffff";
    static final String DFA17_minS =
        "\1\6\11\0\2\uffff";
    static final String DFA17_maxS =
        "\1\67\11\0\2\uffff";
    static final String DFA17_acceptS =
        "\12\uffff\1\2\1\1";
    static final String DFA17_specialS =
        "\1\uffff\1\0\1\10\1\3\1\5\1\2\1\6\1\1\1\7\1\4\2\uffff}>";
    static final String[] DFA17_transitionS = {
            "\1\2\1\10\12\uffff\1\12\1\1\2\12\1\4\1\5\1\6\14\uffff\1\7\6"+
            "\uffff\1\11\12\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA17_eot = DFA.unpackEncodedString(DFA17_eotS);
    static final short[] DFA17_eof = DFA.unpackEncodedString(DFA17_eofS);
    static final char[] DFA17_min = DFA.unpackEncodedStringToUnsignedChars(DFA17_minS);
    static final char[] DFA17_max = DFA.unpackEncodedStringToUnsignedChars(DFA17_maxS);
    static final short[] DFA17_accept = DFA.unpackEncodedString(DFA17_acceptS);
    static final short[] DFA17_special = DFA.unpackEncodedString(DFA17_specialS);
    static final short[][] DFA17_transition;

    static {
        int numStates = DFA17_transitionS.length;
        DFA17_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA17_transition[i] = DFA.unpackEncodedString(DFA17_transitionS[i]);
        }
    }

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = DFA17_eot;
            this.eof = DFA17_eof;
            this.min = DFA17_min;
            this.max = DFA17_max;
            this.accept = DFA17_accept;
            this.special = DFA17_special;
            this.transition = DFA17_transition;
        }
        public String getDescription() {
            return "5308:2: ( (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_1 = input.LA(1);

                         
                        int index17_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_7 = input.LA(1);

                         
                        int index17_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA17_3 = input.LA(1);

                         
                        int index17_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA17_9 = input.LA(1);

                         
                        int index17_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA17_4 = input.LA(1);

                         
                        int index17_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA17_6 = input.LA(1);

                         
                        int index17_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA17_8 = input.LA(1);

                         
                        int index17_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA17_2 = input.LA(1);

                         
                        int index17_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index17_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA16_eotS =
        "\14\uffff";
    static final String DFA16_eofS =
        "\14\uffff";
    static final String DFA16_minS =
        "\1\6\1\0\12\uffff";
    static final String DFA16_maxS =
        "\1\67\1\0\12\uffff";
    static final String DFA16_acceptS =
        "\2\uffff\1\3\7\uffff\1\1\1\2";
    static final String DFA16_specialS =
        "\1\uffff\1\0\12\uffff}>";
    static final String[] DFA16_transitionS = {
            "\2\2\13\uffff\1\1\2\uffff\3\2\14\uffff\1\2\6\uffff\1\2\12\uffff"+
            "\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA16_eot = DFA.unpackEncodedString(DFA16_eotS);
    static final short[] DFA16_eof = DFA.unpackEncodedString(DFA16_eofS);
    static final char[] DFA16_min = DFA.unpackEncodedStringToUnsignedChars(DFA16_minS);
    static final char[] DFA16_max = DFA.unpackEncodedStringToUnsignedChars(DFA16_maxS);
    static final short[] DFA16_accept = DFA.unpackEncodedString(DFA16_acceptS);
    static final short[] DFA16_special = DFA.unpackEncodedString(DFA16_specialS);
    static final short[][] DFA16_transition;

    static {
        int numStates = DFA16_transitionS.length;
        DFA16_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA16_transition[i] = DFA.unpackEncodedString(DFA16_transitionS[i]);
        }
    }

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = DFA16_eot;
            this.eof = DFA16_eof;
            this.min = DFA16_min;
            this.max = DFA16_max;
            this.accept = DFA16_accept;
            this.special = DFA16_special;
            this.transition = DFA16_transition;
        }
        public String getDescription() {
            return "5309:3: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_1 = input.LA(1);

                         
                        int index16_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_Kermeta()) ) {s = 10;}

                        else if ( (synpred23_Kermeta()) ) {s = 11;}

                         
                        input.seek(index16_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA15_eotS =
        "\13\uffff";
    static final String DFA15_eofS =
        "\1\1\12\uffff";
    static final String DFA15_minS =
        "\1\6\1\uffff\10\0\1\uffff";
    static final String DFA15_maxS =
        "\1\67\1\uffff\10\0\1\uffff";
    static final String DFA15_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA15_specialS =
        "\2\uffff\1\7\1\2\1\4\1\1\1\5\1\0\1\6\1\3\1\uffff}>";
    static final String[] DFA15_transitionS = {
            "\1\2\1\10\12\uffff\4\1\1\4\1\5\1\6\14\uffff\1\7\6\uffff\1\11"+
            "\12\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA15_eot = DFA.unpackEncodedString(DFA15_eotS);
    static final short[] DFA15_eof = DFA.unpackEncodedString(DFA15_eofS);
    static final char[] DFA15_min = DFA.unpackEncodedStringToUnsignedChars(DFA15_minS);
    static final char[] DFA15_max = DFA.unpackEncodedStringToUnsignedChars(DFA15_maxS);
    static final short[] DFA15_accept = DFA.unpackEncodedString(DFA15_acceptS);
    static final short[] DFA15_special = DFA.unpackEncodedString(DFA15_specialS);
    static final short[][] DFA15_transition;

    static {
        int numStates = DFA15_transitionS.length;
        DFA15_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA15_transition[i] = DFA.unpackEncodedString(DFA15_transitionS[i]);
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = DFA15_eot;
            this.eof = DFA15_eof;
            this.min = DFA15_min;
            this.max = DFA15_max;
            this.accept = DFA15_accept;
            this.special = DFA15_special;
            this.transition = DFA15_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5480:8: ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA15_7 = input.LA(1);

                         
                        int index15_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA15_5 = input.LA(1);

                         
                        int index15_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA15_3 = input.LA(1);

                         
                        int index15_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA15_9 = input.LA(1);

                         
                        int index15_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA15_4 = input.LA(1);

                         
                        int index15_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA15_6 = input.LA(1);

                         
                        int index15_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA15_8 = input.LA(1);

                         
                        int index15_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA15_2 = input.LA(1);

                         
                        int index15_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index15_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 15, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA43_eotS =
        "\112\uffff";
    static final String DFA43_eofS =
        "\1\6\111\uffff";
    static final String DFA43_minS =
        "\1\6\1\uffff\4\0\1\uffff\12\0\1\uffff\1\0\5\uffff\1\0\6\uffff\2"+
        "\0\3\uffff\2\0\1\uffff\3\0\40\uffff";
    static final String DFA43_maxS =
        "\1\145\1\uffff\4\0\1\uffff\12\0\1\uffff\1\0\5\uffff\1\0\6\uffff"+
        "\2\0\3\uffff\2\0\1\uffff\3\0\40\uffff";
    static final String DFA43_acceptS =
        "\1\uffff\1\1\4\uffff\1\2\12\uffff\1\21\1\uffff\1\23\1\24\1\25\1"+
        "\26\1\27\1\uffff\1\30\1\32\1\33\1\34\1\35\1\37\2\uffff\1\43\1\44"+
        "\1\45\2\uffff\1\50\3\uffff\1\57\1\60\1\61\1\62\1\4\1\3\1\5\1\10"+
        "\1\11\1\12\1\14\1\15\1\17\1\22\1\36\1\42\1\46\1\51\1\52\1\54\1\6"+
        "\1\7\1\13\1\16\1\20\1\56\1\31\1\40\1\41\1\47\1\55\1\53";
    static final String DFA43_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\uffff\1\16\5\uffff\1\17\6\uffff\1\20\1\21\3\uffff"+
        "\1\22\1\23\1\uffff\1\24\1\25\1\26\40\uffff}>";
    static final String[] DFA43_transitionS = {
            "\1\4\1\17\1\40\1\37\6\uffff\1\3\1\2\3\uffff\1\5\1\7\1\10\1\11"+
            "\2\uffff\1\12\1\13\1\uffff\1\14\2\uffff\1\15\1\47\2\uffff\1"+
            "\16\1\uffff\1\20\1\1\2\uffff\1\21\1\22\3\uffff\1\23\3\uffff"+
            "\1\24\2\uffff\1\25\1\26\1\52\1\uffff\1\27\1\uffff\1\31\1\uffff"+
            "\1\30\3\uffff\1\32\1\33\2\uffff\1\34\1\uffff\1\35\1\36\1\41"+
            "\2\uffff\1\42\2\uffff\1\43\1\uffff\1\44\1\45\1\46\2\uffff\1"+
            "\51\6\uffff\1\50\1\53\1\uffff\1\54\2\uffff\1\55",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "7633:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_2 = input.LA(1);

                         
                        int index43_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 6;}

                        else if ( (synpred53_Kermeta()) ) {s = 46;}

                         
                        input.seek(index43_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 6;}

                        else if ( (synpred52_Kermeta()) ) {s = 47;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 6;}

                        else if ( (synpred54_Kermeta()) ) {s = 48;}

                        else if ( (synpred57_Kermeta()) ) {s = 49;}

                        else if ( (synpred58_Kermeta()) ) {s = 50;}

                        else if ( (synpred59_Kermeta()) ) {s = 51;}

                        else if ( (synpred61_Kermeta()) ) {s = 52;}

                        else if ( (synpred62_Kermeta()) ) {s = 53;}

                        else if ( (synpred64_Kermeta()) ) {s = 54;}

                        else if ( (synpred67_Kermeta()) ) {s = 55;}

                        else if ( (synpred69_Kermeta()) ) {s = 20;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                        else if ( (synpred79_Kermeta()) ) {s = 56;}

                        else if ( (synpred83_Kermeta()) ) {s = 57;}

                        else if ( (synpred87_Kermeta()) ) {s = 58;}

                        else if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred91_Kermeta()) ) {s = 60;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 6;}

                        else if ( (synpred54_Kermeta()) ) {s = 48;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_Kermeta()) ) {s = 62;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_Kermeta()) ) {s = 62;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_Kermeta()) ) {s = 62;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_Kermeta()) ) {s = 63;}

                        else if ( (synpred69_Kermeta()) ) {s = 20;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA43_11 = input.LA(1);

                         
                        int index43_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_Kermeta()) ) {s = 63;}

                        else if ( (synpred69_Kermeta()) ) {s = 20;}

                         
                        input.seek(index43_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA43_12 = input.LA(1);

                         
                        int index43_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_Kermeta()) ) {s = 63;}

                        else if ( (synpred69_Kermeta()) ) {s = 20;}

                         
                        input.seek(index43_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA43_13 = input.LA(1);

                         
                        int index43_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_Kermeta()) ) {s = 49;}

                        else if ( (synpred69_Kermeta()) ) {s = 20;}

                         
                        input.seek(index43_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA43_14 = input.LA(1);

                         
                        int index43_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_Kermeta()) ) {s = 64;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                         
                        input.seek(index43_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA43_15 = input.LA(1);

                         
                        int index43_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_Kermeta()) ) {s = 65;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                         
                        input.seek(index43_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA43_16 = input.LA(1);

                         
                        int index43_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_Kermeta()) ) {s = 66;}

                        else if ( (synpred95_Kermeta()) ) {s = 67;}

                         
                        input.seek(index43_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA43_18 = input.LA(1);

                         
                        int index43_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_Kermeta()) ) {s = 55;}

                        else if ( (synpred70_Kermeta()) ) {s = 21;}

                         
                        input.seek(index43_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA43_24 = input.LA(1);

                         
                        int index43_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_Kermeta()) ) {s = 23;}

                        else if ( (synpred74_Kermeta()) ) {s = 68;}

                         
                        input.seek(index43_24);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA43_31 = input.LA(1);

                         
                        int index43_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 69;}

                        else if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_31);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA43_32 = input.LA(1);

                         
                        int index43_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_Kermeta()) ) {s = 70;}

                        else if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_32);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA43_36 = input.LA(1);

                         
                        int index43_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_Kermeta()) ) {s = 71;}

                        else if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred91_Kermeta()) ) {s = 60;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_36);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA43_37 = input.LA(1);

                         
                        int index43_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_Kermeta()) ) {s = 71;}

                        else if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred91_Kermeta()) ) {s = 60;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_37);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA43_39 = input.LA(1);

                         
                        int index43_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_39);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA43_40 = input.LA(1);

                         
                        int index43_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                        else if ( (synpred94_Kermeta()) ) {s = 72;}

                         
                        input.seek(index43_40);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA43_41 = input.LA(1);

                         
                        int index43_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_Kermeta()) ) {s = 59;}

                        else if ( (synpred92_Kermeta()) ) {s = 73;}

                        else if ( (synpred93_Kermeta()) ) {s = 61;}

                         
                        input.seek(index43_41);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA73_eotS =
        "\25\uffff";
    static final String DFA73_eofS =
        "\25\uffff";
    static final String DFA73_minS =
        "\1\6\3\uffff\10\0\11\uffff";
    static final String DFA73_maxS =
        "\1\140\3\uffff\10\0\11\uffff";
    static final String DFA73_acceptS =
        "\1\uffff\1\1\1\2\1\3\10\uffff\1\7\1\12\1\13\1\14\1\4\1\5\1\6\1\10"+
        "\1\11";
    static final String DFA73_specialS =
        "\4\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\11\uffff}>";
    static final String[] DFA73_transitionS = {
            "\1\6\1\uffff\1\13\1\5\30\uffff\1\4\26\uffff\1\16\15\uffff\1"+
            "\17\3\uffff\1\3\2\uffff\1\2\2\uffff\1\1\1\uffff\1\7\1\10\1\14"+
            "\2\uffff\1\12\6\uffff\1\11\1\15",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA73_eot = DFA.unpackEncodedString(DFA73_eotS);
    static final short[] DFA73_eof = DFA.unpackEncodedString(DFA73_eofS);
    static final char[] DFA73_min = DFA.unpackEncodedStringToUnsignedChars(DFA73_minS);
    static final char[] DFA73_max = DFA.unpackEncodedStringToUnsignedChars(DFA73_maxS);
    static final short[] DFA73_accept = DFA.unpackEncodedString(DFA73_acceptS);
    static final short[] DFA73_special = DFA.unpackEncodedString(DFA73_specialS);
    static final short[][] DFA73_transition;

    static {
        int numStates = DFA73_transitionS.length;
        DFA73_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA73_transition[i] = DFA.unpackEncodedString(DFA73_transitionS[i]);
        }
    }

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = DFA73_eot;
            this.eof = DFA73_eof;
            this.min = DFA73_min;
            this.max = DFA73_max;
            this.accept = DFA73_accept;
            this.special = DFA73_special;
            this.transition = DFA73_transition;
        }
        public String getDescription() {
            return "13029:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_Block ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_4 = input.LA(1);

                         
                        int index73_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                         
                        input.seek(index73_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_5 = input.LA(1);

                         
                        int index73_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                         
                        input.seek(index73_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_6 = input.LA(1);

                         
                        int index73_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                        else if ( (synpred177_Kermeta()) ) {s = 18;}

                         
                        input.seek(index73_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_7 = input.LA(1);

                         
                        int index73_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                        else if ( (synpred177_Kermeta()) ) {s = 18;}

                        else if ( (synpred179_Kermeta()) ) {s = 19;}

                         
                        input.seek(index73_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA73_8 = input.LA(1);

                         
                        int index73_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                        else if ( (synpred177_Kermeta()) ) {s = 18;}

                        else if ( (synpred179_Kermeta()) ) {s = 19;}

                         
                        input.seek(index73_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                        else if ( (synpred180_Kermeta()) ) {s = 20;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA73_10 = input.LA(1);

                         
                        int index73_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                         
                        input.seek(index73_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA73_11 = input.LA(1);

                         
                        int index73_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_Kermeta()) ) {s = 16;}

                        else if ( (synpred176_Kermeta()) ) {s = 17;}

                         
                        input.seek(index73_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA79_eotS =
        "\22\uffff";
    static final String DFA79_eofS =
        "\22\uffff";
    static final String DFA79_minS =
        "\1\6\1\0\1\uffff\7\0\10\uffff";
    static final String DFA79_maxS =
        "\1\137\1\0\1\uffff\7\0\10\uffff";
    static final String DFA79_acceptS =
        "\2\uffff\1\2\7\uffff\1\5\1\10\1\11\1\1\1\3\1\4\1\7\1\6";
    static final String DFA79_specialS =
        "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\10\uffff}>";
    static final String[] DFA79_transitionS = {
            "\1\4\1\uffff\1\11\1\1\30\uffff\1\3\26\uffff\1\13\15\uffff\1"+
            "\2\11\uffff\1\14\1\uffff\1\5\1\6\1\12\2\uffff\1\10\6\uffff\1"+
            "\7",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA79_eot = DFA.unpackEncodedString(DFA79_eotS);
    static final short[] DFA79_eof = DFA.unpackEncodedString(DFA79_eofS);
    static final char[] DFA79_min = DFA.unpackEncodedStringToUnsignedChars(DFA79_minS);
    static final char[] DFA79_max = DFA.unpackEncodedStringToUnsignedChars(DFA79_maxS);
    static final short[] DFA79_accept = DFA.unpackEncodedString(DFA79_acceptS);
    static final short[] DFA79_special = DFA.unpackEncodedString(DFA79_specialS);
    static final short[][] DFA79_transition;

    static {
        int numStates = DFA79_transitionS.length;
        DFA79_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA79_transition[i] = DFA.unpackEncodedString(DFA79_transitionS[i]);
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = DFA79_eot;
            this.eof = DFA79_eof;
            this.min = DFA79_min;
            this.max = DFA79_max;
            this.accept = DFA79_accept;
            this.special = DFA79_special;
            this.transition = DFA79_transition;
        }
        public String getDescription() {
            return "14350:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_1 = input.LA(1);

                         
                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_3 = input.LA(1);

                         
                        int index79_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index79_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_4 = input.LA(1);

                         
                        int index79_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                        else if ( (synpred194_Kermeta()) ) {s = 16;}

                         
                        input.seek(index79_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA79_5 = input.LA(1);

                         
                        int index79_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                        else if ( (synpred193_Kermeta()) ) {s = 17;}

                        else if ( (synpred194_Kermeta()) ) {s = 16;}

                         
                        input.seek(index79_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA79_6 = input.LA(1);

                         
                        int index79_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                        else if ( (synpred193_Kermeta()) ) {s = 17;}

                        else if ( (synpred194_Kermeta()) ) {s = 16;}

                         
                        input.seek(index79_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA79_7 = input.LA(1);

                         
                        int index79_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index79_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA79_8 = input.LA(1);

                         
                        int index79_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index79_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA79_9 = input.LA(1);

                         
                        int index79_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred190_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index79_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA80_eotS =
        "\21\uffff";
    static final String DFA80_eofS =
        "\21\uffff";
    static final String DFA80_minS =
        "\1\6\2\uffff\10\0\6\uffff";
    static final String DFA80_maxS =
        "\1\137\2\uffff\10\0\6\uffff";
    static final String DFA80_acceptS =
        "\1\uffff\1\1\1\2\10\uffff\1\5\1\7\1\10\1\3\1\4\1\6";
    static final String DFA80_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\6\uffff}>";
    static final String[] DFA80_transitionS = {
            "\1\5\1\uffff\1\12\1\4\30\uffff\1\3\26\uffff\1\15\15\uffff\1"+
            "\2\5\uffff\1\1\3\uffff\1\14\1\uffff\1\6\1\7\1\13\2\uffff\1\11"+
            "\6\uffff\1\10",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA80_eot = DFA.unpackEncodedString(DFA80_eotS);
    static final short[] DFA80_eof = DFA.unpackEncodedString(DFA80_eofS);
    static final char[] DFA80_min = DFA.unpackEncodedStringToUnsignedChars(DFA80_minS);
    static final char[] DFA80_max = DFA.unpackEncodedStringToUnsignedChars(DFA80_maxS);
    static final short[] DFA80_accept = DFA.unpackEncodedString(DFA80_acceptS);
    static final short[] DFA80_special = DFA.unpackEncodedString(DFA80_specialS);
    static final short[][] DFA80_transition;

    static {
        int numStates = DFA80_transitionS.length;
        DFA80_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA80_transition[i] = DFA.unpackEncodedString(DFA80_transitionS[i]);
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = DFA80_eot;
            this.eof = DFA80_eof;
            this.min = DFA80_min;
            this.max = DFA80_max;
            this.accept = DFA80_accept;
            this.special = DFA80_special;
            this.transition = DFA80_transition;
        }
        public String getDescription() {
            return "14704:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_3 = input.LA(1);

                         
                        int index80_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index80_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_4 = input.LA(1);

                         
                        int index80_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index80_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_5 = input.LA(1);

                         
                        int index80_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index80_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA80_6 = input.LA(1);

                         
                        int index80_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                        else if ( (synpred201_Kermeta()) ) {s = 16;}

                         
                        input.seek(index80_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA80_7 = input.LA(1);

                         
                        int index80_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                        else if ( (synpred201_Kermeta()) ) {s = 16;}

                         
                        input.seek(index80_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA80_8 = input.LA(1);

                         
                        int index80_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index80_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA80_10 = input.LA(1);

                         
                        int index80_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred198_Kermeta()) ) {s = 14;}

                        else if ( (synpred199_Kermeta()) ) {s = 15;}

                         
                        input.seek(index80_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA90_eotS =
        "\21\uffff";
    static final String DFA90_eofS =
        "\21\uffff";
    static final String DFA90_minS =
        "\1\6\1\uffff\2\0\1\124\3\0\11\uffff";
    static final String DFA90_maxS =
        "\1\137\1\uffff\2\0\1\124\3\0\11\uffff";
    static final String DFA90_acceptS =
        "\1\uffff\1\1\6\uffff\1\3\1\5\1\7\1\11\1\6\1\12\1\4\1\2\1\10";
    static final String DFA90_specialS =
        "\2\uffff\1\2\1\3\1\uffff\1\0\1\4\1\1\11\uffff}>";
    static final String[] DFA90_transitionS = {
            "\1\3\1\uffff\1\7\1\2\30\uffff\1\1\4\uffff\1\12\21\uffff\1\11"+
            "\31\uffff\1\4\1\5\1\10\2\uffff\1\6\6\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
    static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
    static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
    static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
    static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
    static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
    static final short[][] DFA90_transition;

    static {
        int numStates = DFA90_transitionS.length;
        DFA90_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "16131:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_5 = input.LA(1);

                         
                        int index90_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_Kermeta()) ) {s = 1;}

                        else if ( (synpred216_Kermeta()) ) {s = 14;}

                        else if ( (synpred218_Kermeta()) ) {s = 12;}

                         
                        input.seek(index90_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_7 = input.LA(1);

                         
                        int index90_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_Kermeta()) ) {s = 1;}

                        else if ( (synpred220_Kermeta()) ) {s = 16;}

                         
                        input.seek(index90_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_2 = input.LA(1);

                         
                        int index90_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_Kermeta()) ) {s = 1;}

                        else if ( (synpred221_Kermeta()) ) {s = 11;}

                         
                        input.seek(index90_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA90_3 = input.LA(1);

                         
                        int index90_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_Kermeta()) ) {s = 1;}

                        else if ( (synpred218_Kermeta()) ) {s = 12;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index90_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA90_6 = input.LA(1);

                         
                        int index90_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_Kermeta()) ) {s = 1;}

                        else if ( (synpred214_Kermeta()) ) {s = 15;}

                         
                        input.seek(index90_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA119_eotS =
        "\35\uffff";
    static final String DFA119_eofS =
        "\35\uffff";
    static final String DFA119_minS =
        "\1\6\2\uffff\3\0\3\uffff\2\0\1\uffff\3\0\16\uffff";
    static final String DFA119_maxS =
        "\1\142\2\uffff\3\0\3\uffff\2\0\1\uffff\3\0\16\uffff";
    static final String DFA119_acceptS =
        "\1\uffff\1\1\1\2\3\uffff\1\6\1\7\1\10\2\uffff\1\13\3\uffff\1\21"+
        "\1\22\1\23\1\24\1\3\1\14\1\17\1\4\1\5\1\11\1\15\1\12\1\20\1\16";
    static final String DFA119_specialS =
        "\3\uffff\1\0\1\1\1\2\3\uffff\1\3\1\4\1\uffff\1\5\1\6\1\7\16\uffff}>";
    static final String[] DFA119_transitionS = {
            "\1\5\1\uffff\1\4\1\3\30\uffff\1\14\4\uffff\1\17\21\uffff\1\20"+
            "\15\uffff\1\1\2\uffff\1\2\1\6\2\uffff\1\7\2\uffff\1\10\1\uffff"+
            "\1\11\1\12\1\13\2\uffff\1\16\6\uffff\1\15\1\21\1\uffff\1\22",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA119_eot = DFA.unpackEncodedString(DFA119_eotS);
    static final short[] DFA119_eof = DFA.unpackEncodedString(DFA119_eofS);
    static final char[] DFA119_min = DFA.unpackEncodedStringToUnsignedChars(DFA119_minS);
    static final char[] DFA119_max = DFA.unpackEncodedStringToUnsignedChars(DFA119_maxS);
    static final short[] DFA119_accept = DFA.unpackEncodedString(DFA119_acceptS);
    static final short[] DFA119_special = DFA.unpackEncodedString(DFA119_specialS);
    static final short[][] DFA119_transition;

    static {
        int numStates = DFA119_transitionS.length;
        DFA119_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA119_transition[i] = DFA.unpackEncodedString(DFA119_transitionS[i]);
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = DFA119_eot;
            this.eof = DFA119_eof;
            this.min = DFA119_min;
            this.max = DFA119_max;
            this.accept = DFA119_accept;
            this.special = DFA119_special;
            this.transition = DFA119_transition;
        }
        public String getDescription() {
            return "21332:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_3 = input.LA(1);

                         
                        int index119_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_Kermeta()) ) {s = 19;}

                        else if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA119_4 = input.LA(1);

                         
                        int index119_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred279_Kermeta()) ) {s = 22;}

                        else if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA119_5 = input.LA(1);

                         
                        int index119_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_Kermeta()) ) {s = 23;}

                        else if ( (synpred284_Kermeta()) ) {s = 24;}

                        else if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred288_Kermeta()) ) {s = 25;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA119_9 = input.LA(1);

                         
                        int index119_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_Kermeta()) ) {s = 26;}

                        else if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred288_Kermeta()) ) {s = 25;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA119_10 = input.LA(1);

                         
                        int index119_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_Kermeta()) ) {s = 26;}

                        else if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred288_Kermeta()) ) {s = 25;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA119_12 = input.LA(1);

                         
                        int index119_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA119_13 = input.LA(1);

                         
                        int index119_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                        else if ( (synpred291_Kermeta()) ) {s = 27;}

                         
                        input.seek(index119_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA119_14 = input.LA(1);

                         
                        int index119_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_Kermeta()) ) {s = 20;}

                        else if ( (synpred289_Kermeta()) ) {s = 28;}

                        else if ( (synpred290_Kermeta()) ) {s = 21;}

                         
                        input.seek(index119_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA120_eotS =
        "\16\uffff";
    static final String DFA120_eofS =
        "\16\uffff";
    static final String DFA120_minS =
        "\1\6\1\0\5\uffff\1\0\6\uffff";
    static final String DFA120_maxS =
        "\1\104\1\0\5\uffff\1\0\6\uffff";
    static final String DFA120_acceptS =
        "\2\uffff\1\2\1\3\1\5\1\6\1\7\1\uffff\1\10\1\12\1\13\1\1\1\4\1\11";
    static final String DFA120_specialS =
        "\1\uffff\1\0\5\uffff\1\1\6\uffff}>";
    static final String[] DFA120_transitionS = {
            "\1\1\1\3\35\uffff\1\2\1\uffff\1\4\4\uffff\1\5\16\uffff\1\6\1"+
            "\uffff\1\10\1\uffff\1\7\3\uffff\1\11\1\12",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA120_eot = DFA.unpackEncodedString(DFA120_eotS);
    static final short[] DFA120_eof = DFA.unpackEncodedString(DFA120_eofS);
    static final char[] DFA120_min = DFA.unpackEncodedStringToUnsignedChars(DFA120_minS);
    static final char[] DFA120_max = DFA.unpackEncodedStringToUnsignedChars(DFA120_maxS);
    static final short[] DFA120_accept = DFA.unpackEncodedString(DFA120_acceptS);
    static final short[] DFA120_special = DFA.unpackEncodedString(DFA120_specialS);
    static final short[][] DFA120_transition;

    static {
        int numStates = DFA120_transitionS.length;
        DFA120_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA120_transition[i] = DFA.unpackEncodedString(DFA120_transitionS[i]);
        }
    }

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = DFA120_eot;
            this.eof = DFA120_eof;
            this.min = DFA120_min;
            this.max = DFA120_max;
            this.accept = DFA120_accept;
            this.special = DFA120_special;
            this.transition = DFA120_transition;
        }
        public String getDescription() {
            return "21357:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA120_1 = input.LA(1);

                         
                        int index120_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_Kermeta()) ) {s = 11;}

                        else if ( (synpred298_Kermeta()) ) {s = 12;}

                        else if ( (synpred300_Kermeta()) ) {s = 5;}

                         
                        input.seek(index120_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA120_7 = input.LA(1);

                         
                        int index120_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_Kermeta()) ) {s = 6;}

                        else if ( (synpred303_Kermeta()) ) {s = 13;}

                         
                        input.seek(index120_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 120, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA126_eotS =
        "\14\uffff";
    static final String DFA126_eofS =
        "\14\uffff";
    static final String DFA126_minS =
        "\1\6\1\0\12\uffff";
    static final String DFA126_maxS =
        "\1\67\1\0\12\uffff";
    static final String DFA126_acceptS =
        "\2\uffff\1\3\7\uffff\1\1\1\2";
    static final String DFA126_specialS =
        "\1\uffff\1\0\12\uffff}>";
    static final String[] DFA126_transitionS = {
            "\2\2\13\uffff\1\1\2\uffff\3\2\14\uffff\1\2\6\uffff\1\2\12\uffff"+
            "\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA126_eot = DFA.unpackEncodedString(DFA126_eotS);
    static final short[] DFA126_eof = DFA.unpackEncodedString(DFA126_eofS);
    static final char[] DFA126_min = DFA.unpackEncodedStringToUnsignedChars(DFA126_minS);
    static final char[] DFA126_max = DFA.unpackEncodedStringToUnsignedChars(DFA126_maxS);
    static final short[] DFA126_accept = DFA.unpackEncodedString(DFA126_acceptS);
    static final short[] DFA126_special = DFA.unpackEncodedString(DFA126_specialS);
    static final short[][] DFA126_transition;

    static {
        int numStates = DFA126_transitionS.length;
        DFA126_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA126_transition[i] = DFA.unpackEncodedString(DFA126_transitionS[i]);
        }
    }

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = DFA126_eot;
            this.eof = DFA126_eof;
            this.min = DFA126_min;
            this.max = DFA126_max;
            this.accept = DFA126_accept;
            this.special = DFA126_special;
            this.transition = DFA126_transition;
        }
        public String getDescription() {
            return "4922:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' | ( ( (a9_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_1 = input.LA(1);

                         
                        int index126_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Kermeta()) ) {s = 10;}

                        else if ( (synpred15_Kermeta()) ) {s = 11;}

                         
                        input.seek(index126_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA138_eotS =
        "\14\uffff";
    static final String DFA138_eofS =
        "\14\uffff";
    static final String DFA138_minS =
        "\1\6\1\0\12\uffff";
    static final String DFA138_maxS =
        "\1\67\1\0\12\uffff";
    static final String DFA138_acceptS =
        "\2\uffff\1\3\7\uffff\1\1\1\2";
    static final String DFA138_specialS =
        "\1\uffff\1\0\12\uffff}>";
    static final String[] DFA138_transitionS = {
            "\2\2\13\uffff\1\1\2\uffff\3\2\14\uffff\1\2\6\uffff\1\2\12\uffff"+
            "\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA138_eot = DFA.unpackEncodedString(DFA138_eotS);
    static final short[] DFA138_eof = DFA.unpackEncodedString(DFA138_eofS);
    static final char[] DFA138_min = DFA.unpackEncodedStringToUnsignedChars(DFA138_minS);
    static final char[] DFA138_max = DFA.unpackEncodedStringToUnsignedChars(DFA138_maxS);
    static final short[] DFA138_accept = DFA.unpackEncodedString(DFA138_acceptS);
    static final short[] DFA138_special = DFA.unpackEncodedString(DFA138_specialS);
    static final short[][] DFA138_transition;

    static {
        int numStates = DFA138_transitionS.length;
        DFA138_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA138_transition[i] = DFA.unpackEncodedString(DFA138_transitionS[i]);
        }
    }

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = DFA138_eot;
            this.eof = DFA138_eof;
            this.min = DFA138_min;
            this.max = DFA138_max;
            this.accept = DFA138_accept;
            this.special = DFA138_special;
            this.transition = DFA138_transition;
        }
        public String getDescription() {
            return "5309:3: (a14= '{' ( ( (a15_0= parse_org_kermeta_language_structure_Package ) ) )* a16= '}' | a17= '{' ( ( (a18_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a19= '}' | ( ( (a20_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_Kermeta()) ) {s = 10;}

                        else if ( (synpred23_Kermeta()) ) {s = 11;}

                         
                        input.seek(index138_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_start96 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_start110 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211 = new BitSet(new long[]{0x0000000000230042L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267 = new BitSet(new long[]{0x0000000000210042L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323 = new BitSet(new long[]{0x0000000000200042L});
    public static final BitSet FOLLOW_16_in_parse_org_kermeta_language_structure_Using379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Require408 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_QUOTED_34_34_in_parse_org_kermeta_language_structure_Require426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Require451 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_KERMETA_LITERAL_in_parse_org_kermeta_language_structure_Require469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package509 = new BitSet(new long[]{0x0080102001CC00C2L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package539 = new BitSet(new long[]{0x0000000000200040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package565 = new BitSet(new long[]{0x0080102001CC00C2L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package615 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package656 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Package717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package745 = new BitSet(new long[]{0x0080102001C800C0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package786 = new BitSet(new long[]{0x0080102001D800C0L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Package847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package896 = new BitSet(new long[]{0x0080102001C800C2L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Package974 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package992 = new BitSet(new long[]{0x0080102001CC00C2L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package1022 = new BitSet(new long[]{0x0000000000200040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package1048 = new BitSet(new long[]{0x0080102001CC00C2L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package1098 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package1139 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Package1200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package1228 = new BitSet(new long[]{0x0080102001C800C0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1269 = new BitSet(new long[]{0x0080102001D800C0L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Package1330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1379 = new BitSet(new long[]{0x0080102001C800C2L});
    public static final BitSet FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1477 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1519 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1552 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1570 = new BitSet(new long[]{0x0000000002080000L});
    public static final BitSet FOLLOW_25_in_parse_org_kermeta_language_structure_ClassDefinition1600 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1626 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_ClassDefinition1672 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1706 = new BitSet(new long[]{0x0000000004080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ClassDefinition1787 = new BitSet(new long[]{0x0000000258100040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1816 = new BitSet(new long[]{0x0000000258100040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1872 = new BitSet(new long[]{0x0000000258100040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1928 = new BitSet(new long[]{0x0000000200100040L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property2002 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_28_in_parse_org_kermeta_language_structure_Property2025 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2053 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property2083 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_org_kermeta_language_structure_Property2159 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2177 = new BitSet(new long[]{0x00000001A0000002L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property2207 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property2233 = new BitSet(new long[]{0x0000000180000002L});
    public static final BitSet FOLLOW_31_in_parse_org_kermeta_language_structure_Property2288 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2314 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_structure_Property2364 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2455 = new BitSet(new long[]{0x0000000200000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2490 = new BitSet(new long[]{0x0000000200000040L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2516 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2534 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2555 = new BitSet(new long[]{0x0000000800000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2584 = new BitSet(new long[]{0x0000000824000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2625 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2659 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_Operation2740 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2774 = new BitSet(new long[]{0x0000000824000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Operation2829 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2871 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_structure_Operation2997 = new BitSet(new long[]{0x0000001020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Operation3020 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation3046 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Operation3092 = new BitSet(new long[]{0x0000000000800000L,0x0000000000000080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation3115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_Operation3144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter3187 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Parameter3208 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter3226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class3266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_structure_Enumeration3302 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration3320 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Enumeration3341 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3364 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Enumeration3387 = new BitSet(new long[]{0x0000000000100040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3422 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Enumeration3455 = new BitSet(new long[]{0x0000000000100040L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Enumeration3503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3576 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_VoidType3717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Object3746 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Object3760 = new BitSet(new long[]{0x0000060000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_Object3783 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Object3803 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3829 = new BitSet(new long[]{0x0000060000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_Object3870 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Object3890 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3916 = new BitSet(new long[]{0x0000060000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Object3957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object4006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object4016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object4026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object4036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object4046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object4056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object4066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object4076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object4086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object4096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object4106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object4116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object4126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object4136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object4146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object4156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object4166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object4176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object4186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object4196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object4206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object4216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object4226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object4236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object4246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object4256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object4266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object4276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object4286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object4296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object4306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object4316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object4326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object4336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object4346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object4356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object4366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object4376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object4386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object4396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object4406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object4416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object4426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object4436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object4446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object4456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_Model4481 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Model4495 = new BitSet(new long[]{0x0000060000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_Model4518 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Model4538 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4564 = new BitSet(new long[]{0x0000060000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_Model4605 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Model4625 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4651 = new BitSet(new long[]{0x0000060000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Model4692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4730 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4760 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ModelType4774 = new BitSet(new long[]{0x0000E60000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_ModelType4797 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4817 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4843 = new BitSet(new long[]{0x0000E60000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4884 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4904 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4930 = new BitSet(new long[]{0x0000E60000100000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4966 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType4986 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType5012 = new BitSet(new long[]{0x0000E60000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_ModelType5053 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType5073 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType5099 = new BitSet(new long[]{0x0000E60000100000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ModelType5140 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelType5160 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType5186 = new BitSet(new long[]{0x0000E60000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ModelType5232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5261 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_TypeVariableBinding5275 = new BitSet(new long[]{0x000E060000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_TypeVariableBinding5298 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5318 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5344 = new BitSet(new long[]{0x000E060000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_TypeVariableBinding5385 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5405 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding5431 = new BitSet(new long[]{0x000E060000100000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5467 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5487 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5513 = new BitSet(new long[]{0x000E060000100000L});
    public static final BitSet FOLLOW_50_in_parse_org_kermeta_language_structure_TypeVariableBinding5549 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5569 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5595 = new BitSet(new long[]{0x000E060000100000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_TypeVariableBinding5636 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeVariableBinding5656 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5682 = new BitSet(new long[]{0x000E060000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_TypeVariableBinding5728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5766 = new BitSet(new long[]{0x0010000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5805 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement5835 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_MultiplicityElement5849 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_MultiplicityElement5872 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5892 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5918 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_MultiplicityElement5959 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement5979 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement6005 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement6041 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6061 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement6087 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_MultiplicityElement6123 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6143 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement6169 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement6210 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6230 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement6256 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_53_in_parse_org_kermeta_language_structure_MultiplicityElement6297 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6317 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6343 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_54_in_parse_org_kermeta_language_structure_MultiplicityElement6384 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_MultiplicityElement6404 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6430 = new BitSet(new long[]{0x006A460000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_MultiplicityElement6476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6559 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_structure_TypeDefinition6589 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_TypeDefinition6603 = new BitSet(new long[]{0x0000460000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_TypeDefinition6626 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6646 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6672 = new BitSet(new long[]{0x0000460000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_TypeDefinition6713 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6733 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6759 = new BitSet(new long[]{0x0000460000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_TypeDefinition6795 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_TypeDefinition6815 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6841 = new BitSet(new long[]{0x0000460000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_TypeDefinition6887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_parse_org_kermeta_language_structure_Tag6961 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Tag6975 = new BitSet(new long[]{0x0600460000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_Tag6998 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7018 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7044 = new BitSet(new long[]{0x0600460000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_Tag7085 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7105 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag7131 = new BitSet(new long[]{0x0600460000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_Tag7167 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7187 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7213 = new BitSet(new long[]{0x0600460000100000L});
    public static final BitSet FOLLOW_57_in_parse_org_kermeta_language_structure_Tag7254 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7274 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7300 = new BitSet(new long[]{0x0600460000100000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_Tag7341 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Tag7361 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7387 = new BitSet(new long[]{0x0600460000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_Tag7433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_ObjectTypeVariable7462 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ObjectTypeVariable7476 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_ObjectTypeVariable7499 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7519 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7545 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ObjectTypeVariable7586 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7606 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7632 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_ObjectTypeVariable7668 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7688 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7714 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ObjectTypeVariable7750 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7770 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7796 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_ObjectTypeVariable7837 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7857 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7883 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_ObjectTypeVariable7924 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ObjectTypeVariable7944 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7970 = new BitSet(new long[]{0x1002660000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ObjectTypeVariable8016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable8035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_kermeta_language_structure_ModelTypeVariable8060 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ModelTypeVariable8074 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_ModelTypeVariable8097 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8117 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8143 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelTypeVariable8184 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8204 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable8230 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_ModelTypeVariable8266 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8286 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable8312 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ModelTypeVariable8348 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8368 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8394 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_ModelTypeVariable8435 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8455 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8481 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8522 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8542 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8568 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_62_in_parse_org_kermeta_language_structure_ModelTypeVariable8609 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ModelTypeVariable8629 = new BitSet(new long[]{0x8800000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8655 = new BitSet(new long[]{0x5002660000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ModelTypeVariable8696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType8725 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_VirtualType8739 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_VirtualType8762 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType8782 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8808 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_VirtualType8849 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType8869 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8895 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_VirtualType8931 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType8951 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8977 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_VirtualType9013 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9033 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9059 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_VirtualType9100 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9120 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9146 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_VirtualType9187 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9207 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9233 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType9274 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9294 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9320 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_65_in_parse_org_kermeta_language_structure_VirtualType9361 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9381 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9407 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_66_in_parse_org_kermeta_language_structure_VirtualType9448 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_VirtualType9468 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9494 = new BitSet(new long[]{0x1002660000100000L,0x0000000000000007L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_VirtualType9535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_org_kermeta_language_structure_ProductType9564 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ProductType9578 = new BitSet(new long[]{0x000A260000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_ProductType9601 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9621 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9647 = new BitSet(new long[]{0x000A260000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ProductType9688 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9708 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9734 = new BitSet(new long[]{0x000A260000100000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9770 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9790 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9816 = new BitSet(new long[]{0x000A260000100000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ProductType9852 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9872 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9898 = new BitSet(new long[]{0x000A260000100000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_ProductType9939 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_ProductType9959 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9985 = new BitSet(new long[]{0x000A260000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ProductType10031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10060 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_FunctionType10074 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_FunctionType10097 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10117 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10143 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_FunctionType10184 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10204 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType10230 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_FunctionType10266 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10286 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType10312 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_FunctionType10348 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10368 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10394 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_69_in_parse_org_kermeta_language_structure_FunctionType10435 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10455 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10481 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_structure_FunctionType10522 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_FunctionType10542 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10568 = new BitSet(new long[]{0x0002260000100000L,0x0000000000000060L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_FunctionType10614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_kermeta_language_behavior_Block10643 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10672 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10714 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10756 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10798 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10840 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10882 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10924 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10966 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block11008 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block11050 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Block11092 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block11134 = new BitSet(new long[]{0x0200000400000340L,0x00000001813A4B80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block11190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Block11231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_kermeta_language_behavior_Rescue11260 = new BitSet(new long[]{0x0200008400000342L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_behavior_Rescue11283 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue11309 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_Rescue11342 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue11368 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_Rescue11396 = new BitSet(new long[]{0x0200008400000342L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue11444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference11504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_parse_org_kermeta_language_behavior_Raise11540 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11711 = new BitSet(new long[]{0x0000000400000340L,0x0000000081180800L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11734 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11768 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_parse_org_kermeta_language_behavior_Conditional11798 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A0080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11821 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11855 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11889 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11923 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11957 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11991 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12025 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12059 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12093 = new BitSet(new long[]{0x0200000400000340L,0x00000000813A2180L});
    public static final BitSet FOLLOW_77_in_parse_org_kermeta_language_behavior_Conditional12132 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional12158 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional12200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional12242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional12284 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12326 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12368 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12410 = new BitSet(new long[]{0x0000000000000040L,0x0000000000180000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12486 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Conditional12527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12556 = new BitSet(new long[]{0x0200008400000340L,0x00000005813ACC80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_parse_org_kermeta_language_behavior_Loop12626 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12644 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_kermeta_language_behavior_Loop12671 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_kermeta_language_behavior_VariableDecl12778 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12796 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_VariableDecl12817 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12835 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_parse_org_kermeta_language_behavior_VariableDecl12862 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_parse_org_kermeta_language_behavior_CallResult12990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_parse_org_kermeta_language_behavior_CallResult13023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_org_kermeta_language_behavior_CallSuperOperation13052 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_behavior_CallSuperOperation13066 = new BitSet(new long[]{0x0200008C00000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13095 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallSuperOperation13136 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation13170 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_CallSuperOperation13244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13288 = new BitSet(new long[]{0x0000000000000400L,0x0000000000400000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13330 = new BitSet(new long[]{0x0000000000000400L,0x0000000000400000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13372 = new BitSet(new long[]{0x0000000000000400L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_Assignment13415 = new BitSet(new long[]{0x0200008400000340L,0x0000000081380000L});
    public static final BitSet FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment13449 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_Assignment13482 = new BitSet(new long[]{0x0200008400000340L,0x0000000081380000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment13565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_SelfExpression14016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_behavior_CallFeature14045 = new BitSet(new long[]{0x0000000000000340L,0x0000000081180000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14068 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14102 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14136 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14170 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14204 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14238 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14277 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14303 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14344 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14370 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_behavior_CallFeature14403 = new BitSet(new long[]{0x0200008C00000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14444 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature14499 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14541 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature14645 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14673 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14699 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14740 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14766 = new BitSet(new long[]{0x0000000800000000L,0x000000007E000000L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14816 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14838 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature14861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14902 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature14940 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_CallFeature14978 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_CallFeature15016 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15065 = new BitSet(new long[]{0x0000000800000000L,0x0000000078000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature15116 = new BitSet(new long[]{0x0000000000000002L,0x0000000078000000L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15151 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature15189 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_CallFeature15227 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_CallFeature15265 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15314 = new BitSet(new long[]{0x0000000000000002L,0x0000000078000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature15385 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature15419 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature15453 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature15487 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature15521 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature15555 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15594 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15620 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15661 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15687 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_behavior_CallFeature15720 = new BitSet(new long[]{0x0200008C00000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15761 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_CallFeature15816 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15858 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_CallFeature15962 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15990 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature16016 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature16057 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature16083 = new BitSet(new long[]{0x0000000000000002L,0x000000007E000000L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature16133 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature16202 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_CallFeature16240 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_CallFeature16278 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_CallFeature16316 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16365 = new BitSet(new long[]{0x0000000000000002L,0x0000000078000000L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_JavaStaticCall16438 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16456 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_JavaStaticCall16477 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16495 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_behavior_JavaStaticCall16516 = new BitSet(new long[]{0x0200008C00000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16545 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_behavior_JavaStaticCall16586 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16620 = new BitSet(new long[]{0x0000000804000000L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_behavior_JavaStaticCall16694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_VoidLiteral16723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_org_kermeta_language_behavior_CallValue16752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_parse_org_kermeta_language_behavior_EmptyExpression16781 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_EmptyExpression16795 = new BitSet(new long[]{0x0002060000100000L,0x0000000200000000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_behavior_EmptyExpression16818 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression16838 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16864 = new BitSet(new long[]{0x0002060000100000L,0x0000000200000000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_behavior_EmptyExpression16905 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression16925 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16951 = new BitSet(new long[]{0x0002060000100000L,0x0000000200000000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_behavior_EmptyExpression16987 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression17007 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression17033 = new BitSet(new long[]{0x0002060000100000L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_parse_org_kermeta_language_behavior_EmptyExpression17069 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_EmptyExpression17089 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression17115 = new BitSet(new long[]{0x0002060000100000L,0x0000000200000000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_EmptyExpression17161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaExpression17190 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaExpression17204 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_behavior_LambdaExpression17227 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17247 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression17273 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_behavior_LambdaExpression17314 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17334 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression17360 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaExpression17396 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17416 = new BitSet(new long[]{0xA88010A001C800C0L,0x0000000000000018L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression17442 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17478 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17498 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression17524 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_99_in_parse_org_kermeta_language_behavior_LambdaExpression17565 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17585 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17611 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_100_in_parse_org_kermeta_language_behavior_LambdaExpression17647 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaExpression17667 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17693 = new BitSet(new long[]{0x0002060000100000L,0x0000001A00000000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaExpression17734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_parse_org_kermeta_language_behavior_LambdaParameter17763 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaParameter17777 = new BitSet(new long[]{0x0008460000100000L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_behavior_LambdaParameter17800 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter17820 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17846 = new BitSet(new long[]{0x0008460000100000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_behavior_LambdaParameter17887 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter17907 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17933 = new BitSet(new long[]{0x0008460000100000L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_behavior_LambdaParameter17969 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter17989 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter18015 = new BitSet(new long[]{0x0008460000100000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_behavior_LambdaParameter18056 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_behavior_LambdaParameter18076 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter18102 = new BitSet(new long[]{0x0008460000100000L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_behavior_LambdaParameter18143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression18168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression18178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression18188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression18198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression18208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression18218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression18228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression18238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression18248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression18258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression18268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression18278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression18288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression18298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression18308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression18318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression18328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression18338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression18348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression18358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type18379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type18389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type18399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type18409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type18419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type18429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type18439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type18449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type18459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type18469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type18479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_synpred11_Kermeta539 = new BitSet(new long[]{0x0000000000200040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred11_Kermeta565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred13_Kermeta615 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred13_Kermeta656 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_20_in_synpred13_Kermeta717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred15_Kermeta745 = new BitSet(new long[]{0x0080102001C800C0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred15_Kermeta786 = new BitSet(new long[]{0x0080102001D800C0L});
    public static final BitSet FOLLOW_20_in_synpred15_Kermeta847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred16_Kermeta896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred17_Kermeta615 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred17_Kermeta656 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_20_in_synpred17_Kermeta717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred17_Kermeta745 = new BitSet(new long[]{0x0080102001C800C0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta786 = new BitSet(new long[]{0x0080102001D800C0L});
    public static final BitSet FOLLOW_20_in_synpred17_Kermeta847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred17_Kermeta896 = new BitSet(new long[]{0x0080102001C800C2L});
    public static final BitSet FOLLOW_18_in_synpred19_Kermeta1022 = new BitSet(new long[]{0x0000000000200040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred19_Kermeta1048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred21_Kermeta1098 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred21_Kermeta1139 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_20_in_synpred21_Kermeta1200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred23_Kermeta1228 = new BitSet(new long[]{0x0080102001C800C0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred23_Kermeta1269 = new BitSet(new long[]{0x0080102001D800C0L});
    public static final BitSet FOLLOW_20_in_synpred23_Kermeta1330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred24_Kermeta1379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred25_Kermeta1098 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred25_Kermeta1139 = new BitSet(new long[]{0x0000000000300040L});
    public static final BitSet FOLLOW_20_in_synpred25_Kermeta1200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_synpred25_Kermeta1228 = new BitSet(new long[]{0x0080102001C800C0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred25_Kermeta1269 = new BitSet(new long[]{0x0080102001D800C0L});
    public static final BitSet FOLLOW_20_in_synpred25_Kermeta1330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred25_Kermeta1379 = new BitSet(new long[]{0x0080102001C800C2L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred30_Kermeta1816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred39_Kermeta2455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred51_Kermeta3976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred52_Kermeta3986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred53_Kermeta3996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred54_Kermeta4006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred55_Kermeta4016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred56_Kermeta4026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred57_Kermeta4036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred58_Kermeta4046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred59_Kermeta4056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred60_Kermeta4066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred61_Kermeta4076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred62_Kermeta4086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred63_Kermeta4096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred64_Kermeta4106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred65_Kermeta4116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred67_Kermeta4136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred69_Kermeta4156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred70_Kermeta4166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred72_Kermeta4186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred74_Kermeta4206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred79_Kermeta4256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred81_Kermeta4276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred82_Kermeta4286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred83_Kermeta4296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred87_Kermeta4336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred88_Kermeta4346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred90_Kermeta4366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred91_Kermeta4376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred92_Kermeta4386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred93_Kermeta4396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred94_Kermeta4406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred95_Kermeta4416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred112_Kermeta5766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred175_Kermeta10798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred176_Kermeta10840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred177_Kermeta10882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred179_Kermeta10966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred180_Kermeta11008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred188_Kermeta11821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred190_Kermeta11889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred191_Kermeta11923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred193_Kermeta11991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred194_Kermeta12025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred198_Kermeta12242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred199_Kermeta12284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred201_Kermeta12368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_synpred205_Kermeta12671 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred205_Kermeta12704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred210_Kermeta13288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred211_Kermeta13330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred213_Kermeta13523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred214_Kermeta13565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred216_Kermeta13649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred218_Kermeta13733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred220_Kermeta13817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred221_Kermeta13859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred224_Kermeta14102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred227_Kermeta14204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred228_Kermeta14277 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred228_Kermeta14303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred232_Kermeta14673 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred232_Kermeta14699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_synpred242_Kermeta15151 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_92_in_synpred242_Kermeta15189 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_93_in_synpred242_Kermeta15227 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_94_in_synpred242_Kermeta15265 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred242_Kermeta15314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred245_Kermeta15419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred248_Kermeta15521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred249_Kermeta15594 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred249_Kermeta15620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred253_Kermeta15990 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred253_Kermeta16016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_synpred259_Kermeta16202 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_92_in_synpred259_Kermeta16240 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_93_in_synpred259_Kermeta16278 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_94_in_synpred259_Kermeta16316 = new BitSet(new long[]{0x0200008400000340L,0x00000005813A4C80L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred259_Kermeta16365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred278_Kermeta18188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred279_Kermeta18198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred280_Kermeta18208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred284_Kermeta18248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred285_Kermeta18258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred287_Kermeta18278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred288_Kermeta18288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred289_Kermeta18298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred290_Kermeta18308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred291_Kermeta18318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred295_Kermeta18379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred298_Kermeta18409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred300_Kermeta18429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred301_Kermeta18439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred303_Kermeta18459 = new BitSet(new long[]{0x0000000000000002L});

}