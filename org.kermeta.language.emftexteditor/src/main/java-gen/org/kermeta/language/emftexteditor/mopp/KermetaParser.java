// $ANTLR 3.1.1

	package org.kermeta.language.emftexteditor.mopp;


import org.antlr.runtime.*;
import java.util.HashMap;
public class KermetaParser extends KermetaANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "IDENTIFIER", "PRIMITIVE_TYPE", "INTEGER", "BOOLEAN", "CASTED", "SL_COMMENT", "ML_COMMENT", "FLOAT", "WHITESPACE", "LINEBREAKS", "'using'", "'require'", "'package'", "'::'", "'{'", "'}'", "'aspect'", "'abstract'", "'class'", "'inherits'", "','", "'attribute'", "'reference'", "':'", "'property'", "'getter'", "'setter'", "'operation'", "'('", "')'", "'is'", "'enumeration'", "';'", "'Void'", "'Object'", "'tag'", "'ownedTags'", "'Model'", "'ModelType'", "'typeContainer'", "'name'", "'includedTypeDefinition'", "'TypeVariableBinding'", "'containedType'", "'variable'", "'type'", "'MultiplicityElement'", "'lower'", "'upper'", "'TypeDefinition'", "'Tag'", "'value'", "'object'", "'ObjectTypeVariable'", "'supertype'", "'ModelTypeVariable'", "'virtualType'", "'VirtualType'", "'classDefinition'", "'modelType'", "'typeParamBinding'", "'ProductType'", "'FunctionType'", "'left'", "'right'", "'do'", "'end'", "'rescue'", "'raise'", "'if'", "'then'", "'else'", "'from'", "'until'", "'loop'", "'var'", "'init'", "'result'", "'super'", "':='", "'='", "'self'", "'.'", "'=='", "'+'", "'-'", "'/'", "'*'", "'extern'", "'EmptyExpression'", "'staticType'", "'LambdaExpression'", "'parameters'", "'body'", "'LambdaParameter'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__16=16;
    public static final int T__15=15;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int T__14=14;
    public static final int PRIMITIVE_TYPE=5;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int WHITESPACE=12;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int SL_COMMENT=9;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int FLOAT=11;
    public static final int T__61=61;
    public static final int LINEBREAKS=13;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int ML_COMMENT=10;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int BOOLEAN=7;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int IDENTIFIER=4;
    public static final int T__59=59;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int INTEGER=6;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int CASTED=8;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;

    // delegates
    // delegators


        public KermetaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public KermetaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[346+1];
             
             
        }
        

    public String[] getTokenNames() { return KermetaParser.tokenNames; }
    public String getGrammarFileName() { return "/home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g"; }


    	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
    	@SuppressWarnings("unused")
    	
    	private int lastPosition;
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
    	private boolean rememberExpectedElements = false;
    	private java.lang.Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    	private int mismatchedTokenRecoveryTries = 0;
    	private java.util.Map<?, ?> options;
    	//helper lists to allow a lexer to pass errors to its parser
    	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
    	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
    	private boolean terminateParsing;
    	private int tokenIndexOfLastCompleteElement;
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
    					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
    						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
    					}
    					public java.lang.String getMessage() {
    						return errorMessage;
    					}
    				}, line, charPositionInLine, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		setPosition(expectedElement, input.index());
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
    		java.lang.Object value = element.eGet(structuralFeature);
    		java.lang.Object mapKey = dummy.getValueByName("key");
    		java.lang.Object mapValue = dummy.getValueByName("value");
    		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
    			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
    			if (mapKey != null && mapValue != null) {
    				valueMap.put(mapKey, mapValue);
    			}
    		}
    	}
    	
    	@SuppressWarnings("unchecked")
    	
    	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
    		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
    		org.eclipse.emf.ecore.EObject currentTarget = target;
    		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
    			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
    			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
    			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
    			currentTarget = newEObject;
    		}
    		return currentTarget;
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    		int currentPos = getTokenStream().index();
    		if (currentPos == 0) {
    			return;
    		}
    		int endPos = currentPos - 1;
    		for (; endPos >= this.lastPosition; endPos--) {
    			org.antlr.runtime.Token token = getTokenStream().get(endPos);
    			int _channel = token.getChannel();
    			if (_channel != 99) {
    				break;
    			}
    		}
    		for (int pos = this.lastPosition; pos < endPos; pos++) {
    			org.antlr.runtime.Token token = getTokenStream().get(pos);
    			int _channel = token.getChannel();
    			if (_channel == 99) {
    				if (token.getType() == KermetaLexer.SL_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    				if (token.getType() == KermetaLexer.ML_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    			}
    		}
    		this.lastPosition = (endPos < 0 ? 0 : endPos);
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
    		try {
    			if (encoding == null) {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	// This default constructor is only used to call createInstance() on it
    	public KermetaParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		java.lang.Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
    				return parse_org_kermeta_language_structure_ModelingUnit();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
    				return parse_org_kermeta_language_structure_Using();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
    				return parse_org_kermeta_language_structure_Require();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
    				return parse_org_kermeta_language_structure_Package();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
    				return parse_org_kermeta_language_structure_ClassDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
    				return parse_org_kermeta_language_structure_Property();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
    				return parse_org_kermeta_language_structure_Operation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
    				return parse_org_kermeta_language_structure_Parameter();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
    				return parse_org_kermeta_language_structure_Class();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
    				return parse_org_kermeta_language_structure_Enumeration();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
    				return parse_org_kermeta_language_structure_EnumerationLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
    				return parse_org_kermeta_language_structure_Constraint();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
    				return parse_org_kermeta_language_structure_PrimitiveType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.UnresolvedType.class) {
    				return parse_org_kermeta_language_structure_UnresolvedType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
    				return parse_org_kermeta_language_structure_VoidType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
    				return parse_org_kermeta_language_structure_Object();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
    				return parse_org_kermeta_language_structure_Model();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
    				return parse_org_kermeta_language_structure_ModelType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
    				return parse_org_kermeta_language_structure_TypeVariableBinding();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
    				return parse_org_kermeta_language_structure_MultiplicityElement();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
    				return parse_org_kermeta_language_structure_TypeDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
    				return parse_org_kermeta_language_structure_Tag();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ObjectTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ModelTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
    				return parse_org_kermeta_language_structure_VirtualType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
    				return parse_org_kermeta_language_structure_ProductType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
    				return parse_org_kermeta_language_structure_FunctionType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
    				return parse_org_kermeta_language_behavior_Block();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
    				return parse_org_kermeta_language_behavior_Rescue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
    				return parse_org_kermeta_language_behavior_TypeReference();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
    				return parse_org_kermeta_language_behavior_Raise();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
    				return parse_org_kermeta_language_behavior_BooleanLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
    				return parse_org_kermeta_language_behavior_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
    				return parse_org_kermeta_language_behavior_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
    				return parse_org_kermeta_language_behavior_Conditional();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
    				return parse_org_kermeta_language_behavior_Loop();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
    				return parse_org_kermeta_language_behavior_VariableDecl();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
    				return parse_org_kermeta_language_behavior_TypeLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
    				return parse_org_kermeta_language_behavior_CallResult();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
    				return parse_org_kermeta_language_behavior_CallSuperOperation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
    				return parse_org_kermeta_language_behavior_Assignment();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
    				return parse_org_kermeta_language_behavior_CallVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
    				return parse_org_kermeta_language_behavior_SelfExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
    				return parse_org_kermeta_language_behavior_CallFeature();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
    				return parse_org_kermeta_language_behavior_JavaStaticCall();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
    				return parse_org_kermeta_language_behavior_VoidLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
    				return parse_org_kermeta_language_behavior_CallValue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
    				return parse_org_kermeta_language_behavior_EmptyExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
    				return parse_org_kermeta_language_behavior_LambdaExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
    				return parse_org_kermeta_language_behavior_LambdaParameter();
    			}
    		}
    		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
    	}
    	
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
    		tokenResolveResult.clear();
    		return tokenResolveResult;
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	protected java.util.Map<?,?> getOptions() {
    		return options;
    	}
    	
    	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
    		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
    	}
    	
    	public java.lang.Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
    		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
    	}
    	
    	protected java.lang.Object getTypeObject() {
    		java.lang.Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	// Implementation that calls {@link #doParse()}  and handles the thrown
    	// RecognitionExceptions.
    	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
    		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				//? can be caused if a null is set on EMF models where not allowed;
    				//? this will just happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
    		rememberExpectedElements = true;
    		parseToIndexTypeObject = type;
    		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
    		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContents().add(root);
    			}
    			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 597;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected terminals
    				// can be set
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are kept
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
    							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements that were
    		// added during the last iteration of the loop
    		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = java.lang.Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = java.lang.Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
    				return true;
    			}
    		});
    	}
    	
    	// Translates errors thrown by the parser into human readable messages.
    	public void reportError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = e.getMessage();
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mte.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mte.expecting];
    				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
    			}
    			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
    			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mtne.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mtne.expecting];
    			}
    			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
    		}
    		// the resource may be null if the parse is used for code completion
    		final java.lang.String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime.CommonToken) {
    			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	// Translates errors thrown by the lexer into human readable messages.
    	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = "";
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
    			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
    			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	public void setOptions(java.util.Map<?,?> options) {
    		this.options = options;
    	}
    	
    	public void terminate() {
    		terminateParsing = true;
    	}
    	
    	protected void completedElement(Object element) {
    		if (element instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "PRIMITIVE_TYPE");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("getter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("setter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("extern");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUnresolvedType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_389 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	
    	public static void wire0() {
    		TERMINAL_1.addFollower(TERMINAL_1);
    		TERMINAL_1.addFollower(TERMINAL_2);
    		TERMINAL_1.addFollower(TERMINAL_3);
    		TERMINAL_0.addFollower(TERMINAL_0);
    		TERMINAL_0.addFollower(TERMINAL_1);
    		TERMINAL_0.addFollower(TERMINAL_2);
    		TERMINAL_0.addFollower(TERMINAL_3);
    		TERMINAL_2.addFollower(TERMINAL_15);
    		TERMINAL_15.addFollower(TERMINAL_16);
    		TERMINAL_15.addFollower(TERMINAL_17);
    		TERMINAL_15.addFollower(TERMINAL_18);
    		TERMINAL_15.addFollower(TERMINAL_19);
    		TERMINAL_15.addFollower(TERMINAL_20);
    		TERMINAL_15.addFollower(TERMINAL_21);
    		TERMINAL_15.addFollower(TERMINAL_22);
    		TERMINAL_15.addFollower(TERMINAL_23);
    		TERMINAL_15.addFollower(TERMINAL_24);
    		TERMINAL_15.addFollower(TERMINAL_25);
    		TERMINAL_15.addFollower(TERMINAL_26);
    		TERMINAL_15.addFollower(TERMINAL_27);
    		TERMINAL_16.addFollower(TERMINAL_2);
    		TERMINAL_16.addFollower(TERMINAL_3);
    		TERMINAL_28.addFollower(TERMINAL_16);
    		TERMINAL_28.addFollower(TERMINAL_17);
    		TERMINAL_28.addFollower(TERMINAL_18);
    		TERMINAL_28.addFollower(TERMINAL_19);
    		TERMINAL_28.addFollower(TERMINAL_20);
    		TERMINAL_28.addFollower(TERMINAL_21);
    		TERMINAL_28.addFollower(TERMINAL_22);
    		TERMINAL_28.addFollower(TERMINAL_23);
    		TERMINAL_28.addFollower(TERMINAL_24);
    		TERMINAL_28.addFollower(TERMINAL_25);
    		TERMINAL_28.addFollower(TERMINAL_26);
    		TERMINAL_28.addFollower(TERMINAL_27);
    		TERMINAL_3.addFollower(TERMINAL_17);
    		TERMINAL_3.addFollower(TERMINAL_18);
    		TERMINAL_3.addFollower(TERMINAL_19);
    		TERMINAL_3.addFollower(TERMINAL_20);
    		TERMINAL_3.addFollower(TERMINAL_21);
    		TERMINAL_3.addFollower(TERMINAL_22);
    		TERMINAL_3.addFollower(TERMINAL_23);
    		TERMINAL_3.addFollower(TERMINAL_24);
    		TERMINAL_3.addFollower(TERMINAL_25);
    		TERMINAL_3.addFollower(TERMINAL_26);
    		TERMINAL_3.addFollower(TERMINAL_27);
    		TERMINAL_26.addFollower(TERMINAL_17);
    		TERMINAL_26.addFollower(TERMINAL_18);
    		TERMINAL_26.addFollower(TERMINAL_19);
    		TERMINAL_26.addFollower(TERMINAL_20);
    		TERMINAL_26.addFollower(TERMINAL_21);
    		TERMINAL_26.addFollower(TERMINAL_22);
    		TERMINAL_26.addFollower(TERMINAL_23);
    		TERMINAL_26.addFollower(TERMINAL_24);
    		TERMINAL_26.addFollower(TERMINAL_25);
    		TERMINAL_29.addFollower(TERMINAL_2);
    		TERMINAL_29.addFollower(TERMINAL_3);
    		TERMINAL_29.addFollower(TERMINAL_28);
    		TERMINAL_27.addFollower(TERMINAL_2);
    		TERMINAL_27.addFollower(TERMINAL_3);
    		TERMINAL_27.addFollower(TERMINAL_30);
    		TERMINAL_30.addFollower(TERMINAL_2);
    		TERMINAL_30.addFollower(TERMINAL_3);
    		TERMINAL_30.addFollower(TERMINAL_28);
    		TERMINAL_17.addFollower(TERMINAL_18);
    		TERMINAL_17.addFollower(TERMINAL_19);
    		TERMINAL_18.addFollower(TERMINAL_19);
    		TERMINAL_19.addFollower(TERMINAL_31);
    		TERMINAL_31.addFollower(TERMINAL_32);
    		TERMINAL_31.addFollower(TERMINAL_33);
    		TERMINAL_32.addFollower(TERMINAL_34);
    		TERMINAL_34.addFollower(TERMINAL_35);
    		TERMINAL_34.addFollower(TERMINAL_33);
    		TERMINAL_35.addFollower(TERMINAL_36);
    		TERMINAL_36.addFollower(TERMINAL_35);
    		TERMINAL_36.addFollower(TERMINAL_33);
    		TERMINAL_33.addFollower(TERMINAL_8);
    		TERMINAL_33.addFollower(TERMINAL_5);
    		TERMINAL_33.addFollower(TERMINAL_6);
    		TERMINAL_33.addFollower(TERMINAL_7);
    		TERMINAL_33.addFollower(TERMINAL_9);
    		TERMINAL_33.addFollower(TERMINAL_37);
    		TERMINAL_37.addFollower(TERMINAL_17);
    		TERMINAL_37.addFollower(TERMINAL_18);
    		TERMINAL_37.addFollower(TERMINAL_19);
    		TERMINAL_37.addFollower(TERMINAL_20);
    		TERMINAL_37.addFollower(TERMINAL_21);
    		TERMINAL_37.addFollower(TERMINAL_22);
    		TERMINAL_37.addFollower(TERMINAL_23);
    		TERMINAL_37.addFollower(TERMINAL_24);
    		TERMINAL_37.addFollower(TERMINAL_25);
    		TERMINAL_37.addFollower(TERMINAL_2);
    		TERMINAL_37.addFollower(TERMINAL_3);
    		TERMINAL_5.addFollower(TERMINAL_38);
    		TERMINAL_6.addFollower(TERMINAL_38);
    		TERMINAL_38.addFollower(TERMINAL_39);
    		TERMINAL_38.addFollower(TERMINAL_5);
    		TERMINAL_38.addFollower(TERMINAL_6);
    		TERMINAL_38.addFollower(TERMINAL_7);
    		TERMINAL_38.addFollower(TERMINAL_8);
    		TERMINAL_38.addFollower(TERMINAL_9);
    		TERMINAL_38.addFollower(TERMINAL_37);
    		TERMINAL_39.addFollower(TERMINAL_40);
    		TERMINAL_40.addFollower(TERMINAL_5);
    		TERMINAL_40.addFollower(TERMINAL_6);
    		TERMINAL_40.addFollower(TERMINAL_7);
    		TERMINAL_40.addFollower(TERMINAL_8);
    		TERMINAL_40.addFollower(TERMINAL_9);
    		TERMINAL_40.addFollower(TERMINAL_37);
    		TERMINAL_7.addFollower(TERMINAL_41);
    		TERMINAL_41.addFollower(TERMINAL_42);
    		TERMINAL_41.addFollower(TERMINAL_43);
    		TERMINAL_41.addFollower(TERMINAL_44);
    		TERMINAL_41.addFollower(TERMINAL_5);
    		TERMINAL_41.addFollower(TERMINAL_6);
    		TERMINAL_41.addFollower(TERMINAL_7);
    		TERMINAL_41.addFollower(TERMINAL_8);
    		TERMINAL_41.addFollower(TERMINAL_9);
    		TERMINAL_41.addFollower(TERMINAL_37);
    		TERMINAL_42.addFollower(TERMINAL_45);
    		TERMINAL_45.addFollower(TERMINAL_43);
    		TERMINAL_45.addFollower(TERMINAL_44);
    		TERMINAL_45.addFollower(TERMINAL_5);
    		TERMINAL_45.addFollower(TERMINAL_6);
    		TERMINAL_45.addFollower(TERMINAL_7);
    		TERMINAL_45.addFollower(TERMINAL_8);
    		TERMINAL_45.addFollower(TERMINAL_9);
    		TERMINAL_45.addFollower(TERMINAL_37);
    		TERMINAL_43.addFollower(TERMINAL_46);
    		TERMINAL_43.addFollower(TERMINAL_47);
    		TERMINAL_43.addFollower(TERMINAL_48);
    		TERMINAL_43.addFollower(TERMINAL_49);
    		TERMINAL_43.addFollower(TERMINAL_50);
    		TERMINAL_43.addFollower(TERMINAL_51);
    		TERMINAL_43.addFollower(TERMINAL_52);
    		TERMINAL_43.addFollower(TERMINAL_53);
    		TERMINAL_43.addFollower(TERMINAL_14);
    		TERMINAL_43.addFollower(TERMINAL_54);
    		TERMINAL_43.addFollower(TERMINAL_55);
    		TERMINAL_43.addFollower(TERMINAL_56);
    		TERMINAL_43.addFollower(TERMINAL_57);
    		TERMINAL_43.addFollower(TERMINAL_58);
    		TERMINAL_43.addFollower(TERMINAL_59);
    		TERMINAL_43.addFollower(TERMINAL_60);
    		TERMINAL_43.addFollower(TERMINAL_61);
    		TERMINAL_43.addFollower(TERMINAL_62);
    		TERMINAL_43.addFollower(TERMINAL_63);
    		TERMINAL_44.addFollower(TERMINAL_46);
    		TERMINAL_44.addFollower(TERMINAL_47);
    		TERMINAL_44.addFollower(TERMINAL_48);
    		TERMINAL_44.addFollower(TERMINAL_49);
    		TERMINAL_44.addFollower(TERMINAL_50);
    		TERMINAL_44.addFollower(TERMINAL_51);
    		TERMINAL_44.addFollower(TERMINAL_52);
    		TERMINAL_44.addFollower(TERMINAL_53);
    		TERMINAL_44.addFollower(TERMINAL_14);
    		TERMINAL_44.addFollower(TERMINAL_54);
    		TERMINAL_44.addFollower(TERMINAL_55);
    		TERMINAL_44.addFollower(TERMINAL_56);
    		TERMINAL_44.addFollower(TERMINAL_57);
    		TERMINAL_44.addFollower(TERMINAL_58);
    		TERMINAL_44.addFollower(TERMINAL_59);
    		TERMINAL_44.addFollower(TERMINAL_60);
    		TERMINAL_44.addFollower(TERMINAL_61);
    		TERMINAL_44.addFollower(TERMINAL_62);
    		TERMINAL_44.addFollower(TERMINAL_63);
    		TERMINAL_9.addFollower(TERMINAL_64);
    		TERMINAL_64.addFollower(TERMINAL_65);
    		TERMINAL_65.addFollower(TERMINAL_10);
    		TERMINAL_65.addFollower(TERMINAL_66);
    		TERMINAL_67.addFollower(TERMINAL_69);
    		TERMINAL_69.addFollower(TERMINAL_68);
    		TERMINAL_69.addFollower(TERMINAL_66);
    		TERMINAL_68.addFollower(TERMINAL_10);
    		TERMINAL_70.addFollower(TERMINAL_71);
    		TERMINAL_71.addFollower(TERMINAL_68);
    		TERMINAL_71.addFollower(TERMINAL_66);
    		TERMINAL_66.addFollower(TERMINAL_72);
    		TERMINAL_66.addFollower(TERMINAL_73);
    		TERMINAL_72.addFollower(TERMINAL_74);
    		TERMINAL_74.addFollower(TERMINAL_73);
    		TERMINAL_73.addFollower(TERMINAL_46);
    		TERMINAL_73.addFollower(TERMINAL_75);
    		TERMINAL_75.addFollower(TERMINAL_8);
    		TERMINAL_75.addFollower(TERMINAL_9);
    		TERMINAL_75.addFollower(TERMINAL_37);
    		TERMINAL_10.addFollower(TERMINAL_76);
    		TERMINAL_76.addFollower(TERMINAL_77);
    		TERMINAL_77.addFollower(TERMINAL_67);
    		TERMINAL_77.addFollower(TERMINAL_68);
    		TERMINAL_77.addFollower(TERMINAL_66);
    		TERMINAL_78.addFollower(TERMINAL_79);
    		TERMINAL_78.addFollower(TERMINAL_80);
    		TERMINAL_78.addFollower(TERMINAL_81);
    		TERMINAL_78.addFollower(TERMINAL_82);
    		TERMINAL_78.addFollower(TERMINAL_83);
    		TERMINAL_78.addFollower(TERMINAL_84);
    		TERMINAL_78.addFollower(TERMINAL_85);
    		TERMINAL_78.addFollower(TERMINAL_86);
    		TERMINAL_78.addFollower(TERMINAL_87);
    		TERMINAL_78.addFollower(TERMINAL_88);
    		TERMINAL_78.addFollower(TERMINAL_89);
    		TERMINAL_78.addFollower(TERMINAL_90);
    		TERMINAL_78.addFollower(TERMINAL_91);
    		TERMINAL_78.addFollower(TERMINAL_92);
    		TERMINAL_78.addFollower(TERMINAL_93);
    		TERMINAL_78.addFollower(TERMINAL_94);
    		TERMINAL_78.addFollower(TERMINAL_95);
    		TERMINAL_78.addFollower(TERMINAL_96);
    		TERMINAL_78.addFollower(TERMINAL_97);
    		TERMINAL_78.addFollower(TERMINAL_98);
    		TERMINAL_78.addFollower(TERMINAL_99);
    		TERMINAL_78.addFollower(TERMINAL_100);
    		TERMINAL_78.addFollower(TERMINAL_101);
    		TERMINAL_78.addFollower(TERMINAL_102);
    		TERMINAL_78.addFollower(TERMINAL_103);
    		TERMINAL_78.addFollower(TERMINAL_104);
    		TERMINAL_78.addFollower(TERMINAL_105);
    		TERMINAL_78.addFollower(TERMINAL_106);
    		TERMINAL_78.addFollower(TERMINAL_107);
    		TERMINAL_78.addFollower(TERMINAL_108);
    		TERMINAL_78.addFollower(TERMINAL_109);
    		TERMINAL_78.addFollower(TERMINAL_110);
    		TERMINAL_78.addFollower(TERMINAL_111);
    		TERMINAL_78.addFollower(TERMINAL_112);
    		TERMINAL_78.addFollower(TERMINAL_113);
    		TERMINAL_78.addFollower(TERMINAL_114);
    		TERMINAL_78.addFollower(TERMINAL_115);
    		TERMINAL_78.addFollower(TERMINAL_116);
    		TERMINAL_78.addFollower(TERMINAL_117);
    		TERMINAL_78.addFollower(TERMINAL_118);
    		TERMINAL_78.addFollower(TERMINAL_119);
    		TERMINAL_78.addFollower(TERMINAL_120);
    		TERMINAL_78.addFollower(TERMINAL_121);
    		TERMINAL_78.addFollower(TERMINAL_122);
    		TERMINAL_78.addFollower(TERMINAL_123);
    		TERMINAL_78.addFollower(TERMINAL_124);
    		TERMINAL_78.addFollower(TERMINAL_125);
    		TERMINAL_78.addFollower(TERMINAL_126);
    		TERMINAL_78.addFollower(TERMINAL_127);
    		TERMINAL_78.addFollower(TERMINAL_128);
    		TERMINAL_78.addFollower(TERMINAL_129);
    		TERMINAL_78.addFollower(TERMINAL_130);
    		TERMINAL_78.addFollower(TERMINAL_131);
    		TERMINAL_78.addFollower(TERMINAL_132);
    		TERMINAL_78.addFollower(TERMINAL_133);
    		TERMINAL_78.addFollower(TERMINAL_134);
    		TERMINAL_78.addFollower(TERMINAL_135);
    		TERMINAL_78.addFollower(TERMINAL_136);
    		TERMINAL_78.addFollower(TERMINAL_137);
    		TERMINAL_78.addFollower(TERMINAL_138);
    		TERMINAL_78.addFollower(TERMINAL_139);
    		TERMINAL_78.addFollower(TERMINAL_140);
    		TERMINAL_78.addFollower(TERMINAL_141);
    		TERMINAL_78.addFollower(TERMINAL_142);
    		TERMINAL_20.addFollower(TERMINAL_143);
    		TERMINAL_143.addFollower(TERMINAL_144);
    		TERMINAL_144.addFollower(TERMINAL_145);
    		TERMINAL_146.addFollower(TERMINAL_145);
    		TERMINAL_146.addFollower(TERMINAL_147);
    		TERMINAL_148.addFollower(TERMINAL_145);
    		TERMINAL_148.addFollower(TERMINAL_147);
    		TERMINAL_147.addFollower(TERMINAL_17);
    		TERMINAL_147.addFollower(TERMINAL_18);
    		TERMINAL_147.addFollower(TERMINAL_19);
    		TERMINAL_147.addFollower(TERMINAL_20);
    		TERMINAL_147.addFollower(TERMINAL_21);
    		TERMINAL_147.addFollower(TERMINAL_22);
    		TERMINAL_147.addFollower(TERMINAL_23);
    		TERMINAL_147.addFollower(TERMINAL_24);
    		TERMINAL_147.addFollower(TERMINAL_25);
    		TERMINAL_147.addFollower(TERMINAL_2);
    		TERMINAL_147.addFollower(TERMINAL_3);
    		TERMINAL_147.addFollower(TERMINAL_79);
    		TERMINAL_147.addFollower(TERMINAL_80);
    		TERMINAL_147.addFollower(TERMINAL_81);
    		TERMINAL_147.addFollower(TERMINAL_82);
    		TERMINAL_147.addFollower(TERMINAL_83);
    		TERMINAL_147.addFollower(TERMINAL_84);
    		TERMINAL_147.addFollower(TERMINAL_85);
    		TERMINAL_147.addFollower(TERMINAL_86);
    		TERMINAL_147.addFollower(TERMINAL_87);
    		TERMINAL_147.addFollower(TERMINAL_88);
    		TERMINAL_147.addFollower(TERMINAL_89);
    		TERMINAL_147.addFollower(TERMINAL_90);
    		TERMINAL_147.addFollower(TERMINAL_91);
    		TERMINAL_147.addFollower(TERMINAL_92);
    		TERMINAL_147.addFollower(TERMINAL_93);
    		TERMINAL_147.addFollower(TERMINAL_94);
    		TERMINAL_147.addFollower(TERMINAL_95);
    		TERMINAL_147.addFollower(TERMINAL_96);
    		TERMINAL_147.addFollower(TERMINAL_97);
    		TERMINAL_147.addFollower(TERMINAL_98);
    		TERMINAL_147.addFollower(TERMINAL_99);
    		TERMINAL_147.addFollower(TERMINAL_100);
    		TERMINAL_147.addFollower(TERMINAL_101);
    		TERMINAL_147.addFollower(TERMINAL_102);
    		TERMINAL_147.addFollower(TERMINAL_103);
    		TERMINAL_147.addFollower(TERMINAL_104);
    		TERMINAL_147.addFollower(TERMINAL_105);
    		TERMINAL_147.addFollower(TERMINAL_106);
    		TERMINAL_147.addFollower(TERMINAL_107);
    		TERMINAL_147.addFollower(TERMINAL_108);
    		TERMINAL_147.addFollower(TERMINAL_109);
    		TERMINAL_147.addFollower(TERMINAL_110);
    		TERMINAL_147.addFollower(TERMINAL_111);
    		TERMINAL_147.addFollower(TERMINAL_112);
    		TERMINAL_147.addFollower(TERMINAL_113);
    		TERMINAL_147.addFollower(TERMINAL_114);
    		TERMINAL_147.addFollower(TERMINAL_115);
    		TERMINAL_147.addFollower(TERMINAL_116);
    		TERMINAL_147.addFollower(TERMINAL_117);
    		TERMINAL_147.addFollower(TERMINAL_118);
    		TERMINAL_147.addFollower(TERMINAL_119);
    		TERMINAL_147.addFollower(TERMINAL_120);
    		TERMINAL_147.addFollower(TERMINAL_121);
    		TERMINAL_147.addFollower(TERMINAL_122);
    		TERMINAL_147.addFollower(TERMINAL_123);
    		TERMINAL_147.addFollower(TERMINAL_124);
    		TERMINAL_147.addFollower(TERMINAL_125);
    		TERMINAL_147.addFollower(TERMINAL_126);
    		TERMINAL_147.addFollower(TERMINAL_127);
    		TERMINAL_147.addFollower(TERMINAL_128);
    		TERMINAL_147.addFollower(TERMINAL_129);
    		TERMINAL_147.addFollower(TERMINAL_130);
    		TERMINAL_147.addFollower(TERMINAL_131);
    		TERMINAL_147.addFollower(TERMINAL_132);
    		TERMINAL_147.addFollower(TERMINAL_133);
    		TERMINAL_147.addFollower(TERMINAL_134);
    		TERMINAL_147.addFollower(TERMINAL_135);
    		TERMINAL_147.addFollower(TERMINAL_136);
    		TERMINAL_147.addFollower(TERMINAL_137);
    		TERMINAL_147.addFollower(TERMINAL_138);
    		TERMINAL_147.addFollower(TERMINAL_139);
    		TERMINAL_147.addFollower(TERMINAL_140);
    		TERMINAL_147.addFollower(TERMINAL_141);
    		TERMINAL_147.addFollower(TERMINAL_142);
    		TERMINAL_145.addFollower(TERMINAL_146);
    		TERMINAL_8.addFollower(TERMINAL_149);
    		TERMINAL_149.addFollower(TERMINAL_8);
    		TERMINAL_149.addFollower(TERMINAL_5);
    		TERMINAL_149.addFollower(TERMINAL_6);
    		TERMINAL_149.addFollower(TERMINAL_7);
    		TERMINAL_149.addFollower(TERMINAL_9);
    		TERMINAL_149.addFollower(TERMINAL_37);
    		TERMINAL_21.addFollower(TERMINAL_17);
    		TERMINAL_21.addFollower(TERMINAL_18);
    		TERMINAL_21.addFollower(TERMINAL_19);
    		TERMINAL_21.addFollower(TERMINAL_20);
    		TERMINAL_21.addFollower(TERMINAL_21);
    		TERMINAL_21.addFollower(TERMINAL_22);
    		TERMINAL_21.addFollower(TERMINAL_23);
    		TERMINAL_21.addFollower(TERMINAL_24);
    		TERMINAL_21.addFollower(TERMINAL_25);
    		TERMINAL_21.addFollower(TERMINAL_2);
    		TERMINAL_21.addFollower(TERMINAL_3);
    		TERMINAL_21.addFollower(TERMINAL_79);
    		TERMINAL_21.addFollower(TERMINAL_80);
    		TERMINAL_21.addFollower(TERMINAL_81);
    		TERMINAL_21.addFollower(TERMINAL_82);
    		TERMINAL_21.addFollower(TERMINAL_83);
    		TERMINAL_21.addFollower(TERMINAL_84);
    		TERMINAL_21.addFollower(TERMINAL_85);
    		TERMINAL_21.addFollower(TERMINAL_86);
    		TERMINAL_21.addFollower(TERMINAL_87);
    		TERMINAL_21.addFollower(TERMINAL_88);
    		TERMINAL_21.addFollower(TERMINAL_89);
    		TERMINAL_21.addFollower(TERMINAL_90);
    		TERMINAL_21.addFollower(TERMINAL_91);
    		TERMINAL_21.addFollower(TERMINAL_92);
    		TERMINAL_21.addFollower(TERMINAL_93);
    		TERMINAL_21.addFollower(TERMINAL_94);
    		TERMINAL_21.addFollower(TERMINAL_95);
    		TERMINAL_21.addFollower(TERMINAL_96);
    		TERMINAL_21.addFollower(TERMINAL_97);
    		TERMINAL_21.addFollower(TERMINAL_98);
    		TERMINAL_21.addFollower(TERMINAL_99);
    		TERMINAL_21.addFollower(TERMINAL_100);
    		TERMINAL_21.addFollower(TERMINAL_101);
    		TERMINAL_21.addFollower(TERMINAL_102);
    		TERMINAL_21.addFollower(TERMINAL_103);
    		TERMINAL_21.addFollower(TERMINAL_104);
    		TERMINAL_21.addFollower(TERMINAL_105);
    		TERMINAL_21.addFollower(TERMINAL_106);
    		TERMINAL_21.addFollower(TERMINAL_107);
    		TERMINAL_21.addFollower(TERMINAL_108);
    		TERMINAL_21.addFollower(TERMINAL_109);
    		TERMINAL_21.addFollower(TERMINAL_110);
    		TERMINAL_21.addFollower(TERMINAL_111);
    		TERMINAL_21.addFollower(TERMINAL_112);
    		TERMINAL_21.addFollower(TERMINAL_113);
    		TERMINAL_21.addFollower(TERMINAL_114);
    		TERMINAL_21.addFollower(TERMINAL_115);
    		TERMINAL_21.addFollower(TERMINAL_116);
    		TERMINAL_21.addFollower(TERMINAL_117);
    		TERMINAL_21.addFollower(TERMINAL_118);
    		TERMINAL_21.addFollower(TERMINAL_119);
    		TERMINAL_21.addFollower(TERMINAL_120);
    		TERMINAL_21.addFollower(TERMINAL_121);
    		TERMINAL_21.addFollower(TERMINAL_122);
    		TERMINAL_21.addFollower(TERMINAL_123);
    		TERMINAL_21.addFollower(TERMINAL_124);
    		TERMINAL_21.addFollower(TERMINAL_125);
    		TERMINAL_21.addFollower(TERMINAL_126);
    		TERMINAL_21.addFollower(TERMINAL_127);
    		TERMINAL_21.addFollower(TERMINAL_128);
    		TERMINAL_21.addFollower(TERMINAL_129);
    		TERMINAL_21.addFollower(TERMINAL_130);
    		TERMINAL_21.addFollower(TERMINAL_131);
    		TERMINAL_21.addFollower(TERMINAL_132);
    		TERMINAL_21.addFollower(TERMINAL_133);
    		TERMINAL_21.addFollower(TERMINAL_134);
    		TERMINAL_21.addFollower(TERMINAL_135);
    		TERMINAL_21.addFollower(TERMINAL_136);
    		TERMINAL_21.addFollower(TERMINAL_137);
    		TERMINAL_21.addFollower(TERMINAL_138);
    		TERMINAL_21.addFollower(TERMINAL_139);
    		TERMINAL_21.addFollower(TERMINAL_140);
    		TERMINAL_21.addFollower(TERMINAL_141);
    		TERMINAL_21.addFollower(TERMINAL_142);
    		TERMINAL_150.addFollower(TERMINAL_79);
    		TERMINAL_150.addFollower(TERMINAL_80);
    		TERMINAL_150.addFollower(TERMINAL_81);
    		TERMINAL_150.addFollower(TERMINAL_82);
    		TERMINAL_150.addFollower(TERMINAL_83);
    		TERMINAL_150.addFollower(TERMINAL_84);
    		TERMINAL_150.addFollower(TERMINAL_85);
    		TERMINAL_150.addFollower(TERMINAL_86);
    		TERMINAL_150.addFollower(TERMINAL_87);
    		TERMINAL_150.addFollower(TERMINAL_88);
    		TERMINAL_150.addFollower(TERMINAL_89);
    		TERMINAL_150.addFollower(TERMINAL_90);
    		TERMINAL_150.addFollower(TERMINAL_91);
    		TERMINAL_150.addFollower(TERMINAL_92);
    		TERMINAL_150.addFollower(TERMINAL_93);
    		TERMINAL_150.addFollower(TERMINAL_94);
    		TERMINAL_150.addFollower(TERMINAL_95);
    		TERMINAL_150.addFollower(TERMINAL_96);
    		TERMINAL_150.addFollower(TERMINAL_97);
    		TERMINAL_150.addFollower(TERMINAL_98);
    		TERMINAL_150.addFollower(TERMINAL_99);
    		TERMINAL_150.addFollower(TERMINAL_100);
    		TERMINAL_150.addFollower(TERMINAL_101);
    		TERMINAL_150.addFollower(TERMINAL_102);
    		TERMINAL_150.addFollower(TERMINAL_103);
    		TERMINAL_150.addFollower(TERMINAL_104);
    		TERMINAL_150.addFollower(TERMINAL_105);
    		TERMINAL_150.addFollower(TERMINAL_106);
    		TERMINAL_150.addFollower(TERMINAL_107);
    		TERMINAL_150.addFollower(TERMINAL_108);
    		TERMINAL_150.addFollower(TERMINAL_109);
    		TERMINAL_150.addFollower(TERMINAL_110);
    		TERMINAL_150.addFollower(TERMINAL_111);
    		TERMINAL_150.addFollower(TERMINAL_112);
    		TERMINAL_150.addFollower(TERMINAL_113);
    		TERMINAL_150.addFollower(TERMINAL_114);
    		TERMINAL_150.addFollower(TERMINAL_115);
    		TERMINAL_150.addFollower(TERMINAL_116);
    		TERMINAL_150.addFollower(TERMINAL_117);
    		TERMINAL_150.addFollower(TERMINAL_118);
    		TERMINAL_150.addFollower(TERMINAL_119);
    		TERMINAL_150.addFollower(TERMINAL_120);
    		TERMINAL_150.addFollower(TERMINAL_121);
    		TERMINAL_150.addFollower(TERMINAL_122);
    		TERMINAL_150.addFollower(TERMINAL_123);
    		TERMINAL_150.addFollower(TERMINAL_124);
    		TERMINAL_150.addFollower(TERMINAL_125);
    		TERMINAL_150.addFollower(TERMINAL_126);
    		TERMINAL_150.addFollower(TERMINAL_127);
    		TERMINAL_150.addFollower(TERMINAL_128);
    		TERMINAL_150.addFollower(TERMINAL_129);
    		TERMINAL_150.addFollower(TERMINAL_130);
    		TERMINAL_150.addFollower(TERMINAL_131);
    		TERMINAL_150.addFollower(TERMINAL_132);
    		TERMINAL_150.addFollower(TERMINAL_133);
    		TERMINAL_150.addFollower(TERMINAL_134);
    		TERMINAL_150.addFollower(TERMINAL_135);
    		TERMINAL_150.addFollower(TERMINAL_136);
    		TERMINAL_150.addFollower(TERMINAL_137);
    		TERMINAL_150.addFollower(TERMINAL_138);
    		TERMINAL_150.addFollower(TERMINAL_139);
    		TERMINAL_150.addFollower(TERMINAL_140);
    		TERMINAL_150.addFollower(TERMINAL_141);
    		TERMINAL_150.addFollower(TERMINAL_142);
    		TERMINAL_151.addFollower(TERMINAL_79);
    		TERMINAL_151.addFollower(TERMINAL_80);
    		TERMINAL_151.addFollower(TERMINAL_81);
    		TERMINAL_151.addFollower(TERMINAL_82);
    		TERMINAL_151.addFollower(TERMINAL_83);
    		TERMINAL_151.addFollower(TERMINAL_84);
    		TERMINAL_151.addFollower(TERMINAL_85);
    		TERMINAL_151.addFollower(TERMINAL_86);
    		TERMINAL_151.addFollower(TERMINAL_87);
    		TERMINAL_151.addFollower(TERMINAL_88);
    		TERMINAL_151.addFollower(TERMINAL_89);
    		TERMINAL_151.addFollower(TERMINAL_90);
    		TERMINAL_151.addFollower(TERMINAL_91);
    		TERMINAL_151.addFollower(TERMINAL_92);
    		TERMINAL_151.addFollower(TERMINAL_93);
    		TERMINAL_151.addFollower(TERMINAL_94);
    		TERMINAL_151.addFollower(TERMINAL_95);
    		TERMINAL_151.addFollower(TERMINAL_96);
    		TERMINAL_151.addFollower(TERMINAL_97);
    		TERMINAL_151.addFollower(TERMINAL_98);
    		TERMINAL_151.addFollower(TERMINAL_99);
    		TERMINAL_151.addFollower(TERMINAL_100);
    		TERMINAL_151.addFollower(TERMINAL_101);
    		TERMINAL_151.addFollower(TERMINAL_102);
    		TERMINAL_151.addFollower(TERMINAL_103);
    		TERMINAL_151.addFollower(TERMINAL_104);
    		TERMINAL_151.addFollower(TERMINAL_105);
    		TERMINAL_151.addFollower(TERMINAL_106);
    		TERMINAL_151.addFollower(TERMINAL_107);
    		TERMINAL_151.addFollower(TERMINAL_108);
    		TERMINAL_151.addFollower(TERMINAL_109);
    		TERMINAL_151.addFollower(TERMINAL_110);
    		TERMINAL_151.addFollower(TERMINAL_111);
    		TERMINAL_151.addFollower(TERMINAL_112);
    		TERMINAL_151.addFollower(TERMINAL_113);
    		TERMINAL_151.addFollower(TERMINAL_114);
    		TERMINAL_151.addFollower(TERMINAL_115);
    		TERMINAL_151.addFollower(TERMINAL_116);
    		TERMINAL_151.addFollower(TERMINAL_117);
    		TERMINAL_151.addFollower(TERMINAL_118);
    		TERMINAL_151.addFollower(TERMINAL_119);
    		TERMINAL_151.addFollower(TERMINAL_120);
    		TERMINAL_151.addFollower(TERMINAL_121);
    		TERMINAL_151.addFollower(TERMINAL_122);
    		TERMINAL_151.addFollower(TERMINAL_123);
    		TERMINAL_151.addFollower(TERMINAL_124);
    		TERMINAL_151.addFollower(TERMINAL_125);
    		TERMINAL_151.addFollower(TERMINAL_126);
    		TERMINAL_151.addFollower(TERMINAL_127);
    		TERMINAL_151.addFollower(TERMINAL_128);
    		TERMINAL_151.addFollower(TERMINAL_129);
    		TERMINAL_151.addFollower(TERMINAL_130);
    		TERMINAL_151.addFollower(TERMINAL_131);
    		TERMINAL_151.addFollower(TERMINAL_132);
    		TERMINAL_151.addFollower(TERMINAL_133);
    		TERMINAL_151.addFollower(TERMINAL_134);
    		TERMINAL_151.addFollower(TERMINAL_135);
    		TERMINAL_151.addFollower(TERMINAL_136);
    		TERMINAL_151.addFollower(TERMINAL_137);
    		TERMINAL_151.addFollower(TERMINAL_138);
    		TERMINAL_151.addFollower(TERMINAL_139);
    		TERMINAL_151.addFollower(TERMINAL_140);
    		TERMINAL_151.addFollower(TERMINAL_141);
    		TERMINAL_151.addFollower(TERMINAL_142);
    		TERMINAL_152.addFollower(TERMINAL_153);
    		TERMINAL_153.addFollower(TERMINAL_154);
    		TERMINAL_153.addFollower(TERMINAL_155);
    		TERMINAL_153.addFollower(TERMINAL_156);
    		TERMINAL_154.addFollower(TERMINAL_157);
    		TERMINAL_157.addFollower(TERMINAL_158);
    		TERMINAL_158.addFollower(TERMINAL_154);
    		TERMINAL_158.addFollower(TERMINAL_155);
    		TERMINAL_158.addFollower(TERMINAL_156);
    		TERMINAL_155.addFollower(TERMINAL_159);
    		TERMINAL_159.addFollower(TERMINAL_160);
    		TERMINAL_4.addFollower(TERMINAL_161);
    		TERMINAL_161.addFollower(TERMINAL_162);
    		TERMINAL_161.addFollower(TERMINAL_163);
    		TERMINAL_161.addFollower(TERMINAL_164);
    		TERMINAL_162.addFollower(TERMINAL_165);
    		TERMINAL_165.addFollower(TERMINAL_166);
    		TERMINAL_166.addFollower(TERMINAL_162);
    		TERMINAL_166.addFollower(TERMINAL_163);
    		TERMINAL_166.addFollower(TERMINAL_164);
    		TERMINAL_163.addFollower(TERMINAL_167);
    		TERMINAL_167.addFollower(TERMINAL_160);
    		TERMINAL_22.addFollower(TERMINAL_23);
    		TERMINAL_23.addFollower(TERMINAL_168);
    		TERMINAL_168.addFollower(TERMINAL_169);
    		TERMINAL_168.addFollower(TERMINAL_170);
    		TERMINAL_168.addFollower(TERMINAL_171);
    		TERMINAL_168.addFollower(TERMINAL_172);
    		TERMINAL_168.addFollower(TERMINAL_173);
    		TERMINAL_168.addFollower(TERMINAL_174);
    		TERMINAL_169.addFollower(TERMINAL_175);
    		TERMINAL_175.addFollower(TERMINAL_176);
    		TERMINAL_176.addFollower(TERMINAL_169);
    		TERMINAL_176.addFollower(TERMINAL_170);
    		TERMINAL_176.addFollower(TERMINAL_171);
    		TERMINAL_176.addFollower(TERMINAL_172);
    		TERMINAL_176.addFollower(TERMINAL_173);
    		TERMINAL_176.addFollower(TERMINAL_174);
    		TERMINAL_170.addFollower(TERMINAL_177);
    		TERMINAL_177.addFollower(TERMINAL_160);
    		TERMINAL_171.addFollower(TERMINAL_178);
    		TERMINAL_178.addFollower(TERMINAL_179);
    		TERMINAL_179.addFollower(TERMINAL_169);
    		TERMINAL_179.addFollower(TERMINAL_170);
    		TERMINAL_179.addFollower(TERMINAL_171);
    		TERMINAL_179.addFollower(TERMINAL_172);
    		TERMINAL_179.addFollower(TERMINAL_173);
    		TERMINAL_179.addFollower(TERMINAL_174);
    		TERMINAL_172.addFollower(TERMINAL_180);
    		TERMINAL_180.addFollower(TERMINAL_181);
    		TERMINAL_181.addFollower(TERMINAL_169);
    		TERMINAL_181.addFollower(TERMINAL_170);
    		TERMINAL_181.addFollower(TERMINAL_171);
    		TERMINAL_181.addFollower(TERMINAL_172);
    		TERMINAL_181.addFollower(TERMINAL_173);
    		TERMINAL_181.addFollower(TERMINAL_174);
    		TERMINAL_173.addFollower(TERMINAL_182);
    		TERMINAL_182.addFollower(TERMINAL_183);
    		TERMINAL_183.addFollower(TERMINAL_169);
    		TERMINAL_183.addFollower(TERMINAL_170);
    		TERMINAL_183.addFollower(TERMINAL_171);
    		TERMINAL_183.addFollower(TERMINAL_172);
    		TERMINAL_183.addFollower(TERMINAL_173);
    		TERMINAL_183.addFollower(TERMINAL_174);
    		TERMINAL_174.addFollower(TERMINAL_17);
    		TERMINAL_174.addFollower(TERMINAL_18);
    		TERMINAL_174.addFollower(TERMINAL_19);
    		TERMINAL_174.addFollower(TERMINAL_20);
    		TERMINAL_174.addFollower(TERMINAL_21);
    		TERMINAL_174.addFollower(TERMINAL_22);
    		TERMINAL_174.addFollower(TERMINAL_23);
    		TERMINAL_174.addFollower(TERMINAL_24);
    		TERMINAL_174.addFollower(TERMINAL_25);
    		TERMINAL_174.addFollower(TERMINAL_2);
    		TERMINAL_174.addFollower(TERMINAL_3);
    		TERMINAL_174.addFollower(TERMINAL_79);
    		TERMINAL_174.addFollower(TERMINAL_80);
    		TERMINAL_174.addFollower(TERMINAL_81);
    		TERMINAL_174.addFollower(TERMINAL_82);
    		TERMINAL_174.addFollower(TERMINAL_83);
    		TERMINAL_174.addFollower(TERMINAL_84);
    		TERMINAL_174.addFollower(TERMINAL_85);
    		TERMINAL_174.addFollower(TERMINAL_86);
    		TERMINAL_174.addFollower(TERMINAL_87);
    		TERMINAL_174.addFollower(TERMINAL_88);
    		TERMINAL_174.addFollower(TERMINAL_89);
    		TERMINAL_174.addFollower(TERMINAL_90);
    		TERMINAL_174.addFollower(TERMINAL_91);
    		TERMINAL_174.addFollower(TERMINAL_92);
    		TERMINAL_174.addFollower(TERMINAL_93);
    		TERMINAL_174.addFollower(TERMINAL_94);
    		TERMINAL_174.addFollower(TERMINAL_95);
    		TERMINAL_174.addFollower(TERMINAL_96);
    		TERMINAL_174.addFollower(TERMINAL_97);
    		TERMINAL_174.addFollower(TERMINAL_98);
    		TERMINAL_174.addFollower(TERMINAL_99);
    		TERMINAL_174.addFollower(TERMINAL_100);
    		TERMINAL_174.addFollower(TERMINAL_101);
    		TERMINAL_174.addFollower(TERMINAL_102);
    		TERMINAL_174.addFollower(TERMINAL_103);
    		TERMINAL_174.addFollower(TERMINAL_104);
    		TERMINAL_174.addFollower(TERMINAL_105);
    		TERMINAL_174.addFollower(TERMINAL_106);
    		TERMINAL_174.addFollower(TERMINAL_107);
    		TERMINAL_174.addFollower(TERMINAL_108);
    		TERMINAL_174.addFollower(TERMINAL_109);
    		TERMINAL_174.addFollower(TERMINAL_110);
    		TERMINAL_174.addFollower(TERMINAL_111);
    		TERMINAL_174.addFollower(TERMINAL_112);
    		TERMINAL_174.addFollower(TERMINAL_113);
    		TERMINAL_174.addFollower(TERMINAL_114);
    		TERMINAL_174.addFollower(TERMINAL_115);
    		TERMINAL_174.addFollower(TERMINAL_116);
    		TERMINAL_174.addFollower(TERMINAL_117);
    		TERMINAL_174.addFollower(TERMINAL_118);
    		TERMINAL_174.addFollower(TERMINAL_119);
    		TERMINAL_174.addFollower(TERMINAL_120);
    		TERMINAL_174.addFollower(TERMINAL_121);
    		TERMINAL_174.addFollower(TERMINAL_122);
    		TERMINAL_174.addFollower(TERMINAL_123);
    		TERMINAL_174.addFollower(TERMINAL_124);
    		TERMINAL_174.addFollower(TERMINAL_125);
    		TERMINAL_174.addFollower(TERMINAL_126);
    		TERMINAL_174.addFollower(TERMINAL_127);
    		TERMINAL_174.addFollower(TERMINAL_128);
    		TERMINAL_174.addFollower(TERMINAL_129);
    		TERMINAL_174.addFollower(TERMINAL_130);
    		TERMINAL_174.addFollower(TERMINAL_131);
    		TERMINAL_174.addFollower(TERMINAL_132);
    		TERMINAL_174.addFollower(TERMINAL_133);
    		TERMINAL_174.addFollower(TERMINAL_134);
    		TERMINAL_174.addFollower(TERMINAL_135);
    		TERMINAL_174.addFollower(TERMINAL_136);
    		TERMINAL_174.addFollower(TERMINAL_137);
    		TERMINAL_174.addFollower(TERMINAL_138);
    		TERMINAL_174.addFollower(TERMINAL_139);
    		TERMINAL_174.addFollower(TERMINAL_140);
    		TERMINAL_174.addFollower(TERMINAL_141);
    		TERMINAL_174.addFollower(TERMINAL_142);
    		TERMINAL_184.addFollower(TERMINAL_185);
    		TERMINAL_185.addFollower(TERMINAL_79);
    		TERMINAL_185.addFollower(TERMINAL_80);
    		TERMINAL_185.addFollower(TERMINAL_81);
    		TERMINAL_185.addFollower(TERMINAL_82);
    		TERMINAL_185.addFollower(TERMINAL_83);
    		TERMINAL_185.addFollower(TERMINAL_84);
    		TERMINAL_79.addFollower(TERMINAL_186);
    		TERMINAL_186.addFollower(TERMINAL_187);
    		TERMINAL_187.addFollower(TERMINAL_79);
    		TERMINAL_187.addFollower(TERMINAL_80);
    		TERMINAL_187.addFollower(TERMINAL_81);
    		TERMINAL_187.addFollower(TERMINAL_82);
    		TERMINAL_187.addFollower(TERMINAL_83);
    		TERMINAL_187.addFollower(TERMINAL_84);
    	}
    	public static void wire1() {
    		TERMINAL_80.addFollower(TERMINAL_188);
    		TERMINAL_188.addFollower(TERMINAL_160);
    		TERMINAL_81.addFollower(TERMINAL_189);
    		TERMINAL_189.addFollower(TERMINAL_78);
    		TERMINAL_189.addFollower(TERMINAL_20);
    		TERMINAL_189.addFollower(TERMINAL_21);
    		TERMINAL_189.addFollower(TERMINAL_150);
    		TERMINAL_189.addFollower(TERMINAL_151);
    		TERMINAL_189.addFollower(TERMINAL_22);
    		TERMINAL_189.addFollower(TERMINAL_23);
    		TERMINAL_189.addFollower(TERMINAL_190);
    		TERMINAL_189.addFollower(TERMINAL_191);
    		TERMINAL_189.addFollower(TERMINAL_192);
    		TERMINAL_189.addFollower(TERMINAL_193);
    		TERMINAL_189.addFollower(TERMINAL_194);
    		TERMINAL_82.addFollower(TERMINAL_195);
    		TERMINAL_195.addFollower(TERMINAL_196);
    		TERMINAL_196.addFollower(TERMINAL_79);
    		TERMINAL_196.addFollower(TERMINAL_80);
    		TERMINAL_196.addFollower(TERMINAL_81);
    		TERMINAL_196.addFollower(TERMINAL_82);
    		TERMINAL_196.addFollower(TERMINAL_83);
    		TERMINAL_196.addFollower(TERMINAL_84);
    		TERMINAL_83.addFollower(TERMINAL_197);
    		TERMINAL_197.addFollower(TERMINAL_198);
    		TERMINAL_198.addFollower(TERMINAL_79);
    		TERMINAL_198.addFollower(TERMINAL_80);
    		TERMINAL_198.addFollower(TERMINAL_81);
    		TERMINAL_198.addFollower(TERMINAL_82);
    		TERMINAL_198.addFollower(TERMINAL_83);
    		TERMINAL_198.addFollower(TERMINAL_84);
    		TERMINAL_84.addFollower(TERMINAL_108);
    		TERMINAL_84.addFollower(TERMINAL_109);
    		TERMINAL_84.addFollower(TERMINAL_110);
    		TERMINAL_84.addFollower(TERMINAL_111);
    		TERMINAL_84.addFollower(TERMINAL_112);
    		TERMINAL_84.addFollower(TERMINAL_113);
    		TERMINAL_84.addFollower(TERMINAL_114);
    		TERMINAL_84.addFollower(TERMINAL_115);
    		TERMINAL_84.addFollower(TERMINAL_116);
    		TERMINAL_84.addFollower(TERMINAL_117);
    		TERMINAL_11.addFollower(TERMINAL_12);
    		TERMINAL_11.addFollower(TERMINAL_13);
    		TERMINAL_12.addFollower(TERMINAL_13);
    		TERMINAL_13.addFollower(TERMINAL_199);
    		TERMINAL_199.addFollower(TERMINAL_85);
    		TERMINAL_199.addFollower(TERMINAL_86);
    		TERMINAL_199.addFollower(TERMINAL_87);
    		TERMINAL_199.addFollower(TERMINAL_88);
    		TERMINAL_199.addFollower(TERMINAL_89);
    		TERMINAL_199.addFollower(TERMINAL_90);
    		TERMINAL_199.addFollower(TERMINAL_91);
    		TERMINAL_199.addFollower(TERMINAL_92);
    		TERMINAL_85.addFollower(TERMINAL_200);
    		TERMINAL_200.addFollower(TERMINAL_201);
    		TERMINAL_201.addFollower(TERMINAL_85);
    		TERMINAL_201.addFollower(TERMINAL_86);
    		TERMINAL_201.addFollower(TERMINAL_87);
    		TERMINAL_201.addFollower(TERMINAL_88);
    		TERMINAL_201.addFollower(TERMINAL_89);
    		TERMINAL_201.addFollower(TERMINAL_90);
    		TERMINAL_201.addFollower(TERMINAL_91);
    		TERMINAL_201.addFollower(TERMINAL_92);
    		TERMINAL_86.addFollower(TERMINAL_202);
    		TERMINAL_202.addFollower(TERMINAL_160);
    		TERMINAL_87.addFollower(TERMINAL_203);
    		TERMINAL_203.addFollower(TERMINAL_78);
    		TERMINAL_203.addFollower(TERMINAL_20);
    		TERMINAL_203.addFollower(TERMINAL_21);
    		TERMINAL_203.addFollower(TERMINAL_150);
    		TERMINAL_203.addFollower(TERMINAL_151);
    		TERMINAL_203.addFollower(TERMINAL_22);
    		TERMINAL_203.addFollower(TERMINAL_23);
    		TERMINAL_203.addFollower(TERMINAL_190);
    		TERMINAL_203.addFollower(TERMINAL_191);
    		TERMINAL_203.addFollower(TERMINAL_192);
    		TERMINAL_203.addFollower(TERMINAL_193);
    		TERMINAL_203.addFollower(TERMINAL_194);
    		TERMINAL_88.addFollower(TERMINAL_204);
    		TERMINAL_204.addFollower(TERMINAL_205);
    		TERMINAL_205.addFollower(TERMINAL_85);
    		TERMINAL_205.addFollower(TERMINAL_86);
    		TERMINAL_205.addFollower(TERMINAL_87);
    		TERMINAL_205.addFollower(TERMINAL_88);
    		TERMINAL_205.addFollower(TERMINAL_89);
    		TERMINAL_205.addFollower(TERMINAL_90);
    		TERMINAL_205.addFollower(TERMINAL_91);
    		TERMINAL_205.addFollower(TERMINAL_92);
    		TERMINAL_89.addFollower(TERMINAL_206);
    		TERMINAL_206.addFollower(TERMINAL_207);
    		TERMINAL_207.addFollower(TERMINAL_85);
    		TERMINAL_207.addFollower(TERMINAL_86);
    		TERMINAL_207.addFollower(TERMINAL_87);
    		TERMINAL_207.addFollower(TERMINAL_88);
    		TERMINAL_207.addFollower(TERMINAL_89);
    		TERMINAL_207.addFollower(TERMINAL_90);
    		TERMINAL_207.addFollower(TERMINAL_91);
    		TERMINAL_207.addFollower(TERMINAL_92);
    		TERMINAL_90.addFollower(TERMINAL_208);
    		TERMINAL_208.addFollower(TERMINAL_209);
    		TERMINAL_209.addFollower(TERMINAL_85);
    		TERMINAL_209.addFollower(TERMINAL_86);
    		TERMINAL_209.addFollower(TERMINAL_87);
    		TERMINAL_209.addFollower(TERMINAL_88);
    		TERMINAL_209.addFollower(TERMINAL_89);
    		TERMINAL_209.addFollower(TERMINAL_90);
    		TERMINAL_209.addFollower(TERMINAL_91);
    		TERMINAL_209.addFollower(TERMINAL_92);
    		TERMINAL_91.addFollower(TERMINAL_210);
    		TERMINAL_210.addFollower(TERMINAL_211);
    		TERMINAL_211.addFollower(TERMINAL_85);
    		TERMINAL_211.addFollower(TERMINAL_86);
    		TERMINAL_211.addFollower(TERMINAL_87);
    		TERMINAL_211.addFollower(TERMINAL_88);
    		TERMINAL_211.addFollower(TERMINAL_89);
    		TERMINAL_211.addFollower(TERMINAL_90);
    		TERMINAL_211.addFollower(TERMINAL_91);
    		TERMINAL_211.addFollower(TERMINAL_92);
    		TERMINAL_24.addFollower(TERMINAL_25);
    		TERMINAL_25.addFollower(TERMINAL_212);
    		TERMINAL_212.addFollower(TERMINAL_213);
    		TERMINAL_212.addFollower(TERMINAL_214);
    		TERMINAL_212.addFollower(TERMINAL_215);
    		TERMINAL_212.addFollower(TERMINAL_216);
    		TERMINAL_213.addFollower(TERMINAL_217);
    		TERMINAL_217.addFollower(TERMINAL_218);
    		TERMINAL_218.addFollower(TERMINAL_213);
    		TERMINAL_218.addFollower(TERMINAL_214);
    		TERMINAL_218.addFollower(TERMINAL_215);
    		TERMINAL_218.addFollower(TERMINAL_216);
    		TERMINAL_214.addFollower(TERMINAL_219);
    		TERMINAL_219.addFollower(TERMINAL_160);
    		TERMINAL_215.addFollower(TERMINAL_220);
    		TERMINAL_220.addFollower(TERMINAL_221);
    		TERMINAL_221.addFollower(TERMINAL_213);
    		TERMINAL_221.addFollower(TERMINAL_214);
    		TERMINAL_221.addFollower(TERMINAL_215);
    		TERMINAL_221.addFollower(TERMINAL_216);
    		TERMINAL_216.addFollower(TERMINAL_17);
    		TERMINAL_216.addFollower(TERMINAL_18);
    		TERMINAL_216.addFollower(TERMINAL_19);
    		TERMINAL_216.addFollower(TERMINAL_20);
    		TERMINAL_216.addFollower(TERMINAL_21);
    		TERMINAL_216.addFollower(TERMINAL_22);
    		TERMINAL_216.addFollower(TERMINAL_23);
    		TERMINAL_216.addFollower(TERMINAL_24);
    		TERMINAL_216.addFollower(TERMINAL_25);
    		TERMINAL_216.addFollower(TERMINAL_2);
    		TERMINAL_216.addFollower(TERMINAL_3);
    		TERMINAL_160.addFollower(TERMINAL_222);
    		TERMINAL_222.addFollower(TERMINAL_223);
    		TERMINAL_222.addFollower(TERMINAL_224);
    		TERMINAL_222.addFollower(TERMINAL_225);
    		TERMINAL_222.addFollower(TERMINAL_226);
    		TERMINAL_222.addFollower(TERMINAL_227);
    		TERMINAL_222.addFollower(TERMINAL_228);
    		TERMINAL_223.addFollower(TERMINAL_229);
    		TERMINAL_229.addFollower(TERMINAL_230);
    		TERMINAL_230.addFollower(TERMINAL_223);
    		TERMINAL_230.addFollower(TERMINAL_224);
    		TERMINAL_230.addFollower(TERMINAL_225);
    		TERMINAL_230.addFollower(TERMINAL_226);
    		TERMINAL_230.addFollower(TERMINAL_227);
    		TERMINAL_230.addFollower(TERMINAL_228);
    		TERMINAL_224.addFollower(TERMINAL_231);
    		TERMINAL_231.addFollower(TERMINAL_160);
    		TERMINAL_225.addFollower(TERMINAL_232);
    		TERMINAL_232.addFollower(TERMINAL_233);
    		TERMINAL_233.addFollower(TERMINAL_223);
    		TERMINAL_233.addFollower(TERMINAL_224);
    		TERMINAL_233.addFollower(TERMINAL_225);
    		TERMINAL_233.addFollower(TERMINAL_226);
    		TERMINAL_233.addFollower(TERMINAL_227);
    		TERMINAL_233.addFollower(TERMINAL_228);
    		TERMINAL_226.addFollower(TERMINAL_234);
    		TERMINAL_234.addFollower(TERMINAL_235);
    		TERMINAL_235.addFollower(TERMINAL_223);
    		TERMINAL_235.addFollower(TERMINAL_224);
    		TERMINAL_235.addFollower(TERMINAL_225);
    		TERMINAL_235.addFollower(TERMINAL_226);
    		TERMINAL_235.addFollower(TERMINAL_227);
    		TERMINAL_235.addFollower(TERMINAL_228);
    		TERMINAL_227.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_237);
    		TERMINAL_237.addFollower(TERMINAL_223);
    		TERMINAL_237.addFollower(TERMINAL_224);
    		TERMINAL_237.addFollower(TERMINAL_225);
    		TERMINAL_237.addFollower(TERMINAL_226);
    		TERMINAL_237.addFollower(TERMINAL_227);
    		TERMINAL_237.addFollower(TERMINAL_228);
    		TERMINAL_228.addFollower(TERMINAL_154);
    		TERMINAL_228.addFollower(TERMINAL_155);
    		TERMINAL_228.addFollower(TERMINAL_156);
    		TERMINAL_228.addFollower(TERMINAL_162);
    		TERMINAL_228.addFollower(TERMINAL_163);
    		TERMINAL_228.addFollower(TERMINAL_164);
    		TERMINAL_228.addFollower(TERMINAL_169);
    		TERMINAL_228.addFollower(TERMINAL_170);
    		TERMINAL_228.addFollower(TERMINAL_171);
    		TERMINAL_228.addFollower(TERMINAL_172);
    		TERMINAL_228.addFollower(TERMINAL_173);
    		TERMINAL_228.addFollower(TERMINAL_174);
    		TERMINAL_228.addFollower(TERMINAL_79);
    		TERMINAL_228.addFollower(TERMINAL_80);
    		TERMINAL_228.addFollower(TERMINAL_81);
    		TERMINAL_228.addFollower(TERMINAL_82);
    		TERMINAL_228.addFollower(TERMINAL_83);
    		TERMINAL_228.addFollower(TERMINAL_84);
    		TERMINAL_228.addFollower(TERMINAL_85);
    		TERMINAL_228.addFollower(TERMINAL_86);
    		TERMINAL_228.addFollower(TERMINAL_87);
    		TERMINAL_228.addFollower(TERMINAL_88);
    		TERMINAL_228.addFollower(TERMINAL_89);
    		TERMINAL_228.addFollower(TERMINAL_90);
    		TERMINAL_228.addFollower(TERMINAL_91);
    		TERMINAL_228.addFollower(TERMINAL_92);
    		TERMINAL_228.addFollower(TERMINAL_213);
    		TERMINAL_228.addFollower(TERMINAL_214);
    		TERMINAL_228.addFollower(TERMINAL_215);
    		TERMINAL_228.addFollower(TERMINAL_216);
    		TERMINAL_228.addFollower(TERMINAL_223);
    		TERMINAL_228.addFollower(TERMINAL_224);
    		TERMINAL_228.addFollower(TERMINAL_225);
    		TERMINAL_228.addFollower(TERMINAL_226);
    		TERMINAL_228.addFollower(TERMINAL_227);
    		TERMINAL_228.addFollower(TERMINAL_228);
    		TERMINAL_228.addFollower(TERMINAL_93);
    		TERMINAL_228.addFollower(TERMINAL_94);
    		TERMINAL_228.addFollower(TERMINAL_95);
    		TERMINAL_228.addFollower(TERMINAL_96);
    		TERMINAL_228.addFollower(TERMINAL_97);
    		TERMINAL_228.addFollower(TERMINAL_98);
    		TERMINAL_228.addFollower(TERMINAL_99);
    		TERMINAL_228.addFollower(TERMINAL_100);
    		TERMINAL_228.addFollower(TERMINAL_101);
    		TERMINAL_228.addFollower(TERMINAL_102);
    		TERMINAL_228.addFollower(TERMINAL_103);
    		TERMINAL_228.addFollower(TERMINAL_104);
    		TERMINAL_228.addFollower(TERMINAL_105);
    		TERMINAL_228.addFollower(TERMINAL_106);
    		TERMINAL_228.addFollower(TERMINAL_107);
    		TERMINAL_228.addFollower(TERMINAL_108);
    		TERMINAL_228.addFollower(TERMINAL_109);
    		TERMINAL_228.addFollower(TERMINAL_110);
    		TERMINAL_228.addFollower(TERMINAL_111);
    		TERMINAL_228.addFollower(TERMINAL_112);
    		TERMINAL_228.addFollower(TERMINAL_113);
    		TERMINAL_228.addFollower(TERMINAL_114);
    		TERMINAL_228.addFollower(TERMINAL_115);
    		TERMINAL_228.addFollower(TERMINAL_116);
    		TERMINAL_228.addFollower(TERMINAL_117);
    		TERMINAL_228.addFollower(TERMINAL_118);
    		TERMINAL_228.addFollower(TERMINAL_119);
    		TERMINAL_228.addFollower(TERMINAL_120);
    		TERMINAL_228.addFollower(TERMINAL_121);
    		TERMINAL_228.addFollower(TERMINAL_122);
    		TERMINAL_228.addFollower(TERMINAL_123);
    		TERMINAL_228.addFollower(TERMINAL_124);
    		TERMINAL_228.addFollower(TERMINAL_125);
    		TERMINAL_228.addFollower(TERMINAL_126);
    		TERMINAL_228.addFollower(TERMINAL_127);
    		TERMINAL_228.addFollower(TERMINAL_128);
    		TERMINAL_228.addFollower(TERMINAL_129);
    		TERMINAL_228.addFollower(TERMINAL_130);
    		TERMINAL_228.addFollower(TERMINAL_131);
    		TERMINAL_228.addFollower(TERMINAL_132);
    		TERMINAL_228.addFollower(TERMINAL_133);
    		TERMINAL_228.addFollower(TERMINAL_134);
    		TERMINAL_228.addFollower(TERMINAL_135);
    		TERMINAL_228.addFollower(TERMINAL_136);
    		TERMINAL_228.addFollower(TERMINAL_137);
    		TERMINAL_228.addFollower(TERMINAL_138);
    		TERMINAL_228.addFollower(TERMINAL_139);
    		TERMINAL_228.addFollower(TERMINAL_140);
    		TERMINAL_228.addFollower(TERMINAL_141);
    		TERMINAL_228.addFollower(TERMINAL_142);
    		TERMINAL_228.addFollower(TERMINAL_238);
    		TERMINAL_228.addFollower(TERMINAL_239);
    		TERMINAL_228.addFollower(TERMINAL_240);
    		TERMINAL_228.addFollower(TERMINAL_241);
    		TERMINAL_228.addFollower(TERMINAL_242);
    		TERMINAL_190.addFollower(TERMINAL_243);
    		TERMINAL_243.addFollower(TERMINAL_93);
    		TERMINAL_243.addFollower(TERMINAL_94);
    		TERMINAL_243.addFollower(TERMINAL_95);
    		TERMINAL_243.addFollower(TERMINAL_96);
    		TERMINAL_243.addFollower(TERMINAL_97);
    		TERMINAL_243.addFollower(TERMINAL_98);
    		TERMINAL_243.addFollower(TERMINAL_99);
    		TERMINAL_93.addFollower(TERMINAL_244);
    		TERMINAL_244.addFollower(TERMINAL_245);
    		TERMINAL_245.addFollower(TERMINAL_93);
    		TERMINAL_245.addFollower(TERMINAL_94);
    		TERMINAL_245.addFollower(TERMINAL_95);
    		TERMINAL_245.addFollower(TERMINAL_96);
    		TERMINAL_245.addFollower(TERMINAL_97);
    		TERMINAL_245.addFollower(TERMINAL_98);
    		TERMINAL_245.addFollower(TERMINAL_99);
    		TERMINAL_94.addFollower(TERMINAL_246);
    		TERMINAL_246.addFollower(TERMINAL_160);
    		TERMINAL_95.addFollower(TERMINAL_247);
    		TERMINAL_247.addFollower(TERMINAL_78);
    		TERMINAL_247.addFollower(TERMINAL_20);
    		TERMINAL_247.addFollower(TERMINAL_21);
    		TERMINAL_247.addFollower(TERMINAL_150);
    		TERMINAL_247.addFollower(TERMINAL_151);
    		TERMINAL_247.addFollower(TERMINAL_22);
    		TERMINAL_247.addFollower(TERMINAL_23);
    		TERMINAL_247.addFollower(TERMINAL_190);
    		TERMINAL_247.addFollower(TERMINAL_191);
    		TERMINAL_247.addFollower(TERMINAL_192);
    		TERMINAL_247.addFollower(TERMINAL_193);
    		TERMINAL_247.addFollower(TERMINAL_194);
    		TERMINAL_96.addFollower(TERMINAL_248);
    		TERMINAL_248.addFollower(TERMINAL_249);
    		TERMINAL_249.addFollower(TERMINAL_93);
    		TERMINAL_249.addFollower(TERMINAL_94);
    		TERMINAL_249.addFollower(TERMINAL_95);
    		TERMINAL_249.addFollower(TERMINAL_96);
    		TERMINAL_249.addFollower(TERMINAL_97);
    		TERMINAL_249.addFollower(TERMINAL_98);
    		TERMINAL_249.addFollower(TERMINAL_99);
    		TERMINAL_97.addFollower(TERMINAL_250);
    		TERMINAL_250.addFollower(TERMINAL_251);
    		TERMINAL_251.addFollower(TERMINAL_93);
    		TERMINAL_251.addFollower(TERMINAL_94);
    		TERMINAL_251.addFollower(TERMINAL_95);
    		TERMINAL_251.addFollower(TERMINAL_96);
    		TERMINAL_251.addFollower(TERMINAL_97);
    		TERMINAL_251.addFollower(TERMINAL_98);
    		TERMINAL_251.addFollower(TERMINAL_99);
    		TERMINAL_98.addFollower(TERMINAL_252);
    		TERMINAL_252.addFollower(TERMINAL_253);
    		TERMINAL_253.addFollower(TERMINAL_93);
    		TERMINAL_253.addFollower(TERMINAL_94);
    		TERMINAL_253.addFollower(TERMINAL_95);
    		TERMINAL_253.addFollower(TERMINAL_96);
    		TERMINAL_253.addFollower(TERMINAL_97);
    		TERMINAL_253.addFollower(TERMINAL_98);
    		TERMINAL_253.addFollower(TERMINAL_99);
    		TERMINAL_99.addFollower(TERMINAL_79);
    		TERMINAL_99.addFollower(TERMINAL_80);
    		TERMINAL_99.addFollower(TERMINAL_81);
    		TERMINAL_99.addFollower(TERMINAL_82);
    		TERMINAL_99.addFollower(TERMINAL_83);
    		TERMINAL_99.addFollower(TERMINAL_84);
    		TERMINAL_99.addFollower(TERMINAL_85);
    		TERMINAL_99.addFollower(TERMINAL_86);
    		TERMINAL_99.addFollower(TERMINAL_87);
    		TERMINAL_99.addFollower(TERMINAL_88);
    		TERMINAL_99.addFollower(TERMINAL_89);
    		TERMINAL_99.addFollower(TERMINAL_90);
    		TERMINAL_99.addFollower(TERMINAL_91);
    		TERMINAL_99.addFollower(TERMINAL_92);
    		TERMINAL_99.addFollower(TERMINAL_93);
    		TERMINAL_99.addFollower(TERMINAL_94);
    		TERMINAL_99.addFollower(TERMINAL_95);
    		TERMINAL_99.addFollower(TERMINAL_96);
    		TERMINAL_99.addFollower(TERMINAL_97);
    		TERMINAL_99.addFollower(TERMINAL_98);
    		TERMINAL_99.addFollower(TERMINAL_99);
    		TERMINAL_99.addFollower(TERMINAL_100);
    		TERMINAL_99.addFollower(TERMINAL_101);
    		TERMINAL_99.addFollower(TERMINAL_102);
    		TERMINAL_99.addFollower(TERMINAL_103);
    		TERMINAL_99.addFollower(TERMINAL_104);
    		TERMINAL_99.addFollower(TERMINAL_105);
    		TERMINAL_99.addFollower(TERMINAL_106);
    		TERMINAL_99.addFollower(TERMINAL_107);
    		TERMINAL_99.addFollower(TERMINAL_108);
    		TERMINAL_99.addFollower(TERMINAL_109);
    		TERMINAL_99.addFollower(TERMINAL_110);
    		TERMINAL_99.addFollower(TERMINAL_111);
    		TERMINAL_99.addFollower(TERMINAL_112);
    		TERMINAL_99.addFollower(TERMINAL_113);
    		TERMINAL_99.addFollower(TERMINAL_114);
    		TERMINAL_99.addFollower(TERMINAL_115);
    		TERMINAL_99.addFollower(TERMINAL_116);
    		TERMINAL_99.addFollower(TERMINAL_117);
    		TERMINAL_99.addFollower(TERMINAL_118);
    		TERMINAL_99.addFollower(TERMINAL_119);
    		TERMINAL_99.addFollower(TERMINAL_120);
    		TERMINAL_99.addFollower(TERMINAL_121);
    		TERMINAL_99.addFollower(TERMINAL_122);
    		TERMINAL_99.addFollower(TERMINAL_123);
    		TERMINAL_99.addFollower(TERMINAL_124);
    		TERMINAL_99.addFollower(TERMINAL_125);
    		TERMINAL_99.addFollower(TERMINAL_126);
    		TERMINAL_99.addFollower(TERMINAL_127);
    		TERMINAL_99.addFollower(TERMINAL_128);
    		TERMINAL_99.addFollower(TERMINAL_129);
    		TERMINAL_99.addFollower(TERMINAL_130);
    		TERMINAL_99.addFollower(TERMINAL_131);
    		TERMINAL_99.addFollower(TERMINAL_132);
    		TERMINAL_99.addFollower(TERMINAL_133);
    		TERMINAL_99.addFollower(TERMINAL_134);
    		TERMINAL_99.addFollower(TERMINAL_135);
    		TERMINAL_99.addFollower(TERMINAL_136);
    		TERMINAL_99.addFollower(TERMINAL_137);
    		TERMINAL_99.addFollower(TERMINAL_138);
    		TERMINAL_99.addFollower(TERMINAL_139);
    		TERMINAL_99.addFollower(TERMINAL_140);
    		TERMINAL_99.addFollower(TERMINAL_141);
    		TERMINAL_99.addFollower(TERMINAL_142);
    		TERMINAL_191.addFollower(TERMINAL_254);
    		TERMINAL_254.addFollower(TERMINAL_100);
    		TERMINAL_254.addFollower(TERMINAL_101);
    		TERMINAL_254.addFollower(TERMINAL_102);
    		TERMINAL_254.addFollower(TERMINAL_103);
    		TERMINAL_254.addFollower(TERMINAL_104);
    		TERMINAL_254.addFollower(TERMINAL_105);
    		TERMINAL_254.addFollower(TERMINAL_106);
    		TERMINAL_254.addFollower(TERMINAL_107);
    		TERMINAL_100.addFollower(TERMINAL_255);
    		TERMINAL_255.addFollower(TERMINAL_256);
    		TERMINAL_256.addFollower(TERMINAL_100);
    		TERMINAL_256.addFollower(TERMINAL_101);
    		TERMINAL_256.addFollower(TERMINAL_102);
    		TERMINAL_256.addFollower(TERMINAL_103);
    		TERMINAL_256.addFollower(TERMINAL_104);
    		TERMINAL_256.addFollower(TERMINAL_105);
    		TERMINAL_256.addFollower(TERMINAL_106);
    		TERMINAL_256.addFollower(TERMINAL_107);
    		TERMINAL_101.addFollower(TERMINAL_257);
    		TERMINAL_257.addFollower(TERMINAL_160);
    		TERMINAL_102.addFollower(TERMINAL_258);
    		TERMINAL_258.addFollower(TERMINAL_78);
    		TERMINAL_258.addFollower(TERMINAL_20);
    		TERMINAL_258.addFollower(TERMINAL_21);
    		TERMINAL_258.addFollower(TERMINAL_150);
    		TERMINAL_258.addFollower(TERMINAL_151);
    		TERMINAL_258.addFollower(TERMINAL_22);
    		TERMINAL_258.addFollower(TERMINAL_23);
    		TERMINAL_258.addFollower(TERMINAL_190);
    		TERMINAL_258.addFollower(TERMINAL_191);
    		TERMINAL_258.addFollower(TERMINAL_192);
    		TERMINAL_258.addFollower(TERMINAL_193);
    		TERMINAL_258.addFollower(TERMINAL_194);
    		TERMINAL_103.addFollower(TERMINAL_259);
    		TERMINAL_259.addFollower(TERMINAL_260);
    		TERMINAL_260.addFollower(TERMINAL_100);
    		TERMINAL_260.addFollower(TERMINAL_101);
    		TERMINAL_260.addFollower(TERMINAL_102);
    		TERMINAL_260.addFollower(TERMINAL_103);
    		TERMINAL_260.addFollower(TERMINAL_104);
    		TERMINAL_260.addFollower(TERMINAL_105);
    		TERMINAL_260.addFollower(TERMINAL_106);
    		TERMINAL_260.addFollower(TERMINAL_107);
    		TERMINAL_104.addFollower(TERMINAL_261);
    		TERMINAL_261.addFollower(TERMINAL_262);
    		TERMINAL_262.addFollower(TERMINAL_100);
    		TERMINAL_262.addFollower(TERMINAL_101);
    		TERMINAL_262.addFollower(TERMINAL_102);
    		TERMINAL_262.addFollower(TERMINAL_103);
    		TERMINAL_262.addFollower(TERMINAL_104);
    		TERMINAL_262.addFollower(TERMINAL_105);
    		TERMINAL_262.addFollower(TERMINAL_106);
    		TERMINAL_262.addFollower(TERMINAL_107);
    		TERMINAL_105.addFollower(TERMINAL_263);
    		TERMINAL_263.addFollower(TERMINAL_264);
    	}
    	public static void wire2() {
    		TERMINAL_264.addFollower(TERMINAL_100);
    		TERMINAL_264.addFollower(TERMINAL_101);
    		TERMINAL_264.addFollower(TERMINAL_102);
    		TERMINAL_264.addFollower(TERMINAL_103);
    		TERMINAL_264.addFollower(TERMINAL_104);
    		TERMINAL_264.addFollower(TERMINAL_105);
    		TERMINAL_264.addFollower(TERMINAL_106);
    		TERMINAL_264.addFollower(TERMINAL_107);
    		TERMINAL_106.addFollower(TERMINAL_265);
    		TERMINAL_265.addFollower(TERMINAL_192);
    		TERMINAL_107.addFollower(TERMINAL_79);
    		TERMINAL_107.addFollower(TERMINAL_80);
    		TERMINAL_107.addFollower(TERMINAL_81);
    		TERMINAL_107.addFollower(TERMINAL_82);
    		TERMINAL_107.addFollower(TERMINAL_83);
    		TERMINAL_107.addFollower(TERMINAL_84);
    		TERMINAL_107.addFollower(TERMINAL_85);
    		TERMINAL_107.addFollower(TERMINAL_86);
    		TERMINAL_107.addFollower(TERMINAL_87);
    		TERMINAL_107.addFollower(TERMINAL_88);
    		TERMINAL_107.addFollower(TERMINAL_89);
    		TERMINAL_107.addFollower(TERMINAL_90);
    		TERMINAL_107.addFollower(TERMINAL_91);
    		TERMINAL_107.addFollower(TERMINAL_92);
    		TERMINAL_107.addFollower(TERMINAL_93);
    		TERMINAL_107.addFollower(TERMINAL_94);
    		TERMINAL_107.addFollower(TERMINAL_95);
    		TERMINAL_107.addFollower(TERMINAL_96);
    		TERMINAL_107.addFollower(TERMINAL_97);
    		TERMINAL_107.addFollower(TERMINAL_98);
    		TERMINAL_107.addFollower(TERMINAL_99);
    		TERMINAL_107.addFollower(TERMINAL_100);
    		TERMINAL_107.addFollower(TERMINAL_101);
    		TERMINAL_107.addFollower(TERMINAL_102);
    		TERMINAL_107.addFollower(TERMINAL_103);
    		TERMINAL_107.addFollower(TERMINAL_104);
    		TERMINAL_107.addFollower(TERMINAL_105);
    		TERMINAL_107.addFollower(TERMINAL_106);
    		TERMINAL_107.addFollower(TERMINAL_107);
    		TERMINAL_107.addFollower(TERMINAL_108);
    		TERMINAL_107.addFollower(TERMINAL_109);
    		TERMINAL_107.addFollower(TERMINAL_110);
    		TERMINAL_107.addFollower(TERMINAL_111);
    		TERMINAL_107.addFollower(TERMINAL_112);
    		TERMINAL_107.addFollower(TERMINAL_113);
    		TERMINAL_107.addFollower(TERMINAL_114);
    		TERMINAL_107.addFollower(TERMINAL_115);
    		TERMINAL_107.addFollower(TERMINAL_116);
    		TERMINAL_107.addFollower(TERMINAL_117);
    		TERMINAL_107.addFollower(TERMINAL_118);
    		TERMINAL_107.addFollower(TERMINAL_119);
    		TERMINAL_107.addFollower(TERMINAL_120);
    		TERMINAL_107.addFollower(TERMINAL_121);
    		TERMINAL_107.addFollower(TERMINAL_122);
    		TERMINAL_107.addFollower(TERMINAL_123);
    		TERMINAL_107.addFollower(TERMINAL_124);
    		TERMINAL_107.addFollower(TERMINAL_125);
    		TERMINAL_107.addFollower(TERMINAL_126);
    		TERMINAL_107.addFollower(TERMINAL_127);
    		TERMINAL_107.addFollower(TERMINAL_128);
    		TERMINAL_107.addFollower(TERMINAL_129);
    		TERMINAL_107.addFollower(TERMINAL_130);
    		TERMINAL_107.addFollower(TERMINAL_131);
    		TERMINAL_107.addFollower(TERMINAL_132);
    		TERMINAL_107.addFollower(TERMINAL_133);
    		TERMINAL_107.addFollower(TERMINAL_134);
    		TERMINAL_107.addFollower(TERMINAL_135);
    		TERMINAL_107.addFollower(TERMINAL_136);
    		TERMINAL_107.addFollower(TERMINAL_137);
    		TERMINAL_107.addFollower(TERMINAL_138);
    		TERMINAL_107.addFollower(TERMINAL_139);
    		TERMINAL_107.addFollower(TERMINAL_140);
    		TERMINAL_107.addFollower(TERMINAL_141);
    		TERMINAL_107.addFollower(TERMINAL_142);
    		TERMINAL_192.addFollower(TERMINAL_266);
    		TERMINAL_266.addFollower(TERMINAL_108);
    		TERMINAL_266.addFollower(TERMINAL_109);
    		TERMINAL_266.addFollower(TERMINAL_110);
    		TERMINAL_266.addFollower(TERMINAL_111);
    		TERMINAL_266.addFollower(TERMINAL_112);
    		TERMINAL_266.addFollower(TERMINAL_113);
    		TERMINAL_266.addFollower(TERMINAL_114);
    		TERMINAL_266.addFollower(TERMINAL_115);
    		TERMINAL_266.addFollower(TERMINAL_116);
    		TERMINAL_266.addFollower(TERMINAL_117);
    		TERMINAL_108.addFollower(TERMINAL_267);
    		TERMINAL_267.addFollower(TERMINAL_268);
    		TERMINAL_268.addFollower(TERMINAL_108);
    		TERMINAL_268.addFollower(TERMINAL_109);
    		TERMINAL_268.addFollower(TERMINAL_110);
    		TERMINAL_268.addFollower(TERMINAL_111);
    		TERMINAL_268.addFollower(TERMINAL_112);
    		TERMINAL_268.addFollower(TERMINAL_113);
    		TERMINAL_268.addFollower(TERMINAL_114);
    		TERMINAL_268.addFollower(TERMINAL_115);
    		TERMINAL_268.addFollower(TERMINAL_116);
    		TERMINAL_268.addFollower(TERMINAL_117);
    		TERMINAL_109.addFollower(TERMINAL_269);
    		TERMINAL_269.addFollower(TERMINAL_160);
    		TERMINAL_110.addFollower(TERMINAL_270);
    		TERMINAL_270.addFollower(TERMINAL_78);
    		TERMINAL_270.addFollower(TERMINAL_20);
    		TERMINAL_270.addFollower(TERMINAL_21);
    		TERMINAL_270.addFollower(TERMINAL_150);
    		TERMINAL_270.addFollower(TERMINAL_151);
    		TERMINAL_270.addFollower(TERMINAL_22);
    		TERMINAL_270.addFollower(TERMINAL_23);
    		TERMINAL_270.addFollower(TERMINAL_190);
    		TERMINAL_270.addFollower(TERMINAL_191);
    		TERMINAL_270.addFollower(TERMINAL_192);
    		TERMINAL_270.addFollower(TERMINAL_193);
    		TERMINAL_270.addFollower(TERMINAL_194);
    		TERMINAL_111.addFollower(TERMINAL_271);
    		TERMINAL_271.addFollower(TERMINAL_272);
    		TERMINAL_272.addFollower(TERMINAL_108);
    		TERMINAL_272.addFollower(TERMINAL_109);
    		TERMINAL_272.addFollower(TERMINAL_110);
    		TERMINAL_272.addFollower(TERMINAL_111);
    		TERMINAL_272.addFollower(TERMINAL_112);
    		TERMINAL_272.addFollower(TERMINAL_113);
    		TERMINAL_272.addFollower(TERMINAL_114);
    		TERMINAL_272.addFollower(TERMINAL_115);
    		TERMINAL_272.addFollower(TERMINAL_116);
    		TERMINAL_272.addFollower(TERMINAL_117);
    		TERMINAL_112.addFollower(TERMINAL_273);
    		TERMINAL_273.addFollower(TERMINAL_274);
    		TERMINAL_274.addFollower(TERMINAL_108);
    		TERMINAL_274.addFollower(TERMINAL_109);
    		TERMINAL_274.addFollower(TERMINAL_110);
    		TERMINAL_274.addFollower(TERMINAL_111);
    		TERMINAL_274.addFollower(TERMINAL_112);
    		TERMINAL_274.addFollower(TERMINAL_113);
    		TERMINAL_274.addFollower(TERMINAL_114);
    		TERMINAL_274.addFollower(TERMINAL_115);
    		TERMINAL_274.addFollower(TERMINAL_116);
    		TERMINAL_274.addFollower(TERMINAL_117);
    		TERMINAL_113.addFollower(TERMINAL_275);
    		TERMINAL_275.addFollower(TERMINAL_276);
    		TERMINAL_276.addFollower(TERMINAL_108);
    		TERMINAL_276.addFollower(TERMINAL_109);
    		TERMINAL_276.addFollower(TERMINAL_110);
    		TERMINAL_276.addFollower(TERMINAL_111);
    		TERMINAL_276.addFollower(TERMINAL_112);
    		TERMINAL_276.addFollower(TERMINAL_113);
    		TERMINAL_276.addFollower(TERMINAL_114);
    		TERMINAL_276.addFollower(TERMINAL_115);
    		TERMINAL_276.addFollower(TERMINAL_116);
    		TERMINAL_276.addFollower(TERMINAL_117);
    		TERMINAL_114.addFollower(TERMINAL_277);
    		TERMINAL_277.addFollower(TERMINAL_278);
    		TERMINAL_278.addFollower(TERMINAL_108);
    		TERMINAL_278.addFollower(TERMINAL_109);
    		TERMINAL_278.addFollower(TERMINAL_110);
    		TERMINAL_278.addFollower(TERMINAL_111);
    		TERMINAL_278.addFollower(TERMINAL_112);
    		TERMINAL_278.addFollower(TERMINAL_113);
    		TERMINAL_278.addFollower(TERMINAL_114);
    		TERMINAL_278.addFollower(TERMINAL_115);
    		TERMINAL_278.addFollower(TERMINAL_116);
    		TERMINAL_278.addFollower(TERMINAL_117);
    		TERMINAL_115.addFollower(TERMINAL_279);
    		TERMINAL_279.addFollower(TERMINAL_280);
    		TERMINAL_280.addFollower(TERMINAL_108);
    		TERMINAL_280.addFollower(TERMINAL_109);
    		TERMINAL_280.addFollower(TERMINAL_110);
    		TERMINAL_280.addFollower(TERMINAL_111);
    		TERMINAL_280.addFollower(TERMINAL_112);
    		TERMINAL_280.addFollower(TERMINAL_113);
    		TERMINAL_280.addFollower(TERMINAL_114);
    		TERMINAL_280.addFollower(TERMINAL_115);
    		TERMINAL_280.addFollower(TERMINAL_116);
    		TERMINAL_280.addFollower(TERMINAL_117);
    		TERMINAL_116.addFollower(TERMINAL_281);
    		TERMINAL_281.addFollower(TERMINAL_184);
    		TERMINAL_117.addFollower(TERMINAL_79);
    		TERMINAL_117.addFollower(TERMINAL_80);
    		TERMINAL_117.addFollower(TERMINAL_81);
    		TERMINAL_117.addFollower(TERMINAL_82);
    		TERMINAL_117.addFollower(TERMINAL_83);
    		TERMINAL_117.addFollower(TERMINAL_84);
    		TERMINAL_117.addFollower(TERMINAL_85);
    		TERMINAL_117.addFollower(TERMINAL_86);
    		TERMINAL_117.addFollower(TERMINAL_87);
    		TERMINAL_117.addFollower(TERMINAL_88);
    		TERMINAL_117.addFollower(TERMINAL_89);
    		TERMINAL_117.addFollower(TERMINAL_90);
    		TERMINAL_117.addFollower(TERMINAL_91);
    		TERMINAL_117.addFollower(TERMINAL_92);
    		TERMINAL_117.addFollower(TERMINAL_93);
    		TERMINAL_117.addFollower(TERMINAL_94);
    		TERMINAL_117.addFollower(TERMINAL_95);
    		TERMINAL_117.addFollower(TERMINAL_96);
    		TERMINAL_117.addFollower(TERMINAL_97);
    		TERMINAL_117.addFollower(TERMINAL_98);
    		TERMINAL_117.addFollower(TERMINAL_99);
    		TERMINAL_117.addFollower(TERMINAL_100);
    		TERMINAL_117.addFollower(TERMINAL_101);
    		TERMINAL_117.addFollower(TERMINAL_102);
    		TERMINAL_117.addFollower(TERMINAL_103);
    		TERMINAL_117.addFollower(TERMINAL_104);
    		TERMINAL_117.addFollower(TERMINAL_105);
    		TERMINAL_117.addFollower(TERMINAL_106);
    		TERMINAL_117.addFollower(TERMINAL_107);
    		TERMINAL_117.addFollower(TERMINAL_108);
    		TERMINAL_117.addFollower(TERMINAL_109);
    		TERMINAL_117.addFollower(TERMINAL_110);
    		TERMINAL_117.addFollower(TERMINAL_111);
    		TERMINAL_117.addFollower(TERMINAL_112);
    		TERMINAL_117.addFollower(TERMINAL_113);
    		TERMINAL_117.addFollower(TERMINAL_114);
    		TERMINAL_117.addFollower(TERMINAL_115);
    		TERMINAL_117.addFollower(TERMINAL_116);
    		TERMINAL_117.addFollower(TERMINAL_117);
    		TERMINAL_117.addFollower(TERMINAL_118);
    		TERMINAL_117.addFollower(TERMINAL_119);
    		TERMINAL_117.addFollower(TERMINAL_120);
    		TERMINAL_117.addFollower(TERMINAL_121);
    		TERMINAL_117.addFollower(TERMINAL_122);
    		TERMINAL_117.addFollower(TERMINAL_123);
    		TERMINAL_117.addFollower(TERMINAL_124);
    		TERMINAL_117.addFollower(TERMINAL_125);
    		TERMINAL_117.addFollower(TERMINAL_126);
    		TERMINAL_117.addFollower(TERMINAL_127);
    		TERMINAL_117.addFollower(TERMINAL_128);
    		TERMINAL_117.addFollower(TERMINAL_129);
    		TERMINAL_117.addFollower(TERMINAL_130);
    		TERMINAL_117.addFollower(TERMINAL_131);
    		TERMINAL_117.addFollower(TERMINAL_132);
    		TERMINAL_117.addFollower(TERMINAL_133);
    		TERMINAL_117.addFollower(TERMINAL_134);
    		TERMINAL_117.addFollower(TERMINAL_135);
    		TERMINAL_117.addFollower(TERMINAL_136);
    		TERMINAL_117.addFollower(TERMINAL_137);
    		TERMINAL_117.addFollower(TERMINAL_138);
    		TERMINAL_117.addFollower(TERMINAL_139);
    		TERMINAL_117.addFollower(TERMINAL_140);
    		TERMINAL_117.addFollower(TERMINAL_141);
    		TERMINAL_117.addFollower(TERMINAL_142);
    		TERMINAL_193.addFollower(TERMINAL_282);
    		TERMINAL_282.addFollower(TERMINAL_118);
    		TERMINAL_282.addFollower(TERMINAL_119);
    		TERMINAL_282.addFollower(TERMINAL_120);
    		TERMINAL_282.addFollower(TERMINAL_121);
    		TERMINAL_282.addFollower(TERMINAL_122);
    		TERMINAL_282.addFollower(TERMINAL_123);
    		TERMINAL_118.addFollower(TERMINAL_283);
    		TERMINAL_283.addFollower(TERMINAL_284);
    		TERMINAL_284.addFollower(TERMINAL_118);
    		TERMINAL_284.addFollower(TERMINAL_119);
    		TERMINAL_284.addFollower(TERMINAL_120);
    		TERMINAL_284.addFollower(TERMINAL_121);
    		TERMINAL_284.addFollower(TERMINAL_122);
    		TERMINAL_284.addFollower(TERMINAL_123);
    		TERMINAL_119.addFollower(TERMINAL_285);
    		TERMINAL_285.addFollower(TERMINAL_160);
    		TERMINAL_120.addFollower(TERMINAL_286);
    		TERMINAL_286.addFollower(TERMINAL_78);
    		TERMINAL_286.addFollower(TERMINAL_20);
    		TERMINAL_286.addFollower(TERMINAL_21);
    		TERMINAL_286.addFollower(TERMINAL_150);
    		TERMINAL_286.addFollower(TERMINAL_151);
    		TERMINAL_286.addFollower(TERMINAL_22);
    		TERMINAL_286.addFollower(TERMINAL_23);
    		TERMINAL_286.addFollower(TERMINAL_190);
    		TERMINAL_286.addFollower(TERMINAL_191);
    		TERMINAL_286.addFollower(TERMINAL_192);
    		TERMINAL_286.addFollower(TERMINAL_193);
    		TERMINAL_286.addFollower(TERMINAL_194);
    		TERMINAL_121.addFollower(TERMINAL_287);
    		TERMINAL_287.addFollower(TERMINAL_288);
    		TERMINAL_288.addFollower(TERMINAL_118);
    		TERMINAL_288.addFollower(TERMINAL_119);
    		TERMINAL_288.addFollower(TERMINAL_120);
    		TERMINAL_288.addFollower(TERMINAL_121);
    		TERMINAL_288.addFollower(TERMINAL_122);
    		TERMINAL_288.addFollower(TERMINAL_123);
    		TERMINAL_122.addFollower(TERMINAL_289);
    		TERMINAL_289.addFollower(TERMINAL_290);
    		TERMINAL_290.addFollower(TERMINAL_118);
    		TERMINAL_290.addFollower(TERMINAL_119);
    		TERMINAL_290.addFollower(TERMINAL_120);
    		TERMINAL_290.addFollower(TERMINAL_121);
    		TERMINAL_290.addFollower(TERMINAL_122);
    		TERMINAL_290.addFollower(TERMINAL_123);
    		TERMINAL_123.addFollower(TERMINAL_79);
    		TERMINAL_123.addFollower(TERMINAL_80);
    		TERMINAL_123.addFollower(TERMINAL_81);
    		TERMINAL_123.addFollower(TERMINAL_82);
    		TERMINAL_123.addFollower(TERMINAL_83);
    		TERMINAL_123.addFollower(TERMINAL_84);
    		TERMINAL_123.addFollower(TERMINAL_85);
    		TERMINAL_123.addFollower(TERMINAL_86);
    		TERMINAL_123.addFollower(TERMINAL_87);
    		TERMINAL_123.addFollower(TERMINAL_88);
    		TERMINAL_123.addFollower(TERMINAL_89);
    		TERMINAL_123.addFollower(TERMINAL_90);
    		TERMINAL_123.addFollower(TERMINAL_91);
    		TERMINAL_123.addFollower(TERMINAL_92);
    		TERMINAL_123.addFollower(TERMINAL_93);
    		TERMINAL_123.addFollower(TERMINAL_94);
    		TERMINAL_123.addFollower(TERMINAL_95);
    		TERMINAL_123.addFollower(TERMINAL_96);
    		TERMINAL_123.addFollower(TERMINAL_97);
    		TERMINAL_123.addFollower(TERMINAL_98);
    		TERMINAL_123.addFollower(TERMINAL_99);
    		TERMINAL_123.addFollower(TERMINAL_100);
    		TERMINAL_123.addFollower(TERMINAL_101);
    		TERMINAL_123.addFollower(TERMINAL_102);
    		TERMINAL_123.addFollower(TERMINAL_103);
    		TERMINAL_123.addFollower(TERMINAL_104);
    		TERMINAL_123.addFollower(TERMINAL_105);
    		TERMINAL_123.addFollower(TERMINAL_106);
    		TERMINAL_123.addFollower(TERMINAL_107);
    		TERMINAL_123.addFollower(TERMINAL_108);
    		TERMINAL_123.addFollower(TERMINAL_109);
    		TERMINAL_123.addFollower(TERMINAL_110);
    		TERMINAL_123.addFollower(TERMINAL_111);
    		TERMINAL_123.addFollower(TERMINAL_112);
    		TERMINAL_123.addFollower(TERMINAL_113);
    		TERMINAL_123.addFollower(TERMINAL_114);
    		TERMINAL_123.addFollower(TERMINAL_115);
    		TERMINAL_123.addFollower(TERMINAL_116);
    		TERMINAL_123.addFollower(TERMINAL_117);
    		TERMINAL_123.addFollower(TERMINAL_118);
    		TERMINAL_123.addFollower(TERMINAL_119);
    		TERMINAL_123.addFollower(TERMINAL_120);
    		TERMINAL_123.addFollower(TERMINAL_121);
    		TERMINAL_123.addFollower(TERMINAL_122);
    		TERMINAL_123.addFollower(TERMINAL_123);
    		TERMINAL_123.addFollower(TERMINAL_124);
    		TERMINAL_123.addFollower(TERMINAL_125);
    		TERMINAL_123.addFollower(TERMINAL_126);
    		TERMINAL_123.addFollower(TERMINAL_127);
    		TERMINAL_123.addFollower(TERMINAL_128);
    		TERMINAL_123.addFollower(TERMINAL_129);
    		TERMINAL_123.addFollower(TERMINAL_130);
    		TERMINAL_123.addFollower(TERMINAL_131);
    		TERMINAL_123.addFollower(TERMINAL_132);
    		TERMINAL_123.addFollower(TERMINAL_133);
    		TERMINAL_123.addFollower(TERMINAL_134);
    		TERMINAL_123.addFollower(TERMINAL_135);
    		TERMINAL_123.addFollower(TERMINAL_136);
    		TERMINAL_123.addFollower(TERMINAL_137);
    		TERMINAL_123.addFollower(TERMINAL_138);
    		TERMINAL_123.addFollower(TERMINAL_139);
    		TERMINAL_123.addFollower(TERMINAL_140);
    		TERMINAL_123.addFollower(TERMINAL_141);
    		TERMINAL_123.addFollower(TERMINAL_142);
    		TERMINAL_194.addFollower(TERMINAL_291);
    		TERMINAL_291.addFollower(TERMINAL_124);
    		TERMINAL_291.addFollower(TERMINAL_125);
    		TERMINAL_291.addFollower(TERMINAL_126);
    		TERMINAL_291.addFollower(TERMINAL_127);
    		TERMINAL_291.addFollower(TERMINAL_128);
    		TERMINAL_291.addFollower(TERMINAL_129);
    		TERMINAL_291.addFollower(TERMINAL_130);
    		TERMINAL_124.addFollower(TERMINAL_292);
    		TERMINAL_292.addFollower(TERMINAL_293);
    		TERMINAL_293.addFollower(TERMINAL_124);
    		TERMINAL_293.addFollower(TERMINAL_125);
    		TERMINAL_293.addFollower(TERMINAL_126);
    		TERMINAL_293.addFollower(TERMINAL_127);
    		TERMINAL_293.addFollower(TERMINAL_128);
    		TERMINAL_293.addFollower(TERMINAL_129);
    		TERMINAL_293.addFollower(TERMINAL_130);
    		TERMINAL_125.addFollower(TERMINAL_294);
    		TERMINAL_294.addFollower(TERMINAL_160);
    		TERMINAL_126.addFollower(TERMINAL_295);
    		TERMINAL_295.addFollower(TERMINAL_78);
    		TERMINAL_295.addFollower(TERMINAL_20);
    		TERMINAL_295.addFollower(TERMINAL_21);
    		TERMINAL_295.addFollower(TERMINAL_150);
    		TERMINAL_295.addFollower(TERMINAL_151);
    		TERMINAL_295.addFollower(TERMINAL_22);
    		TERMINAL_295.addFollower(TERMINAL_23);
    		TERMINAL_295.addFollower(TERMINAL_190);
    		TERMINAL_295.addFollower(TERMINAL_191);
    		TERMINAL_295.addFollower(TERMINAL_192);
    		TERMINAL_295.addFollower(TERMINAL_193);
    		TERMINAL_295.addFollower(TERMINAL_194);
    		TERMINAL_127.addFollower(TERMINAL_296);
    		TERMINAL_296.addFollower(TERMINAL_297);
    		TERMINAL_297.addFollower(TERMINAL_124);
    		TERMINAL_297.addFollower(TERMINAL_125);
    		TERMINAL_297.addFollower(TERMINAL_126);
    		TERMINAL_297.addFollower(TERMINAL_127);
    		TERMINAL_297.addFollower(TERMINAL_128);
    		TERMINAL_297.addFollower(TERMINAL_129);
    		TERMINAL_297.addFollower(TERMINAL_130);
    		TERMINAL_128.addFollower(TERMINAL_298);
    		TERMINAL_298.addFollower(TERMINAL_299);
    		TERMINAL_299.addFollower(TERMINAL_124);
    		TERMINAL_299.addFollower(TERMINAL_125);
    		TERMINAL_299.addFollower(TERMINAL_126);
    		TERMINAL_299.addFollower(TERMINAL_127);
    		TERMINAL_299.addFollower(TERMINAL_128);
    		TERMINAL_299.addFollower(TERMINAL_129);
    		TERMINAL_299.addFollower(TERMINAL_130);
    		TERMINAL_129.addFollower(TERMINAL_300);
    		TERMINAL_300.addFollower(TERMINAL_301);
    		TERMINAL_301.addFollower(TERMINAL_124);
    		TERMINAL_301.addFollower(TERMINAL_125);
    		TERMINAL_301.addFollower(TERMINAL_126);
    		TERMINAL_301.addFollower(TERMINAL_127);
    		TERMINAL_301.addFollower(TERMINAL_128);
    		TERMINAL_301.addFollower(TERMINAL_129);
    		TERMINAL_301.addFollower(TERMINAL_130);
    		TERMINAL_130.addFollower(TERMINAL_79);
    		TERMINAL_130.addFollower(TERMINAL_80);
    		TERMINAL_130.addFollower(TERMINAL_81);
    		TERMINAL_130.addFollower(TERMINAL_82);
    		TERMINAL_130.addFollower(TERMINAL_83);
    		TERMINAL_130.addFollower(TERMINAL_84);
    		TERMINAL_130.addFollower(TERMINAL_85);
    		TERMINAL_130.addFollower(TERMINAL_86);
    		TERMINAL_130.addFollower(TERMINAL_87);
    		TERMINAL_130.addFollower(TERMINAL_88);
    		TERMINAL_130.addFollower(TERMINAL_89);
    		TERMINAL_130.addFollower(TERMINAL_90);
    		TERMINAL_130.addFollower(TERMINAL_91);
    		TERMINAL_130.addFollower(TERMINAL_92);
    		TERMINAL_130.addFollower(TERMINAL_93);
    		TERMINAL_130.addFollower(TERMINAL_94);
    		TERMINAL_130.addFollower(TERMINAL_95);
    		TERMINAL_130.addFollower(TERMINAL_96);
    		TERMINAL_130.addFollower(TERMINAL_97);
    		TERMINAL_130.addFollower(TERMINAL_98);
    		TERMINAL_130.addFollower(TERMINAL_99);
    		TERMINAL_130.addFollower(TERMINAL_100);
    		TERMINAL_130.addFollower(TERMINAL_101);
    		TERMINAL_130.addFollower(TERMINAL_102);
    		TERMINAL_130.addFollower(TERMINAL_103);
    		TERMINAL_130.addFollower(TERMINAL_104);
    		TERMINAL_130.addFollower(TERMINAL_105);
    		TERMINAL_130.addFollower(TERMINAL_106);
    		TERMINAL_130.addFollower(TERMINAL_107);
    		TERMINAL_130.addFollower(TERMINAL_108);
    		TERMINAL_130.addFollower(TERMINAL_109);
    		TERMINAL_130.addFollower(TERMINAL_110);
    		TERMINAL_130.addFollower(TERMINAL_111);
    		TERMINAL_130.addFollower(TERMINAL_112);
    		TERMINAL_130.addFollower(TERMINAL_113);
    		TERMINAL_130.addFollower(TERMINAL_114);
    		TERMINAL_130.addFollower(TERMINAL_115);
    		TERMINAL_130.addFollower(TERMINAL_116);
    		TERMINAL_130.addFollower(TERMINAL_117);
    		TERMINAL_130.addFollower(TERMINAL_118);
    		TERMINAL_130.addFollower(TERMINAL_119);
    		TERMINAL_130.addFollower(TERMINAL_120);
    		TERMINAL_130.addFollower(TERMINAL_121);
    		TERMINAL_130.addFollower(TERMINAL_122);
    		TERMINAL_130.addFollower(TERMINAL_123);
    		TERMINAL_130.addFollower(TERMINAL_124);
    		TERMINAL_130.addFollower(TERMINAL_125);
    		TERMINAL_130.addFollower(TERMINAL_126);
    		TERMINAL_130.addFollower(TERMINAL_127);
    		TERMINAL_130.addFollower(TERMINAL_128);
    		TERMINAL_130.addFollower(TERMINAL_129);
    		TERMINAL_130.addFollower(TERMINAL_130);
    		TERMINAL_130.addFollower(TERMINAL_131);
    		TERMINAL_130.addFollower(TERMINAL_132);
    		TERMINAL_130.addFollower(TERMINAL_133);
    		TERMINAL_130.addFollower(TERMINAL_134);
    		TERMINAL_130.addFollower(TERMINAL_135);
    		TERMINAL_130.addFollower(TERMINAL_136);
    		TERMINAL_130.addFollower(TERMINAL_137);
    		TERMINAL_130.addFollower(TERMINAL_138);
    		TERMINAL_130.addFollower(TERMINAL_139);
    		TERMINAL_130.addFollower(TERMINAL_140);
    		TERMINAL_130.addFollower(TERMINAL_141);
    		TERMINAL_130.addFollower(TERMINAL_142);
    		TERMINAL_46.addFollower(TERMINAL_53);
    		TERMINAL_46.addFollower(TERMINAL_52);
    		TERMINAL_46.addFollower(TERMINAL_51);
    		TERMINAL_46.addFollower(TERMINAL_56);
    		TERMINAL_46.addFollower(TERMINAL_48);
    		TERMINAL_46.addFollower(TERMINAL_54);
    		TERMINAL_46.addFollower(TERMINAL_57);
    		TERMINAL_46.addFollower(TERMINAL_58);
    		TERMINAL_46.addFollower(TERMINAL_59);
    		TERMINAL_46.addFollower(TERMINAL_50);
    		TERMINAL_46.addFollower(TERMINAL_49);
    		TERMINAL_46.addFollower(TERMINAL_55);
    		TERMINAL_46.addFollower(TERMINAL_62);
    		TERMINAL_46.addFollower(TERMINAL_46);
    		TERMINAL_46.addFollower(TERMINAL_302);
    		TERMINAL_46.addFollower(TERMINAL_303);
    		TERMINAL_303.addFollower(TERMINAL_44);
    		TERMINAL_303.addFollower(TERMINAL_5);
    		TERMINAL_303.addFollower(TERMINAL_6);
    		TERMINAL_303.addFollower(TERMINAL_7);
    		TERMINAL_303.addFollower(TERMINAL_8);
    		TERMINAL_303.addFollower(TERMINAL_9);
    		TERMINAL_303.addFollower(TERMINAL_37);
    		TERMINAL_303.addFollower(TERMINAL_53);
    		TERMINAL_303.addFollower(TERMINAL_52);
    		TERMINAL_303.addFollower(TERMINAL_51);
    		TERMINAL_303.addFollower(TERMINAL_56);
    		TERMINAL_303.addFollower(TERMINAL_48);
    		TERMINAL_303.addFollower(TERMINAL_54);
    		TERMINAL_303.addFollower(TERMINAL_57);
    		TERMINAL_303.addFollower(TERMINAL_58);
    		TERMINAL_303.addFollower(TERMINAL_59);
    		TERMINAL_303.addFollower(TERMINAL_50);
    		TERMINAL_303.addFollower(TERMINAL_49);
    		TERMINAL_303.addFollower(TERMINAL_55);
    		TERMINAL_303.addFollower(TERMINAL_62);
    		TERMINAL_303.addFollower(TERMINAL_46);
    		TERMINAL_303.addFollower(TERMINAL_302);
    		TERMINAL_303.addFollower(TERMINAL_303);
    		TERMINAL_303.addFollower(TERMINAL_304);
    		TERMINAL_303.addFollower(TERMINAL_305);
    		TERMINAL_303.addFollower(TERMINAL_61);
    		TERMINAL_303.addFollower(TERMINAL_306);
    		TERMINAL_303.addFollower(TERMINAL_307);
    		TERMINAL_303.addFollower(TERMINAL_308);
    		TERMINAL_303.addFollower(TERMINAL_309);
    		TERMINAL_303.addFollower(TERMINAL_310);
    		TERMINAL_303.addFollower(TERMINAL_311);
    		TERMINAL_303.addFollower(TERMINAL_312);
    		TERMINAL_303.addFollower(TERMINAL_136);
    		TERMINAL_303.addFollower(TERMINAL_137);
    		TERMINAL_303.addFollower(TERMINAL_138);
    		TERMINAL_303.addFollower(TERMINAL_139);
    		TERMINAL_303.addFollower(TERMINAL_140);
    		TERMINAL_303.addFollower(TERMINAL_141);
    		TERMINAL_303.addFollower(TERMINAL_142);
    		TERMINAL_302.addFollower(TERMINAL_313);
    		TERMINAL_302.addFollower(TERMINAL_46);
    		TERMINAL_302.addFollower(TERMINAL_47);
    		TERMINAL_302.addFollower(TERMINAL_48);
    		TERMINAL_302.addFollower(TERMINAL_49);
    		TERMINAL_302.addFollower(TERMINAL_50);
    		TERMINAL_302.addFollower(TERMINAL_51);
    		TERMINAL_302.addFollower(TERMINAL_52);
    		TERMINAL_302.addFollower(TERMINAL_53);
    		TERMINAL_302.addFollower(TERMINAL_14);
    		TERMINAL_302.addFollower(TERMINAL_54);
    		TERMINAL_302.addFollower(TERMINAL_55);
    		TERMINAL_302.addFollower(TERMINAL_56);
    		TERMINAL_302.addFollower(TERMINAL_57);
    		TERMINAL_302.addFollower(TERMINAL_58);
    		TERMINAL_302.addFollower(TERMINAL_59);
    		TERMINAL_302.addFollower(TERMINAL_60);
    		TERMINAL_302.addFollower(TERMINAL_61);
    		TERMINAL_302.addFollower(TERMINAL_62);
    		TERMINAL_302.addFollower(TERMINAL_63);
    		TERMINAL_302.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_303);
    		TERMINAL_313.addFollower(TERMINAL_314);
    		TERMINAL_314.addFollower(TERMINAL_315);
    		TERMINAL_315.addFollower(TERMINAL_14);
    		TERMINAL_316.addFollower(TERMINAL_46);
    		TERMINAL_316.addFollower(TERMINAL_47);
    		TERMINAL_316.addFollower(TERMINAL_48);
    		TERMINAL_316.addFollower(TERMINAL_49);
    		TERMINAL_316.addFollower(TERMINAL_50);
    		TERMINAL_316.addFollower(TERMINAL_51);
    		TERMINAL_316.addFollower(TERMINAL_52);
    		TERMINAL_316.addFollower(TERMINAL_53);
    		TERMINAL_316.addFollower(TERMINAL_14);
    		TERMINAL_316.addFollower(TERMINAL_54);
    		TERMINAL_316.addFollower(TERMINAL_55);
    		TERMINAL_316.addFollower(TERMINAL_56);
    		TERMINAL_316.addFollower(TERMINAL_57);
    		TERMINAL_316.addFollower(TERMINAL_58);
    		TERMINAL_316.addFollower(TERMINAL_59);
    		TERMINAL_316.addFollower(TERMINAL_60);
    		TERMINAL_316.addFollower(TERMINAL_61);
    		TERMINAL_316.addFollower(TERMINAL_62);
    		TERMINAL_316.addFollower(TERMINAL_63);
    		TERMINAL_316.addFollower(TERMINAL_302);
    		TERMINAL_316.addFollower(TERMINAL_303);
    		TERMINAL_14.addFollower(TERMINAL_316);
    		TERMINAL_14.addFollower(TERMINAL_317);
    		TERMINAL_14.addFollower(TERMINAL_44);
    		TERMINAL_14.addFollower(TERMINAL_5);
    		TERMINAL_14.addFollower(TERMINAL_6);
    		TERMINAL_14.addFollower(TERMINAL_7);
    		TERMINAL_14.addFollower(TERMINAL_8);
    		TERMINAL_14.addFollower(TERMINAL_9);
    		TERMINAL_14.addFollower(TERMINAL_37);
    		TERMINAL_14.addFollower(TERMINAL_53);
    		TERMINAL_14.addFollower(TERMINAL_52);
    		TERMINAL_14.addFollower(TERMINAL_51);
    		TERMINAL_14.addFollower(TERMINAL_56);
    		TERMINAL_14.addFollower(TERMINAL_48);
    		TERMINAL_14.addFollower(TERMINAL_54);
    		TERMINAL_14.addFollower(TERMINAL_57);
    		TERMINAL_14.addFollower(TERMINAL_58);
    		TERMINAL_14.addFollower(TERMINAL_59);
    		TERMINAL_14.addFollower(TERMINAL_50);
    		TERMINAL_14.addFollower(TERMINAL_49);
    		TERMINAL_14.addFollower(TERMINAL_55);
    		TERMINAL_14.addFollower(TERMINAL_62);
    		TERMINAL_14.addFollower(TERMINAL_46);
    		TERMINAL_14.addFollower(TERMINAL_302);
    		TERMINAL_14.addFollower(TERMINAL_303);
    		TERMINAL_14.addFollower(TERMINAL_304);
    		TERMINAL_14.addFollower(TERMINAL_307);
    		TERMINAL_14.addFollower(TERMINAL_308);
    		TERMINAL_14.addFollower(TERMINAL_309);
    		TERMINAL_14.addFollower(TERMINAL_310);
    		TERMINAL_14.addFollower(TERMINAL_311);
    		TERMINAL_14.addFollower(TERMINAL_312);
    		TERMINAL_14.addFollower(TERMINAL_136);
    		TERMINAL_14.addFollower(TERMINAL_137);
    		TERMINAL_14.addFollower(TERMINAL_138);
    		TERMINAL_14.addFollower(TERMINAL_139);
    		TERMINAL_14.addFollower(TERMINAL_140);
    		TERMINAL_14.addFollower(TERMINAL_141);
    		TERMINAL_14.addFollower(TERMINAL_142);
    		TERMINAL_14.addFollower(TERMINAL_305);
    		TERMINAL_14.addFollower(TERMINAL_61);
    		TERMINAL_14.addFollower(TERMINAL_306);
    		TERMINAL_14.addFollower(TERMINAL_238);
    		TERMINAL_14.addFollower(TERMINAL_239);
    		TERMINAL_14.addFollower(TERMINAL_240);
    		TERMINAL_14.addFollower(TERMINAL_241);
    		TERMINAL_14.addFollower(TERMINAL_242);
    		TERMINAL_47.addFollower(TERMINAL_46);
    		TERMINAL_47.addFollower(TERMINAL_47);
    		TERMINAL_47.addFollower(TERMINAL_48);
    		TERMINAL_47.addFollower(TERMINAL_49);
    		TERMINAL_47.addFollower(TERMINAL_50);
    		TERMINAL_47.addFollower(TERMINAL_51);
    		TERMINAL_47.addFollower(TERMINAL_52);
    		TERMINAL_47.addFollower(TERMINAL_53);
    		TERMINAL_47.addFollower(TERMINAL_14);
    		TERMINAL_47.addFollower(TERMINAL_54);
    		TERMINAL_47.addFollower(TERMINAL_55);
    		TERMINAL_47.addFollower(TERMINAL_56);
    		TERMINAL_47.addFollower(TERMINAL_57);
    		TERMINAL_47.addFollower(TERMINAL_58);
    		TERMINAL_47.addFollower(TERMINAL_59);
    		TERMINAL_47.addFollower(TERMINAL_60);
    		TERMINAL_47.addFollower(TERMINAL_61);
    		TERMINAL_47.addFollower(TERMINAL_62);
    		TERMINAL_47.addFollower(TERMINAL_63);
    		TERMINAL_48.addFollower(TERMINAL_44);
    		TERMINAL_48.addFollower(TERMINAL_5);
    		TERMINAL_48.addFollower(TERMINAL_6);
    		TERMINAL_48.addFollower(TERMINAL_7);
    		TERMINAL_48.addFollower(TERMINAL_8);
    		TERMINAL_48.addFollower(TERMINAL_9);
    		TERMINAL_48.addFollower(TERMINAL_37);
    		TERMINAL_48.addFollower(TERMINAL_302);
    		TERMINAL_48.addFollower(TERMINAL_303);
    		TERMINAL_48.addFollower(TERMINAL_304);
    		TERMINAL_48.addFollower(TERMINAL_305);
    		TERMINAL_48.addFollower(TERMINAL_46);
    		TERMINAL_48.addFollower(TERMINAL_56);
    		TERMINAL_48.addFollower(TERMINAL_48);
    		TERMINAL_48.addFollower(TERMINAL_54);
    		TERMINAL_48.addFollower(TERMINAL_57);
    		TERMINAL_48.addFollower(TERMINAL_58);
    		TERMINAL_48.addFollower(TERMINAL_59);
    		TERMINAL_48.addFollower(TERMINAL_50);
    		TERMINAL_48.addFollower(TERMINAL_49);
    		TERMINAL_48.addFollower(TERMINAL_55);
    		TERMINAL_48.addFollower(TERMINAL_53);
    		TERMINAL_48.addFollower(TERMINAL_61);
    		TERMINAL_48.addFollower(TERMINAL_306);
    		TERMINAL_48.addFollower(TERMINAL_307);
    		TERMINAL_48.addFollower(TERMINAL_308);
    		TERMINAL_48.addFollower(TERMINAL_309);
    		TERMINAL_48.addFollower(TERMINAL_310);
    		TERMINAL_48.addFollower(TERMINAL_311);
    		TERMINAL_48.addFollower(TERMINAL_312);
    		TERMINAL_48.addFollower(TERMINAL_136);
    		TERMINAL_48.addFollower(TERMINAL_137);
    		TERMINAL_48.addFollower(TERMINAL_138);
    		TERMINAL_48.addFollower(TERMINAL_139);
    		TERMINAL_48.addFollower(TERMINAL_140);
    		TERMINAL_48.addFollower(TERMINAL_141);
    		TERMINAL_48.addFollower(TERMINAL_142);
    		TERMINAL_49.addFollower(TERMINAL_44);
    		TERMINAL_49.addFollower(TERMINAL_5);
    		TERMINAL_49.addFollower(TERMINAL_6);
    		TERMINAL_49.addFollower(TERMINAL_7);
    		TERMINAL_49.addFollower(TERMINAL_8);
    		TERMINAL_49.addFollower(TERMINAL_9);
    		TERMINAL_49.addFollower(TERMINAL_37);
    		TERMINAL_49.addFollower(TERMINAL_302);
    		TERMINAL_49.addFollower(TERMINAL_303);
    		TERMINAL_49.addFollower(TERMINAL_304);
    		TERMINAL_49.addFollower(TERMINAL_305);
    		TERMINAL_49.addFollower(TERMINAL_46);
    		TERMINAL_49.addFollower(TERMINAL_56);
    		TERMINAL_49.addFollower(TERMINAL_48);
    		TERMINAL_49.addFollower(TERMINAL_54);
    		TERMINAL_49.addFollower(TERMINAL_57);
    		TERMINAL_49.addFollower(TERMINAL_58);
    		TERMINAL_49.addFollower(TERMINAL_59);
    		TERMINAL_49.addFollower(TERMINAL_50);
    		TERMINAL_49.addFollower(TERMINAL_49);
    		TERMINAL_49.addFollower(TERMINAL_55);
    		TERMINAL_49.addFollower(TERMINAL_53);
    		TERMINAL_49.addFollower(TERMINAL_61);
    		TERMINAL_49.addFollower(TERMINAL_306);
    		TERMINAL_49.addFollower(TERMINAL_307);
    		TERMINAL_49.addFollower(TERMINAL_308);
    		TERMINAL_49.addFollower(TERMINAL_309);
    		TERMINAL_49.addFollower(TERMINAL_310);
    		TERMINAL_49.addFollower(TERMINAL_311);
    		TERMINAL_49.addFollower(TERMINAL_312);
    		TERMINAL_49.addFollower(TERMINAL_136);
    		TERMINAL_49.addFollower(TERMINAL_137);
    		TERMINAL_49.addFollower(TERMINAL_138);
    		TERMINAL_49.addFollower(TERMINAL_139);
    		TERMINAL_49.addFollower(TERMINAL_140);
    		TERMINAL_49.addFollower(TERMINAL_141);
    		TERMINAL_49.addFollower(TERMINAL_142);
    		TERMINAL_50.addFollower(TERMINAL_44);
    		TERMINAL_50.addFollower(TERMINAL_5);
    		TERMINAL_50.addFollower(TERMINAL_6);
    		TERMINAL_50.addFollower(TERMINAL_7);
    		TERMINAL_50.addFollower(TERMINAL_8);
    		TERMINAL_50.addFollower(TERMINAL_9);
    		TERMINAL_50.addFollower(TERMINAL_37);
    		TERMINAL_50.addFollower(TERMINAL_302);
    		TERMINAL_50.addFollower(TERMINAL_303);
    		TERMINAL_50.addFollower(TERMINAL_304);
    		TERMINAL_50.addFollower(TERMINAL_305);
    		TERMINAL_50.addFollower(TERMINAL_46);
    		TERMINAL_50.addFollower(TERMINAL_56);
    		TERMINAL_50.addFollower(TERMINAL_48);
    		TERMINAL_50.addFollower(TERMINAL_54);
    		TERMINAL_50.addFollower(TERMINAL_57);
    		TERMINAL_50.addFollower(TERMINAL_58);
    		TERMINAL_50.addFollower(TERMINAL_59);
    		TERMINAL_50.addFollower(TERMINAL_50);
    		TERMINAL_50.addFollower(TERMINAL_49);
    		TERMINAL_50.addFollower(TERMINAL_55);
    		TERMINAL_50.addFollower(TERMINAL_53);
    		TERMINAL_50.addFollower(TERMINAL_61);
    		TERMINAL_50.addFollower(TERMINAL_306);
    		TERMINAL_50.addFollower(TERMINAL_307);
    		TERMINAL_50.addFollower(TERMINAL_308);
    		TERMINAL_50.addFollower(TERMINAL_309);
    		TERMINAL_50.addFollower(TERMINAL_310);
    		TERMINAL_50.addFollower(TERMINAL_311);
    		TERMINAL_50.addFollower(TERMINAL_312);
    		TERMINAL_50.addFollower(TERMINAL_136);
    		TERMINAL_50.addFollower(TERMINAL_137);
    		TERMINAL_50.addFollower(TERMINAL_138);
    		TERMINAL_50.addFollower(TERMINAL_139);
    		TERMINAL_50.addFollower(TERMINAL_140);
    		TERMINAL_50.addFollower(TERMINAL_141);
    		TERMINAL_50.addFollower(TERMINAL_142);
    		TERMINAL_51.addFollower(TERMINAL_56);
    		TERMINAL_51.addFollower(TERMINAL_48);
    		TERMINAL_51.addFollower(TERMINAL_54);
    		TERMINAL_51.addFollower(TERMINAL_57);
    		TERMINAL_51.addFollower(TERMINAL_58);
    		TERMINAL_51.addFollower(TERMINAL_59);
    		TERMINAL_51.addFollower(TERMINAL_50);
    		TERMINAL_51.addFollower(TERMINAL_49);
    		TERMINAL_51.addFollower(TERMINAL_51);
    		TERMINAL_318.addFollower(TERMINAL_48);
    		TERMINAL_318.addFollower(TERMINAL_46);
    		TERMINAL_318.addFollower(TERMINAL_56);
    		TERMINAL_318.addFollower(TERMINAL_54);
    		TERMINAL_318.addFollower(TERMINAL_57);
    		TERMINAL_318.addFollower(TERMINAL_58);
    		TERMINAL_318.addFollower(TERMINAL_59);
    		TERMINAL_318.addFollower(TERMINAL_50);
    		TERMINAL_318.addFollower(TERMINAL_49);
    		TERMINAL_318.addFollower(TERMINAL_55);
    		TERMINAL_318.addFollower(TERMINAL_61);
    		TERMINAL_318.addFollower(TERMINAL_53);
    		TERMINAL_305.addFollower(TERMINAL_48);
    		TERMINAL_306.addFollower(TERMINAL_44);
    		TERMINAL_306.addFollower(TERMINAL_5);
    		TERMINAL_306.addFollower(TERMINAL_6);
    		TERMINAL_306.addFollower(TERMINAL_7);
    		TERMINAL_306.addFollower(TERMINAL_8);
    		TERMINAL_306.addFollower(TERMINAL_9);
    		TERMINAL_306.addFollower(TERMINAL_37);
    		TERMINAL_306.addFollower(TERMINAL_53);
    		TERMINAL_306.addFollower(TERMINAL_52);
    		TERMINAL_306.addFollower(TERMINAL_51);
    		TERMINAL_306.addFollower(TERMINAL_56);
    		TERMINAL_306.addFollower(TERMINAL_48);
    		TERMINAL_306.addFollower(TERMINAL_54);
    		TERMINAL_306.addFollower(TERMINAL_57);
    		TERMINAL_306.addFollower(TERMINAL_58);
    		TERMINAL_306.addFollower(TERMINAL_59);
    		TERMINAL_306.addFollower(TERMINAL_50);
    		TERMINAL_306.addFollower(TERMINAL_49);
    		TERMINAL_306.addFollower(TERMINAL_55);
    		TERMINAL_306.addFollower(TERMINAL_62);
    		TERMINAL_306.addFollower(TERMINAL_46);
    		TERMINAL_306.addFollower(TERMINAL_302);
    		TERMINAL_306.addFollower(TERMINAL_303);
    		TERMINAL_306.addFollower(TERMINAL_304);
    		TERMINAL_306.addFollower(TERMINAL_305);
    		TERMINAL_306.addFollower(TERMINAL_61);
    		TERMINAL_306.addFollower(TERMINAL_306);
    		TERMINAL_306.addFollower(TERMINAL_307);
    		TERMINAL_306.addFollower(TERMINAL_308);
    		TERMINAL_306.addFollower(TERMINAL_309);
    		TERMINAL_306.addFollower(TERMINAL_310);
    		TERMINAL_306.addFollower(TERMINAL_311);
    		TERMINAL_306.addFollower(TERMINAL_312);
    		TERMINAL_306.addFollower(TERMINAL_136);
    		TERMINAL_306.addFollower(TERMINAL_137);
    		TERMINAL_306.addFollower(TERMINAL_138);
    		TERMINAL_306.addFollower(TERMINAL_139);
    		TERMINAL_306.addFollower(TERMINAL_140);
    		TERMINAL_306.addFollower(TERMINAL_141);
    		TERMINAL_306.addFollower(TERMINAL_142);
    		TERMINAL_52.addFollower(TERMINAL_46);
    		TERMINAL_52.addFollower(TERMINAL_47);
    		TERMINAL_52.addFollower(TERMINAL_48);
    		TERMINAL_52.addFollower(TERMINAL_49);
    		TERMINAL_52.addFollower(TERMINAL_50);
    		TERMINAL_52.addFollower(TERMINAL_51);
    		TERMINAL_52.addFollower(TERMINAL_52);
    		TERMINAL_52.addFollower(TERMINAL_53);
    		TERMINAL_52.addFollower(TERMINAL_14);
    		TERMINAL_52.addFollower(TERMINAL_54);
    		TERMINAL_52.addFollower(TERMINAL_55);
    		TERMINAL_52.addFollower(TERMINAL_56);
    		TERMINAL_52.addFollower(TERMINAL_57);
    		TERMINAL_52.addFollower(TERMINAL_58);
    		TERMINAL_52.addFollower(TERMINAL_59);
    		TERMINAL_52.addFollower(TERMINAL_60);
    		TERMINAL_52.addFollower(TERMINAL_61);
    		TERMINAL_52.addFollower(TERMINAL_62);
    		TERMINAL_52.addFollower(TERMINAL_63);
    		TERMINAL_52.addFollower(TERMINAL_304);
    		TERMINAL_304.addFollower(TERMINAL_46);
    		TERMINAL_304.addFollower(TERMINAL_47);
    		TERMINAL_304.addFollower(TERMINAL_48);
    		TERMINAL_304.addFollower(TERMINAL_49);
    		TERMINAL_304.addFollower(TERMINAL_50);
    		TERMINAL_304.addFollower(TERMINAL_51);
    		TERMINAL_304.addFollower(TERMINAL_52);
    		TERMINAL_304.addFollower(TERMINAL_53);
    		TERMINAL_304.addFollower(TERMINAL_14);
    		TERMINAL_304.addFollower(TERMINAL_54);
    		TERMINAL_304.addFollower(TERMINAL_55);
    		TERMINAL_304.addFollower(TERMINAL_56);
    		TERMINAL_304.addFollower(TERMINAL_57);
    		TERMINAL_304.addFollower(TERMINAL_58);
    		TERMINAL_304.addFollower(TERMINAL_59);
    		TERMINAL_304.addFollower(TERMINAL_60);
    		TERMINAL_304.addFollower(TERMINAL_61);
    		TERMINAL_304.addFollower(TERMINAL_62);
    		TERMINAL_304.addFollower(TERMINAL_63);
    		TERMINAL_319.addFollower(TERMINAL_46);
    		TERMINAL_319.addFollower(TERMINAL_47);
    		TERMINAL_319.addFollower(TERMINAL_48);
    		TERMINAL_319.addFollower(TERMINAL_49);
    		TERMINAL_319.addFollower(TERMINAL_50);
    		TERMINAL_319.addFollower(TERMINAL_51);
    		TERMINAL_319.addFollower(TERMINAL_52);
    		TERMINAL_319.addFollower(TERMINAL_53);
    		TERMINAL_319.addFollower(TERMINAL_14);
    		TERMINAL_319.addFollower(TERMINAL_54);
    		TERMINAL_319.addFollower(TERMINAL_55);
    		TERMINAL_319.addFollower(TERMINAL_56);
    		TERMINAL_319.addFollower(TERMINAL_57);
    		TERMINAL_319.addFollower(TERMINAL_58);
    		TERMINAL_319.addFollower(TERMINAL_59);
    		TERMINAL_319.addFollower(TERMINAL_60);
    		TERMINAL_319.addFollower(TERMINAL_61);
    		TERMINAL_319.addFollower(TERMINAL_62);
    		TERMINAL_319.addFollower(TERMINAL_63);
    		TERMINAL_53.addFollower(TERMINAL_320);
    		TERMINAL_320.addFollower(TERMINAL_321);
    		TERMINAL_321.addFollower(TERMINAL_14);
    		TERMINAL_317.addFollower(TERMINAL_46);
    		TERMINAL_317.addFollower(TERMINAL_47);
    		TERMINAL_317.addFollower(TERMINAL_48);
    		TERMINAL_317.addFollower(TERMINAL_49);
    		TERMINAL_317.addFollower(TERMINAL_50);
    		TERMINAL_317.addFollower(TERMINAL_51);
    		TERMINAL_317.addFollower(TERMINAL_52);
    		TERMINAL_317.addFollower(TERMINAL_53);
    		TERMINAL_317.addFollower(TERMINAL_14);
    		TERMINAL_317.addFollower(TERMINAL_54);
    		TERMINAL_317.addFollower(TERMINAL_55);
    		TERMINAL_317.addFollower(TERMINAL_56);
    		TERMINAL_317.addFollower(TERMINAL_57);
    		TERMINAL_317.addFollower(TERMINAL_58);
    		TERMINAL_317.addFollower(TERMINAL_59);
    		TERMINAL_317.addFollower(TERMINAL_60);
    		TERMINAL_317.addFollower(TERMINAL_61);
    		TERMINAL_317.addFollower(TERMINAL_62);
    		TERMINAL_317.addFollower(TERMINAL_63);
    		TERMINAL_54.addFollower(TERMINAL_44);
    		TERMINAL_54.addFollower(TERMINAL_5);
    		TERMINAL_54.addFollower(TERMINAL_6);
    		TERMINAL_54.addFollower(TERMINAL_7);
    		TERMINAL_54.addFollower(TERMINAL_8);
    		TERMINAL_54.addFollower(TERMINAL_9);
    		TERMINAL_54.addFollower(TERMINAL_37);
    		TERMINAL_54.addFollower(TERMINAL_53);
    		TERMINAL_54.addFollower(TERMINAL_52);
    		TERMINAL_54.addFollower(TERMINAL_51);
    		TERMINAL_54.addFollower(TERMINAL_56);
    		TERMINAL_54.addFollower(TERMINAL_48);
    		TERMINAL_54.addFollower(TERMINAL_54);
    		TERMINAL_54.addFollower(TERMINAL_57);
    		TERMINAL_54.addFollower(TERMINAL_58);
    		TERMINAL_54.addFollower(TERMINAL_59);
    		TERMINAL_54.addFollower(TERMINAL_50);
    		TERMINAL_54.addFollower(TERMINAL_49);
    		TERMINAL_54.addFollower(TERMINAL_55);
    		TERMINAL_54.addFollower(TERMINAL_62);
    		TERMINAL_54.addFollower(TERMINAL_46);
    		TERMINAL_54.addFollower(TERMINAL_302);
    		TERMINAL_54.addFollower(TERMINAL_303);
    		TERMINAL_54.addFollower(TERMINAL_304);
    		TERMINAL_54.addFollower(TERMINAL_305);
    		TERMINAL_54.addFollower(TERMINAL_61);
    		TERMINAL_54.addFollower(TERMINAL_306);
    		TERMINAL_54.addFollower(TERMINAL_307);
    		TERMINAL_54.addFollower(TERMINAL_308);
    		TERMINAL_54.addFollower(TERMINAL_309);
    		TERMINAL_54.addFollower(TERMINAL_310);
    		TERMINAL_54.addFollower(TERMINAL_311);
    		TERMINAL_54.addFollower(TERMINAL_312);
    		TERMINAL_54.addFollower(TERMINAL_136);
    		TERMINAL_54.addFollower(TERMINAL_137);
    		TERMINAL_54.addFollower(TERMINAL_138);
    		TERMINAL_54.addFollower(TERMINAL_139);
    		TERMINAL_54.addFollower(TERMINAL_140);
    		TERMINAL_54.addFollower(TERMINAL_141);
    		TERMINAL_54.addFollower(TERMINAL_142);
    		TERMINAL_54.addFollower(TERMINAL_322);
    		TERMINAL_54.addFollower(TERMINAL_323);
    		TERMINAL_55.addFollower(TERMINAL_324);
    		TERMINAL_324.addFollower(TERMINAL_46);
    		TERMINAL_324.addFollower(TERMINAL_47);
    		TERMINAL_324.addFollower(TERMINAL_48);
    		TERMINAL_324.addFollower(TERMINAL_49);
    		TERMINAL_324.addFollower(TERMINAL_50);
    		TERMINAL_324.addFollower(TERMINAL_51);
    		TERMINAL_324.addFollower(TERMINAL_52);
    		TERMINAL_324.addFollower(TERMINAL_53);
    		TERMINAL_324.addFollower(TERMINAL_14);
    		TERMINAL_324.addFollower(TERMINAL_54);
    		TERMINAL_324.addFollower(TERMINAL_55);
    		TERMINAL_324.addFollower(TERMINAL_56);
    		TERMINAL_324.addFollower(TERMINAL_57);
    		TERMINAL_324.addFollower(TERMINAL_58);
    		TERMINAL_324.addFollower(TERMINAL_59);
    		TERMINAL_324.addFollower(TERMINAL_60);
    		TERMINAL_324.addFollower(TERMINAL_61);
    		TERMINAL_324.addFollower(TERMINAL_62);
    		TERMINAL_324.addFollower(TERMINAL_63);
    		TERMINAL_324.addFollower(TERMINAL_308);
    		TERMINAL_307.addFollower(TERMINAL_46);
    		TERMINAL_307.addFollower(TERMINAL_47);
    		TERMINAL_307.addFollower(TERMINAL_48);
    		TERMINAL_307.addFollower(TERMINAL_49);
    		TERMINAL_307.addFollower(TERMINAL_50);
    		TERMINAL_307.addFollower(TERMINAL_51);
    		TERMINAL_307.addFollower(TERMINAL_52);
    		TERMINAL_307.addFollower(TERMINAL_53);
    		TERMINAL_307.addFollower(TERMINAL_14);
    		TERMINAL_307.addFollower(TERMINAL_54);
    		TERMINAL_307.addFollower(TERMINAL_55);
    		TERMINAL_307.addFollower(TERMINAL_56);
    		TERMINAL_307.addFollower(TERMINAL_57);
    		TERMINAL_307.addFollower(TERMINAL_58);
    		TERMINAL_307.addFollower(TERMINAL_59);
    		TERMINAL_307.addFollower(TERMINAL_60);
    		TERMINAL_307.addFollower(TERMINAL_61);
    		TERMINAL_307.addFollower(TERMINAL_62);
    		TERMINAL_307.addFollower(TERMINAL_63);
    		TERMINAL_308.addFollower(TERMINAL_44);
    		TERMINAL_308.addFollower(TERMINAL_5);
    		TERMINAL_308.addFollower(TERMINAL_6);
    		TERMINAL_308.addFollower(TERMINAL_7);
    		TERMINAL_308.addFollower(TERMINAL_8);
    		TERMINAL_308.addFollower(TERMINAL_9);
    		TERMINAL_308.addFollower(TERMINAL_37);
    		TERMINAL_308.addFollower(TERMINAL_53);
    		TERMINAL_308.addFollower(TERMINAL_52);
    		TERMINAL_308.addFollower(TERMINAL_51);
    		TERMINAL_308.addFollower(TERMINAL_56);
    		TERMINAL_308.addFollower(TERMINAL_48);
    		TERMINAL_308.addFollower(TERMINAL_54);
    		TERMINAL_308.addFollower(TERMINAL_57);
    		TERMINAL_308.addFollower(TERMINAL_58);
    		TERMINAL_308.addFollower(TERMINAL_59);
    		TERMINAL_308.addFollower(TERMINAL_50);
    		TERMINAL_308.addFollower(TERMINAL_49);
    		TERMINAL_308.addFollower(TERMINAL_55);
    		TERMINAL_308.addFollower(TERMINAL_62);
    		TERMINAL_308.addFollower(TERMINAL_46);
    		TERMINAL_308.addFollower(TERMINAL_302);
    		TERMINAL_308.addFollower(TERMINAL_303);
    		TERMINAL_308.addFollower(TERMINAL_304);
    		TERMINAL_308.addFollower(TERMINAL_305);
    		TERMINAL_308.addFollower(TERMINAL_61);
    		TERMINAL_308.addFollower(TERMINAL_306);
    		TERMINAL_308.addFollower(TERMINAL_307);
    		TERMINAL_308.addFollower(TERMINAL_308);
    		TERMINAL_308.addFollower(TERMINAL_309);
    		TERMINAL_308.addFollower(TERMINAL_310);
    		TERMINAL_308.addFollower(TERMINAL_311);
    		TERMINAL_308.addFollower(TERMINAL_312);
    		TERMINAL_308.addFollower(TERMINAL_136);
    		TERMINAL_308.addFollower(TERMINAL_137);
    		TERMINAL_308.addFollower(TERMINAL_138);
    		TERMINAL_308.addFollower(TERMINAL_139);
    		TERMINAL_308.addFollower(TERMINAL_140);
    		TERMINAL_308.addFollower(TERMINAL_141);
    		TERMINAL_308.addFollower(TERMINAL_142);
    		TERMINAL_322.addFollower(TERMINAL_56);
    		TERMINAL_322.addFollower(TERMINAL_48);
    		TERMINAL_322.addFollower(TERMINAL_54);
    		TERMINAL_322.addFollower(TERMINAL_57);
    		TERMINAL_322.addFollower(TERMINAL_58);
    		TERMINAL_322.addFollower(TERMINAL_59);
    		TERMINAL_322.addFollower(TERMINAL_50);
    		TERMINAL_322.addFollower(TERMINAL_49);
    		TERMINAL_322.addFollower(TERMINAL_55);
    		TERMINAL_322.addFollower(TERMINAL_61);
    		TERMINAL_322.addFollower(TERMINAL_60);
    		TERMINAL_323.addFollower(TERMINAL_325);
    		TERMINAL_325.addFollower(TERMINAL_56);
    		TERMINAL_325.addFollower(TERMINAL_48);
    		TERMINAL_325.addFollower(TERMINAL_54);
    		TERMINAL_325.addFollower(TERMINAL_57);
    		TERMINAL_325.addFollower(TERMINAL_58);
    		TERMINAL_325.addFollower(TERMINAL_59);
    		TERMINAL_325.addFollower(TERMINAL_50);
    		TERMINAL_325.addFollower(TERMINAL_49);
    		TERMINAL_325.addFollower(TERMINAL_55);
    		TERMINAL_325.addFollower(TERMINAL_61);
    		TERMINAL_325.addFollower(TERMINAL_60);
    		TERMINAL_57.addFollower(TERMINAL_44);
    		TERMINAL_57.addFollower(TERMINAL_5);
    		TERMINAL_57.addFollower(TERMINAL_6);
    		TERMINAL_57.addFollower(TERMINAL_7);
    		TERMINAL_57.addFollower(TERMINAL_8);
    		TERMINAL_57.addFollower(TERMINAL_9);
    		TERMINAL_57.addFollower(TERMINAL_37);
    		TERMINAL_57.addFollower(TERMINAL_53);
    		TERMINAL_57.addFollower(TERMINAL_52);
    		TERMINAL_57.addFollower(TERMINAL_51);
    		TERMINAL_57.addFollower(TERMINAL_56);
    		TERMINAL_57.addFollower(TERMINAL_48);
    		TERMINAL_57.addFollower(TERMINAL_54);
    		TERMINAL_57.addFollower(TERMINAL_57);
    		TERMINAL_57.addFollower(TERMINAL_58);
    		TERMINAL_57.addFollower(TERMINAL_59);
    		TERMINAL_57.addFollower(TERMINAL_50);
    		TERMINAL_57.addFollower(TERMINAL_49);
    		TERMINAL_57.addFollower(TERMINAL_55);
    		TERMINAL_57.addFollower(TERMINAL_62);
    		TERMINAL_57.addFollower(TERMINAL_46);
    		TERMINAL_57.addFollower(TERMINAL_302);
    		TERMINAL_57.addFollower(TERMINAL_303);
    		TERMINAL_57.addFollower(TERMINAL_304);
    		TERMINAL_57.addFollower(TERMINAL_305);
    		TERMINAL_57.addFollower(TERMINAL_61);
    		TERMINAL_57.addFollower(TERMINAL_306);
    		TERMINAL_57.addFollower(TERMINAL_307);
    		TERMINAL_57.addFollower(TERMINAL_308);
    		TERMINAL_57.addFollower(TERMINAL_309);
    		TERMINAL_57.addFollower(TERMINAL_310);
    		TERMINAL_57.addFollower(TERMINAL_311);
    		TERMINAL_57.addFollower(TERMINAL_312);
    		TERMINAL_57.addFollower(TERMINAL_136);
    		TERMINAL_57.addFollower(TERMINAL_137);
    		TERMINAL_57.addFollower(TERMINAL_138);
    		TERMINAL_57.addFollower(TERMINAL_139);
    		TERMINAL_57.addFollower(TERMINAL_140);
    		TERMINAL_57.addFollower(TERMINAL_141);
    		TERMINAL_57.addFollower(TERMINAL_142);
    		TERMINAL_57.addFollower(TERMINAL_322);
    		TERMINAL_57.addFollower(TERMINAL_323);
    		TERMINAL_59.addFollower(TERMINAL_44);
    		TERMINAL_59.addFollower(TERMINAL_5);
    		TERMINAL_59.addFollower(TERMINAL_6);
    		TERMINAL_59.addFollower(TERMINAL_7);
    		TERMINAL_59.addFollower(TERMINAL_8);
    		TERMINAL_59.addFollower(TERMINAL_9);
    		TERMINAL_59.addFollower(TERMINAL_37);
    		TERMINAL_59.addFollower(TERMINAL_302);
    		TERMINAL_59.addFollower(TERMINAL_303);
    		TERMINAL_59.addFollower(TERMINAL_304);
    		TERMINAL_59.addFollower(TERMINAL_305);
    		TERMINAL_59.addFollower(TERMINAL_46);
    		TERMINAL_59.addFollower(TERMINAL_56);
    		TERMINAL_59.addFollower(TERMINAL_48);
    		TERMINAL_59.addFollower(TERMINAL_54);
    		TERMINAL_59.addFollower(TERMINAL_57);
    		TERMINAL_59.addFollower(TERMINAL_58);
    		TERMINAL_59.addFollower(TERMINAL_59);
    		TERMINAL_59.addFollower(TERMINAL_50);
    		TERMINAL_59.addFollower(TERMINAL_49);
    		TERMINAL_59.addFollower(TERMINAL_55);
    		TERMINAL_59.addFollower(TERMINAL_53);
    		TERMINAL_59.addFollower(TERMINAL_61);
    		TERMINAL_59.addFollower(TERMINAL_306);
    		TERMINAL_59.addFollower(TERMINAL_307);
    		TERMINAL_59.addFollower(TERMINAL_308);
    		TERMINAL_59.addFollower(TERMINAL_309);
    		TERMINAL_59.addFollower(TERMINAL_310);
    		TERMINAL_59.addFollower(TERMINAL_311);
    		TERMINAL_59.addFollower(TERMINAL_312);
    		TERMINAL_59.addFollower(TERMINAL_136);
    		TERMINAL_59.addFollower(TERMINAL_137);
    		TERMINAL_59.addFollower(TERMINAL_138);
    		TERMINAL_59.addFollower(TERMINAL_139);
    		TERMINAL_59.addFollower(TERMINAL_140);
    		TERMINAL_59.addFollower(TERMINAL_141);
    		TERMINAL_59.addFollower(TERMINAL_142);
    		TERMINAL_56.addFollower(TERMINAL_48);
    		TERMINAL_56.addFollower(TERMINAL_54);
    		TERMINAL_56.addFollower(TERMINAL_57);
    		TERMINAL_56.addFollower(TERMINAL_58);
    		TERMINAL_56.addFollower(TERMINAL_59);
    		TERMINAL_56.addFollower(TERMINAL_50);
    		TERMINAL_56.addFollower(TERMINAL_49);
    	}
    	public static void wire3() {
    		TERMINAL_326.addFollower(TERMINAL_336);
    		TERMINAL_336.addFollower(TERMINAL_326);
    		TERMINAL_336.addFollower(TERMINAL_327);
    		TERMINAL_336.addFollower(TERMINAL_328);
    		TERMINAL_336.addFollower(TERMINAL_329);
    		TERMINAL_336.addFollower(TERMINAL_330);
    		TERMINAL_336.addFollower(TERMINAL_331);
    		TERMINAL_336.addFollower(TERMINAL_332);
    		TERMINAL_336.addFollower(TERMINAL_333);
    		TERMINAL_336.addFollower(TERMINAL_334);
    		TERMINAL_336.addFollower(TERMINAL_335);
    		TERMINAL_327.addFollower(TERMINAL_337);
    		TERMINAL_337.addFollower(TERMINAL_338);
    		TERMINAL_338.addFollower(TERMINAL_46);
    		TERMINAL_338.addFollower(TERMINAL_47);
    		TERMINAL_338.addFollower(TERMINAL_48);
    		TERMINAL_338.addFollower(TERMINAL_49);
    		TERMINAL_338.addFollower(TERMINAL_50);
    		TERMINAL_338.addFollower(TERMINAL_51);
    		TERMINAL_338.addFollower(TERMINAL_52);
    		TERMINAL_338.addFollower(TERMINAL_53);
    		TERMINAL_338.addFollower(TERMINAL_14);
    		TERMINAL_338.addFollower(TERMINAL_54);
    		TERMINAL_338.addFollower(TERMINAL_55);
    		TERMINAL_338.addFollower(TERMINAL_56);
    		TERMINAL_338.addFollower(TERMINAL_57);
    		TERMINAL_338.addFollower(TERMINAL_58);
    		TERMINAL_338.addFollower(TERMINAL_59);
    		TERMINAL_338.addFollower(TERMINAL_60);
    		TERMINAL_338.addFollower(TERMINAL_61);
    		TERMINAL_338.addFollower(TERMINAL_62);
    		TERMINAL_338.addFollower(TERMINAL_63);
    		TERMINAL_338.addFollower(TERMINAL_310);
    		TERMINAL_309.addFollower(TERMINAL_46);
    		TERMINAL_309.addFollower(TERMINAL_47);
    		TERMINAL_309.addFollower(TERMINAL_48);
    		TERMINAL_309.addFollower(TERMINAL_49);
    		TERMINAL_309.addFollower(TERMINAL_50);
    		TERMINAL_309.addFollower(TERMINAL_51);
    		TERMINAL_309.addFollower(TERMINAL_52);
    		TERMINAL_309.addFollower(TERMINAL_53);
    		TERMINAL_309.addFollower(TERMINAL_14);
    		TERMINAL_309.addFollower(TERMINAL_54);
    		TERMINAL_309.addFollower(TERMINAL_55);
    		TERMINAL_309.addFollower(TERMINAL_56);
    		TERMINAL_309.addFollower(TERMINAL_57);
    		TERMINAL_309.addFollower(TERMINAL_58);
    		TERMINAL_309.addFollower(TERMINAL_59);
    		TERMINAL_309.addFollower(TERMINAL_60);
    		TERMINAL_309.addFollower(TERMINAL_61);
    		TERMINAL_309.addFollower(TERMINAL_62);
    		TERMINAL_309.addFollower(TERMINAL_63);
    		TERMINAL_310.addFollower(TERMINAL_326);
    		TERMINAL_310.addFollower(TERMINAL_327);
    		TERMINAL_310.addFollower(TERMINAL_328);
    		TERMINAL_310.addFollower(TERMINAL_329);
    		TERMINAL_310.addFollower(TERMINAL_330);
    		TERMINAL_310.addFollower(TERMINAL_331);
    		TERMINAL_310.addFollower(TERMINAL_332);
    		TERMINAL_310.addFollower(TERMINAL_333);
    		TERMINAL_310.addFollower(TERMINAL_334);
    		TERMINAL_310.addFollower(TERMINAL_335);
    		TERMINAL_328.addFollower(TERMINAL_339);
    		TERMINAL_339.addFollower(TERMINAL_326);
    		TERMINAL_339.addFollower(TERMINAL_327);
    		TERMINAL_339.addFollower(TERMINAL_328);
    		TERMINAL_339.addFollower(TERMINAL_329);
    		TERMINAL_339.addFollower(TERMINAL_330);
    		TERMINAL_339.addFollower(TERMINAL_331);
    		TERMINAL_339.addFollower(TERMINAL_332);
    		TERMINAL_339.addFollower(TERMINAL_333);
    		TERMINAL_339.addFollower(TERMINAL_334);
    		TERMINAL_339.addFollower(TERMINAL_335);
    		TERMINAL_329.addFollower(TERMINAL_340);
    		TERMINAL_340.addFollower(TERMINAL_326);
    		TERMINAL_340.addFollower(TERMINAL_327);
    		TERMINAL_340.addFollower(TERMINAL_328);
    		TERMINAL_340.addFollower(TERMINAL_329);
    		TERMINAL_340.addFollower(TERMINAL_330);
    		TERMINAL_340.addFollower(TERMINAL_331);
    		TERMINAL_340.addFollower(TERMINAL_332);
    		TERMINAL_340.addFollower(TERMINAL_333);
    		TERMINAL_340.addFollower(TERMINAL_334);
    		TERMINAL_340.addFollower(TERMINAL_335);
    		TERMINAL_330.addFollower(TERMINAL_46);
    		TERMINAL_330.addFollower(TERMINAL_47);
    		TERMINAL_330.addFollower(TERMINAL_48);
    		TERMINAL_330.addFollower(TERMINAL_49);
    		TERMINAL_330.addFollower(TERMINAL_50);
    		TERMINAL_330.addFollower(TERMINAL_51);
    		TERMINAL_330.addFollower(TERMINAL_52);
    		TERMINAL_330.addFollower(TERMINAL_53);
    		TERMINAL_330.addFollower(TERMINAL_14);
    		TERMINAL_330.addFollower(TERMINAL_54);
    		TERMINAL_330.addFollower(TERMINAL_55);
    		TERMINAL_330.addFollower(TERMINAL_56);
    		TERMINAL_330.addFollower(TERMINAL_57);
    		TERMINAL_330.addFollower(TERMINAL_58);
    		TERMINAL_330.addFollower(TERMINAL_59);
    		TERMINAL_330.addFollower(TERMINAL_60);
    		TERMINAL_330.addFollower(TERMINAL_61);
    		TERMINAL_330.addFollower(TERMINAL_62);
    		TERMINAL_330.addFollower(TERMINAL_63);
    		TERMINAL_341.addFollower(TERMINAL_44);
    		TERMINAL_341.addFollower(TERMINAL_5);
    		TERMINAL_341.addFollower(TERMINAL_6);
    		TERMINAL_341.addFollower(TERMINAL_7);
    		TERMINAL_341.addFollower(TERMINAL_8);
    		TERMINAL_341.addFollower(TERMINAL_9);
    		TERMINAL_341.addFollower(TERMINAL_37);
    		TERMINAL_341.addFollower(TERMINAL_53);
    		TERMINAL_341.addFollower(TERMINAL_52);
    		TERMINAL_341.addFollower(TERMINAL_51);
    		TERMINAL_341.addFollower(TERMINAL_56);
    		TERMINAL_341.addFollower(TERMINAL_48);
    		TERMINAL_341.addFollower(TERMINAL_54);
    		TERMINAL_341.addFollower(TERMINAL_57);
    		TERMINAL_341.addFollower(TERMINAL_58);
    		TERMINAL_341.addFollower(TERMINAL_59);
    		TERMINAL_341.addFollower(TERMINAL_50);
    		TERMINAL_341.addFollower(TERMINAL_49);
    		TERMINAL_341.addFollower(TERMINAL_55);
    		TERMINAL_341.addFollower(TERMINAL_62);
    		TERMINAL_341.addFollower(TERMINAL_46);
    		TERMINAL_341.addFollower(TERMINAL_302);
    		TERMINAL_341.addFollower(TERMINAL_303);
    		TERMINAL_341.addFollower(TERMINAL_304);
    		TERMINAL_341.addFollower(TERMINAL_305);
    		TERMINAL_341.addFollower(TERMINAL_61);
    		TERMINAL_341.addFollower(TERMINAL_306);
    		TERMINAL_341.addFollower(TERMINAL_307);
    		TERMINAL_341.addFollower(TERMINAL_308);
    		TERMINAL_341.addFollower(TERMINAL_309);
    		TERMINAL_341.addFollower(TERMINAL_310);
    		TERMINAL_341.addFollower(TERMINAL_311);
    		TERMINAL_341.addFollower(TERMINAL_312);
    		TERMINAL_341.addFollower(TERMINAL_136);
    		TERMINAL_341.addFollower(TERMINAL_137);
    		TERMINAL_341.addFollower(TERMINAL_138);
    		TERMINAL_341.addFollower(TERMINAL_139);
    		TERMINAL_341.addFollower(TERMINAL_140);
    		TERMINAL_341.addFollower(TERMINAL_141);
    		TERMINAL_341.addFollower(TERMINAL_142);
    		TERMINAL_341.addFollower(TERMINAL_322);
    		TERMINAL_341.addFollower(TERMINAL_323);
    		TERMINAL_331.addFollower(TERMINAL_46);
    		TERMINAL_331.addFollower(TERMINAL_47);
    		TERMINAL_331.addFollower(TERMINAL_48);
    		TERMINAL_331.addFollower(TERMINAL_49);
    		TERMINAL_331.addFollower(TERMINAL_50);
    		TERMINAL_331.addFollower(TERMINAL_51);
    		TERMINAL_331.addFollower(TERMINAL_52);
    		TERMINAL_331.addFollower(TERMINAL_53);
    		TERMINAL_331.addFollower(TERMINAL_14);
    		TERMINAL_331.addFollower(TERMINAL_54);
    		TERMINAL_331.addFollower(TERMINAL_55);
    		TERMINAL_331.addFollower(TERMINAL_56);
    		TERMINAL_331.addFollower(TERMINAL_57);
    		TERMINAL_331.addFollower(TERMINAL_58);
    		TERMINAL_331.addFollower(TERMINAL_59);
    		TERMINAL_331.addFollower(TERMINAL_60);
    		TERMINAL_331.addFollower(TERMINAL_61);
    		TERMINAL_331.addFollower(TERMINAL_62);
    		TERMINAL_331.addFollower(TERMINAL_63);
    		TERMINAL_332.addFollower(TERMINAL_46);
    		TERMINAL_332.addFollower(TERMINAL_47);
    		TERMINAL_332.addFollower(TERMINAL_48);
    		TERMINAL_332.addFollower(TERMINAL_49);
    		TERMINAL_332.addFollower(TERMINAL_50);
    		TERMINAL_332.addFollower(TERMINAL_51);
    		TERMINAL_332.addFollower(TERMINAL_52);
    		TERMINAL_332.addFollower(TERMINAL_53);
    		TERMINAL_332.addFollower(TERMINAL_14);
    		TERMINAL_332.addFollower(TERMINAL_54);
    		TERMINAL_332.addFollower(TERMINAL_55);
    		TERMINAL_332.addFollower(TERMINAL_56);
    		TERMINAL_332.addFollower(TERMINAL_57);
    		TERMINAL_332.addFollower(TERMINAL_58);
    		TERMINAL_332.addFollower(TERMINAL_59);
    		TERMINAL_332.addFollower(TERMINAL_60);
    		TERMINAL_332.addFollower(TERMINAL_61);
    		TERMINAL_332.addFollower(TERMINAL_62);
    		TERMINAL_332.addFollower(TERMINAL_63);
    		TERMINAL_333.addFollower(TERMINAL_46);
    		TERMINAL_333.addFollower(TERMINAL_47);
    		TERMINAL_333.addFollower(TERMINAL_48);
    		TERMINAL_333.addFollower(TERMINAL_49);
    		TERMINAL_333.addFollower(TERMINAL_50);
    		TERMINAL_333.addFollower(TERMINAL_51);
    		TERMINAL_333.addFollower(TERMINAL_52);
    		TERMINAL_333.addFollower(TERMINAL_53);
    		TERMINAL_333.addFollower(TERMINAL_14);
    		TERMINAL_333.addFollower(TERMINAL_54);
    		TERMINAL_333.addFollower(TERMINAL_55);
    		TERMINAL_333.addFollower(TERMINAL_56);
    		TERMINAL_333.addFollower(TERMINAL_57);
    		TERMINAL_333.addFollower(TERMINAL_58);
    		TERMINAL_333.addFollower(TERMINAL_59);
    		TERMINAL_333.addFollower(TERMINAL_60);
    		TERMINAL_333.addFollower(TERMINAL_61);
    		TERMINAL_333.addFollower(TERMINAL_62);
    		TERMINAL_333.addFollower(TERMINAL_63);
    		TERMINAL_334.addFollower(TERMINAL_46);
    		TERMINAL_334.addFollower(TERMINAL_47);
    		TERMINAL_334.addFollower(TERMINAL_48);
    		TERMINAL_334.addFollower(TERMINAL_49);
    		TERMINAL_334.addFollower(TERMINAL_50);
    		TERMINAL_334.addFollower(TERMINAL_51);
    		TERMINAL_334.addFollower(TERMINAL_52);
    		TERMINAL_334.addFollower(TERMINAL_53);
    		TERMINAL_334.addFollower(TERMINAL_14);
    		TERMINAL_334.addFollower(TERMINAL_54);
    		TERMINAL_334.addFollower(TERMINAL_55);
    		TERMINAL_334.addFollower(TERMINAL_56);
    		TERMINAL_334.addFollower(TERMINAL_57);
    		TERMINAL_334.addFollower(TERMINAL_58);
    		TERMINAL_334.addFollower(TERMINAL_59);
    		TERMINAL_334.addFollower(TERMINAL_60);
    		TERMINAL_334.addFollower(TERMINAL_61);
    		TERMINAL_334.addFollower(TERMINAL_62);
    		TERMINAL_334.addFollower(TERMINAL_63);
    		TERMINAL_335.addFollower(TERMINAL_342);
    		TERMINAL_335.addFollower(TERMINAL_343);
    		TERMINAL_335.addFollower(TERMINAL_344);
    		TERMINAL_335.addFollower(TERMINAL_345);
    		TERMINAL_335.addFollower(TERMINAL_44);
    		TERMINAL_335.addFollower(TERMINAL_5);
    		TERMINAL_335.addFollower(TERMINAL_6);
    		TERMINAL_335.addFollower(TERMINAL_7);
    		TERMINAL_335.addFollower(TERMINAL_8);
    		TERMINAL_335.addFollower(TERMINAL_9);
    		TERMINAL_335.addFollower(TERMINAL_37);
    		TERMINAL_335.addFollower(TERMINAL_53);
    		TERMINAL_335.addFollower(TERMINAL_52);
    		TERMINAL_335.addFollower(TERMINAL_51);
    		TERMINAL_335.addFollower(TERMINAL_56);
    		TERMINAL_335.addFollower(TERMINAL_48);
    		TERMINAL_335.addFollower(TERMINAL_54);
    		TERMINAL_335.addFollower(TERMINAL_57);
    		TERMINAL_335.addFollower(TERMINAL_58);
    		TERMINAL_335.addFollower(TERMINAL_59);
    		TERMINAL_335.addFollower(TERMINAL_50);
    		TERMINAL_335.addFollower(TERMINAL_49);
    		TERMINAL_335.addFollower(TERMINAL_55);
    		TERMINAL_335.addFollower(TERMINAL_62);
    		TERMINAL_335.addFollower(TERMINAL_46);
    		TERMINAL_335.addFollower(TERMINAL_302);
    		TERMINAL_335.addFollower(TERMINAL_303);
    		TERMINAL_335.addFollower(TERMINAL_304);
    		TERMINAL_335.addFollower(TERMINAL_305);
    		TERMINAL_335.addFollower(TERMINAL_61);
    		TERMINAL_335.addFollower(TERMINAL_306);
    		TERMINAL_335.addFollower(TERMINAL_307);
    		TERMINAL_335.addFollower(TERMINAL_308);
    		TERMINAL_335.addFollower(TERMINAL_309);
    		TERMINAL_335.addFollower(TERMINAL_310);
    		TERMINAL_335.addFollower(TERMINAL_311);
    		TERMINAL_335.addFollower(TERMINAL_312);
    		TERMINAL_335.addFollower(TERMINAL_136);
    		TERMINAL_335.addFollower(TERMINAL_137);
    		TERMINAL_335.addFollower(TERMINAL_138);
    		TERMINAL_335.addFollower(TERMINAL_139);
    		TERMINAL_335.addFollower(TERMINAL_140);
    		TERMINAL_335.addFollower(TERMINAL_141);
    		TERMINAL_335.addFollower(TERMINAL_142);
    		TERMINAL_335.addFollower(TERMINAL_322);
    		TERMINAL_335.addFollower(TERMINAL_323);
    		TERMINAL_342.addFollower(TERMINAL_46);
    		TERMINAL_342.addFollower(TERMINAL_47);
    		TERMINAL_342.addFollower(TERMINAL_48);
    		TERMINAL_342.addFollower(TERMINAL_49);
    		TERMINAL_342.addFollower(TERMINAL_50);
    		TERMINAL_342.addFollower(TERMINAL_51);
    		TERMINAL_342.addFollower(TERMINAL_52);
    		TERMINAL_342.addFollower(TERMINAL_53);
    		TERMINAL_342.addFollower(TERMINAL_14);
    		TERMINAL_342.addFollower(TERMINAL_54);
    		TERMINAL_342.addFollower(TERMINAL_55);
    		TERMINAL_342.addFollower(TERMINAL_56);
    		TERMINAL_342.addFollower(TERMINAL_57);
    		TERMINAL_342.addFollower(TERMINAL_58);
    		TERMINAL_342.addFollower(TERMINAL_59);
    		TERMINAL_342.addFollower(TERMINAL_60);
    		TERMINAL_342.addFollower(TERMINAL_61);
    		TERMINAL_342.addFollower(TERMINAL_62);
    		TERMINAL_342.addFollower(TERMINAL_63);
    		TERMINAL_343.addFollower(TERMINAL_46);
    		TERMINAL_343.addFollower(TERMINAL_47);
    		TERMINAL_343.addFollower(TERMINAL_48);
    		TERMINAL_343.addFollower(TERMINAL_49);
    		TERMINAL_343.addFollower(TERMINAL_50);
    		TERMINAL_343.addFollower(TERMINAL_51);
    		TERMINAL_343.addFollower(TERMINAL_52);
    		TERMINAL_343.addFollower(TERMINAL_53);
    		TERMINAL_343.addFollower(TERMINAL_14);
    		TERMINAL_343.addFollower(TERMINAL_54);
    		TERMINAL_343.addFollower(TERMINAL_55);
    		TERMINAL_343.addFollower(TERMINAL_56);
    		TERMINAL_343.addFollower(TERMINAL_57);
    		TERMINAL_343.addFollower(TERMINAL_58);
    		TERMINAL_343.addFollower(TERMINAL_59);
    		TERMINAL_343.addFollower(TERMINAL_60);
    		TERMINAL_343.addFollower(TERMINAL_61);
    		TERMINAL_343.addFollower(TERMINAL_62);
    		TERMINAL_343.addFollower(TERMINAL_63);
    		TERMINAL_344.addFollower(TERMINAL_46);
    		TERMINAL_344.addFollower(TERMINAL_47);
    		TERMINAL_344.addFollower(TERMINAL_48);
    		TERMINAL_344.addFollower(TERMINAL_49);
    		TERMINAL_344.addFollower(TERMINAL_50);
    		TERMINAL_344.addFollower(TERMINAL_51);
    		TERMINAL_344.addFollower(TERMINAL_52);
    		TERMINAL_344.addFollower(TERMINAL_53);
    		TERMINAL_344.addFollower(TERMINAL_14);
    		TERMINAL_344.addFollower(TERMINAL_54);
    		TERMINAL_344.addFollower(TERMINAL_55);
    		TERMINAL_344.addFollower(TERMINAL_56);
    		TERMINAL_344.addFollower(TERMINAL_57);
    		TERMINAL_344.addFollower(TERMINAL_58);
    		TERMINAL_344.addFollower(TERMINAL_59);
    		TERMINAL_344.addFollower(TERMINAL_60);
    		TERMINAL_344.addFollower(TERMINAL_61);
    		TERMINAL_344.addFollower(TERMINAL_62);
    		TERMINAL_344.addFollower(TERMINAL_63);
    		TERMINAL_345.addFollower(TERMINAL_46);
    		TERMINAL_345.addFollower(TERMINAL_47);
    		TERMINAL_345.addFollower(TERMINAL_48);
    		TERMINAL_345.addFollower(TERMINAL_49);
    		TERMINAL_345.addFollower(TERMINAL_50);
    		TERMINAL_345.addFollower(TERMINAL_51);
    		TERMINAL_345.addFollower(TERMINAL_52);
    		TERMINAL_345.addFollower(TERMINAL_53);
    		TERMINAL_345.addFollower(TERMINAL_14);
    		TERMINAL_345.addFollower(TERMINAL_54);
    		TERMINAL_345.addFollower(TERMINAL_55);
    		TERMINAL_345.addFollower(TERMINAL_56);
    		TERMINAL_345.addFollower(TERMINAL_57);
    		TERMINAL_345.addFollower(TERMINAL_58);
    		TERMINAL_345.addFollower(TERMINAL_59);
    		TERMINAL_345.addFollower(TERMINAL_60);
    		TERMINAL_345.addFollower(TERMINAL_61);
    		TERMINAL_345.addFollower(TERMINAL_62);
    		TERMINAL_345.addFollower(TERMINAL_63);
    		TERMINAL_346.addFollower(TERMINAL_355);
    		TERMINAL_355.addFollower(TERMINAL_346);
    		TERMINAL_355.addFollower(TERMINAL_347);
    		TERMINAL_355.addFollower(TERMINAL_348);
    		TERMINAL_355.addFollower(TERMINAL_349);
    		TERMINAL_355.addFollower(TERMINAL_350);
    		TERMINAL_355.addFollower(TERMINAL_351);
    		TERMINAL_355.addFollower(TERMINAL_352);
    		TERMINAL_355.addFollower(TERMINAL_353);
    		TERMINAL_355.addFollower(TERMINAL_354);
    		TERMINAL_355.addFollower(TERMINAL_44);
    		TERMINAL_355.addFollower(TERMINAL_5);
    		TERMINAL_355.addFollower(TERMINAL_6);
    		TERMINAL_355.addFollower(TERMINAL_7);
    		TERMINAL_355.addFollower(TERMINAL_8);
    		TERMINAL_355.addFollower(TERMINAL_9);
    		TERMINAL_355.addFollower(TERMINAL_37);
    		TERMINAL_355.addFollower(TERMINAL_53);
    		TERMINAL_355.addFollower(TERMINAL_52);
    		TERMINAL_355.addFollower(TERMINAL_51);
    		TERMINAL_355.addFollower(TERMINAL_56);
    		TERMINAL_355.addFollower(TERMINAL_48);
    		TERMINAL_355.addFollower(TERMINAL_54);
    		TERMINAL_355.addFollower(TERMINAL_57);
    		TERMINAL_355.addFollower(TERMINAL_58);
    		TERMINAL_355.addFollower(TERMINAL_59);
    		TERMINAL_355.addFollower(TERMINAL_50);
    		TERMINAL_355.addFollower(TERMINAL_49);
    		TERMINAL_355.addFollower(TERMINAL_55);
    		TERMINAL_355.addFollower(TERMINAL_62);
    		TERMINAL_355.addFollower(TERMINAL_46);
    		TERMINAL_355.addFollower(TERMINAL_302);
    		TERMINAL_355.addFollower(TERMINAL_303);
    		TERMINAL_355.addFollower(TERMINAL_304);
    		TERMINAL_355.addFollower(TERMINAL_305);
    		TERMINAL_355.addFollower(TERMINAL_61);
    		TERMINAL_355.addFollower(TERMINAL_306);
    		TERMINAL_355.addFollower(TERMINAL_307);
    		TERMINAL_355.addFollower(TERMINAL_308);
    		TERMINAL_355.addFollower(TERMINAL_309);
    		TERMINAL_355.addFollower(TERMINAL_310);
    		TERMINAL_355.addFollower(TERMINAL_311);
    		TERMINAL_355.addFollower(TERMINAL_312);
    		TERMINAL_355.addFollower(TERMINAL_136);
    		TERMINAL_355.addFollower(TERMINAL_137);
    		TERMINAL_355.addFollower(TERMINAL_138);
    		TERMINAL_355.addFollower(TERMINAL_139);
    		TERMINAL_355.addFollower(TERMINAL_140);
    		TERMINAL_355.addFollower(TERMINAL_141);
    		TERMINAL_355.addFollower(TERMINAL_142);
    		TERMINAL_355.addFollower(TERMINAL_322);
    		TERMINAL_355.addFollower(TERMINAL_323);
    		TERMINAL_347.addFollower(TERMINAL_356);
    		TERMINAL_356.addFollower(TERMINAL_357);
    		TERMINAL_357.addFollower(TERMINAL_46);
    		TERMINAL_357.addFollower(TERMINAL_47);
    		TERMINAL_357.addFollower(TERMINAL_48);
    		TERMINAL_357.addFollower(TERMINAL_49);
    		TERMINAL_357.addFollower(TERMINAL_50);
    		TERMINAL_357.addFollower(TERMINAL_51);
    		TERMINAL_357.addFollower(TERMINAL_52);
    		TERMINAL_357.addFollower(TERMINAL_53);
    		TERMINAL_357.addFollower(TERMINAL_14);
    		TERMINAL_357.addFollower(TERMINAL_54);
    		TERMINAL_357.addFollower(TERMINAL_55);
    		TERMINAL_357.addFollower(TERMINAL_56);
    		TERMINAL_357.addFollower(TERMINAL_57);
    		TERMINAL_357.addFollower(TERMINAL_58);
    		TERMINAL_357.addFollower(TERMINAL_59);
    		TERMINAL_357.addFollower(TERMINAL_60);
    		TERMINAL_357.addFollower(TERMINAL_61);
    		TERMINAL_357.addFollower(TERMINAL_62);
    		TERMINAL_357.addFollower(TERMINAL_63);
    		TERMINAL_357.addFollower(TERMINAL_358);
    		TERMINAL_359.addFollower(TERMINAL_46);
    		TERMINAL_359.addFollower(TERMINAL_47);
    		TERMINAL_359.addFollower(TERMINAL_48);
    		TERMINAL_359.addFollower(TERMINAL_49);
    		TERMINAL_359.addFollower(TERMINAL_50);
    		TERMINAL_359.addFollower(TERMINAL_51);
    		TERMINAL_359.addFollower(TERMINAL_52);
    		TERMINAL_359.addFollower(TERMINAL_53);
    		TERMINAL_359.addFollower(TERMINAL_14);
    		TERMINAL_359.addFollower(TERMINAL_54);
    		TERMINAL_359.addFollower(TERMINAL_55);
    		TERMINAL_359.addFollower(TERMINAL_56);
    		TERMINAL_359.addFollower(TERMINAL_57);
    		TERMINAL_359.addFollower(TERMINAL_58);
    		TERMINAL_359.addFollower(TERMINAL_59);
    		TERMINAL_359.addFollower(TERMINAL_60);
    		TERMINAL_359.addFollower(TERMINAL_61);
    		TERMINAL_359.addFollower(TERMINAL_62);
    		TERMINAL_359.addFollower(TERMINAL_63);
    		TERMINAL_358.addFollower(TERMINAL_346);
    		TERMINAL_358.addFollower(TERMINAL_347);
    		TERMINAL_358.addFollower(TERMINAL_348);
    		TERMINAL_358.addFollower(TERMINAL_349);
    		TERMINAL_358.addFollower(TERMINAL_350);
    		TERMINAL_358.addFollower(TERMINAL_351);
    		TERMINAL_358.addFollower(TERMINAL_352);
    		TERMINAL_358.addFollower(TERMINAL_353);
    		TERMINAL_358.addFollower(TERMINAL_354);
    		TERMINAL_358.addFollower(TERMINAL_44);
    		TERMINAL_358.addFollower(TERMINAL_5);
    		TERMINAL_358.addFollower(TERMINAL_6);
    		TERMINAL_358.addFollower(TERMINAL_7);
    		TERMINAL_358.addFollower(TERMINAL_8);
    		TERMINAL_358.addFollower(TERMINAL_9);
    		TERMINAL_358.addFollower(TERMINAL_37);
    		TERMINAL_358.addFollower(TERMINAL_53);
    		TERMINAL_358.addFollower(TERMINAL_52);
    		TERMINAL_358.addFollower(TERMINAL_51);
    		TERMINAL_358.addFollower(TERMINAL_56);
    		TERMINAL_358.addFollower(TERMINAL_48);
    		TERMINAL_358.addFollower(TERMINAL_54);
    		TERMINAL_358.addFollower(TERMINAL_57);
    		TERMINAL_358.addFollower(TERMINAL_58);
    		TERMINAL_358.addFollower(TERMINAL_59);
    		TERMINAL_358.addFollower(TERMINAL_50);
    		TERMINAL_358.addFollower(TERMINAL_49);
    		TERMINAL_358.addFollower(TERMINAL_55);
    		TERMINAL_358.addFollower(TERMINAL_62);
    		TERMINAL_358.addFollower(TERMINAL_46);
    		TERMINAL_358.addFollower(TERMINAL_302);
    		TERMINAL_358.addFollower(TERMINAL_303);
    		TERMINAL_358.addFollower(TERMINAL_304);
    		TERMINAL_358.addFollower(TERMINAL_305);
    		TERMINAL_358.addFollower(TERMINAL_61);
    		TERMINAL_358.addFollower(TERMINAL_306);
    		TERMINAL_358.addFollower(TERMINAL_307);
    		TERMINAL_358.addFollower(TERMINAL_308);
    		TERMINAL_358.addFollower(TERMINAL_309);
    		TERMINAL_358.addFollower(TERMINAL_310);
    		TERMINAL_358.addFollower(TERMINAL_311);
    		TERMINAL_358.addFollower(TERMINAL_312);
    		TERMINAL_358.addFollower(TERMINAL_136);
    		TERMINAL_358.addFollower(TERMINAL_137);
    		TERMINAL_358.addFollower(TERMINAL_138);
    		TERMINAL_358.addFollower(TERMINAL_139);
    		TERMINAL_358.addFollower(TERMINAL_140);
    		TERMINAL_358.addFollower(TERMINAL_141);
    		TERMINAL_358.addFollower(TERMINAL_142);
    		TERMINAL_358.addFollower(TERMINAL_322);
    		TERMINAL_358.addFollower(TERMINAL_323);
    		TERMINAL_348.addFollower(TERMINAL_360);
    		TERMINAL_360.addFollower(TERMINAL_346);
    		TERMINAL_360.addFollower(TERMINAL_347);
    		TERMINAL_360.addFollower(TERMINAL_348);
    		TERMINAL_360.addFollower(TERMINAL_349);
    		TERMINAL_360.addFollower(TERMINAL_350);
    		TERMINAL_360.addFollower(TERMINAL_351);
    		TERMINAL_360.addFollower(TERMINAL_352);
    		TERMINAL_360.addFollower(TERMINAL_353);
    		TERMINAL_360.addFollower(TERMINAL_354);
    		TERMINAL_360.addFollower(TERMINAL_44);
    		TERMINAL_360.addFollower(TERMINAL_5);
    		TERMINAL_360.addFollower(TERMINAL_6);
    		TERMINAL_360.addFollower(TERMINAL_7);
    		TERMINAL_360.addFollower(TERMINAL_8);
    		TERMINAL_360.addFollower(TERMINAL_9);
    		TERMINAL_360.addFollower(TERMINAL_37);
    		TERMINAL_360.addFollower(TERMINAL_53);
    		TERMINAL_360.addFollower(TERMINAL_52);
    		TERMINAL_360.addFollower(TERMINAL_51);
    		TERMINAL_360.addFollower(TERMINAL_56);
    		TERMINAL_360.addFollower(TERMINAL_48);
    		TERMINAL_360.addFollower(TERMINAL_54);
    		TERMINAL_360.addFollower(TERMINAL_57);
    		TERMINAL_360.addFollower(TERMINAL_58);
    		TERMINAL_360.addFollower(TERMINAL_59);
    		TERMINAL_360.addFollower(TERMINAL_50);
    		TERMINAL_360.addFollower(TERMINAL_49);
    		TERMINAL_360.addFollower(TERMINAL_55);
    		TERMINAL_360.addFollower(TERMINAL_62);
    		TERMINAL_360.addFollower(TERMINAL_46);
    		TERMINAL_360.addFollower(TERMINAL_302);
    		TERMINAL_360.addFollower(TERMINAL_303);
    		TERMINAL_360.addFollower(TERMINAL_304);
    		TERMINAL_360.addFollower(TERMINAL_305);
    		TERMINAL_360.addFollower(TERMINAL_61);
    		TERMINAL_360.addFollower(TERMINAL_306);
    		TERMINAL_360.addFollower(TERMINAL_307);
    		TERMINAL_360.addFollower(TERMINAL_308);
    		TERMINAL_360.addFollower(TERMINAL_309);
    		TERMINAL_360.addFollower(TERMINAL_310);
    		TERMINAL_360.addFollower(TERMINAL_311);
    		TERMINAL_360.addFollower(TERMINAL_312);
    		TERMINAL_360.addFollower(TERMINAL_136);
    		TERMINAL_360.addFollower(TERMINAL_137);
    		TERMINAL_360.addFollower(TERMINAL_138);
    		TERMINAL_360.addFollower(TERMINAL_139);
    		TERMINAL_360.addFollower(TERMINAL_140);
    		TERMINAL_360.addFollower(TERMINAL_141);
    		TERMINAL_360.addFollower(TERMINAL_142);
    		TERMINAL_360.addFollower(TERMINAL_322);
    		TERMINAL_360.addFollower(TERMINAL_323);
    		TERMINAL_349.addFollower(TERMINAL_361);
    		TERMINAL_361.addFollower(TERMINAL_346);
    		TERMINAL_361.addFollower(TERMINAL_347);
    		TERMINAL_361.addFollower(TERMINAL_348);
    		TERMINAL_361.addFollower(TERMINAL_349);
    		TERMINAL_361.addFollower(TERMINAL_350);
    		TERMINAL_361.addFollower(TERMINAL_351);
    		TERMINAL_361.addFollower(TERMINAL_352);
    		TERMINAL_361.addFollower(TERMINAL_353);
    		TERMINAL_361.addFollower(TERMINAL_354);
    		TERMINAL_361.addFollower(TERMINAL_44);
    		TERMINAL_361.addFollower(TERMINAL_5);
    		TERMINAL_361.addFollower(TERMINAL_6);
    		TERMINAL_361.addFollower(TERMINAL_7);
    		TERMINAL_361.addFollower(TERMINAL_8);
    		TERMINAL_361.addFollower(TERMINAL_9);
    		TERMINAL_361.addFollower(TERMINAL_37);
    		TERMINAL_361.addFollower(TERMINAL_53);
    		TERMINAL_361.addFollower(TERMINAL_52);
    		TERMINAL_361.addFollower(TERMINAL_51);
    		TERMINAL_361.addFollower(TERMINAL_56);
    		TERMINAL_361.addFollower(TERMINAL_48);
    		TERMINAL_361.addFollower(TERMINAL_54);
    		TERMINAL_361.addFollower(TERMINAL_57);
    		TERMINAL_361.addFollower(TERMINAL_58);
    		TERMINAL_361.addFollower(TERMINAL_59);
    		TERMINAL_361.addFollower(TERMINAL_50);
    		TERMINAL_361.addFollower(TERMINAL_49);
    		TERMINAL_361.addFollower(TERMINAL_55);
    		TERMINAL_361.addFollower(TERMINAL_62);
    		TERMINAL_361.addFollower(TERMINAL_46);
    		TERMINAL_361.addFollower(TERMINAL_302);
    		TERMINAL_361.addFollower(TERMINAL_303);
    		TERMINAL_361.addFollower(TERMINAL_304);
    		TERMINAL_361.addFollower(TERMINAL_305);
    		TERMINAL_361.addFollower(TERMINAL_61);
    		TERMINAL_361.addFollower(TERMINAL_306);
    		TERMINAL_361.addFollower(TERMINAL_307);
    		TERMINAL_361.addFollower(TERMINAL_308);
    		TERMINAL_361.addFollower(TERMINAL_309);
    		TERMINAL_361.addFollower(TERMINAL_310);
    		TERMINAL_361.addFollower(TERMINAL_311);
    		TERMINAL_361.addFollower(TERMINAL_312);
    		TERMINAL_361.addFollower(TERMINAL_136);
    		TERMINAL_361.addFollower(TERMINAL_137);
    		TERMINAL_361.addFollower(TERMINAL_138);
    		TERMINAL_361.addFollower(TERMINAL_139);
    		TERMINAL_361.addFollower(TERMINAL_140);
    		TERMINAL_361.addFollower(TERMINAL_141);
    		TERMINAL_361.addFollower(TERMINAL_142);
    		TERMINAL_361.addFollower(TERMINAL_322);
    		TERMINAL_361.addFollower(TERMINAL_323);
    		TERMINAL_350.addFollower(TERMINAL_46);
    		TERMINAL_350.addFollower(TERMINAL_47);
    		TERMINAL_350.addFollower(TERMINAL_48);
    		TERMINAL_350.addFollower(TERMINAL_49);
    		TERMINAL_350.addFollower(TERMINAL_50);
    		TERMINAL_350.addFollower(TERMINAL_51);
    		TERMINAL_350.addFollower(TERMINAL_52);
    		TERMINAL_350.addFollower(TERMINAL_53);
    		TERMINAL_350.addFollower(TERMINAL_14);
    		TERMINAL_350.addFollower(TERMINAL_54);
    		TERMINAL_350.addFollower(TERMINAL_55);
    		TERMINAL_350.addFollower(TERMINAL_56);
    		TERMINAL_350.addFollower(TERMINAL_57);
    		TERMINAL_350.addFollower(TERMINAL_58);
    		TERMINAL_350.addFollower(TERMINAL_59);
    		TERMINAL_350.addFollower(TERMINAL_60);
    		TERMINAL_350.addFollower(TERMINAL_61);
    		TERMINAL_350.addFollower(TERMINAL_62);
    		TERMINAL_350.addFollower(TERMINAL_63);
    		TERMINAL_351.addFollower(TERMINAL_46);
    		TERMINAL_351.addFollower(TERMINAL_47);
    		TERMINAL_351.addFollower(TERMINAL_48);
    		TERMINAL_351.addFollower(TERMINAL_49);
    		TERMINAL_351.addFollower(TERMINAL_50);
    		TERMINAL_351.addFollower(TERMINAL_51);
    		TERMINAL_351.addFollower(TERMINAL_52);
    		TERMINAL_351.addFollower(TERMINAL_53);
    		TERMINAL_351.addFollower(TERMINAL_14);
    		TERMINAL_351.addFollower(TERMINAL_54);
    		TERMINAL_351.addFollower(TERMINAL_55);
    		TERMINAL_351.addFollower(TERMINAL_56);
    		TERMINAL_351.addFollower(TERMINAL_57);
    		TERMINAL_351.addFollower(TERMINAL_58);
    		TERMINAL_351.addFollower(TERMINAL_59);
    		TERMINAL_351.addFollower(TERMINAL_60);
    		TERMINAL_351.addFollower(TERMINAL_61);
    		TERMINAL_351.addFollower(TERMINAL_62);
    		TERMINAL_351.addFollower(TERMINAL_63);
    		TERMINAL_352.addFollower(TERMINAL_46);
    		TERMINAL_352.addFollower(TERMINAL_47);
    		TERMINAL_352.addFollower(TERMINAL_48);
    		TERMINAL_352.addFollower(TERMINAL_49);
    		TERMINAL_352.addFollower(TERMINAL_50);
    		TERMINAL_352.addFollower(TERMINAL_51);
    		TERMINAL_352.addFollower(TERMINAL_52);
    		TERMINAL_352.addFollower(TERMINAL_53);
    		TERMINAL_352.addFollower(TERMINAL_14);
    		TERMINAL_352.addFollower(TERMINAL_54);
    		TERMINAL_352.addFollower(TERMINAL_55);
    		TERMINAL_352.addFollower(TERMINAL_56);
    		TERMINAL_352.addFollower(TERMINAL_57);
    		TERMINAL_352.addFollower(TERMINAL_58);
    		TERMINAL_352.addFollower(TERMINAL_59);
    		TERMINAL_352.addFollower(TERMINAL_60);
    		TERMINAL_352.addFollower(TERMINAL_61);
    		TERMINAL_352.addFollower(TERMINAL_62);
    		TERMINAL_352.addFollower(TERMINAL_63);
    		TERMINAL_353.addFollower(TERMINAL_46);
    		TERMINAL_353.addFollower(TERMINAL_47);
    		TERMINAL_353.addFollower(TERMINAL_48);
    		TERMINAL_353.addFollower(TERMINAL_49);
    		TERMINAL_353.addFollower(TERMINAL_50);
    		TERMINAL_353.addFollower(TERMINAL_51);
    		TERMINAL_353.addFollower(TERMINAL_52);
    		TERMINAL_353.addFollower(TERMINAL_53);
    		TERMINAL_353.addFollower(TERMINAL_14);
    		TERMINAL_353.addFollower(TERMINAL_54);
    		TERMINAL_353.addFollower(TERMINAL_55);
    		TERMINAL_353.addFollower(TERMINAL_56);
    		TERMINAL_353.addFollower(TERMINAL_57);
    		TERMINAL_353.addFollower(TERMINAL_58);
    		TERMINAL_353.addFollower(TERMINAL_59);
    		TERMINAL_353.addFollower(TERMINAL_60);
    		TERMINAL_353.addFollower(TERMINAL_61);
    		TERMINAL_353.addFollower(TERMINAL_62);
    		TERMINAL_353.addFollower(TERMINAL_63);
    		TERMINAL_354.addFollower(TERMINAL_46);
    		TERMINAL_354.addFollower(TERMINAL_47);
    		TERMINAL_354.addFollower(TERMINAL_48);
    		TERMINAL_354.addFollower(TERMINAL_49);
    		TERMINAL_354.addFollower(TERMINAL_50);
    		TERMINAL_354.addFollower(TERMINAL_51);
    		TERMINAL_354.addFollower(TERMINAL_52);
    		TERMINAL_354.addFollower(TERMINAL_53);
    		TERMINAL_354.addFollower(TERMINAL_14);
    		TERMINAL_354.addFollower(TERMINAL_54);
    		TERMINAL_354.addFollower(TERMINAL_55);
    		TERMINAL_354.addFollower(TERMINAL_56);
    		TERMINAL_354.addFollower(TERMINAL_57);
    		TERMINAL_354.addFollower(TERMINAL_58);
    		TERMINAL_354.addFollower(TERMINAL_59);
    		TERMINAL_354.addFollower(TERMINAL_60);
    		TERMINAL_354.addFollower(TERMINAL_61);
    		TERMINAL_354.addFollower(TERMINAL_62);
    		TERMINAL_354.addFollower(TERMINAL_63);
    		TERMINAL_58.addFollower(TERMINAL_362);
    		TERMINAL_362.addFollower(TERMINAL_363);
    		TERMINAL_363.addFollower(TERMINAL_364);
    		TERMINAL_364.addFollower(TERMINAL_365);
    		TERMINAL_365.addFollower(TERMINAL_46);
    		TERMINAL_365.addFollower(TERMINAL_47);
    		TERMINAL_365.addFollower(TERMINAL_48);
    		TERMINAL_365.addFollower(TERMINAL_49);
    		TERMINAL_365.addFollower(TERMINAL_50);
    		TERMINAL_365.addFollower(TERMINAL_51);
    		TERMINAL_365.addFollower(TERMINAL_52);
    		TERMINAL_365.addFollower(TERMINAL_53);
    		TERMINAL_365.addFollower(TERMINAL_14);
    		TERMINAL_365.addFollower(TERMINAL_54);
    		TERMINAL_365.addFollower(TERMINAL_55);
    		TERMINAL_365.addFollower(TERMINAL_56);
    		TERMINAL_365.addFollower(TERMINAL_57);
    		TERMINAL_365.addFollower(TERMINAL_58);
    		TERMINAL_365.addFollower(TERMINAL_59);
    		TERMINAL_365.addFollower(TERMINAL_60);
    		TERMINAL_365.addFollower(TERMINAL_61);
    		TERMINAL_365.addFollower(TERMINAL_62);
    		TERMINAL_365.addFollower(TERMINAL_63);
    		TERMINAL_365.addFollower(TERMINAL_312);
    		TERMINAL_311.addFollower(TERMINAL_46);
    		TERMINAL_311.addFollower(TERMINAL_47);
    		TERMINAL_311.addFollower(TERMINAL_48);
    		TERMINAL_311.addFollower(TERMINAL_49);
    		TERMINAL_311.addFollower(TERMINAL_50);
    		TERMINAL_311.addFollower(TERMINAL_51);
    		TERMINAL_311.addFollower(TERMINAL_52);
    		TERMINAL_311.addFollower(TERMINAL_53);
    		TERMINAL_311.addFollower(TERMINAL_14);
    		TERMINAL_311.addFollower(TERMINAL_54);
    		TERMINAL_311.addFollower(TERMINAL_55);
    		TERMINAL_311.addFollower(TERMINAL_56);
    		TERMINAL_311.addFollower(TERMINAL_57);
    		TERMINAL_311.addFollower(TERMINAL_58);
    		TERMINAL_311.addFollower(TERMINAL_59);
    		TERMINAL_311.addFollower(TERMINAL_60);
    		TERMINAL_311.addFollower(TERMINAL_61);
    		TERMINAL_311.addFollower(TERMINAL_62);
    		TERMINAL_311.addFollower(TERMINAL_63);
    		TERMINAL_312.addFollower(TERMINAL_44);
    		TERMINAL_312.addFollower(TERMINAL_5);
    		TERMINAL_312.addFollower(TERMINAL_6);
    		TERMINAL_312.addFollower(TERMINAL_7);
    		TERMINAL_312.addFollower(TERMINAL_8);
    		TERMINAL_312.addFollower(TERMINAL_9);
    		TERMINAL_312.addFollower(TERMINAL_37);
    		TERMINAL_312.addFollower(TERMINAL_53);
    		TERMINAL_312.addFollower(TERMINAL_52);
    		TERMINAL_312.addFollower(TERMINAL_51);
    		TERMINAL_312.addFollower(TERMINAL_56);
    		TERMINAL_312.addFollower(TERMINAL_48);
    		TERMINAL_312.addFollower(TERMINAL_54);
    		TERMINAL_312.addFollower(TERMINAL_57);
    		TERMINAL_312.addFollower(TERMINAL_58);
    		TERMINAL_312.addFollower(TERMINAL_59);
    		TERMINAL_312.addFollower(TERMINAL_50);
    		TERMINAL_312.addFollower(TERMINAL_49);
    		TERMINAL_312.addFollower(TERMINAL_55);
    		TERMINAL_312.addFollower(TERMINAL_62);
    		TERMINAL_312.addFollower(TERMINAL_46);
    		TERMINAL_312.addFollower(TERMINAL_302);
    		TERMINAL_312.addFollower(TERMINAL_303);
    		TERMINAL_312.addFollower(TERMINAL_304);
    		TERMINAL_312.addFollower(TERMINAL_305);
    		TERMINAL_312.addFollower(TERMINAL_61);
    		TERMINAL_312.addFollower(TERMINAL_306);
    		TERMINAL_312.addFollower(TERMINAL_307);
    		TERMINAL_312.addFollower(TERMINAL_308);
    		TERMINAL_312.addFollower(TERMINAL_309);
    		TERMINAL_312.addFollower(TERMINAL_310);
    		TERMINAL_312.addFollower(TERMINAL_311);
    		TERMINAL_312.addFollower(TERMINAL_312);
    		TERMINAL_312.addFollower(TERMINAL_136);
    		TERMINAL_312.addFollower(TERMINAL_137);
    		TERMINAL_312.addFollower(TERMINAL_138);
    		TERMINAL_312.addFollower(TERMINAL_139);
    		TERMINAL_312.addFollower(TERMINAL_140);
    		TERMINAL_312.addFollower(TERMINAL_141);
    		TERMINAL_312.addFollower(TERMINAL_142);
    		TERMINAL_60.addFollower(TERMINAL_44);
    		TERMINAL_60.addFollower(TERMINAL_5);
    		TERMINAL_60.addFollower(TERMINAL_6);
    		TERMINAL_60.addFollower(TERMINAL_7);
    		TERMINAL_60.addFollower(TERMINAL_8);
    		TERMINAL_60.addFollower(TERMINAL_9);
    		TERMINAL_60.addFollower(TERMINAL_37);
    		TERMINAL_60.addFollower(TERMINAL_302);
    		TERMINAL_60.addFollower(TERMINAL_303);
    		TERMINAL_60.addFollower(TERMINAL_304);
    		TERMINAL_60.addFollower(TERMINAL_305);
    		TERMINAL_60.addFollower(TERMINAL_46);
    		TERMINAL_60.addFollower(TERMINAL_56);
    		TERMINAL_60.addFollower(TERMINAL_48);
    		TERMINAL_60.addFollower(TERMINAL_54);
    		TERMINAL_60.addFollower(TERMINAL_57);
    		TERMINAL_60.addFollower(TERMINAL_58);
    		TERMINAL_60.addFollower(TERMINAL_59);
    		TERMINAL_60.addFollower(TERMINAL_50);
    		TERMINAL_60.addFollower(TERMINAL_49);
    		TERMINAL_60.addFollower(TERMINAL_55);
    		TERMINAL_60.addFollower(TERMINAL_53);
    		TERMINAL_60.addFollower(TERMINAL_61);
    		TERMINAL_60.addFollower(TERMINAL_306);
    		TERMINAL_60.addFollower(TERMINAL_307);
    		TERMINAL_60.addFollower(TERMINAL_308);
    		TERMINAL_60.addFollower(TERMINAL_309);
    		TERMINAL_60.addFollower(TERMINAL_310);
    		TERMINAL_60.addFollower(TERMINAL_311);
    		TERMINAL_60.addFollower(TERMINAL_312);
    		TERMINAL_60.addFollower(TERMINAL_136);
    		TERMINAL_60.addFollower(TERMINAL_137);
    		TERMINAL_60.addFollower(TERMINAL_138);
    		TERMINAL_60.addFollower(TERMINAL_139);
    		TERMINAL_60.addFollower(TERMINAL_140);
    		TERMINAL_60.addFollower(TERMINAL_141);
    		TERMINAL_60.addFollower(TERMINAL_142);
    		TERMINAL_61.addFollower(TERMINAL_44);
    		TERMINAL_61.addFollower(TERMINAL_5);
    		TERMINAL_61.addFollower(TERMINAL_6);
    		TERMINAL_61.addFollower(TERMINAL_7);
    		TERMINAL_61.addFollower(TERMINAL_8);
    		TERMINAL_61.addFollower(TERMINAL_9);
    		TERMINAL_61.addFollower(TERMINAL_37);
    		TERMINAL_61.addFollower(TERMINAL_302);
    		TERMINAL_61.addFollower(TERMINAL_303);
    		TERMINAL_61.addFollower(TERMINAL_304);
    		TERMINAL_61.addFollower(TERMINAL_305);
    		TERMINAL_61.addFollower(TERMINAL_46);
    		TERMINAL_61.addFollower(TERMINAL_56);
    		TERMINAL_61.addFollower(TERMINAL_48);
    		TERMINAL_61.addFollower(TERMINAL_54);
    		TERMINAL_61.addFollower(TERMINAL_57);
    		TERMINAL_61.addFollower(TERMINAL_58);
    		TERMINAL_61.addFollower(TERMINAL_59);
    		TERMINAL_61.addFollower(TERMINAL_50);
    		TERMINAL_61.addFollower(TERMINAL_49);
    		TERMINAL_61.addFollower(TERMINAL_55);
    		TERMINAL_61.addFollower(TERMINAL_53);
    		TERMINAL_61.addFollower(TERMINAL_61);
    		TERMINAL_61.addFollower(TERMINAL_306);
    		TERMINAL_61.addFollower(TERMINAL_307);
    		TERMINAL_61.addFollower(TERMINAL_308);
    		TERMINAL_61.addFollower(TERMINAL_309);
    		TERMINAL_61.addFollower(TERMINAL_310);
    		TERMINAL_61.addFollower(TERMINAL_311);
    		TERMINAL_61.addFollower(TERMINAL_312);
    		TERMINAL_61.addFollower(TERMINAL_136);
    		TERMINAL_61.addFollower(TERMINAL_137);
    		TERMINAL_61.addFollower(TERMINAL_138);
    		TERMINAL_61.addFollower(TERMINAL_139);
    		TERMINAL_61.addFollower(TERMINAL_140);
    		TERMINAL_61.addFollower(TERMINAL_141);
    		TERMINAL_61.addFollower(TERMINAL_142);
    		TERMINAL_62.addFollower(TERMINAL_366);
    		TERMINAL_366.addFollower(TERMINAL_131);
    		TERMINAL_366.addFollower(TERMINAL_132);
    		TERMINAL_366.addFollower(TERMINAL_133);
    		TERMINAL_366.addFollower(TERMINAL_134);
    		TERMINAL_366.addFollower(TERMINAL_135);
    		TERMINAL_131.addFollower(TERMINAL_367);
    		TERMINAL_367.addFollower(TERMINAL_368);
    		TERMINAL_368.addFollower(TERMINAL_131);
    		TERMINAL_368.addFollower(TERMINAL_132);
    		TERMINAL_368.addFollower(TERMINAL_133);
    		TERMINAL_368.addFollower(TERMINAL_134);
    		TERMINAL_368.addFollower(TERMINAL_135);
    		TERMINAL_132.addFollower(TERMINAL_369);
    		TERMINAL_369.addFollower(TERMINAL_160);
    		TERMINAL_133.addFollower(TERMINAL_370);
    		TERMINAL_370.addFollower(TERMINAL_78);
    		TERMINAL_370.addFollower(TERMINAL_20);
    		TERMINAL_370.addFollower(TERMINAL_21);
    		TERMINAL_370.addFollower(TERMINAL_150);
    		TERMINAL_370.addFollower(TERMINAL_151);
    		TERMINAL_370.addFollower(TERMINAL_22);
    		TERMINAL_370.addFollower(TERMINAL_23);
    		TERMINAL_370.addFollower(TERMINAL_190);
    		TERMINAL_370.addFollower(TERMINAL_191);
    		TERMINAL_370.addFollower(TERMINAL_192);
    		TERMINAL_370.addFollower(TERMINAL_193);
    		TERMINAL_370.addFollower(TERMINAL_194);
    		TERMINAL_134.addFollower(TERMINAL_371);
    		TERMINAL_371.addFollower(TERMINAL_372);
    		TERMINAL_372.addFollower(TERMINAL_131);
    		TERMINAL_372.addFollower(TERMINAL_132);
    		TERMINAL_372.addFollower(TERMINAL_133);
    		TERMINAL_372.addFollower(TERMINAL_134);
    		TERMINAL_372.addFollower(TERMINAL_135);
    		TERMINAL_135.addFollower(TERMINAL_44);
    		TERMINAL_135.addFollower(TERMINAL_5);
    		TERMINAL_135.addFollower(TERMINAL_6);
    		TERMINAL_135.addFollower(TERMINAL_7);
    		TERMINAL_135.addFollower(TERMINAL_8);
    		TERMINAL_135.addFollower(TERMINAL_9);
    		TERMINAL_135.addFollower(TERMINAL_37);
    		TERMINAL_135.addFollower(TERMINAL_53);
    		TERMINAL_135.addFollower(TERMINAL_52);
    		TERMINAL_135.addFollower(TERMINAL_51);
    		TERMINAL_135.addFollower(TERMINAL_56);
    		TERMINAL_135.addFollower(TERMINAL_48);
    		TERMINAL_135.addFollower(TERMINAL_54);
    		TERMINAL_135.addFollower(TERMINAL_57);
    		TERMINAL_135.addFollower(TERMINAL_58);
    		TERMINAL_135.addFollower(TERMINAL_59);
    		TERMINAL_135.addFollower(TERMINAL_50);
    		TERMINAL_135.addFollower(TERMINAL_49);
    		TERMINAL_135.addFollower(TERMINAL_55);
    		TERMINAL_135.addFollower(TERMINAL_62);
    		TERMINAL_135.addFollower(TERMINAL_46);
    		TERMINAL_135.addFollower(TERMINAL_302);
    		TERMINAL_135.addFollower(TERMINAL_303);
    		TERMINAL_135.addFollower(TERMINAL_304);
    		TERMINAL_135.addFollower(TERMINAL_305);
    		TERMINAL_135.addFollower(TERMINAL_61);
    		TERMINAL_135.addFollower(TERMINAL_306);
    		TERMINAL_135.addFollower(TERMINAL_307);
    		TERMINAL_135.addFollower(TERMINAL_308);
    		TERMINAL_135.addFollower(TERMINAL_309);
    		TERMINAL_135.addFollower(TERMINAL_310);
    		TERMINAL_135.addFollower(TERMINAL_311);
    		TERMINAL_135.addFollower(TERMINAL_312);
    		TERMINAL_135.addFollower(TERMINAL_136);
    		TERMINAL_135.addFollower(TERMINAL_137);
    		TERMINAL_135.addFollower(TERMINAL_138);
    		TERMINAL_135.addFollower(TERMINAL_139);
    		TERMINAL_135.addFollower(TERMINAL_140);
    		TERMINAL_135.addFollower(TERMINAL_141);
    		TERMINAL_135.addFollower(TERMINAL_142);
    		TERMINAL_63.addFollower(TERMINAL_373);
    		TERMINAL_373.addFollower(TERMINAL_136);
    		TERMINAL_373.addFollower(TERMINAL_137);
    		TERMINAL_373.addFollower(TERMINAL_138);
    		TERMINAL_373.addFollower(TERMINAL_139);
    		TERMINAL_373.addFollower(TERMINAL_140);
    		TERMINAL_373.addFollower(TERMINAL_141);
    		TERMINAL_373.addFollower(TERMINAL_142);
    		TERMINAL_136.addFollower(TERMINAL_374);
    		TERMINAL_374.addFollower(TERMINAL_375);
    		TERMINAL_375.addFollower(TERMINAL_136);
    		TERMINAL_375.addFollower(TERMINAL_137);
    		TERMINAL_375.addFollower(TERMINAL_138);
    		TERMINAL_375.addFollower(TERMINAL_139);
    		TERMINAL_375.addFollower(TERMINAL_140);
    		TERMINAL_375.addFollower(TERMINAL_141);
    		TERMINAL_375.addFollower(TERMINAL_142);
    		TERMINAL_137.addFollower(TERMINAL_376);
    		TERMINAL_376.addFollower(TERMINAL_160);
    		TERMINAL_138.addFollower(TERMINAL_377);
    		TERMINAL_377.addFollower(TERMINAL_78);
    		TERMINAL_377.addFollower(TERMINAL_20);
    		TERMINAL_377.addFollower(TERMINAL_21);
    		TERMINAL_377.addFollower(TERMINAL_150);
    		TERMINAL_377.addFollower(TERMINAL_151);
    		TERMINAL_377.addFollower(TERMINAL_22);
    		TERMINAL_377.addFollower(TERMINAL_23);
    		TERMINAL_377.addFollower(TERMINAL_190);
    		TERMINAL_377.addFollower(TERMINAL_191);
    		TERMINAL_377.addFollower(TERMINAL_192);
    		TERMINAL_377.addFollower(TERMINAL_193);
    		TERMINAL_377.addFollower(TERMINAL_194);
    		TERMINAL_139.addFollower(TERMINAL_378);
    		TERMINAL_378.addFollower(TERMINAL_379);
    		TERMINAL_379.addFollower(TERMINAL_136);
    		TERMINAL_379.addFollower(TERMINAL_137);
    		TERMINAL_379.addFollower(TERMINAL_138);
    		TERMINAL_379.addFollower(TERMINAL_139);
    		TERMINAL_379.addFollower(TERMINAL_140);
    		TERMINAL_379.addFollower(TERMINAL_141);
    		TERMINAL_379.addFollower(TERMINAL_142);
    		TERMINAL_140.addFollower(TERMINAL_380);
    		TERMINAL_380.addFollower(TERMINAL_381);
    		TERMINAL_141.addFollower(TERMINAL_382);
    		TERMINAL_382.addFollower(TERMINAL_46);
    		TERMINAL_382.addFollower(TERMINAL_47);
    		TERMINAL_382.addFollower(TERMINAL_48);
    		TERMINAL_382.addFollower(TERMINAL_49);
    		TERMINAL_382.addFollower(TERMINAL_50);
    		TERMINAL_382.addFollower(TERMINAL_51);
    		TERMINAL_382.addFollower(TERMINAL_52);
    		TERMINAL_382.addFollower(TERMINAL_53);
    		TERMINAL_382.addFollower(TERMINAL_14);
    		TERMINAL_382.addFollower(TERMINAL_54);
    		TERMINAL_382.addFollower(TERMINAL_55);
    		TERMINAL_382.addFollower(TERMINAL_56);
    		TERMINAL_382.addFollower(TERMINAL_57);
    		TERMINAL_382.addFollower(TERMINAL_58);
    		TERMINAL_382.addFollower(TERMINAL_59);
    		TERMINAL_382.addFollower(TERMINAL_60);
    		TERMINAL_382.addFollower(TERMINAL_61);
    		TERMINAL_382.addFollower(TERMINAL_62);
    		TERMINAL_382.addFollower(TERMINAL_63);
    		TERMINAL_142.addFollower(TERMINAL_44);
    		TERMINAL_142.addFollower(TERMINAL_5);
    		TERMINAL_142.addFollower(TERMINAL_6);
    		TERMINAL_142.addFollower(TERMINAL_7);
    		TERMINAL_142.addFollower(TERMINAL_8);
    		TERMINAL_142.addFollower(TERMINAL_9);
    		TERMINAL_142.addFollower(TERMINAL_37);
    		TERMINAL_142.addFollower(TERMINAL_302);
    		TERMINAL_142.addFollower(TERMINAL_303);
    		TERMINAL_142.addFollower(TERMINAL_304);
    		TERMINAL_142.addFollower(TERMINAL_305);
    		TERMINAL_142.addFollower(TERMINAL_46);
    		TERMINAL_142.addFollower(TERMINAL_56);
    		TERMINAL_142.addFollower(TERMINAL_48);
    		TERMINAL_142.addFollower(TERMINAL_54);
    		TERMINAL_142.addFollower(TERMINAL_57);
    		TERMINAL_142.addFollower(TERMINAL_58);
    		TERMINAL_142.addFollower(TERMINAL_59);
    		TERMINAL_142.addFollower(TERMINAL_50);
    		TERMINAL_142.addFollower(TERMINAL_49);
    		TERMINAL_142.addFollower(TERMINAL_55);
    		TERMINAL_142.addFollower(TERMINAL_53);
    		TERMINAL_142.addFollower(TERMINAL_61);
    		TERMINAL_142.addFollower(TERMINAL_306);
    		TERMINAL_142.addFollower(TERMINAL_307);
    		TERMINAL_142.addFollower(TERMINAL_308);
    		TERMINAL_142.addFollower(TERMINAL_309);
    		TERMINAL_142.addFollower(TERMINAL_310);
    		TERMINAL_142.addFollower(TERMINAL_311);
    		TERMINAL_142.addFollower(TERMINAL_312);
    		TERMINAL_142.addFollower(TERMINAL_136);
    		TERMINAL_142.addFollower(TERMINAL_137);
    		TERMINAL_142.addFollower(TERMINAL_138);
    		TERMINAL_142.addFollower(TERMINAL_139);
    		TERMINAL_142.addFollower(TERMINAL_140);
    		TERMINAL_142.addFollower(TERMINAL_141);
    		TERMINAL_142.addFollower(TERMINAL_142);
    		TERMINAL_381.addFollower(TERMINAL_383);
    		TERMINAL_383.addFollower(TERMINAL_238);
    		TERMINAL_383.addFollower(TERMINAL_239);
    		TERMINAL_383.addFollower(TERMINAL_240);
    		TERMINAL_383.addFollower(TERMINAL_241);
    		TERMINAL_383.addFollower(TERMINAL_242);
    		TERMINAL_238.addFollower(TERMINAL_384);
    		TERMINAL_384.addFollower(TERMINAL_385);
    		TERMINAL_385.addFollower(TERMINAL_238);
    		TERMINAL_385.addFollower(TERMINAL_239);
    		TERMINAL_385.addFollower(TERMINAL_240);
    		TERMINAL_385.addFollower(TERMINAL_241);
    		TERMINAL_385.addFollower(TERMINAL_242);
    		TERMINAL_239.addFollower(TERMINAL_386);
    		TERMINAL_386.addFollower(TERMINAL_160);
    		TERMINAL_240.addFollower(TERMINAL_387);
    		TERMINAL_387.addFollower(TERMINAL_388);
    		TERMINAL_388.addFollower(TERMINAL_238);
    		TERMINAL_388.addFollower(TERMINAL_239);
    		TERMINAL_388.addFollower(TERMINAL_240);
    		TERMINAL_388.addFollower(TERMINAL_241);
    		TERMINAL_388.addFollower(TERMINAL_242);
    		TERMINAL_241.addFollower(TERMINAL_389);
    		TERMINAL_389.addFollower(TERMINAL_14);
    		TERMINAL_242.addFollower(TERMINAL_136);
    		TERMINAL_242.addFollower(TERMINAL_137);
    		TERMINAL_242.addFollower(TERMINAL_138);
    		TERMINAL_242.addFollower(TERMINAL_139);
    		TERMINAL_242.addFollower(TERMINAL_140);
    		TERMINAL_242.addFollower(TERMINAL_141);
    		TERMINAL_242.addFollower(TERMINAL_142);
    	}
    	// wire the terminals
    	static {
    		wire0();
    		wire1();
    		wire2();
    		wire3();
    	}



    // $ANTLR start "start"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4394:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;
        int start_StartIndex = input.index();
        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Model c1 = null;

        org.kermeta.language.structure.Property c2 = null;

        org.kermeta.language.structure.Operation c3 = null;

        org.kermeta.language.structure.Parameter c4 = null;

        org.kermeta.language.structure.MultiplicityElement c5 = null;

        org.kermeta.language.behavior.TypeReference c6 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4395:1: ( (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4396:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF
            {
            if ( state.backtracking==0 ) {

              		// follow set for start rule(s)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
              		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4415:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )
            int alt1=7;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4416:3: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4417:8: c1= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_start96);
                    c1=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4418:8: c2= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_start110);
                    c2=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4419:8: c3= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124);
                    c3=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4420:8: c4= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138);
                    c4=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4421:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152);
                    c5=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4422:8: c6= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166);
                    c6=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; 
                    }

                    }
                    break;

            }

            match(input,EOF,FOLLOW_EOF_in_start173); if (state.failed) return element;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "start"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelingUnit"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4427:1: parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null] : ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ;
    public final org.kermeta.language.structure.ModelingUnit parse_org_kermeta_language_structure_ModelingUnit() throws RecognitionException {
        org.kermeta.language.structure.ModelingUnit element =  null;
        int parse_org_kermeta_language_structure_ModelingUnit_StartIndex = input.index();
        org.kermeta.language.structure.Require a0_0 = null;

        org.kermeta.language.structure.Using a1_0 = null;

        org.kermeta.language.structure.Package a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4430:1: ( ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4431:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4431:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==15) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4432:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4432:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4433:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4433:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4434:5: a0_0= parse_org_kermeta_language_structure_Require
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211);
            	    a0_0=parse_org_kermeta_language_structure_Require();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a0_0 != null) {
            	      						if (a0_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
            	      							completedElement(a0_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a0_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4468:2: ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==14) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4469:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4469:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4470:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4470:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4471:5: a1_0= parse_org_kermeta_language_structure_Using
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267);
            	    a1_0=parse_org_kermeta_language_structure_Using();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a1_0 != null) {
            	      						if (a1_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
            	      							completedElement(a1_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a1_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4503:2: ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==IDENTIFIER||LA4_0==16) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4504:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4504:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4505:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4505:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4506:5: a2_0= parse_org_kermeta_language_structure_Package
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323);
            	    a2_0=parse_org_kermeta_language_structure_Package();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a2_0 != null) {
            	      						if (a2_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
            	      							completedElement(a2_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a2_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_kermeta_language_structure_ModelingUnit_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelingUnit"


    // $ANTLR start "parse_org_kermeta_language_structure_Using"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4538:1: parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null] : a0= 'using' ;
    public final org.kermeta.language.structure.Using parse_org_kermeta_language_structure_Using() throws RecognitionException {
        org.kermeta.language.structure.Using element =  null;
        int parse_org_kermeta_language_structure_Using_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4541:1: (a0= 'using' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4542:2: a0= 'using'
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_kermeta_language_structure_Using379); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 7));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_kermeta_language_structure_Using_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Using"


    // $ANTLR start "parse_org_kermeta_language_structure_Require"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4558:1: parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null] : a0= 'require' ;
    public final org.kermeta.language.structure.Require parse_org_kermeta_language_structure_Require() throws RecognitionException {
        org.kermeta.language.structure.Require element =  null;
        int parse_org_kermeta_language_structure_Require_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4561:1: (a0= 'require' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4562:2: a0= 'require'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_kermeta_language_structure_Require408); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 8));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_kermeta_language_structure_Require_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Require"


    // $ANTLR start "parse_org_kermeta_language_structure_Package"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4579:1: parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null] : (a0= 'package' (a1= IDENTIFIER ) ( (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' ) )* | (a5= IDENTIFIER ) ) ( ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}' | a10= '{' ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )* a12= '}' ) ;
    public final org.kermeta.language.structure.Package parse_org_kermeta_language_structure_Package() throws RecognitionException {
        org.kermeta.language.structure.Package element =  null;
        int parse_org_kermeta_language_structure_Package_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a5=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a12=null;
        org.kermeta.language.structure.Package a3_0 = null;

        org.kermeta.language.structure.TypeDefinition a6_0 = null;

        org.kermeta.language.structure.TypeDefinition a8_0 = null;

        org.kermeta.language.structure.Package a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4582:1: ( (a0= 'package' (a1= IDENTIFIER ) ( (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' ) )* | (a5= IDENTIFIER ) ) ( ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}' | a10= '{' ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )* a12= '}' ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4583:2: (a0= 'package' (a1= IDENTIFIER ) ( (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' ) )* | (a5= IDENTIFIER ) ) ( ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}' | a10= '{' ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )* a12= '}' )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4583:2: (a0= 'package' (a1= IDENTIFIER ) ( (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' ) )* | (a5= IDENTIFIER ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==16) ) {
                alt6=1;
            }
            else if ( (LA6_0==IDENTIFIER) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4584:3: a0= 'package' (a1= IDENTIFIER ) ( (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' ) )*
                    {
                    a0=(Token)match(input,16,FOLLOW_16_in_parse_org_kermeta_language_structure_Package441); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 9));
                      		
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4596:3: (a1= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4597:4: a1= IDENTIFIER
                    {
                    a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package463); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      				}
                      				if (a1 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 10));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 10));
                      		
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4640:3: ( (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==17) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4641:4: (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4641:4: (a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::' )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4642:5: a2= '::' (a3_0= parse_org_kermeta_language_structure_Package ) a4= '::'
                    	    {
                    	    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package501); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					collectHiddenTokens(element);
                    	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	      				
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 11));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 11));
                    	      				
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4655:5: (a3_0= parse_org_kermeta_language_structure_Package )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4656:6: a3_0= parse_org_kermeta_language_structure_Package
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package531);
                    	    a3_0=parse_org_kermeta_language_structure_Package();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						}
                    	      						if (a3_0 != null) {
                    	      							if (a3_0 != null) {
                    	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a3_0);
                    	      								completedElement(a3_0);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos(a3_0, element); 						}
                    	      					
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 12));
                    	      				
                    	    }
                    	    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package564); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					collectHiddenTokens(element);
                    	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	      				
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 13));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 13));
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 14));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 14));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4719:6: (a5= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4719:6: (a5= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4720:4: a5= IDENTIFIER
                    {
                    a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package616); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      				}
                      				if (a5 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                      				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 15));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 15));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 16));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 16));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4778:2: ( ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}' | a10= '{' ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )* a12= '}' )
            int alt10=3;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4779:3: ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4779:3: ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    int cnt7=0;
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==IDENTIFIER) ) {
                            int LA7_2 = input.LA(2);

                            if ( (synpred12_Kermeta()) ) {
                                alt7=1;
                            }


                        }
                        else if ( (LA7_0==PRIMITIVE_TYPE||(LA7_0>=20 && LA7_0<=22)||LA7_0==35||LA7_0==42||LA7_0==53) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4780:4: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4780:4: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4781:5: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4781:5: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4782:6: a6_0= parse_org_kermeta_language_structure_TypeDefinition
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package672);
                    	    a6_0=parse_org_kermeta_language_structure_TypeDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						}
                    	      						if (a6_0 != null) {
                    	      							if (a6_0 != null) {
                    	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a6_0);
                    	      								completedElement(a6_0);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos(a6_0, element); 						}
                    	      					
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 17));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 17));
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt7 >= 1 ) break loop7;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(7, input);
                                throw eee;
                        }
                        cnt7++;
                    } while (true);

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 18));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 18));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4833:6: a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}'
                    {
                    a7=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package729); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 19));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 19));
                      		
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4853:3: ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                    int cnt8=0;
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( ((LA8_0>=IDENTIFIER && LA8_0<=PRIMITIVE_TYPE)||(LA8_0>=20 && LA8_0<=22)||LA8_0==35||LA8_0==42||LA8_0==53) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4854:4: ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4854:4: ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4855:5: (a8_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4855:5: (a8_0= parse_org_kermeta_language_structure_TypeDefinition )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4856:6: a8_0= parse_org_kermeta_language_structure_TypeDefinition
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package764);
                    	    a8_0=parse_org_kermeta_language_structure_TypeDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						}
                    	      						if (a8_0 != null) {
                    	      							if (a8_0 != null) {
                    	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a8_0);
                    	      								completedElement(a8_0);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos(a8_0, element); 						}
                    	      					
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 20));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 20));
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt8 >= 1 ) break loop8;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(8, input);
                                throw eee;
                        }
                        cnt8++;
                    } while (true);

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 21));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 21));
                      		
                    }
                    a9=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package815); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 22));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 22));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 22));
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4917:6: a10= '{' ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )* a12= '}'
                    {
                    a10=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package838); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 23));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 23));
                      		
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4931:3: ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==IDENTIFIER||LA9_0==16) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4932:4: ( (a11_0= parse_org_kermeta_language_structure_Package ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4932:4: ( (a11_0= parse_org_kermeta_language_structure_Package ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4933:5: (a11_0= parse_org_kermeta_language_structure_Package )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4933:5: (a11_0= parse_org_kermeta_language_structure_Package )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4934:6: a11_0= parse_org_kermeta_language_structure_Package
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package873);
                    	    a11_0=parse_org_kermeta_language_structure_Package();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      						}
                    	      						if (a11_0 != null) {
                    	      							if (a11_0 != null) {
                    	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a11_0);
                    	      								completedElement(a11_0);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos(a11_0, element); 						}
                    	      					
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      					// expected elements (follow set)
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 24));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
                    	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 24));
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 25));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 25));
                      		
                    }
                    a12=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package924); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 26));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 26));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 27));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 27));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 27));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_kermeta_language_structure_Package_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Package"


    // $ANTLR start "parse_org_kermeta_language_structure_ClassDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4990:1: parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null] : ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' ;
    public final org.kermeta.language.structure.ClassDefinition parse_org_kermeta_language_structure_ClassDefinition() throws RecognitionException {
        org.kermeta.language.structure.ClassDefinition element =  null;
        int parse_org_kermeta_language_structure_ClassDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a12=null;
        org.kermeta.language.structure.Constraint a9_0 = null;

        org.kermeta.language.structure.Property a10_0 = null;

        org.kermeta.language.structure.Operation a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4993:1: ( ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4994:2: ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4994:2: ( (a0= 'aspect' ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==20) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4995:3: (a0= 'aspect' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4995:3: (a0= 'aspect' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4996:4: a0= 'aspect'
                    {
                    a0=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition972); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 28));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 28));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 29));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 29));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5017:2: ( (a1= 'abstract' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==21) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5018:3: (a1= 'abstract' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5018:3: (a1= 'abstract' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5019:4: a1= 'abstract'
                    {
                    a1=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1014); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 30));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 31));
              	
            }
            a2=(Token)match(input,22,FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1047); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 32));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5050:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5051:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1065); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 33));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 33));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5084:2: ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==23) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5085:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5085:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5086:4: a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    {
                    a4=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1095); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 34));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5098:4: (a5= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5099:5: a5= IDENTIFIER
                    {
                    a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1121); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      					}
                      					if (a5 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 35));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 35));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5136:4: ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==24) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5137:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5137:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5138:6: a6= ',' (a7= IDENTIFIER )
                    	    {
                    	    a6=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1167); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 36));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5150:6: (a7= IDENTIFIER )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5151:7: a7= IDENTIFIER
                    	    {
                    	    a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1201); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      							}
                    	      							if (a7 != null) {
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	      								tokenResolver.setOptions(getOptions());
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                    	      								java.lang.Object resolvedObject = result.getResolvedToken();
                    	      								if (resolvedObject == null) {
                    	      									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                    	      								}
                    	      								String resolved = (String) resolvedObject;
                    	      								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	      								collectHiddenTokens(element);
                    	      								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                    	      								if (proxy != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                    	      									completedElement(proxy);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                    	      							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 37));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 37));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 38));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 38));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 39));
              	
            }
            a8=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ClassDefinition1282); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 40));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 40));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 40));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 40));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 40));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 40));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5220:2: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==IDENTIFIER) ) {
                    int LA15_2 = input.LA(2);

                    if ( (LA15_2==IDENTIFIER) ) {
                        int LA15_3 = input.LA(3);

                        if ( (synpred21_Kermeta()) ) {
                            alt15=1;
                        }


                    }


                }


                switch (alt15) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5221:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5221:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5222:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5222:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5223:5: a9_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1311);
            	    a9_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a9_0 != null) {
            	      						if (a9_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
            	      							completedElement(a9_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a9_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 41));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 41));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 41));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 41));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 41));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 41));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 42));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 42));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 42));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 42));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 42));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 42));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5261:2: ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( ((LA16_0>=25 && LA16_0<=26)||LA16_0==28) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5262:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5262:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5263:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5263:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5264:5: a10_0= parse_org_kermeta_language_structure_Property
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1367);
            	    a10_0=parse_org_kermeta_language_structure_Property();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a10_0 != null) {
            	      						if (a10_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
            	      							completedElement(a10_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a10_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 43));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 43));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 43));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 43));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 43));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 43));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 44));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 44));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 44));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 44));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 44));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 44));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5302:2: ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==IDENTIFIER||LA17_0==31) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5303:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5303:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5304:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5304:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5305:5: a11_0= parse_org_kermeta_language_structure_Operation
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1423);
            	    a11_0=parse_org_kermeta_language_structure_Operation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a11_0 != null) {
            	      						if (a11_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
            	      							completedElement(a11_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a11_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 45));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 45));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 45));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 46));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 46));
              	
            }
            a12=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ClassDefinition1464); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 47));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 47));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_kermeta_language_structure_ClassDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ClassDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Property"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5361:1: parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null] : ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? );
    public final org.kermeta.language.structure.Property parse_org_kermeta_language_structure_Property() throws RecognitionException {
        org.kermeta.language.structure.Property element =  null;
        int parse_org_kermeta_language_structure_Property_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        org.kermeta.language.behavior.Expression a10_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5364:1: ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( ((LA23_0>=25 && LA23_0<=26)) ) {
                alt23=1;
            }
            else if ( (LA23_0==28) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5365:2: (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5365:2: (a0= 'attribute' | a1= 'reference' )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==25) ) {
                        alt18=1;
                    }
                    else if ( (LA18_0==26) ) {
                        alt18=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5366:3: a0= 'attribute'
                            {
                            a0=(Token)match(input,25,FOLLOW_25_in_parse_org_kermeta_language_structure_Property1497); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 48));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5379:6: a1= 'reference'
                            {
                            a1=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_Property1520); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 49));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 50));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5397:2: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5398:3: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1548); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a2 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 51));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 51));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 51));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 51));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 51));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 51));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 51));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5436:2: ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( (LA19_0==27) ) {
                        alt19=1;
                    }
                    switch (alt19) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5437:3: (a3= ':' (a4= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5437:3: (a3= ':' (a4= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5438:4: a3= ':' (a4= IDENTIFIER )
                            {
                            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1578); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 52));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5450:4: (a4= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5451:5: a4= IDENTIFIER
                            {
                            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1604); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a4 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 53));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 53));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 53));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 53));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 53));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 53));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 54));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 54));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 54));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 54));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 54));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 54));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5505:4: a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    {
                    a5=(Token)match(input,28,FOLLOW_28_in_parse_org_kermeta_language_structure_Property1654); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 55));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5517:2: (a6= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5518:3: a6= IDENTIFIER
                    {
                    a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1672); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a6 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 56));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 56));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5558:2: ( (a7= ':' (a8= IDENTIFIER ) ) )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==27) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5559:3: (a7= ':' (a8= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5559:3: (a7= ':' (a8= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5560:4: a7= ':' (a8= IDENTIFIER )
                            {
                            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1702); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 57));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5572:4: (a8= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5573:5: a8= IDENTIFIER
                            {
                            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1728); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a8 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 58));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 58));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 59));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5630:2: ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==29) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5631:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5631:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5632:4: a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property1783); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 60));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 60));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5662:4: (a10_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5663:5: a10_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1809);
                            a10_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a10_0 != null) {
                              						if (a10_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a10_0);
                              							completedElement(a10_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a10_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 61));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 62));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5703:2: ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==30) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5704:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5704:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5705:4: a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a11=(Token)match(input,30,FOLLOW_30_in_parse_org_kermeta_language_structure_Property1859); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 63));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 63));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5735:4: (a12_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5736:5: a12_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1885);
                            a12_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a12_0 != null) {
                              						if (a12_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a12_0);
                              							completedElement(a12_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a12_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 64));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 64));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 64));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 64));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 64));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 64));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 65));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 65));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 65));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 65));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 65));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 65));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_kermeta_language_structure_Property_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Property"


    // $ANTLR start "parse_org_kermeta_language_structure_Operation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5776:1: parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null] : ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) ;
    public final org.kermeta.language.structure.Operation parse_org_kermeta_language_structure_Operation() throws RecognitionException {
        org.kermeta.language.structure.Operation element =  null;
        int parse_org_kermeta_language_structure_Operation_StartIndex = input.index();
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        org.kermeta.language.structure.Constraint a0_0 = null;

        org.kermeta.language.structure.Constraint a1_0 = null;

        org.kermeta.language.structure.Parameter a5_0 = null;

        org.kermeta.language.structure.Parameter a9_0 = null;

        org.kermeta.language.behavior.Block a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5779:1: ( ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5780:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5780:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==IDENTIFIER) ) {
                    int LA24_1 = input.LA(2);

                    if ( (LA24_1==IDENTIFIER) ) {
                        int LA24_3 = input.LA(3);

                        if ( (synpred30_Kermeta()) ) {
                            alt24=1;
                        }


                    }


                }


                switch (alt24) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5781:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5781:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5782:4: a0_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation1950);
            	    a0_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a0_0 != null) {
            	      					if (a0_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
            	      						completedElement(a0_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a0_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 66));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 66));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5805:2: ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==IDENTIFIER) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5806:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5807:4: a1_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation1985);
            	    a1_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a1_0 != null) {
            	      					if (a1_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
            	      						completedElement(a1_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a1_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 67));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 67));
              	
            }
            a2=(Token)match(input,31,FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2011); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 68));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5842:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5843:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2029); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 69));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2050); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 70));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 70));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5888:2: ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==IDENTIFIER) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5889:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5890:4: (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5890:4: (a5_0= parse_org_kermeta_language_structure_Parameter )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5891:5: a5_0= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2079);
                    a5_0=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 71));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 71));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 71));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5914:4: ( (a6= ':' (a7= IDENTIFIER ) ) )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==27) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5915:5: (a6= ':' (a7= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5915:5: (a6= ':' (a7= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5916:6: a6= ':' (a7= IDENTIFIER )
                            {
                            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2120); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 72));
                              					
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5928:6: (a7= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5929:7: a7= IDENTIFIER
                            {
                            a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2154); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              							if (terminateParsing) {
                              								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              							}
                              							if (element == null) {
                              								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              							}
                              							if (a7 != null) {
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              								tokenResolver.setOptions(getOptions());
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                              								java.lang.Object resolvedObject = result.getResolvedToken();
                              								if (resolvedObject == null) {
                              									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                              								}
                              								String resolved = (String) resolvedObject;
                              								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              								collectHiddenTokens(element);
                              								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                              								if (proxy != null) {
                              									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                              									completedElement(proxy);
                              								}
                              								collectHiddenTokens(element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                              							}
                              						
                            }

                            }

                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 73));
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 73));
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 74));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 74));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5974:4: ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==24) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5975:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5975:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5976:6: a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    {
                    	    a8=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_Operation2235); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 75));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5988:6: (a9_0= parse_org_kermeta_language_structure_Parameter )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5989:7: a9_0= parse_org_kermeta_language_structure_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2269);
                    	    a9_0=parse_org_kermeta_language_structure_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      							}
                    	      							if (a9_0 != null) {
                    	      								if (a9_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
                    	      									completedElement(a9_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a9_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 76));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 76));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 76));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6012:6: ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    int alt27=2;
                    	    int LA27_0 = input.LA(1);

                    	    if ( (LA27_0==27) ) {
                    	        alt27=1;
                    	    }
                    	    switch (alt27) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6013:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            {
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6013:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6014:8: a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2324); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              								if (element == null) {
                    	              									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              								}
                    	              								collectHiddenTokens(element);
                    	              								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 77));
                    	              							
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6026:8: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6027:9: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2366); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              									if (terminateParsing) {
                    	              										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              									}
                    	              									if (element == null) {
                    	              										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              									}
                    	              									if (a11 != null) {
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              										tokenResolver.setOptions(getOptions());
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                    	              										java.lang.Object resolvedObject = result.getResolvedToken();
                    	              										if (resolvedObject == null) {
                    	              											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              										}
                    	              										String resolved = (String) resolvedObject;
                    	              										org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              										collectHiddenTokens(element);
                    	              										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                    	              										if (proxy != null) {
                    	              											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                    	              											completedElement(proxy);
                    	              										}
                    	              										collectHiddenTokens(element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
                    	              									}
                    	              								
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 78));
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 78));
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 79));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 79));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 80));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 80));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 81));
              	
            }
            a12=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2492); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 82));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 82));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6100:2: ( (a13= ':' (a14= IDENTIFIER ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==27) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6101:3: (a13= ':' (a14= IDENTIFIER ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6101:3: (a13= ':' (a14= IDENTIFIER ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6102:4: a13= ':' (a14= IDENTIFIER )
                    {
                    a13=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2515); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 83));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6114:4: (a14= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6115:5: a14= IDENTIFIER
                    {
                    a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2541); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a14 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 84));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 85));
              	
            }
            a15=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2587); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 86));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 86));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6171:2: ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==69) ) {
                alt31=1;
            }
            else if ( (LA31_0==21) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6172:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6172:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6173:4: a16_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2610);
                    a16_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				if (a16_0 != null) {
                      					if (a16_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
                      						completedElement(a16_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a16_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 87));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 87));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 87));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6197:6: a17= 'abstract'
                    {
                    a17=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Operation2639); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 88));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 88));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 88));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 89));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 89));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 89));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_kermeta_language_structure_Operation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Operation"


    // $ANTLR start "parse_org_kermeta_language_structure_Parameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6221:1: parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null] : (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Parameter parse_org_kermeta_language_structure_Parameter() throws RecognitionException {
        org.kermeta.language.structure.Parameter element =  null;
        int parse_org_kermeta_language_structure_Parameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6224:1: ( (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6225:2: (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6225:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6226:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2682); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 90));
              	
            }
            a1=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Parameter2703); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 91));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6270:2: (a2= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6271:3: a2= IDENTIFIER
            {
            a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2721); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a2 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 92));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 92));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_kermeta_language_structure_Parameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Parameter"


    // $ANTLR start "parse_org_kermeta_language_structure_Class"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6311:1: parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Class parse_org_kermeta_language_structure_Class() throws RecognitionException {
        org.kermeta.language.structure.Class element =  null;
        int parse_org_kermeta_language_structure_Class_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6314:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6315:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6315:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6316:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class2761); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 93));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 93));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_kermeta_language_structure_Class_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Class"


    // $ANTLR start "parse_org_kermeta_language_structure_Enumeration"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6417:1: parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null] : a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' ;
    public final org.kermeta.language.structure.Enumeration parse_org_kermeta_language_structure_Enumeration() throws RecognitionException {
        org.kermeta.language.structure.Enumeration element =  null;
        int parse_org_kermeta_language_structure_Enumeration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        org.kermeta.language.structure.EnumerationLiteral a3_0 = null;

        org.kermeta.language.structure.EnumerationLiteral a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6420:1: (a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6421:2: a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration2797); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 94));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6433:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6434:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration2815); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 95));
              	
            }
            a2=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Enumeration2836); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 96));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6478:2: ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6479:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6479:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6480:4: a3_0= parse_org_kermeta_language_structure_EnumerationLiteral
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2859);
            a3_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              				if (terminateParsing) {
              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              				}
              				if (element == null) {
              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              				}
              				if (a3_0 != null) {
              					if (a3_0 != null) {
              						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
              						completedElement(a3_0);
              					}
              					collectHiddenTokens(element);
              					copyLocalizationInfos(a3_0, element); 				}
              			
            }

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 97));
              		
            }
            a4=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2882); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			collectHiddenTokens(element);
              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              		
            }
            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 98));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 98));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6514:3: ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==IDENTIFIER) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6515:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6515:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6516:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';'
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6516:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6517:6: a5_0= parse_org_kermeta_language_structure_EnumerationLiteral
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2917);
            	    a5_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      						if (terminateParsing) {
            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      						}
            	      						if (element == null) {
            	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      						}
            	      						if (a5_0 != null) {
            	      							if (a5_0 != null) {
            	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
            	      								completedElement(a5_0);
            	      							}
            	      							collectHiddenTokens(element);
            	      							copyLocalizationInfos(a5_0, element); 						}
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 99));
            	      				
            	    }
            	    a6=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2950); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 100));
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 100));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 101));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 101));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 102));
              	
            }
            a7=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Enumeration2998); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 103));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 103));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_kermeta_language_structure_Enumeration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Enumeration"


    // $ANTLR start "parse_org_kermeta_language_structure_EnumerationLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6653:1: parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.EnumerationLiteral parse_org_kermeta_language_structure_EnumerationLiteral() throws RecognitionException {
        org.kermeta.language.structure.EnumerationLiteral element =  null;
        int parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6656:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6657:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6657:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6658:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3031); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 104));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_EnumerationLiteral"


    // $ANTLR start "parse_org_kermeta_language_structure_Constraint"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6692:1: parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null] : (a0= IDENTIFIER ) (a1= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Constraint parse_org_kermeta_language_structure_Constraint() throws RecognitionException {
        org.kermeta.language.structure.Constraint element =  null;
        int parse_org_kermeta_language_structure_Constraint_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6695:1: ( (a0= IDENTIFIER ) (a1= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6696:2: (a0= IDENTIFIER ) (a1= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6696:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6697:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3071); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 105));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6729:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6730:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3096); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 106));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 106));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_kermeta_language_structure_Constraint_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Constraint"


    // $ANTLR start "parse_org_kermeta_language_structure_PrimitiveType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6769:1: parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null] : (a0= PRIMITIVE_TYPE ) ;
    public final org.kermeta.language.structure.PrimitiveType parse_org_kermeta_language_structure_PrimitiveType() throws RecognitionException {
        org.kermeta.language.structure.PrimitiveType element =  null;
        int parse_org_kermeta_language_structure_PrimitiveType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6772:1: ( (a0= PRIMITIVE_TYPE ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6773:2: (a0= PRIMITIVE_TYPE )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6773:2: (a0= PRIMITIVE_TYPE )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6774:3: a0= PRIMITIVE_TYPE
            {
            a0=(Token)match(input,PRIMITIVE_TYPE,FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3136); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("PRIMITIVE_TYPE");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 107));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 107));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_kermeta_language_structure_PrimitiveType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_PrimitiveType"


    // $ANTLR start "parse_org_kermeta_language_structure_UnresolvedType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6882:1: parse_org_kermeta_language_structure_UnresolvedType returns [org.kermeta.language.structure.UnresolvedType element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.UnresolvedType parse_org_kermeta_language_structure_UnresolvedType() throws RecognitionException {
        org.kermeta.language.structure.UnresolvedType element =  null;
        int parse_org_kermeta_language_structure_UnresolvedType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6885:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6886:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6886:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6887:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3176); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUnresolvedType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 108));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 108));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_kermeta_language_structure_UnresolvedType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_UnresolvedType"


    // $ANTLR start "parse_org_kermeta_language_structure_VoidType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6984:1: parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null] : a0= 'Void' ;
    public final org.kermeta.language.structure.VoidType parse_org_kermeta_language_structure_VoidType() throws RecognitionException {
        org.kermeta.language.structure.VoidType element =  null;
        int parse_org_kermeta_language_structure_VoidType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6987:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6988:2: a0= 'Void'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_structure_VoidType3212); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 109));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 109));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_kermeta_language_structure_VoidType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VoidType"


    // $ANTLR start "parse_org_kermeta_language_structure_Object"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7065:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );
    public final org.kermeta.language.structure.Object parse_org_kermeta_language_structure_Object() throws RecognitionException {
        org.kermeta.language.structure.Object element =  null;
        int parse_org_kermeta_language_structure_Object_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Using c1 = null;

        org.kermeta.language.structure.Require c2 = null;

        org.kermeta.language.structure.Package c3 = null;

        org.kermeta.language.structure.ClassDefinition c4 = null;

        org.kermeta.language.structure.Property c5 = null;

        org.kermeta.language.structure.Operation c6 = null;

        org.kermeta.language.structure.Parameter c7 = null;

        org.kermeta.language.structure.Class c8 = null;

        org.kermeta.language.structure.Enumeration c9 = null;

        org.kermeta.language.structure.EnumerationLiteral c10 = null;

        org.kermeta.language.structure.Constraint c11 = null;

        org.kermeta.language.structure.PrimitiveType c12 = null;

        org.kermeta.language.structure.UnresolvedType c13 = null;

        org.kermeta.language.structure.VoidType c14 = null;

        org.kermeta.language.structure.Model c15 = null;

        org.kermeta.language.structure.ModelType c16 = null;

        org.kermeta.language.structure.TypeVariableBinding c17 = null;

        org.kermeta.language.structure.MultiplicityElement c18 = null;

        org.kermeta.language.structure.TypeDefinition c19 = null;

        org.kermeta.language.structure.Tag c20 = null;

        org.kermeta.language.structure.ObjectTypeVariable c21 = null;

        org.kermeta.language.structure.ModelTypeVariable c22 = null;

        org.kermeta.language.structure.VirtualType c23 = null;

        org.kermeta.language.structure.ProductType c24 = null;

        org.kermeta.language.structure.FunctionType c25 = null;

        org.kermeta.language.behavior.Block c26 = null;

        org.kermeta.language.behavior.Rescue c27 = null;

        org.kermeta.language.behavior.TypeReference c28 = null;

        org.kermeta.language.behavior.Raise c29 = null;

        org.kermeta.language.behavior.BooleanLiteral c30 = null;

        org.kermeta.language.behavior.IntegerLiteral c31 = null;

        org.kermeta.language.behavior.StringLiteral c32 = null;

        org.kermeta.language.behavior.Conditional c33 = null;

        org.kermeta.language.behavior.Loop c34 = null;

        org.kermeta.language.behavior.VariableDecl c35 = null;

        org.kermeta.language.behavior.TypeLiteral c36 = null;

        org.kermeta.language.behavior.CallResult c37 = null;

        org.kermeta.language.behavior.CallSuperOperation c38 = null;

        org.kermeta.language.behavior.Assignment c39 = null;

        org.kermeta.language.behavior.CallVariable c40 = null;

        org.kermeta.language.behavior.SelfExpression c41 = null;

        org.kermeta.language.behavior.CallFeature c42 = null;

        org.kermeta.language.behavior.JavaStaticCall c43 = null;

        org.kermeta.language.behavior.VoidLiteral c44 = null;

        org.kermeta.language.behavior.CallValue c45 = null;

        org.kermeta.language.behavior.EmptyExpression c46 = null;

        org.kermeta.language.behavior.LambdaExpression c47 = null;

        org.kermeta.language.behavior.LambdaParameter c48 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7068:1: (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter )
            int alt35=50;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7069:2: a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
                    {
                    a0=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Object3241); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 110));
                      	
                    }
                    a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Object3255); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 111));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 111));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 111));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7095:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( ((LA34_0>=39 && LA34_0<=40)) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7096:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7096:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    int alt33=2;
                    	    int LA33_0 = input.LA(1);

                    	    if ( (LA33_0==39) ) {
                    	        alt33=1;
                    	    }
                    	    else if ( (LA33_0==40) ) {
                    	        alt33=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 33, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt33) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7097:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Object3278); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 112));
                    	              			
                    	            }
                    	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Object3298); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 113));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7121:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7122:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3324); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 114));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 114));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 114));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7161:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Object3365); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 115));
                    	              			
                    	            }
                    	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Object3385); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 116));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7185:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7186:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3411);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 117));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 117));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 117));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 118));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 118));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 118));
                      	
                    }
                    a8=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Object3452); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7231:2: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3471);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7232:4: c1= parse_org_kermeta_language_structure_Using
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3481);
                    c1=parse_org_kermeta_language_structure_Using();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7233:4: c2= parse_org_kermeta_language_structure_Require
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3491);
                    c2=parse_org_kermeta_language_structure_Require();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7234:4: c3= parse_org_kermeta_language_structure_Package
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3501);
                    c3=parse_org_kermeta_language_structure_Package();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7235:4: c4= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3511);
                    c4=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7236:4: c5= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3521);
                    c5=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7237:4: c6= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3531);
                    c6=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7238:4: c7= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3541);
                    c7=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7239:4: c8= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3551);
                    c8=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7240:4: c9= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3561);
                    c9=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7241:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3571);
                    c10=parse_org_kermeta_language_structure_EnumerationLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7242:4: c11= parse_org_kermeta_language_structure_Constraint
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3581);
                    c11=parse_org_kermeta_language_structure_Constraint();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7243:4: c12= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3591);
                    c12=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7244:4: c13= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object3601);
                    c13=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7245:4: c14= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3611);
                    c14=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7246:4: c15= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3621);
                    c15=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7247:4: c16= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3631);
                    c16=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7248:4: c17= parse_org_kermeta_language_structure_TypeVariableBinding
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3641);
                    c17=parse_org_kermeta_language_structure_TypeVariableBinding();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7249:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3651);
                    c18=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 21 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7250:4: c19= parse_org_kermeta_language_structure_TypeDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3661);
                    c19=parse_org_kermeta_language_structure_TypeDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 22 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7251:4: c20= parse_org_kermeta_language_structure_Tag
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3671);
                    c20=parse_org_kermeta_language_structure_Tag();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c20; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 23 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7252:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3681);
                    c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c21; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 24 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7253:4: c22= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3691);
                    c22=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c22; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 25 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7254:4: c23= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3701);
                    c23=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c23; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 26 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7255:4: c24= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3711);
                    c24=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c24; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 27 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7256:4: c25= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3721);
                    c25=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c25; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 28 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7257:4: c26= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3731);
                    c26=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c26; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 29 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7258:4: c27= parse_org_kermeta_language_behavior_Rescue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3741);
                    c27=parse_org_kermeta_language_behavior_Rescue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c27; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 30 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7259:4: c28= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object3751);
                    c28=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c28; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 31 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7260:4: c29= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object3761);
                    c29=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c29; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 32 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7261:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object3771);
                    c30=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c30; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 33 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7262:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object3781);
                    c31=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c31; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 34 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7263:4: c32= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object3791);
                    c32=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c32; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 35 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7264:4: c33= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object3801);
                    c33=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c33; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 36 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7265:4: c34= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object3811);
                    c34=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c34; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 37 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7266:4: c35= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object3821);
                    c35=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c35; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 38 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7267:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object3831);
                    c36=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c36; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 39 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7268:4: c37= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object3841);
                    c37=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c37; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 40 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7269:4: c38= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object3851);
                    c38=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c38; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 41 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7270:4: c39= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object3861);
                    c39=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c39; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 42 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7271:4: c40= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object3871);
                    c40=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c40; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 43 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7272:4: c41= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object3881);
                    c41=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c41; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 44 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7273:4: c42= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object3891);
                    c42=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c42; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 45 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7274:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object3901);
                    c43=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c43; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 46 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7275:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object3911);
                    c44=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c44; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 47 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7276:4: c45= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object3921);
                    c45=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c45; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 48 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7277:4: c46= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object3931);
                    c46=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c46; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 49 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7278:4: c47= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object3941);
                    c47=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c47; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 50 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7279:4: c48= parse_org_kermeta_language_behavior_LambdaParameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object3951);
                    c48=parse_org_kermeta_language_behavior_LambdaParameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c48; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_kermeta_language_structure_Object_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Object"


    // $ANTLR start "parse_org_kermeta_language_structure_Model"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7283:1: parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null] : a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' ;
    public final org.kermeta.language.structure.Model parse_org_kermeta_language_structure_Model() throws RecognitionException {
        org.kermeta.language.structure.Model element =  null;
        int parse_org_kermeta_language_structure_Model_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7286:1: (a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7287:2: a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_Model3976); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 120));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Model3990); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 121));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 121));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7313:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( ((LA37_0>=39 && LA37_0<=40)) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7314:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7314:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    int alt36=2;
            	    int LA36_0 = input.LA(1);

            	    if ( (LA36_0==39) ) {
            	        alt36=1;
            	    }
            	    else if ( (LA36_0==40) ) {
            	        alt36=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 36, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt36) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7315:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Model4013); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 122));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Model4033); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 123));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7339:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7340:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4059); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 124));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 124));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 124));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Model4100); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 125));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Model4120); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 126));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7403:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7404:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4146);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 127));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 127));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 127));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 128));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 128));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 128));
              	
            }
            a8=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Model4187); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_kermeta_language_structure_Model_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Model"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7449:1: parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null] : ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' ;
    public final org.kermeta.language.structure.ModelType parse_org_kermeta_language_structure_ModelType() throws RecognitionException {
        org.kermeta.language.structure.ModelType element =  null;
        int parse_org_kermeta_language_structure_ModelType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        org.kermeta.language.structure.Tag a8_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7452:1: ( ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7453:2: ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7453:2: ( (a0= IDENTIFIER ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==IDENTIFIER) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7454:3: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7454:3: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7455:4: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4225); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
                      				}
                      				if (a0 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 130));
              	
            }
            a1=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4255); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 131));
              	
            }
            a2=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ModelType4269); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 132));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 132));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 132));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 132));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 132));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 132));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7517:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( ((LA40_0>=39 && LA40_0<=40)||(LA40_0>=43 && LA40_0<=45)) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7518:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7518:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    int alt39=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt39=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt39=2;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt39=3;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt39=4;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt39=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 39, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt39) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7519:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
            	            {
            	            a3=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4292); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 133));
            	              			
            	            }
            	            a4=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4312); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 134));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7543:4: (a5= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7544:5: a5= IDENTIFIER
            	            {
            	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4338); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a5 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 135));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7586:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a6=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ModelType4379); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 136));
            	              			
            	            }
            	            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4399); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 137));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7610:4: (a8_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7611:5: a8_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4425);
            	            a8_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 138));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 138));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 138));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 138));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 138));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 138));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7638:8: a9= 'typeContainer' a10= ':' (a11= IDENTIFIER )
            	            {
            	            a9=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4461); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 139));
            	              			
            	            }
            	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4481); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 140));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7662:4: (a11= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7663:5: a11= IDENTIFIER
            	            {
            	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4507); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a11 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 141));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 141));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 141));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 141));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 141));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 141));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7705:8: a12= 'name' a13= ':' (a14= IDENTIFIER )
            	            {
            	            a12=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4548); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 142));
            	              			
            	            }
            	            a13=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4568); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 143));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7729:4: (a14= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7730:5: a14= IDENTIFIER
            	            {
            	            a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4594); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a14 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 144));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 144));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 144));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 144));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 144));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 144));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7768:8: a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER )
            	            {
            	            a15=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4635); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 145));
            	              			
            	            }
            	            a16=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4655); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 146));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7792:4: (a17= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7793:5: a17= IDENTIFIER
            	            {
            	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4681); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a17 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 147));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 147));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 147));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 147));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 147));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 147));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 148));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 148));
              	
            }
            a18=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ModelType4727); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 149));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 149));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_kermeta_language_structure_ModelType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelType"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeVariableBinding"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7934:1: parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null] : a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.TypeVariableBinding parse_org_kermeta_language_structure_TypeVariableBinding() throws RecognitionException {
        org.kermeta.language.structure.TypeVariableBinding element =  null;
        int parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7937:1: (a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7938:2: a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding4756); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 150));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_TypeVariableBinding4770); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 151));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 151));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 151));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 151));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 151));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 151));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7967:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=39 && LA42_0<=40)||(LA42_0>=47 && LA42_0<=49)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7968:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7968:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt41=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt41=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt41=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt41=3;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt41=4;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt41=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 41, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt41) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7969:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding4793); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 152));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4813); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 153));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7993:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7994:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding4839); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 154));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 154));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 154));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 154));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 154));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 154));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8036:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_TypeVariableBinding4880); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 155));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4900); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 156));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8060:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8061:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding4926);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 157));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 157));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 157));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 157));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 157));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 157));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8088:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding4962); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 158));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4982); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 159));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 159));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8123:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8124:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5008);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 160));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 160));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 160));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 160));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 160));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 160));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8151:8: a11= 'variable' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5044); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 161));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5064); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 162));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8175:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8176:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5090); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ObjectTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 163));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 163));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 163));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 163));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 163));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 163));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8218:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5131); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 164));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5151); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 165));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8242:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8243:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5177); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 166));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 166));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 166));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 166));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 166));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 166));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 167));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 167));
              	
            }
            a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_TypeVariableBinding5223); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 168));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 168));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeVariableBinding"


    // $ANTLR start "parse_org_kermeta_language_structure_MultiplicityElement"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8319:1: parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null] : ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference );
    public final org.kermeta.language.structure.MultiplicityElement parse_org_kermeta_language_structure_MultiplicityElement() throws RecognitionException {
        org.kermeta.language.structure.MultiplicityElement element =  null;
        int parse_org_kermeta_language_structure_MultiplicityElement_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        org.kermeta.language.structure.Tag a9_0 = null;

        org.kermeta.language.structure.Type a12_0 = null;

        org.kermeta.language.structure.Property c0 = null;

        org.kermeta.language.structure.Operation c1 = null;

        org.kermeta.language.structure.Parameter c2 = null;

        org.kermeta.language.behavior.TypeReference c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8322:1: ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference )
            int alt47=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                switch ( input.LA(2) ) {
                case IDENTIFIER:
                    {
                    int LA47_5 = input.LA(3);

                    if ( (LA47_5==IDENTIFIER||LA47_5==31) ) {
                        alt47=3;
                    }
                    else if ( (LA47_5==50) ) {
                        alt47=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    alt47=1;
                    }
                    break;
                case 27:
                    {
                    alt47=4;
                    }
                    break;
                case EOF:
                    {
                    alt47=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;
                }

                }
                break;
            case 50:
                {
                alt47=1;
                }
                break;
            case 25:
            case 26:
            case 28:
                {
                alt47=2;
                }
                break;
            case 31:
                {
                alt47=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8323:2: ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8323:2: ( (a0= IDENTIFIER ) )?
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==IDENTIFIER) ) {
                        int LA43_1 = input.LA(2);

                        if ( (synpred103_Kermeta()) ) {
                            alt43=1;
                        }
                    }
                    switch (alt43) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8324:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8324:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8325:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5261); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 169));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 169));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8359:2: ( (a1= IDENTIFIER ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==IDENTIFIER) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8360:3: (a1= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8360:3: (a1= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8361:4: a1= IDENTIFIER
                            {
                            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5300); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a1 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 170));
                      	
                    }
                    a2=(Token)match(input,50,FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5330); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 171));
                      	
                    }
                    a3=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_MultiplicityElement5344); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 172));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 172));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8425:2: ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )*
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( ((LA46_0>=39 && LA46_0<=40)||LA46_0==44||LA46_0==47||LA46_0==49||(LA46_0>=51 && LA46_0<=52)) ) {
                            alt46=1;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8426:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8426:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    int alt45=7;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt45=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt45=2;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt45=3;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt45=4;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt45=5;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt45=6;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt45=7;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 45, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt45) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8427:4: a4= 'tag' a5= ':' (a6= IDENTIFIER )
                    	            {
                    	            a4=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5367); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 173));
                    	              			
                    	            }
                    	            a5=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5387); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 174));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8451:4: (a6= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8452:5: a6= IDENTIFIER
                    	            {
                    	            a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5413); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a6 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 175));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 175));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8496:8: a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a7=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_MultiplicityElement5454); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 176));
                    	              			
                    	            }
                    	            a8=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5474); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 177));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8520:4: (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8521:5: a9_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5500);
                    	            a9_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a9_0 != null) {
                    	              						if (a9_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
                    	              							completedElement(a9_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a9_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 178));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 178));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8550:8: a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a10=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_MultiplicityElement5536); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 179));
                    	              			
                    	            }
                    	            a11=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5556); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 180));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 180));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8585:4: (a12_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8586:5: a12_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5582);
                    	            a12_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a12_0 != null) {
                    	              						if (a12_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
                    	              							completedElement(a12_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a12_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 181));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 181));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8615:8: a13= 'name' a14= ':' (a15= IDENTIFIER )
                    	            {
                    	            a13=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_MultiplicityElement5618); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 182));
                    	              			
                    	            }
                    	            a14=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5638); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 183));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8639:4: (a15= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8640:5: a15= IDENTIFIER
                    	            {
                    	            a15=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5664); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a15 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 184));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 184));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8680:8: a16= 'type' a17= ':' (a18= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5705); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 185));
                    	              			
                    	            }
                    	            a17=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5725); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 186));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8704:4: (a18= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8705:5: a18= IDENTIFIER
                    	            {
                    	            a18=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5751); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a18 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 187));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 187));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8749:8: a19= 'lower' a20= ':' (a21= INTEGER )
                    	            {
                    	            a19=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement5792); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 188));
                    	              			
                    	            }
                    	            a20=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5812); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 189));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8773:4: (a21= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8774:5: a21= INTEGER
                    	            {
                    	            a21=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5838); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a21 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 190));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 190));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8814:8: a22= 'upper' a23= ':' (a24= INTEGER )
                    	            {
                    	            a22=(Token)match(input,52,FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement5879); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 191));
                    	              			
                    	            }
                    	            a23=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5899); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 192));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8838:4: (a24= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8839:5: a24= INTEGER
                    	            {
                    	            a24=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5925); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a24 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 193));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 193));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 194));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 194));
                      	
                    }
                    a25=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_MultiplicityElement5971); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8905:2: c0= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement5990);
                    c0=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8906:4: c1= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6000);
                    c1=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8907:4: c2= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6010);
                    c2=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8908:4: c3= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6020);
                    c3=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_kermeta_language_structure_MultiplicityElement_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_MultiplicityElement"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8912:1: parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null] : ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType );
    public final org.kermeta.language.structure.TypeDefinition parse_org_kermeta_language_structure_TypeDefinition() throws RecognitionException {
        org.kermeta.language.structure.TypeDefinition element =  null;
        int parse_org_kermeta_language_structure_TypeDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        org.kermeta.language.structure.Tag a8_0 = null;

        org.kermeta.language.structure.ClassDefinition c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.ModelType c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8915:1: ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType )
            int alt51=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA51_1 = input.LA(2);

                if ( (LA51_1==42) ) {
                    alt51=5;
                }
                else if ( (LA51_1==53) ) {
                    alt51=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 1, input);

                    throw nvae;
                }
                }
                break;
            case 53:
                {
                alt51=1;
                }
                break;
            case 20:
            case 21:
            case 22:
                {
                alt51=2;
                }
                break;
            case 35:
                {
                alt51=3;
                }
                break;
            case PRIMITIVE_TYPE:
                {
                alt51=4;
                }
                break;
            case 42:
                {
                alt51=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8916:2: ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8916:2: ( (a0= IDENTIFIER ) )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==IDENTIFIER) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8917:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8917:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8918:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6054); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 196));
                      	
                    }
                    a1=(Token)match(input,53,FOLLOW_53_in_parse_org_kermeta_language_structure_TypeDefinition6084); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 197));
                      	
                    }
                    a2=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_TypeDefinition6098); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 198));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 198));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 198));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 198));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8978:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( ((LA50_0>=39 && LA50_0<=40)||LA50_0==44) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8979:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8979:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    int alt49=3;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt49=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt49=2;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt49=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 49, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt49) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8980:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
                    	            {
                    	            a3=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6121); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 199));
                    	              			
                    	            }
                    	            a4=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6141); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 200));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9004:4: (a5= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9005:5: a5= IDENTIFIER
                    	            {
                    	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6167); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a5 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 201));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9045:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a6=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_TypeDefinition6208); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 202));
                    	              			
                    	            }
                    	            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6228); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 203));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9069:4: (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9070:5: a8_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6254);
                    	            a8_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a8_0 != null) {
                    	              						if (a8_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
                    	              							completedElement(a8_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a8_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 204));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 204));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 204));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 204));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9095:8: a9= 'name' a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a9=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_TypeDefinition6290); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 205));
                    	              			
                    	            }
                    	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6310); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 206));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9119:4: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9120:5: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6336); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a11 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 207));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 207));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 207));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 207));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 208));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 208));
                      	
                    }
                    a12=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_TypeDefinition6382); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 209));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 209));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9189:2: c0= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6401);
                    c0=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9190:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6411);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9191:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6421);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9192:4: c3= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6431);
                    c3=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_kermeta_language_structure_TypeDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Tag"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9196:1: parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null] : a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.Tag parse_org_kermeta_language_structure_Tag() throws RecognitionException {
        org.kermeta.language.structure.Tag element =  null;
        int parse_org_kermeta_language_structure_Tag_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9199:1: (a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9200:2: a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_org_kermeta_language_structure_Tag6456); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 210));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Tag6470); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 211));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 211));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9229:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( ((LA53_0>=39 && LA53_0<=40)||LA53_0==44||(LA53_0>=55 && LA53_0<=56)) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9230:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9230:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    int alt52=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt52=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt52=2;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt52=3;
            	        }
            	        break;
            	    case 55:
            	        {
            	        alt52=4;
            	        }
            	        break;
            	    case 56:
            	        {
            	        alt52=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 52, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt52) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9231:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Tag6493); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 212));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6513); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 213));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9255:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9256:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6539); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 214));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 214));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9298:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Tag6580); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 215));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6600); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 216));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9322:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9323:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag6626);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 217));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 217));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9350:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_Tag6662); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 218));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6682); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 219));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9374:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9375:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6708); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 220));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 220));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9413:8: a11= 'value' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_structure_Tag6749); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 221));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6769); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 222));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9437:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9438:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6795); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 223));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 223));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9476:8: a14= 'object' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,56,FOLLOW_56_in_parse_org_kermeta_language_structure_Tag6836); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 224));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6856); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 225));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9500:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9501:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6882); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 226));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 226));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 227));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 227));
              	
            }
            a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Tag6928); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_156, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 228));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 228));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_kermeta_language_structure_Tag_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Tag"


    // $ANTLR start "parse_org_kermeta_language_structure_ObjectTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9658:1: parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null] : (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType );
    public final org.kermeta.language.structure.ObjectTypeVariable parse_org_kermeta_language_structure_ObjectTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ObjectTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9661:1: (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==57) ) {
                alt56=1;
            }
            else if ( (LA56_0==61) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9662:2: a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
                    {
                    a0=(Token)match(input,57,FOLLOW_57_in_parse_org_kermeta_language_structure_ObjectTypeVariable6957); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 229));
                      	
                    }
                    a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ObjectTypeVariable6971); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 230));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 230));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 230));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 230));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 230));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 230));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 230));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9692:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( ((LA55_0>=39 && LA55_0<=40)||(LA55_0>=43 && LA55_0<=44)||LA55_0==47||LA55_0==58) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9693:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9693:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    int alt54=6;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt54=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt54=2;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt54=3;
                    	        }
                    	        break;
                    	    case 43:
                    	        {
                    	        alt54=4;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt54=5;
                    	        }
                    	        break;
                    	    case 58:
                    	        {
                    	        alt54=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 54, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt54) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9694:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable6994); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 231));
                    	              			
                    	            }
                    	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7014); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 232));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9718:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9719:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7040); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 233));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 233));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 233));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 233));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 233));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 233));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 233));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9762:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ObjectTypeVariable7081); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 234));
                    	              			
                    	            }
                    	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7101); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 235));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9786:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9787:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7127);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 236));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 236));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 236));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 236));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 236));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 236));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 236));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9815:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ObjectTypeVariable7163); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 237));
                    	              			
                    	            }
                    	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7183); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 238));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 238));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9850:4: (a10_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9851:5: a10_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7209);
                    	            a10_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a10_0 != null) {
                    	              						if (a10_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
                    	              							completedElement(a10_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a10_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 239));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 239));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 239));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 239));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 239));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 239));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 239));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9879:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
                    	            {
                    	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable7245); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 240));
                    	              			
                    	            }
                    	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7265); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 241));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9903:4: (a13= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9904:5: a13= IDENTIFIER
                    	            {
                    	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7291); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a13 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 242));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 242));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 242));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 242));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 242));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 242));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 242));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9947:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
                    	            {
                    	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ObjectTypeVariable7332); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 243));
                    	              			
                    	            }
                    	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7352); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 244));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9971:4: (a16= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9972:5: a16= IDENTIFIER
                    	            {
                    	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7378); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a16 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 245));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 245));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 245));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 245));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 245));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 245));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 245));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10011:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
                    	            {
                    	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7419); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 246));
                    	              			
                    	            }
                    	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7439); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 247));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10035:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10036:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7465); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 248));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 248));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 249));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 249));
                      	
                    }
                    a20=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ObjectTypeVariable7511); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 250));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 250));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10168:2: c0= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable7530);
                    c0=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ObjectTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10172:1: parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null] : a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' ;
    public final org.kermeta.language.structure.ModelTypeVariable parse_org_kermeta_language_structure_ModelTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ModelTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10175:1: (a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10176:2: a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}'
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable7555); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 251));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ModelTypeVariable7569); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 252));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 252));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10207:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=39 && LA58_0<=40)||(LA58_0>=43 && LA58_0<=44)||LA58_0==47||LA58_0==58||LA58_0==60) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10208:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10208:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    int alt57=7;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt57=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt57=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt57=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt57=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt57=5;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt57=6;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt57=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt57) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10209:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable7592); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 253));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7612); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 254));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10233:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10234:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7638); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 255));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 255));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10278:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ModelTypeVariable7679); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 256));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7699); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 257));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10302:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10303:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable7725);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 258));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 258));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10332:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ModelTypeVariable7761); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 259));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7781); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 260));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 260));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10367:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10368:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable7807);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 261));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 261));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10397:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable7843); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 262));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7863); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 263));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10421:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10422:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7889); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 264));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 264));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10466:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelTypeVariable7930); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 265));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7950); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 266));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10490:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10491:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7976); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 267));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 267));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10531:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ModelTypeVariable8017); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 268));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8037); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 269));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10555:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10556:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8063); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 270));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 270));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10600:8: a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            {
            	            a20=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8104); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 271));
            	              			
            	            }
            	            a21=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8124); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 272));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10624:4: (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10625:5: a22_0= parse_org_kermeta_language_structure_VirtualType
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8150);
            	            a22_0=parse_org_kermeta_language_structure_VirtualType();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a22_0 != null) {
            	              						if (a22_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
            	              							completedElement(a22_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a22_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 273));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 273));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 274));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 274));
              	
            }
            a23=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ModelTypeVariable8191); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 275));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 275));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_VirtualType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10744:1: parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null] : a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' ;
    public final org.kermeta.language.structure.VirtualType parse_org_kermeta_language_structure_VirtualType() throws RecognitionException {
        org.kermeta.language.structure.VirtualType element =  null;
        int parse_org_kermeta_language_structure_VirtualType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a27=null;
        Token a29=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.TypeVariableBinding a28_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10747:1: (a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10748:2: a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_org_kermeta_language_structure_VirtualType8220); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 276));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_VirtualType8234); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 277));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 277));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10781:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=39 && LA60_0<=40)||(LA60_0>=43 && LA60_0<=44)||LA60_0==47||LA60_0==58||(LA60_0>=62 && LA60_0<=64)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10782:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10782:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    int alt59=9;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt59=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt59=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt59=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt59=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt59=5;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt59=6;
            	        }
            	        break;
            	    case 62:
            	        {
            	        alt59=7;
            	        }
            	        break;
            	    case 63:
            	        {
            	        alt59=8;
            	        }
            	        break;
            	    case 64:
            	        {
            	        alt59=9;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 59, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt59) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10783:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType8257); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 278));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8277); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 279));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10807:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10808:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8303); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 280));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 280));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10854:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_VirtualType8344); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 281));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8364); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 282));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10878:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10879:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8390);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 283));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 283));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10910:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_VirtualType8426); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 284));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8446); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 285));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 285));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10945:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10946:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8472);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 286));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 286));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10977:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType8508); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 287));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8528); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 288));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11001:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11002:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8554); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 289));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 289));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11048:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_VirtualType8595); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 290));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8615); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 291));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11072:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11073:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8641); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 292));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 292));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11115:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_VirtualType8682); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 293));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8702); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 294));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11139:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11140:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8728); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 295));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 295));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11186:8: a20= 'classDefinition' a21= ':' (a22= IDENTIFIER )
            	            {
            	            a20=(Token)match(input,62,FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType8769); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 296));
            	              			
            	            }
            	            a21=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8789); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 297));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11210:4: (a22= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11211:5: a22= IDENTIFIER
            	            {
            	            a22=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8815); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 298));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 298));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11257:8: a23= 'modelType' a24= ':' (a25= IDENTIFIER )
            	            {
            	            a23=(Token)match(input,63,FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType8856); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 299));
            	              			
            	            }
            	            a24=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8876); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 300));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11281:4: (a25= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11282:5: a25= IDENTIFIER
            	            {
            	            a25=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8902); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a25 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 301));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 301));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11328:8: a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            {
            	            a26=(Token)match(input,64,FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType8943); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 302));
            	              			
            	            }
            	            a27=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8963); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 303));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11352:4: (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11353:5: a28_0= parse_org_kermeta_language_structure_TypeVariableBinding
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType8989);
            	            a28_0=parse_org_kermeta_language_structure_TypeVariableBinding();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a28_0 != null) {
            	              						if (a28_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
            	              							completedElement(a28_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a28_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 304));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 304));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 305));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 305));
              	
            }
            a29=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_VirtualType9030); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 306));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 306));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_kermeta_language_structure_VirtualType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VirtualType"


    // $ANTLR start "parse_org_kermeta_language_structure_ProductType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11476:1: parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null] : a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.ProductType parse_org_kermeta_language_structure_ProductType() throws RecognitionException {
        org.kermeta.language.structure.ProductType element =  null;
        int parse_org_kermeta_language_structure_ProductType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11479:1: (a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11480:2: a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_org_kermeta_language_structure_ProductType9059); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 307));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ProductType9073); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 308));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 308));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 308));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 308));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 308));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 308));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11509:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=39 && LA62_0<=40)||LA62_0==43||LA62_0==47||LA62_0==49) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11510:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11510:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt61=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt61=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt61=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt61=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt61=4;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt61=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 61, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt61) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11511:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9096); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 309));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9116); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 310));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11535:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11536:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9142); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 311));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 311));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11578:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ProductType9183); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 312));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9203); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 313));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11602:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11603:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9229);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 314));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 314));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11630:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ProductType9265); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 315));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9285); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 316));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 316));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11665:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11666:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9311);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 317));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 317));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11693:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ProductType9347); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 318));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9367); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 319));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11717:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11718:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9393); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 320));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 320));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11760:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9434); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 321));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9454); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 322));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11784:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11785:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9480); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 323));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 323));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 324));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 324));
              	
            }
            a17=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_ProductType9526); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 325));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 325));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_kermeta_language_structure_ProductType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ProductType"


    // $ANTLR start "parse_org_kermeta_language_structure_FunctionType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11915:1: parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null] : a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' ;
    public final org.kermeta.language.structure.FunctionType parse_org_kermeta_language_structure_FunctionType() throws RecognitionException {
        org.kermeta.language.structure.FunctionType element =  null;
        int parse_org_kermeta_language_structure_FunctionType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11918:1: (a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11919:2: a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_org_kermeta_language_structure_FunctionType9555); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 326));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_FunctionType9569); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 327));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 327));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11949:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=39 && LA64_0<=40)||LA64_0==43||LA64_0==47||(LA64_0>=67 && LA64_0<=68)) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11950:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11950:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    int alt63=6;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt63=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt63=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt63=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt63=4;
            	        }
            	        break;
            	    case 67:
            	        {
            	        alt63=5;
            	        }
            	        break;
            	    case 68:
            	        {
            	        alt63=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 63, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt63) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11951:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType9592); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 328));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9612); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 329));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11975:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11976:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9638); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 330));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 330));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 330));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 330));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 330));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 330));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 330));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12019:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_FunctionType9679); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 331));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9699); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 332));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12043:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12044:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType9725);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 333));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 333));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12072:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_FunctionType9761); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 334));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9781); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 335));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 335));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12107:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12108:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType9807);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 336));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 336));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12136:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_FunctionType9843); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 337));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9863); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 338));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12160:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12161:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9889); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 339));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 339));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12204:8: a14= 'left' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,67,FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType9930); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 340));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9950); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 341));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12228:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12229:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9976); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 342));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 342));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12272:8: a17= 'right' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,68,FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10017); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 343));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10037); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 344));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12296:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12297:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10063); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 345));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 345));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 346));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 346));
              	
            }
            a20=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_FunctionType10109); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 347));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 347));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_kermeta_language_structure_FunctionType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_FunctionType"


    // $ANTLR start "parse_org_kermeta_language_behavior_Block"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12429:1: parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null] : a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' ;
    public final org.kermeta.language.behavior.Block parse_org_kermeta_language_behavior_Block() throws RecognitionException {
        org.kermeta.language.behavior.Block element =  null;
        int parse_org_kermeta_language_behavior_Block_StartIndex = input.index();
        Token a0=null;
        Token a13=null;
        org.kermeta.language.behavior.VariableDecl a1_0 = null;

        org.kermeta.language.behavior.Loop a2_0 = null;

        org.kermeta.language.behavior.Conditional a3_0 = null;

        org.kermeta.language.behavior.Assignment a4_0 = null;

        org.kermeta.language.behavior.CallFeature a5_0 = null;

        org.kermeta.language.behavior.CallVariable a6_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a7_0 = null;

        org.kermeta.language.behavior.CallResult a8_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;

        org.kermeta.language.behavior.EmptyExpression a10_0 = null;

        org.kermeta.language.behavior.Block a11_0 = null;

        org.kermeta.language.behavior.Rescue a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12432:1: (a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12433:2: a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end'
            {
            a0=(Token)match(input,69,FOLLOW_69_in_parse_org_kermeta_language_behavior_Block10138); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 348));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 348));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12460:2: ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==IDENTIFIER||(LA66_0>=INTEGER && LA66_0<=BOOLEAN)||LA66_0==32||LA66_0==69||LA66_0==73||LA66_0==76||LA66_0==79||(LA66_0>=81 && LA66_0<=82)||LA66_0==85||(LA66_0>=92 && LA66_0<=93)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12461:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12461:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    int alt65=11;
            	    alt65 = dfa65.predict(input);
            	    switch (alt65) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12462:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12462:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12463:5: a1_0= parse_org_kermeta_language_behavior_VariableDecl
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10167);
            	            a1_0=parse_org_kermeta_language_behavior_VariableDecl();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a1_0 != null) {
            	              						if (a1_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
            	              							completedElement(a1_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a1_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 349));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 349));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12500:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12500:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12501:5: a2_0= parse_org_kermeta_language_behavior_Loop
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10209);
            	            a2_0=parse_org_kermeta_language_behavior_Loop();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a2_0 != null) {
            	              						if (a2_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
            	              							completedElement(a2_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a2_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 350));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12538:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12538:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12539:5: a3_0= parse_org_kermeta_language_behavior_Conditional
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10251);
            	            a3_0=parse_org_kermeta_language_behavior_Conditional();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a3_0 != null) {
            	              						if (a3_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
            	              							completedElement(a3_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a3_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 351));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 351));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12576:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12576:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12577:5: a4_0= parse_org_kermeta_language_behavior_Assignment
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10293);
            	            a4_0=parse_org_kermeta_language_behavior_Assignment();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a4_0 != null) {
            	              						if (a4_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
            	              							completedElement(a4_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a4_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 352));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 352));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12614:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12614:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12615:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10335);
            	            a5_0=parse_org_kermeta_language_behavior_CallFeature();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a5_0 != null) {
            	              						if (a5_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
            	              							completedElement(a5_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a5_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 353));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12652:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12652:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12653:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10377);
            	            a6_0=parse_org_kermeta_language_behavior_CallVariable();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a6_0 != null) {
            	              						if (a6_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
            	              							completedElement(a6_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a6_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 354));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 354));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12690:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12690:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12691:5: a7_0= parse_org_kermeta_language_behavior_CallSuperOperation
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10419);
            	            a7_0=parse_org_kermeta_language_behavior_CallSuperOperation();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 355));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 355));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12728:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12728:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12729:5: a8_0= parse_org_kermeta_language_behavior_CallResult
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10461);
            	            a8_0=parse_org_kermeta_language_behavior_CallResult();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 356));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 356));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12766:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12766:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12767:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block10503);
            	            a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a9_0 != null) {
            	              						if (a9_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
            	              							completedElement(a9_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a9_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 357));
            	              			
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12804:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12804:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12805:5: a10_0= parse_org_kermeta_language_behavior_EmptyExpression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block10545);
            	            a10_0=parse_org_kermeta_language_behavior_EmptyExpression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 358));
            	              			
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12842:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12842:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12843:5: a11_0= parse_org_kermeta_language_behavior_Block
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block10587);
            	            a11_0=parse_org_kermeta_language_behavior_Block();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a11_0 != null) {
            	              						if (a11_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
            	              							completedElement(a11_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a11_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 359));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 360));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 360));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12901:2: ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==71) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12902:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12902:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12903:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12903:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12904:5: a12_0= parse_org_kermeta_language_behavior_Rescue
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block10643);
            	    a12_0=parse_org_kermeta_language_behavior_Rescue();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	      					}
            	      					if (a12_0 != null) {
            	      						if (a12_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a12_0);
            	      							completedElement(a12_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a12_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 361));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 361));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 362));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 362));
              	
            }
            a13=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_behavior_Block10684); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 363));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 363));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_kermeta_language_behavior_Block_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Block"


    // $ANTLR start "parse_org_kermeta_language_behavior_Rescue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12987:1: parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null] : a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.Rescue parse_org_kermeta_language_behavior_Rescue() throws RecognitionException {
        org.kermeta.language.behavior.Rescue element =  null;
        int parse_org_kermeta_language_behavior_Rescue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.TypeReference a4_0 = null;

        org.kermeta.language.behavior.Expression a6_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12990:1: (a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12991:2: a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_org_kermeta_language_behavior_Rescue10713); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 364));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 364));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13024:2: ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==32) ) {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==IDENTIFIER) ) {
                    int LA68_3 = input.LA(3);

                    if ( (LA68_3==27) ) {
                        alt68=1;
                    }
                }
            }
            switch (alt68) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13025:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13025:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13026:4: a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue10736); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 365));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13038:4: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13039:5: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue10762); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a2 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      						}
                      						java.lang.String resolved = (java.lang.String)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 366));
                      			
                    }
                    a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_Rescue10795); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 367));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13083:4: (a4_0= parse_org_kermeta_language_behavior_TypeReference )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13084:5: a4_0= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue10821);
                    a4_0=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a4_0 != null) {
                      						if (a4_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
                      							completedElement(a4_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a4_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 368));
                      			
                    }
                    a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue10849); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 369));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 369));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 370));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13164:2: ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==IDENTIFIER||(LA69_0>=INTEGER && LA69_0<=BOOLEAN)||LA69_0==32||LA69_0==37||LA69_0==55||LA69_0==69||(LA69_0>=72 && LA69_0<=73)||LA69_0==76||LA69_0==79||(LA69_0>=81 && LA69_0<=82)||LA69_0==85||(LA69_0>=92 && LA69_0<=93)||LA69_0==95) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13165:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13165:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13166:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13166:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13167:5: a6_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue10897);
                    a6_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 371));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 371));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 372));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_kermeta_language_behavior_Rescue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Rescue"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeReference"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13199:1: parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.TypeReference parse_org_kermeta_language_behavior_TypeReference() throws RecognitionException {
        org.kermeta.language.behavior.TypeReference element =  null;
        int parse_org_kermeta_language_behavior_TypeReference_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13202:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13203:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13203:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13204:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference10957); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 373));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 373));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_kermeta_language_behavior_TypeReference_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeReference"


    // $ANTLR start "parse_org_kermeta_language_behavior_Raise"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13288:1: parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null] : a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) ;
    public final org.kermeta.language.behavior.Raise parse_org_kermeta_language_behavior_Raise() throws RecognitionException {
        org.kermeta.language.behavior.Raise element =  null;
        int parse_org_kermeta_language_behavior_Raise_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.Expression a1_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13291:1: (a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13292:2: a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression )
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Raise10993); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 374));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 374));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13322:2: (a1_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13323:3: a1_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11011);
            a1_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              			}
              			if (a1_0 != null) {
              				if (a1_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
              					completedElement(a1_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a1_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 375));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 375));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_kermeta_language_behavior_Raise_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Raise"


    // $ANTLR start "parse_org_kermeta_language_behavior_BooleanLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13382:1: parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null] : (a0= BOOLEAN ) ;
    public final org.kermeta.language.behavior.BooleanLiteral parse_org_kermeta_language_behavior_BooleanLiteral() throws RecognitionException {
        org.kermeta.language.behavior.BooleanLiteral element =  null;
        int parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13385:1: ( (a0= BOOLEAN ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13386:2: (a0= BOOLEAN )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13386:2: (a0= BOOLEAN )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13387:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11048); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 376));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 376));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_BooleanLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_IntegerLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13457:1: parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null] : (a0= INTEGER ) ;
    public final org.kermeta.language.behavior.IntegerLiteral parse_org_kermeta_language_behavior_IntegerLiteral() throws RecognitionException {
        org.kermeta.language.behavior.IntegerLiteral element =  null;
        int parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13460:1: ( (a0= INTEGER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13461:2: (a0= INTEGER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13461:2: (a0= INTEGER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13462:3: a0= INTEGER
            {
            a0=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11088); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 377));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 377));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_IntegerLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_StringLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13532:1: parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.StringLiteral parse_org_kermeta_language_behavior_StringLiteral() throws RecognitionException {
        org.kermeta.language.behavior.StringLiteral element =  null;
        int parse_org_kermeta_language_behavior_StringLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13535:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13536:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13536:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13537:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11128); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 378));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_kermeta_language_behavior_StringLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_StringLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_Conditional"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13607:1: parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null] : a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' ;
    public final org.kermeta.language.behavior.Conditional parse_org_kermeta_language_behavior_Conditional() throws RecognitionException {
        org.kermeta.language.behavior.Conditional element =  null;
        int parse_org_kermeta_language_behavior_Conditional_StartIndex = input.index();
        Token a0=null;
        Token a3=null;
        Token a13=null;
        Token a23=null;
        org.kermeta.language.behavior.CallFeature a1_0 = null;

        org.kermeta.language.behavior.Conditional a2_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;

        org.kermeta.language.behavior.Block a5_0 = null;

        org.kermeta.language.behavior.Assignment a6_0 = null;

        org.kermeta.language.behavior.CallFeature a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallVariable a10_0 = null;

        org.kermeta.language.behavior.CallValue a11_0 = null;

        org.kermeta.language.behavior.VariableDecl a12_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.Block a15_0 = null;

        org.kermeta.language.behavior.Assignment a16_0 = null;

        org.kermeta.language.behavior.CallFeature a17_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a18_0 = null;

        org.kermeta.language.behavior.CallResult a19_0 = null;

        org.kermeta.language.behavior.VariableDecl a20_0 = null;

        org.kermeta.language.behavior.CallVariable a21_0 = null;

        org.kermeta.language.behavior.CallValue a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13610:1: (a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13611:2: a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end'
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_org_kermeta_language_behavior_Conditional11164); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 379));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 379));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13631:2: ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==IDENTIFIER||(LA70_0>=INTEGER && LA70_0<=BOOLEAN)||LA70_0==32||LA70_0==81||LA70_0==85||LA70_0==92) ) {
                alt70=1;
            }
            else if ( (LA70_0==73) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13632:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13632:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13633:4: a1_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11187);
                    a1_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a1_0 != null) {
                      					if (a1_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
                      						completedElement(a1_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a1_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 380));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13655:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13655:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13656:4: a2_0= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11221);
                    a2_0=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a2_0 != null) {
                      					if (a2_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
                      						completedElement(a2_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a2_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 381));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 382));
              	
            }
            a3=(Token)match(input,74,FOLLOW_74_in_parse_org_kermeta_language_behavior_Conditional11251); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 383));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13706:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )
            int alt71=9;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13707:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13707:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13708:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11274);
                    a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 384));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 384));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13743:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13743:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13744:4: a5_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11308);
                    a5_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a5_0 != null) {
                      					if (a5_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
                      						completedElement(a5_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a5_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 385));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 385));
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13779:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13779:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13780:4: a6_0= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11342);
                    a6_0=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a6_0 != null) {
                      					if (a6_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
                      						completedElement(a6_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a6_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 386));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 386));
                      		
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13815:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13815:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13816:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11376);
                    a7_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a7_0 != null) {
                      					if (a7_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
                      						completedElement(a7_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a7_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 387));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 387));
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13851:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13851:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13852:4: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11410);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a8_0 != null) {
                      					if (a8_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
                      						completedElement(a8_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a8_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 388));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 388));
                      		
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13887:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13887:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13888:4: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11444);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a9_0 != null) {
                      					if (a9_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
                      						completedElement(a9_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a9_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 389));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 389));
                      		
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13923:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13923:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13924:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11478);
                    a10_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a10_0 != null) {
                      					if (a10_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
                      						completedElement(a10_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a10_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 390));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 390));
                      		
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13959:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13959:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13960:4: a11_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11512);
                    a11_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a11_0 != null) {
                      					if (a11_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
                      						completedElement(a11_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a11_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 391));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 391));
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13995:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13995:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13996:4: a12_0= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11546);
                    a12_0=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a12_0 != null) {
                      					if (a12_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
                      						completedElement(a12_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a12_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 392));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 393));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 393));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14049:2: ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==IDENTIFIER||(LA73_0>=INTEGER && LA73_0<=BOOLEAN)||LA73_0==32||LA73_0==55||LA73_0==69||LA73_0==75||LA73_0==79||(LA73_0>=81 && LA73_0<=82)||LA73_0==85||LA73_0==92) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14050:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14050:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    int alt72=8;
                    alt72 = dfa72.predict(input);
                    switch (alt72) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14051:4: a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            a13=(Token)match(input,75,FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11585); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 394));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14063:4: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14064:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11611);
                            a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a14_0 != null) {
                              						if (a14_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
                              							completedElement(a14_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a14_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 395));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14086:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14086:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14087:5: a15_0= parse_org_kermeta_language_behavior_Block
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11653);
                            a15_0=parse_org_kermeta_language_behavior_Block();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a15_0 != null) {
                              						if (a15_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
                              							completedElement(a15_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a15_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 396));
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14109:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14109:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14110:5: a16_0= parse_org_kermeta_language_behavior_Assignment
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11695);
                            a16_0=parse_org_kermeta_language_behavior_Assignment();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a16_0 != null) {
                              						if (a16_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
                              							completedElement(a16_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a16_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 397));
                              			
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14132:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14132:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14133:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11737);
                            a17_0=parse_org_kermeta_language_behavior_CallFeature();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a17_0 != null) {
                              						if (a17_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
                              							completedElement(a17_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a17_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 398));
                              			
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14155:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14155:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14156:5: a18_0= parse_org_kermeta_language_behavior_CallSuperOperation
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11779);
                            a18_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a18_0 != null) {
                              						if (a18_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
                              							completedElement(a18_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a18_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 399));
                              			
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14178:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14178:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14179:5: a19_0= parse_org_kermeta_language_behavior_CallResult
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11821);
                            a19_0=parse_org_kermeta_language_behavior_CallResult();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a19_0 != null) {
                              						if (a19_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
                              							completedElement(a19_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a19_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 400));
                              			
                            }

                            }
                            break;
                        case 7 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14201:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14201:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14202:5: a20_0= parse_org_kermeta_language_behavior_VariableDecl
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11863);
                            a20_0=parse_org_kermeta_language_behavior_VariableDecl();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a20_0 != null) {
                              						if (a20_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
                              							completedElement(a20_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a20_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 401));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 401));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14224:4: (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14225:5: a21_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11897);
                            a21_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a21_0 != null) {
                              						if (a21_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
                              							completedElement(a21_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a21_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 402));
                              			
                            }

                            }
                            break;
                        case 8 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14247:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14247:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14248:5: a22_0= parse_org_kermeta_language_behavior_CallValue
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11939);
                            a22_0=parse_org_kermeta_language_behavior_CallValue();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a22_0 != null) {
                              						if (a22_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
                              							completedElement(a22_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a22_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 403));
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 404));
              	
            }
            a23=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_behavior_Conditional11980); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 405));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 405));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_kermeta_language_behavior_Conditional_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Conditional"


    // $ANTLR start "parse_org_kermeta_language_behavior_Loop"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14329:1: parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null] : a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? ;
    public final org.kermeta.language.behavior.Loop parse_org_kermeta_language_behavior_Loop() throws RecognitionException {
        org.kermeta.language.behavior.Loop element =  null;
        int parse_org_kermeta_language_behavior_Loop_StartIndex = input.index();
        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.Expression a1_0 = null;

        org.kermeta.language.behavior.Expression a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14332:1: (a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14333:2: a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            {
            a0=(Token)match(input,76,FOLLOW_76_in_parse_org_kermeta_language_behavior_Loop12009); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 406));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 406));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14364:2: ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==IDENTIFIER||(LA74_0>=INTEGER && LA74_0<=BOOLEAN)||LA74_0==32||LA74_0==37||LA74_0==55||LA74_0==69||(LA74_0>=72 && LA74_0<=73)||LA74_0==76||LA74_0==79||(LA74_0>=81 && LA74_0<=82)||LA74_0==85||(LA74_0>=92 && LA74_0<=93)||LA74_0==95) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14365:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14365:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14366:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14366:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14367:5: a1_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12038);
                    a1_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 407));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 408));
              	
            }
            a2=(Token)match(input,77,FOLLOW_77_in_parse_org_kermeta_language_behavior_Loop12079); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 409));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 409));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14425:2: (a3_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14426:3: a3_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12097);
            a3_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 410));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 410));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14487:2: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==78) ) {
                int LA75_1 = input.LA(2);

                if ( (synpred195_Kermeta()) ) {
                    alt75=1;
                }
            }
            switch (alt75) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14489:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    a4=(Token)match(input,78,FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12124); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 411));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 411));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14519:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14520:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14520:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14521:6: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12157);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      						if (terminateParsing) {
                      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      						}
                      						if (element == null) {
                      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      						}
                      						if (a5_0 != null) {
                      							if (a5_0 != null) {
                      								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
                      								completedElement(a5_0);
                      							}
                      							collectHiddenTokens(element);
                      							copyLocalizationInfos(a5_0, element); 						}
                      					
                    }

                    }

                    if ( state.backtracking==0 ) {

                      					// expected elements (follow set)
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 412));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 412));
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 413));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 413));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 414));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_kermeta_language_behavior_Loop_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Loop"


    // $ANTLR start "parse_org_kermeta_language_behavior_VariableDecl"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14674:1: parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null] : a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.VariableDecl parse_org_kermeta_language_behavior_VariableDecl() throws RecognitionException {
        org.kermeta.language.behavior.VariableDecl element =  null;
        int parse_org_kermeta_language_behavior_VariableDecl_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.TypeReference a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14677:1: (a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14678:2: a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,79,FOLLOW_79_in_parse_org_kermeta_language_behavior_VariableDecl12231); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 415));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14690:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14691:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12249); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 416));
              	
            }
            a2=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_VariableDecl12270); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 417));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14735:2: (a3_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14736:3: a3_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12288);
            a3_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 418));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14797:2: ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==80) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14798:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14798:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14799:4: a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    a4=(Token)match(input,80,FOLLOW_80_in_parse_org_kermeta_language_behavior_VariableDecl12315); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 419));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14829:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14830:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12341);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 420));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 420));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 421));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 421));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_kermeta_language_behavior_VariableDecl_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VariableDecl"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14938:1: parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null] : (a0_0= parse_org_kermeta_language_behavior_TypeReference ) ;
    public final org.kermeta.language.behavior.TypeLiteral parse_org_kermeta_language_behavior_TypeLiteral() throws RecognitionException {
        org.kermeta.language.behavior.TypeLiteral element =  null;
        int parse_org_kermeta_language_behavior_TypeLiteral_StartIndex = input.index();
        org.kermeta.language.behavior.TypeReference a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14941:1: ( (a0_0= parse_org_kermeta_language_behavior_TypeReference ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14942:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14942:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14943:3: a0_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12401);
            a0_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 422));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_kermeta_language_behavior_TypeLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallResult"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15002:1: parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null] : a0= 'result' ;
    public final org.kermeta.language.behavior.CallResult parse_org_kermeta_language_behavior_CallResult() throws RecognitionException {
        org.kermeta.language.behavior.CallResult element =  null;
        int parse_org_kermeta_language_behavior_CallResult_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15005:1: (a0= 'result' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15006:2: a0= 'result'
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_kermeta_language_behavior_CallResult12434); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 423));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 423));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_kermeta_language_behavior_CallResult_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallResult"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallSuperOperation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15061:1: parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null] : a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' ;
    public final org.kermeta.language.behavior.CallSuperOperation parse_org_kermeta_language_behavior_CallSuperOperation() throws RecognitionException {
        org.kermeta.language.behavior.CallSuperOperation element =  null;
        int parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.Expression a2_0 = null;

        org.kermeta.language.behavior.Expression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15064:1: (a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15065:2: a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')'
            {
            a0=(Token)match(input,82,FOLLOW_82_in_parse_org_kermeta_language_behavior_CallSuperOperation12463); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 424));
              	
            }
            a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallSuperOperation12477); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 425));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 425));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15108:2: ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==IDENTIFIER||(LA78_0>=INTEGER && LA78_0<=BOOLEAN)||LA78_0==32||LA78_0==37||LA78_0==55||LA78_0==69||(LA78_0>=72 && LA78_0<=73)||LA78_0==76||LA78_0==79||(LA78_0>=81 && LA78_0<=82)||LA78_0==85||(LA78_0>=92 && LA78_0<=93)||LA78_0==95) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15109:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15109:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15110:4: (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15110:4: (a2_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15111:5: a2_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12506);
                    a2_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 426));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 426));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15133:4: ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==24) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15134:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15134:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15135:6: a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a3=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallSuperOperation12547); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 427));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 427));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15165:6: (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15166:7: a4_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12581);
                    	    a4_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      							}
                    	      							if (a4_0 != null) {
                    	      								if (a4_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a4_0);
                    	      									completedElement(a4_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a4_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 428));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 428));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 429));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 429));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 430));
              	
            }
            a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation12655); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 431));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallSuperOperation"


    // $ANTLR start "parse_org_kermeta_language_behavior_Assignment"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15256:1: parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null] : ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) ;
    public final org.kermeta.language.behavior.Assignment parse_org_kermeta_language_behavior_Assignment() throws RecognitionException {
        org.kermeta.language.behavior.Assignment element =  null;
        int parse_org_kermeta_language_behavior_Assignment_StartIndex = input.index();
        Token a3=null;
        Token a4=null;
        Token a5=null;
        org.kermeta.language.behavior.CallFeature a0_0 = null;

        org.kermeta.language.behavior.CallVariable a1_0 = null;

        org.kermeta.language.behavior.CallResult a2_0 = null;

        org.kermeta.language.behavior.CallFeature a6_0 = null;

        org.kermeta.language.behavior.SelfExpression a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallValue a10_0 = null;

        org.kermeta.language.behavior.CallVariable a11_0 = null;

        org.kermeta.language.behavior.VoidLiteral a12_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.StringLiteral a15_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15259:1: ( ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15260:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15260:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15261:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15261:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) )
            int alt79=3;
            switch ( input.LA(1) ) {
            case INTEGER:
            case BOOLEAN:
            case 32:
            case 85:
            case 92:
                {
                alt79=1;
                }
                break;
            case IDENTIFIER:
                {
                int LA79_2 = input.LA(2);

                if ( (synpred199_Kermeta()) ) {
                    alt79=1;
                }
                else if ( (synpred200_Kermeta()) ) {
                    alt79=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 2, input);

                    throw nvae;
                }
                }
                break;
            case 81:
                {
                int LA79_3 = input.LA(2);

                if ( (synpred199_Kermeta()) ) {
                    alt79=1;
                }
                else if ( (synpred200_Kermeta()) ) {
                    alt79=2;
                }
                else if ( (true) ) {
                    alt79=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15262:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15262:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15263:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12699);
                    a0_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a0_0 != null) {
                      						if (a0_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
                      							completedElement(a0_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a0_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 432));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 432));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15286:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15286:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15287:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment12741);
                    a1_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 433));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 433));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15310:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15310:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15311:5: a2_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment12783);
                    a2_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 434));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 434));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 435));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 435));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15340:3: (a3= ':=' | (a4= CASTED ) a5= '=' )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==83) ) {
                alt80=1;
            }
            else if ( (LA80_0==CASTED) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15341:4: a3= ':='
                    {
                    a3=(Token)match(input,83,FOLLOW_83_in_parse_org_kermeta_language_behavior_Assignment12826); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 436));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 436));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15364:8: (a4= CASTED ) a5= '='
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15364:8: (a4= CASTED )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15365:5: a4= CASTED
                    {
                    a4=(Token)match(input,CASTED,FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment12860); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a4 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                      						}
                      						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 437));
                      			
                    }
                    a5=(Token)match(input,84,FOLLOW_84_in_parse_org_kermeta_language_behavior_Assignment12893); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 438));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 438));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 439));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 439));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15435:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            int alt81=10;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15436:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15436:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15437:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12934);
                    a6_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 440));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15498:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15498:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15499:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment12976);
                    a7_0=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a7_0 != null) {
                      						if (a7_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
                      							completedElement(a7_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a7_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 441));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15560:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15560:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15561:5: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13018);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a8_0 != null) {
                      						if (a8_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
                      							completedElement(a8_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a8_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 442));
                      			
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15623:5: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13060);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a9_0 != null) {
                      						if (a9_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
                      							completedElement(a9_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a9_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 443));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 443));
                      			
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15684:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15684:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15685:5: a10_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13102);
                    a10_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a10_0 != null) {
                      						if (a10_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
                      							completedElement(a10_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a10_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 444));
                      			
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15747:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13144);
                    a11_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a11_0 != null) {
                      						if (a11_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
                      							completedElement(a11_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a11_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 445));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 445));
                      			
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15808:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15808:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15809:5: a12_0= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13186);
                    a12_0=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a12_0 != null) {
                      						if (a12_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
                      							completedElement(a12_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a12_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 446));
                      			
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15871:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13228);
                    a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a13_0 != null) {
                      						if (a13_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
                      							completedElement(a13_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a13_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 447));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 447));
                      			
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15932:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15932:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15933:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13270);
                    a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a14_0 != null) {
                      						if (a14_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
                      							completedElement(a14_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a14_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 448));
                      			
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15994:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15994:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15995:5: a15_0= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13312);
                    a15_0=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a15_0 != null) {
                      						if (a15_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
                      							completedElement(a15_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a15_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 449));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 450));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 450));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 451));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 451));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_kermeta_language_behavior_Assignment_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Assignment"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16147:1: parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null] : ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult );
    public final org.kermeta.language.behavior.CallVariable parse_org_kermeta_language_behavior_CallVariable() throws RecognitionException {
        org.kermeta.language.behavior.CallVariable element =  null;
        int parse_org_kermeta_language_behavior_CallVariable_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.CallResult c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16150:1: ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==IDENTIFIER) ) {
                alt82=1;
            }
            else if ( (LA82_0==81) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16151:2: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16151:2: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16152:3: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13376); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 452));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 452));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16227:2: c0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13402);
                    c0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_kermeta_language_behavior_CallVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallVariable"


    // $ANTLR start "parse_org_kermeta_language_behavior_SelfExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16231:1: parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null] : a0= 'self' ;
    public final org.kermeta.language.behavior.SelfExpression parse_org_kermeta_language_behavior_SelfExpression() throws RecognitionException {
        org.kermeta.language.behavior.SelfExpression element =  null;
        int parse_org_kermeta_language_behavior_SelfExpression_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16234:1: (a0= 'self' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16235:2: a0= 'self'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_org_kermeta_language_behavior_SelfExpression13427); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 453));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 453));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_kermeta_language_behavior_SelfExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_SelfExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallFeature"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16285:1: parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null] : (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) );
    public final org.kermeta.language.behavior.CallFeature parse_org_kermeta_language_behavior_CallFeature() throws RecognitionException {
        org.kermeta.language.behavior.CallFeature element =  null;
        int parse_org_kermeta_language_behavior_CallFeature_StartIndex = input.index();
        Token a0=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a28=null;
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        Token a40=null;
        Token a41=null;
        Token a42=null;
        Token a43=null;
        Token a44=null;
        Token a46=null;
        Token a48=null;
        Token a49=null;
        Token a50=null;
        Token a51=null;
        Token a52=null;
        Token a53=null;
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.BooleanLiteral a1_0 = null;

        org.kermeta.language.behavior.CallVariable a2_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a3_0 = null;

        org.kermeta.language.behavior.SelfExpression a4_0 = null;

        org.kermeta.language.behavior.StringLiteral a5_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a6_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;

        org.kermeta.language.behavior.Expression a14_0 = null;

        org.kermeta.language.behavior.Expression a21_0 = null;

        org.kermeta.language.behavior.Expression a27_0 = null;

        org.kermeta.language.behavior.Expression a33_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a34_0 = null;

        org.kermeta.language.behavior.CallVariable a35_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a36_0 = null;

        org.kermeta.language.behavior.SelfExpression a37_0 = null;

        org.kermeta.language.behavior.StringLiteral a38_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a39_0 = null;

        org.kermeta.language.behavior.Expression a45_0 = null;

        org.kermeta.language.behavior.Expression a47_0 = null;

        org.kermeta.language.behavior.Expression a54_0 = null;

        org.kermeta.language.behavior.Expression a59_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16288:1: (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==32) ) {
                alt101=1;
            }
            else if ( (LA101_0==IDENTIFIER||(LA101_0>=INTEGER && LA101_0<=BOOLEAN)||LA101_0==81||LA101_0==85||LA101_0==92) ) {
                alt101=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16289:2: a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    a0=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13456); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 454));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 454));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 454));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 454));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 454));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 454));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 454));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16307:2: ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt83=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt83=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA83_2 = input.LA(2);

                        if ( (synpred213_Kermeta()) ) {
                            alt83=2;
                        }
                        else if ( (synpred216_Kermeta()) ) {
                            alt83=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 83, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 81:
                        {
                        alt83=2;
                        }
                        break;
                    case 92:
                        {
                        alt83=3;
                        }
                        break;
                    case 85:
                        {
                        alt83=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt83=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }

                    switch (alt83) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16308:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16308:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16309:4: a1_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature13479);
                            a1_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a1_0 != null) {
                              					if (a1_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
                              						completedElement(a1_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a1_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 455));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 455));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16340:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16340:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16341:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature13513);
                            a2_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a2_0 != null) {
                              					if (a2_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
                              						completedElement(a2_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a2_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 456));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 456));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16372:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16372:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16373:4: a3_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature13547);
                            a3_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a3_0 != null) {
                              					if (a3_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
                              						completedElement(a3_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a3_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 457));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 457));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16404:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16404:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16405:4: a4_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature13581);
                            a4_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a4_0 != null) {
                              					if (a4_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
                              						completedElement(a4_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a4_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 458));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 458));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16436:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16436:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16437:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature13615);
                            a5_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a5_0 != null) {
                              					if (a5_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
                              						completedElement(a5_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a5_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 459));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 459));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16468:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16468:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16469:4: a6_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature13649);
                            a6_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a6_0 != null) {
                              					if (a6_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
                              						completedElement(a6_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a6_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 460));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 460));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 461));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 461));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16514:2: ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==86) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16515:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16515:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    int alt86=4;
                    	    int LA86_0 = input.LA(1);

                    	    if ( (LA86_0==86) ) {
                    	        int LA86_1 = input.LA(2);

                    	        if ( (LA86_1==IDENTIFIER) ) {
                    	            int LA86_2 = input.LA(3);

                    	            if ( (LA86_2==32) ) {
                    	                alt86=2;
                    	            }
                    	            else if ( (synpred217_Kermeta()) ) {
                    	                alt86=1;
                    	            }
                    	            else if ( (synpred221_Kermeta()) ) {
                    	                alt86=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt86=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 86, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 86, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 86, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt86) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16516:4: a7= '.' (a8= IDENTIFIER )
                    	            {
                    	            a7=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13688); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 462));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16528:4: (a8= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16529:5: a8= IDENTIFIER
                    	            {
                    	            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13714); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a8 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 463));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 463));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16575:8: a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')'
                    	            {
                    	            a9=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13755); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 464));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16587:4: (a10= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16588:5: a10= IDENTIFIER
                    	            {
                    	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13781); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a10 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 465));
                    	              			
                    	            }
                    	            a11=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13814); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 466));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 466));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16655:4: ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt85=2;
                    	            int LA85_0 = input.LA(1);

                    	            if ( (LA85_0==IDENTIFIER||(LA85_0>=INTEGER && LA85_0<=BOOLEAN)||LA85_0==32||LA85_0==37||LA85_0==55||LA85_0==69||(LA85_0>=72 && LA85_0<=73)||LA85_0==76||LA85_0==79||(LA85_0>=81 && LA85_0<=82)||LA85_0==85||(LA85_0>=92 && LA85_0<=93)||LA85_0==95) ) {
                    	                alt85=1;
                    	            }
                    	            switch (alt85) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16656:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16656:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16657:6: (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16657:6: (a12_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16658:7: a12_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13855);
                    	                    a12_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a12_0 != null) {
                    	                      								if (a12_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
                    	                      									completedElement(a12_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a12_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 467));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 467));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16680:6: ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop84:
                    	                    do {
                    	                        int alt84=2;
                    	                        int LA84_0 = input.LA(1);

                    	                        if ( (LA84_0==24) ) {
                    	                            alt84=1;
                    	                        }


                    	                        switch (alt84) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16681:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16681:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16682:8: a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a13=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature13910); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 468));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 468));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16712:8: (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16713:9: a14_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13952);
                    	                    	    a14_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a14_0 != null) {
                    	                    	      										if (a14_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
                    	                    	      											completedElement(a14_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a14_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 469));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 469));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop84;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 470));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 470));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 471));
                    	              			
                    	            }
                    	            a15=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14056); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 472));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 472));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16772:8: a16= '.' (a17= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14084); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 473));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16784:4: (a17= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16785:5: a17= IDENTIFIER
                    	            {
                    	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14110); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a17 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 474));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16831:8: a18= '.' (a19= IDENTIFIER )
                    	            {
                    	            a18=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14151); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 475));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16843:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16844:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14177); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 476));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 476));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 477));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 477));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16905:2: (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==87) ) {
                        alt92=1;
                    }
                    else if ( (LA92_0==33||(LA92_0>=88 && LA92_0<=91)) ) {
                        alt92=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 92, 0, input);

                        throw nvae;
                    }
                    switch (alt92) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16906:3: a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')'
                            {
                            a20=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature14227); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 478));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 478));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16936:3: (a21_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16937:4: a21_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14249);
                            a21_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a21_0 != null) {
                              					if (a21_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
                              						completedElement(a21_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a21_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 479));
                              		
                            }
                            a22=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14272); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 480));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 480));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17012:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17012:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop89:
                            do {
                                int alt89=2;
                                int LA89_0 = input.LA(1);

                                if ( ((LA89_0>=88 && LA89_0<=91)) ) {
                                    alt89=1;
                                }


                                switch (alt89) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17013:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17013:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17014:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17014:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' )
                            	    int alt88=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt88=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt88=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt88=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt88=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 88, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt88) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17015:6: a23= '+'
                            	            {
                            	            a23=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14313); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 481));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 481));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17046:12: a24= '-'
                            	            {
                            	            a24=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14351); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 482));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 482));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17077:12: a25= '/'
                            	            {
                            	            a25=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14389); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 483));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 483));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17108:12: a26= '*'
                            	            {
                            	            a26=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14427); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 484));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 484));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 485));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 485));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17162:5: (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17163:6: a27_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14476);
                            	    a27_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a27_0 != null) {
                            	      							if (a27_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a27_0);
                            	      								completedElement(a27_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a27_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 486));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 486));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 486));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 486));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 486));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop89;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 487));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 487));
                              		
                            }
                            a28=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14527); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a28, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 488));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17256:3: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop91:
                            do {
                                int alt91=2;
                                switch ( input.LA(1) ) {
                                case 88:
                                    {
                                    int LA91_2 = input.LA(2);

                                    if ( (synpred231_Kermeta()) ) {
                                        alt91=1;
                                    }


                                    }
                                    break;
                                case 89:
                                    {
                                    int LA91_3 = input.LA(2);

                                    if ( (synpred231_Kermeta()) ) {
                                        alt91=1;
                                    }


                                    }
                                    break;
                                case 90:
                                    {
                                    int LA91_4 = input.LA(2);

                                    if ( (synpred231_Kermeta()) ) {
                                        alt91=1;
                                    }


                                    }
                                    break;
                                case 91:
                                    {
                                    int LA91_5 = input.LA(2);

                                    if ( (synpred231_Kermeta()) ) {
                                        alt91=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt91) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17257:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17257:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17258:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17258:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
                            	    int alt90=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt90=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt90=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt90=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt90=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 90, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt90) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17259:6: a29= '+'
                            	            {
                            	            a29=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14562); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 489));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17290:12: a30= '-'
                            	            {
                            	            a30=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14600); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a30, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 490));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17321:12: a31= '/'
                            	            {
                            	            a31=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14638); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 491));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17352:12: a32= '*'
                            	            {
                            	            a32=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14676); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a32, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 492));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 493));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17406:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17407:6: a33_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14725);
                            	    a33_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a33_0 != null) {
                            	      							if (a33_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a33_0);
                            	      								completedElement(a33_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a33_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 494));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 495));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 496));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 496));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17573:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17573:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt93=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt93=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA93_2 = input.LA(2);

                        if ( (synpred234_Kermeta()) ) {
                            alt93=2;
                        }
                        else if ( (synpred237_Kermeta()) ) {
                            alt93=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 93, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 81:
                        {
                        alt93=2;
                        }
                        break;
                    case 92:
                        {
                        alt93=3;
                        }
                        break;
                    case 85:
                        {
                        alt93=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt93=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 93, 0, input);

                        throw nvae;
                    }

                    switch (alt93) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17574:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17574:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17575:4: a34_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14796);
                            a34_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a34_0 != null) {
                              					if (a34_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a34_0);
                              						completedElement(a34_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a34_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 497));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 497));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17647:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17647:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17648:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14830);
                            a35_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a35_0 != null) {
                              					if (a35_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a35_0);
                              						completedElement(a35_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a35_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 498));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 498));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17720:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17720:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17721:4: a36_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14864);
                            a36_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a36_0 != null) {
                              					if (a36_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a36_0);
                              						completedElement(a36_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a36_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 499));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 499));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17793:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17793:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17794:4: a37_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14898);
                            a37_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a37_0 != null) {
                              					if (a37_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a37_0);
                              						completedElement(a37_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a37_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 500));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 500));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17867:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14932);
                            a38_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a38_0 != null) {
                              					if (a38_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a38_0);
                              						completedElement(a38_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a38_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 501));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 501));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17939:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17939:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17940:4: a39_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14966);
                            a39_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a39_0 != null) {
                              					if (a39_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a39_0);
                              						completedElement(a39_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a39_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 502));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 502));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 503));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 503));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18067:2: ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==86) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18068:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18068:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    int alt96=4;
                    	    int LA96_0 = input.LA(1);

                    	    if ( (LA96_0==86) ) {
                    	        int LA96_1 = input.LA(2);

                    	        if ( (LA96_1==IDENTIFIER) ) {
                    	            int LA96_2 = input.LA(3);

                    	            if ( (LA96_2==32) ) {
                    	                alt96=2;
                    	            }
                    	            else if ( (synpred238_Kermeta()) ) {
                    	                alt96=1;
                    	            }
                    	            else if ( (synpred242_Kermeta()) ) {
                    	                alt96=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt96=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 96, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 96, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 96, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt96) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18069:4: a40= '.' (a41= IDENTIFIER )
                    	            {
                    	            a40=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15005); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 504));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18081:4: (a41= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18082:5: a41= IDENTIFIER
                    	            {
                    	            a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15031); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a41 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 505));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 505));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18169:8: a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')'
                    	            {
                    	            a42=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15072); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 506));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18181:4: (a43= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18182:5: a43= IDENTIFIER
                    	            {
                    	            a43=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15098); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a43 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a43.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a43).getLine(), ((org.antlr.runtime.CommonToken) a43).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a43).getStartIndex(), ((org.antlr.runtime.CommonToken) a43).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 507));
                    	              			
                    	            }
                    	            a44=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15131); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a44, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 508));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 508));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18249:4: ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt95=2;
                    	            int LA95_0 = input.LA(1);

                    	            if ( (LA95_0==IDENTIFIER||(LA95_0>=INTEGER && LA95_0<=BOOLEAN)||LA95_0==32||LA95_0==37||LA95_0==55||LA95_0==69||(LA95_0>=72 && LA95_0<=73)||LA95_0==76||LA95_0==79||(LA95_0>=81 && LA95_0<=82)||LA95_0==85||(LA95_0>=92 && LA95_0<=93)||LA95_0==95) ) {
                    	                alt95=1;
                    	            }
                    	            switch (alt95) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18250:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18250:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18251:6: (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18251:6: (a45_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18252:7: a45_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15172);
                    	                    a45_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a45_0 != null) {
                    	                      								if (a45_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a45_0);
                    	                      									completedElement(a45_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a45_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 509));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 509));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18274:6: ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop94:
                    	                    do {
                    	                        int alt94=2;
                    	                        int LA94_0 = input.LA(1);

                    	                        if ( (LA94_0==24) ) {
                    	                            alt94=1;
                    	                        }


                    	                        switch (alt94) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18275:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18275:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18276:8: a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a46=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature15227); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a46, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 510));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 510));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18306:8: (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18307:9: a47_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15269);
                    	                    	    a47_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a47_0 != null) {
                    	                    	      										if (a47_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a47_0);
                    	                    	      											completedElement(a47_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a47_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 511));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 511));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop94;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 512));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 512));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 513));
                    	              			
                    	            }
                    	            a48=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15373); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a48, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 514));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 514));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18407:8: a49= '.' (a50= IDENTIFIER )
                    	            {
                    	            a49=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15401); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a49, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 515));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18419:4: (a50= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18420:5: a50= IDENTIFIER
                    	            {
                    	            a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15427); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a50 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a50.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a50).getLine(), ((org.antlr.runtime.CommonToken) a50).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a50).getStartIndex(), ((org.antlr.runtime.CommonToken) a50).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 516));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18507:8: a51= '.' (a52= IDENTIFIER )
                    	            {
                    	            a51=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15468); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a51, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 517));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18519:4: (a52= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18520:5: a52= IDENTIFIER
                    	            {
                    	            a52=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15494); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a52 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a52.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a52).getLine(), ((org.antlr.runtime.CommonToken) a52).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a52).getStartIndex(), ((org.antlr.runtime.CommonToken) a52).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 518));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 518));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 519));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 519));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18663:2: (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==87) ) {
                        alt100=1;
                    }
                    else if ( (LA100_0==EOF||LA100_0==IDENTIFIER||(LA100_0>=INTEGER && LA100_0<=CASTED)||LA100_0==19||(LA100_0>=24 && LA100_0<=26)||LA100_0==28||(LA100_0>=30 && LA100_0<=33)||(LA100_0>=39 && LA100_0<=40)||LA100_0==47||LA100_0==55||(LA100_0>=69 && LA100_0<=71)||(LA100_0>=73 && LA100_0<=79)||(LA100_0>=81 && LA100_0<=83)||LA100_0==85||(LA100_0>=88 && LA100_0<=94)||(LA100_0>=96 && LA100_0<=97)) ) {
                        alt100=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 100, 0, input);

                        throw nvae;
                    }
                    switch (alt100) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18664:3: a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a53=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature15544); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a53, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 520));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 520));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18694:3: (a54_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18695:4: a54_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15566);
                            a54_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a54_0 != null) {
                              					if (a54_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a54_0);
                              						completedElement(a54_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a54_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 521));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 521));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18758:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18758:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop99:
                            do {
                                int alt99=2;
                                switch ( input.LA(1) ) {
                                case 88:
                                    {
                                    int LA99_2 = input.LA(2);

                                    if ( (synpred248_Kermeta()) ) {
                                        alt99=1;
                                    }


                                    }
                                    break;
                                case 89:
                                    {
                                    int LA99_3 = input.LA(2);

                                    if ( (synpred248_Kermeta()) ) {
                                        alt99=1;
                                    }


                                    }
                                    break;
                                case 90:
                                    {
                                    int LA99_4 = input.LA(2);

                                    if ( (synpred248_Kermeta()) ) {
                                        alt99=1;
                                    }


                                    }
                                    break;
                                case 91:
                                    {
                                    int LA99_5 = input.LA(2);

                                    if ( (synpred248_Kermeta()) ) {
                                        alt99=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt99) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18759:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18759:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18760:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18760:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
                            	    int alt98=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt98=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt98=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt98=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt98=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 98, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt98) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18761:6: a55= '+'
                            	            {
                            	            a55=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15613); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a55, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 522));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 522));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18792:12: a56= '-'
                            	            {
                            	            a56=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15651); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 523));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 523));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18823:12: a57= '/'
                            	            {
                            	            a57=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature15689); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a57, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 524));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 524));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18854:12: a58= '*'
                            	            {
                            	            a58=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15727); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 525));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 525));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 526));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 526));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18908:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18909:6: a59_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15776);
                            	    a59_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a59_0 != null) {
                            	      							if (a59_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a59_0);
                            	      								completedElement(a59_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a59_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 527));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 527));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop99;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 528));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 529));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 529));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_kermeta_language_behavior_CallFeature_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallFeature"


    // $ANTLR start "parse_org_kermeta_language_behavior_JavaStaticCall"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19076:1: parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null] : a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' ;
    public final org.kermeta.language.behavior.JavaStaticCall parse_org_kermeta_language_behavior_JavaStaticCall() throws RecognitionException {
        org.kermeta.language.behavior.JavaStaticCall element =  null;
        int parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.behavior.Expression a5_0 = null;

        org.kermeta.language.behavior.Expression a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19079:1: (a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19080:2: a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')'
            {
            a0=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_JavaStaticCall15849); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 530));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19092:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19093:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15867); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 531));
              	
            }
            a2=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_JavaStaticCall15888); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 532));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19137:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19138:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15906); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 533));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_JavaStaticCall15927); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 534));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 534));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19201:2: ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==IDENTIFIER||(LA103_0>=INTEGER && LA103_0<=BOOLEAN)||LA103_0==32||LA103_0==37||LA103_0==55||LA103_0==69||(LA103_0>=72 && LA103_0<=73)||LA103_0==76||LA103_0==79||(LA103_0>=81 && LA103_0<=82)||LA103_0==85||(LA103_0>=92 && LA103_0<=93)||LA103_0==95) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19202:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19202:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19203:4: (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19203:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19204:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall15956);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 535));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 535));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19226:4: ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==24) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19227:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19227:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19228:6: a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a6=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_JavaStaticCall15997); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 536));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 536));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19258:6: (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19259:7: a7_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16031);
                    	    a7_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      							}
                    	      							if (a7_0 != null) {
                    	      								if (a7_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a7_0);
                    	      									completedElement(a7_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a7_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 537));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 537));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop102;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 538));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 538));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 539));
              	
            }
            a8=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_JavaStaticCall16105); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 540));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 540));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_JavaStaticCall"


    // $ANTLR start "parse_org_kermeta_language_behavior_VoidLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19349:1: parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null] : a0= 'Void' ;
    public final org.kermeta.language.behavior.VoidLiteral parse_org_kermeta_language_behavior_VoidLiteral() throws RecognitionException {
        org.kermeta.language.behavior.VoidLiteral element =  null;
        int parse_org_kermeta_language_behavior_VoidLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19352:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19353:2: a0= 'Void'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_behavior_VoidLiteral16134); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 541));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 541));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_kermeta_language_behavior_VoidLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VoidLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallValue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19403:1: parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null] : a0= 'value' ;
    public final org.kermeta.language.behavior.CallValue parse_org_kermeta_language_behavior_CallValue() throws RecognitionException {
        org.kermeta.language.behavior.CallValue element =  null;
        int parse_org_kermeta_language_behavior_CallValue_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19406:1: (a0= 'value' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19407:2: a0= 'value'
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_behavior_CallValue16163); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 542));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_kermeta_language_behavior_CallValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallValue"


    // $ANTLR start "parse_org_kermeta_language_behavior_EmptyExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19457:1: parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null] : a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.EmptyExpression parse_org_kermeta_language_behavior_EmptyExpression() throws RecognitionException {
        org.kermeta.language.behavior.EmptyExpression element =  null;
        int parse_org_kermeta_language_behavior_EmptyExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19460:1: (a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19461:2: a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}'
            {
            a0=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_EmptyExpression16192); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 543));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_EmptyExpression16206); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 544));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 544));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 544));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 544));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 544));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19489:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( ((LA105_0>=39 && LA105_0<=40)||LA105_0==47||LA105_0==94) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19490:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19490:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    int alt104=4;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt104=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt104=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt104=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt104=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 104, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt104) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19491:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression16229); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 545));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16249); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 546));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19515:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19516:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16275); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 547));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 547));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 547));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 547));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 547));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19557:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_EmptyExpression16316); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 548));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16336); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 549));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19581:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19582:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16362);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 550));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 550));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 550));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 550));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 550));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19608:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_behavior_EmptyExpression16398); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 551));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16418); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 552));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 552));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19643:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19644:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression16444);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 553));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 553));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 553));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 553));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 553));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19670:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression16480); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 554));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16500); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 555));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19694:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19695:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16526); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 556));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 556));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 556));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 556));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 556));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 557));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 557));
              	
            }
            a14=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_EmptyExpression16572); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 558));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 558));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_kermeta_language_behavior_EmptyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_EmptyExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19799:1: parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null] : a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' ;
    public final org.kermeta.language.behavior.LambdaExpression parse_org_kermeta_language_behavior_LambdaExpression() throws RecognitionException {
        org.kermeta.language.behavior.LambdaExpression element =  null;
        int parse_org_kermeta_language_behavior_LambdaExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.LambdaParameter a16_0 = null;

        org.kermeta.language.behavior.Expression a19_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19802:1: (a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19803:2: a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}'
            {
            a0=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression16601); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 559));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaExpression16615); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 560));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 560));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19833:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( ((LA107_0>=39 && LA107_0<=40)||LA107_0==47||LA107_0==94||(LA107_0>=96 && LA107_0<=97)) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19834:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19834:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    int alt106=6;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt106=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt106=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt106=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt106=4;
            	        }
            	        break;
            	    case 96:
            	        {
            	        alt106=5;
            	        }
            	        break;
            	    case 97:
            	        {
            	        alt106=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 106, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt106) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19835:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression16638); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 561));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16658); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 562));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19859:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19860:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16684); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 563));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 563));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 563));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 563));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 563));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 563));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 563));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19903:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaExpression16725); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 564));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16745); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 565));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19927:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19928:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression16771);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 566));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 566));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 566));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 566));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 566));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 566));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 566));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19956:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_behavior_LambdaExpression16807); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 567));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16827); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 568));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 568));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19991:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19992:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression16853);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 569));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 569));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 569));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 569));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 569));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 569));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 569));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20020:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression16889); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 570));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16909); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 571));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20044:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20045:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16935); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 572));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 572));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 572));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 572));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 572));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 572));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 572));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20088:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            {
            	            a14=(Token)match(input,96,FOLLOW_96_in_parse_org_kermeta_language_behavior_LambdaExpression16976); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 573));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16996); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 574));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20112:4: (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20113:5: a16_0= parse_org_kermeta_language_behavior_LambdaParameter
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17022);
            	            a16_0=parse_org_kermeta_language_behavior_LambdaParameter();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 575));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 575));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 575));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 575));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 575));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 575));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 575));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20141:8: a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a17=(Token)match(input,97,FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17058); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 576));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17078); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 577));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20183:4: (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20184:5: a19_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17104);
            	            a19_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a19_0 != null) {
            	              						if (a19_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
            	              							completedElement(a19_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a19_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 578));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 578));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 578));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 578));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 578));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 578));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 578));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 579));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 579));
              	
            }
            a20=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaExpression17145); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 580));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 580));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_kermeta_language_behavior_LambdaExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaParameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20274:1: parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null] : a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.LambdaParameter parse_org_kermeta_language_behavior_LambdaParameter() throws RecognitionException {
        org.kermeta.language.behavior.LambdaParameter element =  null;
        int parse_org_kermeta_language_behavior_LambdaParameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.behavior.TypeReference a13_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20277:1: (a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20278:2: a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}'
            {
            a0=(Token)match(input,98,FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaParameter17174); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 581));
              	
            }
            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaParameter17188); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 582));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 582));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 582));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 582));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 582));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20306:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( ((LA109_0>=39 && LA109_0<=40)||LA109_0==44||LA109_0==49) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20307:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20307:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    int alt108=4;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt108=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt108=2;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt108=3;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt108=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 108, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt108) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20308:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter17211); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 583));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17231); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 584));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20332:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20333:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17257); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 585));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20374:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaParameter17298); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 586));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17318); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 587));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20398:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20399:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17344);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 588));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 588));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 588));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 588));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 588));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20425:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_behavior_LambdaParameter17380); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 589));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17400); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 590));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20449:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20450:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17426); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 591));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 591));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 591));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 591));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 591));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20487:8: a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            {
            	            a11=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaParameter17467); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_389, 592));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17487); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 593));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20511:4: (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20512:5: a13_0= parse_org_kermeta_language_behavior_TypeReference
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter17513);
            	            a13_0=parse_org_kermeta_language_behavior_TypeReference();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a13_0 != null) {
            	              						if (a13_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
            	              							completedElement(a13_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a13_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 594));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 594));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 594));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 594));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 594));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 595));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 595));
              	
            }
            a14=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaParameter17554); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 596));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 596));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 596));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 596));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 596));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 596));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 596));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_kermeta_language_behavior_LambdaParameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaParameter"


    // $ANTLR start "parse_org_kermeta_language_behavior_Expression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20568:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );
    public final org.kermeta.language.behavior.Expression parse_org_kermeta_language_behavior_Expression() throws RecognitionException {
        org.kermeta.language.behavior.Expression element =  null;
        int parse_org_kermeta_language_behavior_Expression_StartIndex = input.index();
        org.kermeta.language.behavior.Block c0 = null;

        org.kermeta.language.behavior.Raise c1 = null;

        org.kermeta.language.behavior.BooleanLiteral c2 = null;

        org.kermeta.language.behavior.IntegerLiteral c3 = null;

        org.kermeta.language.behavior.StringLiteral c4 = null;

        org.kermeta.language.behavior.Conditional c5 = null;

        org.kermeta.language.behavior.Loop c6 = null;

        org.kermeta.language.behavior.VariableDecl c7 = null;

        org.kermeta.language.behavior.TypeLiteral c8 = null;

        org.kermeta.language.behavior.CallResult c9 = null;

        org.kermeta.language.behavior.CallSuperOperation c10 = null;

        org.kermeta.language.behavior.Assignment c11 = null;

        org.kermeta.language.behavior.CallVariable c12 = null;

        org.kermeta.language.behavior.SelfExpression c13 = null;

        org.kermeta.language.behavior.CallFeature c14 = null;

        org.kermeta.language.behavior.JavaStaticCall c15 = null;

        org.kermeta.language.behavior.VoidLiteral c16 = null;

        org.kermeta.language.behavior.CallValue c17 = null;

        org.kermeta.language.behavior.EmptyExpression c18 = null;

        org.kermeta.language.behavior.LambdaExpression c19 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20569:1: (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression )
            int alt110=20;
            alt110 = dfa110.predict(input);
            switch (alt110) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20570:2: c0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression17579);
                    c0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20571:4: c1= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression17589);
                    c1=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20572:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression17599);
                    c2=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20573:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression17609);
                    c3=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20574:4: c4= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression17619);
                    c4=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20575:4: c5= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression17629);
                    c5=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20576:4: c6= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression17639);
                    c6=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20577:4: c7= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression17649);
                    c7=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20578:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression17659);
                    c8=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20579:4: c9= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression17669);
                    c9=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20580:4: c10= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression17679);
                    c10=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20581:4: c11= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression17689);
                    c11=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20582:4: c12= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression17699);
                    c12=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20583:4: c13= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression17709);
                    c13=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20584:4: c14= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression17719);
                    c14=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20585:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression17729);
                    c15=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20586:4: c16= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression17739);
                    c16=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20587:4: c17= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression17749);
                    c17=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20588:4: c18= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression17759);
                    c18=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20589:4: c19= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression17769);
                    c19=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_kermeta_language_behavior_Expression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Expression"


    // $ANTLR start "parse_org_kermeta_language_structure_Type"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20593:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );
    public final org.kermeta.language.structure.Type parse_org_kermeta_language_structure_Type() throws RecognitionException {
        org.kermeta.language.structure.Type element =  null;
        int parse_org_kermeta_language_structure_Type_StartIndex = input.index();
        org.kermeta.language.structure.Class c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.UnresolvedType c3 = null;

        org.kermeta.language.structure.VoidType c4 = null;

        org.kermeta.language.structure.ModelType c5 = null;

        org.kermeta.language.structure.ObjectTypeVariable c6 = null;

        org.kermeta.language.structure.ModelTypeVariable c7 = null;

        org.kermeta.language.structure.VirtualType c8 = null;

        org.kermeta.language.structure.ProductType c9 = null;

        org.kermeta.language.structure.FunctionType c10 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20594:1: (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType )
            int alt111=11;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20595:2: c0= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type17790);
                    c0=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20596:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type17800);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20597:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type17810);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20598:4: c3= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type17820);
                    c3=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20599:4: c4= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type17830);
                    c4=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20600:4: c5= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type17840);
                    c5=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20601:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type17850);
                    c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20602:4: c7= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type17860);
                    c7=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20603:4: c8= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type17870);
                    c8=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20604:4: c9= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type17880);
                    c9=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20605:4: c10= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type17890);
                    c10=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_kermeta_language_structure_Type_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Type"

    // $ANTLR start synpred1_Kermeta
    public final void synpred1_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4416:3: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4416:3: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_Kermeta

    // $ANTLR start synpred3_Kermeta
    public final void synpred3_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4418:8: (c2= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4418:8: c2= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110);
        c2=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_Kermeta

    // $ANTLR start synpred4_Kermeta
    public final void synpred4_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4419:8: (c3= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4419:8: c3= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124);
        c3=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_Kermeta

    // $ANTLR start synpred5_Kermeta
    public final void synpred5_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4420:8: (c4= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4420:8: c4= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138);
        c4=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_Kermeta

    // $ANTLR start synpred6_Kermeta
    public final void synpred6_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4421:8: (c5= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4421:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152);
        c5=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_Kermeta

    // $ANTLR start synpred12_Kermeta
    public final void synpred12_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4780:4: ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4780:4: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4780:4: ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4781:5: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4781:5: (a6_0= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4782:6: a6_0= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred12_Kermeta672);
        a6_0=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred12_Kermeta

    // $ANTLR start synpred15_Kermeta
    public final void synpred15_Kermeta_fragment() throws RecognitionException {   
        Token a7=null;
        Token a9=null;
        org.kermeta.language.structure.TypeDefinition a8_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4833:6: (a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}' )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4833:6: a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}'
        {
        a7=(Token)match(input,18,FOLLOW_18_in_synpred15_Kermeta729); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4853:3: ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
        int cnt114=0;
        loop114:
        do {
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( ((LA114_0>=IDENTIFIER && LA114_0<=PRIMITIVE_TYPE)||(LA114_0>=20 && LA114_0<=22)||LA114_0==35||LA114_0==42||LA114_0==53) ) {
                alt114=1;
            }


            switch (alt114) {
        	case 1 :
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4854:4: ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4854:4: ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4855:5: (a8_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    {
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4855:5: (a8_0= parse_org_kermeta_language_structure_TypeDefinition )
        	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4856:6: a8_0= parse_org_kermeta_language_structure_TypeDefinition
        	    {
        	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred15_Kermeta764);
        	    a8_0=parse_org_kermeta_language_structure_TypeDefinition();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt114 >= 1 ) break loop114;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(114, input);
                    throw eee;
            }
            cnt114++;
        } while (true);

        a9=(Token)match(input,19,FOLLOW_19_in_synpred15_Kermeta815); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_Kermeta

    // $ANTLR start synpred21_Kermeta
    public final void synpred21_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5221:3: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5221:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5221:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5222:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5222:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5223:5: a9_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred21_Kermeta1311);
        a9_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred21_Kermeta

    // $ANTLR start synpred30_Kermeta
    public final void synpred30_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5781:3: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5781:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5781:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5782:4: a0_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred30_Kermeta1950);
        a0_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_Kermeta

    // $ANTLR start synpred42_Kermeta
    public final void synpred42_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7231:2: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7231:2: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred42_Kermeta3471);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_Kermeta

    // $ANTLR start synpred43_Kermeta
    public final void synpred43_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Using c1 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7232:4: (c1= parse_org_kermeta_language_structure_Using )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7232:4: c1= parse_org_kermeta_language_structure_Using
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred43_Kermeta3481);
        c1=parse_org_kermeta_language_structure_Using();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred43_Kermeta

    // $ANTLR start synpred44_Kermeta
    public final void synpred44_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Require c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7233:4: (c2= parse_org_kermeta_language_structure_Require )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7233:4: c2= parse_org_kermeta_language_structure_Require
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred44_Kermeta3491);
        c2=parse_org_kermeta_language_structure_Require();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_Kermeta

    // $ANTLR start synpred45_Kermeta
    public final void synpred45_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Package c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7234:4: (c3= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7234:4: c3= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred45_Kermeta3501);
        c3=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_Kermeta

    // $ANTLR start synpred46_Kermeta
    public final void synpred46_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ClassDefinition c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7235:4: (c4= parse_org_kermeta_language_structure_ClassDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7235:4: c4= parse_org_kermeta_language_structure_ClassDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred46_Kermeta3511);
        c4=parse_org_kermeta_language_structure_ClassDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_Kermeta

    // $ANTLR start synpred47_Kermeta
    public final void synpred47_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7236:4: (c5= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7236:4: c5= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred47_Kermeta3521);
        c5=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_Kermeta

    // $ANTLR start synpred48_Kermeta
    public final void synpred48_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7237:4: (c6= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7237:4: c6= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred48_Kermeta3531);
        c6=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_Kermeta

    // $ANTLR start synpred49_Kermeta
    public final void synpred49_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c7 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7238:4: (c7= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7238:4: c7= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred49_Kermeta3541);
        c7=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_Kermeta

    // $ANTLR start synpred50_Kermeta
    public final void synpred50_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7239:4: (c8= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7239:4: c8= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred50_Kermeta3551);
        c8=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_Kermeta

    // $ANTLR start synpred51_Kermeta
    public final void synpred51_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Enumeration c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7240:4: (c9= parse_org_kermeta_language_structure_Enumeration )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7240:4: c9= parse_org_kermeta_language_structure_Enumeration
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred51_Kermeta3561);
        c9=parse_org_kermeta_language_structure_Enumeration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_Kermeta

    // $ANTLR start synpred52_Kermeta
    public final void synpred52_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.EnumerationLiteral c10 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7241:4: (c10= parse_org_kermeta_language_structure_EnumerationLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7241:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred52_Kermeta3571);
        c10=parse_org_kermeta_language_structure_EnumerationLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_Kermeta

    // $ANTLR start synpred53_Kermeta
    public final void synpred53_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7242:4: (c11= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7242:4: c11= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred53_Kermeta3581);
        c11=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_Kermeta

    // $ANTLR start synpred54_Kermeta
    public final void synpred54_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.PrimitiveType c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7243:4: (c12= parse_org_kermeta_language_structure_PrimitiveType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7243:4: c12= parse_org_kermeta_language_structure_PrimitiveType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred54_Kermeta3591);
        c12=parse_org_kermeta_language_structure_PrimitiveType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_Kermeta

    // $ANTLR start synpred55_Kermeta
    public final void synpred55_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7244:4: (c13= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7244:4: c13= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred55_Kermeta3601);
        c13=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_Kermeta

    // $ANTLR start synpred56_Kermeta
    public final void synpred56_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VoidType c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7245:4: (c14= parse_org_kermeta_language_structure_VoidType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7245:4: c14= parse_org_kermeta_language_structure_VoidType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred56_Kermeta3611);
        c14=parse_org_kermeta_language_structure_VoidType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_Kermeta

    // $ANTLR start synpred58_Kermeta
    public final void synpred58_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c16 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7247:4: (c16= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7247:4: c16= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred58_Kermeta3631);
        c16=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_Kermeta

    // $ANTLR start synpred60_Kermeta
    public final void synpred60_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c18 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7249:4: (c18= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7249:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred60_Kermeta3651);
        c18=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_Kermeta

    // $ANTLR start synpred61_Kermeta
    public final void synpred61_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition c19 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7250:4: (c19= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7250:4: c19= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred61_Kermeta3661);
        c19=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_Kermeta

    // $ANTLR start synpred63_Kermeta
    public final void synpred63_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c21 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7252:4: (c21= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7252:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred63_Kermeta3681);
        c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_Kermeta

    // $ANTLR start synpred65_Kermeta
    public final void synpred65_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c23 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7254:4: (c23= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7254:4: c23= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred65_Kermeta3701);
        c23=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_Kermeta

    // $ANTLR start synpred70_Kermeta
    public final void synpred70_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeReference c28 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7259:4: (c28= parse_org_kermeta_language_behavior_TypeReference )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7259:4: c28= parse_org_kermeta_language_behavior_TypeReference
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred70_Kermeta3751);
        c28=parse_org_kermeta_language_behavior_TypeReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_Kermeta

    // $ANTLR start synpred72_Kermeta
    public final void synpred72_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c30 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7261:4: (c30= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7261:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred72_Kermeta3771);
        c30=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_Kermeta

    // $ANTLR start synpred73_Kermeta
    public final void synpred73_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c31 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7262:4: (c31= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7262:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred73_Kermeta3781);
        c31=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred73_Kermeta

    // $ANTLR start synpred74_Kermeta
    public final void synpred74_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c32 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7263:4: (c32= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7263:4: c32= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred74_Kermeta3791);
        c32=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_Kermeta

    // $ANTLR start synpred78_Kermeta
    public final void synpred78_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c36 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7267:4: (c36= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7267:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred78_Kermeta3831);
        c36=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred78_Kermeta

    // $ANTLR start synpred79_Kermeta
    public final void synpred79_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c37 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7268:4: (c37= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7268:4: c37= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred79_Kermeta3841);
        c37=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_Kermeta

    // $ANTLR start synpred81_Kermeta
    public final void synpred81_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c39 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7270:4: (c39= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7270:4: c39= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred81_Kermeta3861);
        c39=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred81_Kermeta

    // $ANTLR start synpred82_Kermeta
    public final void synpred82_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c40 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7271:4: (c40= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7271:4: c40= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred82_Kermeta3871);
        c40=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_Kermeta

    // $ANTLR start synpred83_Kermeta
    public final void synpred83_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c41 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7272:4: (c41= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7272:4: c41= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred83_Kermeta3881);
        c41=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_Kermeta

    // $ANTLR start synpred84_Kermeta
    public final void synpred84_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c42 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7273:4: (c42= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7273:4: c42= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred84_Kermeta3891);
        c42=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_Kermeta

    // $ANTLR start synpred85_Kermeta
    public final void synpred85_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c43 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7274:4: (c43= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7274:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred85_Kermeta3901);
        c43=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred85_Kermeta

    // $ANTLR start synpred86_Kermeta
    public final void synpred86_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.VoidLiteral c44 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7275:4: (c44= parse_org_kermeta_language_behavior_VoidLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7275:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred86_Kermeta3911);
        c44=parse_org_kermeta_language_behavior_VoidLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_Kermeta

    // $ANTLR start synpred103_Kermeta
    public final void synpred103_Kermeta_fragment() throws RecognitionException {   
        Token a0=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8324:3: ( (a0= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8324:3: (a0= IDENTIFIER )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8324:3: (a0= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8325:4: a0= IDENTIFIER
        {
        a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred103_Kermeta5261); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred103_Kermeta

    // $ANTLR start synpred166_Kermeta
    public final void synpred166_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12576:8: ( (a4_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12576:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12576:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12577:5: a4_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred166_Kermeta10293);
        a4_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred166_Kermeta

    // $ANTLR start synpred167_Kermeta
    public final void synpred167_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12614:8: ( (a5_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12614:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12614:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12615:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred167_Kermeta10335);
        a5_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred167_Kermeta

    // $ANTLR start synpred168_Kermeta
    public final void synpred168_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12652:8: ( (a6_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12652:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12652:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12653:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred168_Kermeta10377);
        a6_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred168_Kermeta

    // $ANTLR start synpred170_Kermeta
    public final void synpred170_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a8_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12728:8: ( (a8_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12728:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12728:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12729:5: a8_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred170_Kermeta10461);
        a8_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred170_Kermeta

    // $ANTLR start synpred171_Kermeta
    public final void synpred171_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12766:8: ( (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12766:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12766:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12767:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred171_Kermeta10503);
        a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred171_Kermeta

    // $ANTLR start synpred178_Kermeta
    public final void synpred178_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13707:3: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13707:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13707:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13708:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred178_Kermeta11274);
        a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred178_Kermeta

    // $ANTLR start synpred180_Kermeta
    public final void synpred180_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13779:6: ( (a6_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13779:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13779:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13780:4: a6_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred180_Kermeta11342);
        a6_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred180_Kermeta

    // $ANTLR start synpred181_Kermeta
    public final void synpred181_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13815:6: ( (a7_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13815:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13815:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13816:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred181_Kermeta11376);
        a7_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred181_Kermeta

    // $ANTLR start synpred183_Kermeta
    public final void synpred183_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13887:6: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13887:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13887:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13888:4: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred183_Kermeta11444);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred183_Kermeta

    // $ANTLR start synpred184_Kermeta
    public final void synpred184_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a10_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13923:6: ( (a10_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13923:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13923:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13924:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred184_Kermeta11478);
        a10_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred184_Kermeta

    // $ANTLR start synpred188_Kermeta
    public final void synpred188_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a16_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14109:8: ( (a16_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14109:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14109:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14110:5: a16_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred188_Kermeta11695);
        a16_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred188_Kermeta

    // $ANTLR start synpred189_Kermeta
    public final void synpred189_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a17_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14132:8: ( (a17_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14132:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14132:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14133:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred189_Kermeta11737);
        a17_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred189_Kermeta

    // $ANTLR start synpred191_Kermeta
    public final void synpred191_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a19_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14178:8: ( (a19_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14178:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14178:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14179:5: a19_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred191_Kermeta11821);
        a19_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred191_Kermeta

    // $ANTLR start synpred195_Kermeta
    public final void synpred195_Kermeta_fragment() throws RecognitionException {   
        Token a4=null;
        org.kermeta.language.behavior.Expression a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14489:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        a4=(Token)match(input,78,FOLLOW_78_in_synpred195_Kermeta12124); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14519:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14520:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14520:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14521:6: a5_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred195_Kermeta12157);
        a5_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred195_Kermeta

    // $ANTLR start synpred199_Kermeta
    public final void synpred199_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15262:4: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15262:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15262:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15263:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred199_Kermeta12699);
        a0_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred199_Kermeta

    // $ANTLR start synpred200_Kermeta
    public final void synpred200_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a1_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15286:8: ( (a1_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15286:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15286:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15287:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred200_Kermeta12741);
        a1_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred200_Kermeta

    // $ANTLR start synpred202_Kermeta
    public final void synpred202_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15436:4: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15436:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15436:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15437:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred202_Kermeta12934);
        a6_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred202_Kermeta

    // $ANTLR start synpred203_Kermeta
    public final void synpred203_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15498:8: ( (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15498:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15498:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15499:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred203_Kermeta12976);
        a7_0=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred203_Kermeta

    // $ANTLR start synpred205_Kermeta
    public final void synpred205_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:8: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15623:5: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred205_Kermeta13060);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred205_Kermeta

    // $ANTLR start synpred207_Kermeta
    public final void synpred207_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a11_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:8: ( (a11_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15747:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred207_Kermeta13144);
        a11_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred207_Kermeta

    // $ANTLR start synpred209_Kermeta
    public final void synpred209_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:8: ( (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15871:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred209_Kermeta13228);
        a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred209_Kermeta

    // $ANTLR start synpred210_Kermeta
    public final void synpred210_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15932:8: ( (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15932:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15932:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15933:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred210_Kermeta13270);
        a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred210_Kermeta

    // $ANTLR start synpred213_Kermeta
    public final void synpred213_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a2_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16340:6: ( (a2_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16340:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16340:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16341:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred213_Kermeta13513);
        a2_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred213_Kermeta

    // $ANTLR start synpred216_Kermeta
    public final void synpred216_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16436:6: ( (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16436:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16436:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16437:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred216_Kermeta13615);
        a5_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred216_Kermeta

    // $ANTLR start synpred217_Kermeta
    public final void synpred217_Kermeta_fragment() throws RecognitionException {   
        Token a7=null;
        Token a8=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16516:4: (a7= '.' (a8= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16516:4: a7= '.' (a8= IDENTIFIER )
        {
        a7=(Token)match(input,86,FOLLOW_86_in_synpred217_Kermeta13688); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16528:4: (a8= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16529:5: a8= IDENTIFIER
        {
        a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred217_Kermeta13714); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred217_Kermeta

    // $ANTLR start synpred221_Kermeta
    public final void synpred221_Kermeta_fragment() throws RecognitionException {   
        Token a16=null;
        Token a17=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16772:8: (a16= '.' (a17= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16772:8: a16= '.' (a17= IDENTIFIER )
        {
        a16=(Token)match(input,86,FOLLOW_86_in_synpred221_Kermeta14084); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16784:4: (a17= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16785:5: a17= IDENTIFIER
        {
        a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred221_Kermeta14110); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred221_Kermeta

    // $ANTLR start synpred231_Kermeta
    public final void synpred231_Kermeta_fragment() throws RecognitionException {   
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        org.kermeta.language.behavior.Expression a33_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17257:4: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17257:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17257:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17258:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17258:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
        int alt155=4;
        switch ( input.LA(1) ) {
        case 88:
            {
            alt155=1;
            }
            break;
        case 89:
            {
            alt155=2;
            }
            break;
        case 90:
            {
            alt155=3;
            }
            break;
        case 91:
            {
            alt155=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 155, 0, input);

            throw nvae;
        }

        switch (alt155) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17259:6: a29= '+'
                {
                a29=(Token)match(input,88,FOLLOW_88_in_synpred231_Kermeta14562); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17290:12: a30= '-'
                {
                a30=(Token)match(input,89,FOLLOW_89_in_synpred231_Kermeta14600); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17321:12: a31= '/'
                {
                a31=(Token)match(input,90,FOLLOW_90_in_synpred231_Kermeta14638); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17352:12: a32= '*'
                {
                a32=(Token)match(input,91,FOLLOW_91_in_synpred231_Kermeta14676); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17406:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17407:6: a33_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred231_Kermeta14725);
        a33_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred231_Kermeta

    // $ANTLR start synpred234_Kermeta
    public final void synpred234_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a35_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17647:6: ( (a35_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17647:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17647:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17648:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred234_Kermeta14830);
        a35_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred234_Kermeta

    // $ANTLR start synpred237_Kermeta
    public final void synpred237_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a38_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:6: ( (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17866:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17867:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred237_Kermeta14932);
        a38_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred237_Kermeta

    // $ANTLR start synpred238_Kermeta
    public final void synpred238_Kermeta_fragment() throws RecognitionException {   
        Token a40=null;
        Token a41=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18069:4: (a40= '.' (a41= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18069:4: a40= '.' (a41= IDENTIFIER )
        {
        a40=(Token)match(input,86,FOLLOW_86_in_synpred238_Kermeta15005); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18081:4: (a41= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18082:5: a41= IDENTIFIER
        {
        a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred238_Kermeta15031); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred238_Kermeta

    // $ANTLR start synpred242_Kermeta
    public final void synpred242_Kermeta_fragment() throws RecognitionException {   
        Token a49=null;
        Token a50=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18407:8: (a49= '.' (a50= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18407:8: a49= '.' (a50= IDENTIFIER )
        {
        a49=(Token)match(input,86,FOLLOW_86_in_synpred242_Kermeta15401); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18419:4: (a50= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18420:5: a50= IDENTIFIER
        {
        a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred242_Kermeta15427); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred242_Kermeta

    // $ANTLR start synpred248_Kermeta
    public final void synpred248_Kermeta_fragment() throws RecognitionException {   
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.Expression a59_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18759:4: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18759:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18759:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18760:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18760:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
        int alt172=4;
        switch ( input.LA(1) ) {
        case 88:
            {
            alt172=1;
            }
            break;
        case 89:
            {
            alt172=2;
            }
            break;
        case 90:
            {
            alt172=3;
            }
            break;
        case 91:
            {
            alt172=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 172, 0, input);

            throw nvae;
        }

        switch (alt172) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18761:6: a55= '+'
                {
                a55=(Token)match(input,88,FOLLOW_88_in_synpred248_Kermeta15613); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18792:12: a56= '-'
                {
                a56=(Token)match(input,89,FOLLOW_89_in_synpred248_Kermeta15651); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18823:12: a57= '/'
                {
                a57=(Token)match(input,90,FOLLOW_90_in_synpred248_Kermeta15689); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18854:12: a58= '*'
                {
                a58=(Token)match(input,91,FOLLOW_91_in_synpred248_Kermeta15727); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18908:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18909:6: a59_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred248_Kermeta15776);
        a59_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred248_Kermeta

    // $ANTLR start synpred267_Kermeta
    public final void synpred267_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20572:4: (c2= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20572:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred267_Kermeta17599);
        c2=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred267_Kermeta

    // $ANTLR start synpred268_Kermeta
    public final void synpred268_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20573:4: (c3= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20573:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred268_Kermeta17609);
        c3=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred268_Kermeta

    // $ANTLR start synpred269_Kermeta
    public final void synpred269_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20574:4: (c4= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20574:4: c4= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred269_Kermeta17619);
        c4=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred269_Kermeta

    // $ANTLR start synpred273_Kermeta
    public final void synpred273_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20578:4: (c8= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20578:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred273_Kermeta17659);
        c8=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred273_Kermeta

    // $ANTLR start synpred274_Kermeta
    public final void synpred274_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20579:4: (c9= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20579:4: c9= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred274_Kermeta17669);
        c9=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_Kermeta

    // $ANTLR start synpred276_Kermeta
    public final void synpred276_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20581:4: (c11= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20581:4: c11= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred276_Kermeta17689);
        c11=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_Kermeta

    // $ANTLR start synpred277_Kermeta
    public final void synpred277_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20582:4: (c12= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20582:4: c12= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred277_Kermeta17699);
        c12=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred277_Kermeta

    // $ANTLR start synpred278_Kermeta
    public final void synpred278_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20583:4: (c13= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20583:4: c13= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred278_Kermeta17709);
        c13=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_Kermeta

    // $ANTLR start synpred279_Kermeta
    public final void synpred279_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20584:4: (c14= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20584:4: c14= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred279_Kermeta17719);
        c14=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_Kermeta

    // $ANTLR start synpred280_Kermeta
    public final void synpred280_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c15 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20585:4: (c15= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20585:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred280_Kermeta17729);
        c15=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_Kermeta

    // $ANTLR start synpred284_Kermeta
    public final void synpred284_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20595:2: (c0= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20595:2: c0= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred284_Kermeta17790);
        c0=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred284_Kermeta

    // $ANTLR start synpred287_Kermeta
    public final void synpred287_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20598:4: (c3= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20598:4: c3= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred287_Kermeta17820);
        c3=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred287_Kermeta

    // $ANTLR start synpred289_Kermeta
    public final void synpred289_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20600:4: (c5= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20600:4: c5= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred289_Kermeta17840);
        c5=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred289_Kermeta

    // $ANTLR start synpred290_Kermeta
    public final void synpred290_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20601:4: (c6= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20601:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred290_Kermeta17850);
        c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred290_Kermeta

    // $ANTLR start synpred292_Kermeta
    public final void synpred292_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20603:4: (c8= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20603:4: c8= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred292_Kermeta17870);
        c8=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred292_Kermeta

    // Delegated rules

    public final boolean synpred1_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred200_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA111 dfa111 = new DFA111(this);
    static final String DFA1_eotS =
        "\20\uffff";
    static final String DFA1_eofS =
        "\1\1\17\uffff";
    static final String DFA1_minS =
        "\1\4\3\uffff\1\0\2\uffff\4\0\5\uffff";
    static final String DFA1_maxS =
        "\1\62\3\uffff\1\0\2\uffff\4\0\5\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\4\uffff\1\2\4\uffff\1\6\1\4\1\5\1\7\1\3";
    static final String DFA1_specialS =
        "\4\uffff\1\0\2\uffff\1\1\1\2\1\3\1\4\5\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\4\11\uffff\3\1\10\uffff\1\7\1\10\1\uffff\1\11\2\uffff\1\12"+
            "\11\uffff\1\6\10\uffff\1\13",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "4415:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_Kermeta()) ) {s = 1;}

                        else if ( (synpred4_Kermeta()) ) {s = 12;}

                        else if ( (synpred5_Kermeta()) ) {s = 13;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_7 = input.LA(1);

                         
                        int index1_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_8 = input.LA(1);

                         
                        int index1_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_9 = input.LA(1);

                         
                        int index1_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_10 = input.LA(1);

                         
                        int index1_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_Kermeta()) ) {s = 12;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA10_eotS =
        "\14\uffff";
    static final String DFA10_eofS =
        "\14\uffff";
    static final String DFA10_minS =
        "\1\4\10\uffff\1\0\2\uffff";
    static final String DFA10_maxS =
        "\1\65\10\uffff\1\0\2\uffff";
    static final String DFA10_acceptS =
        "\1\uffff\1\1\10\uffff\1\2\1\3";
    static final String DFA10_specialS =
        "\11\uffff\1\0\2\uffff}>";
    static final String[] DFA10_transitionS = {
            "\2\1\14\uffff\1\11\1\uffff\3\1\14\uffff\1\1\6\uffff\1\1\12\uffff"+
            "\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
    static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
    static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
    static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
    static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
    static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
    static final short[][] DFA10_transition;

    static {
        int numStates = DFA10_transitionS.length;
        DFA10_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
        }
    }

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = DFA10_eot;
            this.eof = DFA10_eof;
            this.min = DFA10_min;
            this.max = DFA10_max;
            this.accept = DFA10_accept;
            this.special = DFA10_special;
            this.transition = DFA10_transition;
        }
        public String getDescription() {
            return "4778:2: ( ( ( (a6_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ | a7= '{' ( ( (a8_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a9= '}' | a10= '{' ( ( (a11_0= parse_org_kermeta_language_structure_Package ) ) )* a12= '}' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_9 = input.LA(1);

                         
                        int index10_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_Kermeta()) ) {s = 10;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index10_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA35_eotS =
        "\111\uffff";
    static final String DFA35_eofS =
        "\1\6\110\uffff";
    static final String DFA35_minS =
        "\1\4\1\uffff\4\0\1\uffff\12\0\1\uffff\1\0\5\uffff\1\0\6\uffff\2"+
        "\0\3\uffff\1\0\1\uffff\3\0\40\uffff";
    static final String DFA35_maxS =
        "\1\142\1\uffff\4\0\1\uffff\12\0\1\uffff\1\0\5\uffff\1\0\6\uffff"+
        "\2\0\3\uffff\1\0\1\uffff\3\0\40\uffff";
    static final String DFA35_acceptS =
        "\1\uffff\1\1\4\uffff\1\2\12\uffff\1\21\1\uffff\1\23\1\24\1\25\1"+
        "\26\1\27\1\uffff\1\30\1\32\1\33\1\34\1\35\1\37\2\uffff\1\43\1\44"+
        "\1\45\1\uffff\1\50\3\uffff\1\57\1\60\1\61\1\62\1\4\1\3\1\5\1\10"+
        "\1\11\1\12\1\14\1\15\1\17\1\22\1\36\1\42\1\46\1\51\1\52\1\54\1\6"+
        "\1\7\1\13\1\16\1\20\1\56\1\31\1\40\1\41\1\47\1\55\1\53";
    static final String DFA35_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\uffff\1\16\5\uffff\1\17\6\uffff\1\20\1\21\3\uffff"+
        "\1\22\1\uffff\1\23\1\24\1\25\40\uffff}>";
    static final String[] DFA35_transitionS = {
            "\1\5\1\17\1\40\1\37\6\uffff\1\3\1\2\1\4\3\uffff\1\7\1\10\1\11"+
            "\2\uffff\1\12\1\13\1\uffff\1\14\2\uffff\1\15\1\46\2\uffff\1"+
            "\16\1\uffff\1\20\1\1\2\uffff\1\21\1\22\3\uffff\1\23\3\uffff"+
            "\1\24\2\uffff\1\25\1\26\1\51\1\uffff\1\27\1\uffff\1\31\1\uffff"+
            "\1\30\3\uffff\1\32\1\33\2\uffff\1\34\1\uffff\1\35\1\36\1\41"+
            "\2\uffff\1\42\2\uffff\1\43\1\uffff\1\44\1\45\2\uffff\1\50\6"+
            "\uffff\1\47\1\52\1\uffff\1\53\2\uffff\1\54",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA35_eot = DFA.unpackEncodedString(DFA35_eotS);
    static final short[] DFA35_eof = DFA.unpackEncodedString(DFA35_eofS);
    static final char[] DFA35_min = DFA.unpackEncodedStringToUnsignedChars(DFA35_minS);
    static final char[] DFA35_max = DFA.unpackEncodedStringToUnsignedChars(DFA35_maxS);
    static final short[] DFA35_accept = DFA.unpackEncodedString(DFA35_acceptS);
    static final short[] DFA35_special = DFA.unpackEncodedString(DFA35_specialS);
    static final short[][] DFA35_transition;

    static {
        int numStates = DFA35_transitionS.length;
        DFA35_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA35_transition[i] = DFA.unpackEncodedString(DFA35_transitionS[i]);
        }
    }

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = DFA35_eot;
            this.eof = DFA35_eof;
            this.min = DFA35_min;
            this.max = DFA35_max;
            this.accept = DFA35_accept;
            this.special = DFA35_special;
            this.transition = DFA35_transition;
        }
        public String getDescription() {
            return "7065:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_2 = input.LA(1);

                         
                        int index35_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_Kermeta()) ) {s = 6;}

                        else if ( (synpred44_Kermeta()) ) {s = 45;}

                         
                        input.seek(index35_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_3 = input.LA(1);

                         
                        int index35_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_Kermeta()) ) {s = 6;}

                        else if ( (synpred43_Kermeta()) ) {s = 46;}

                         
                        input.seek(index35_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_4 = input.LA(1);

                         
                        int index35_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_Kermeta()) ) {s = 6;}

                        else if ( (synpred45_Kermeta()) ) {s = 47;}

                         
                        input.seek(index35_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA35_5 = input.LA(1);

                         
                        int index35_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_Kermeta()) ) {s = 6;}

                        else if ( (synpred45_Kermeta()) ) {s = 47;}

                        else if ( (synpred48_Kermeta()) ) {s = 48;}

                        else if ( (synpred49_Kermeta()) ) {s = 49;}

                        else if ( (synpred50_Kermeta()) ) {s = 50;}

                        else if ( (synpred52_Kermeta()) ) {s = 51;}

                        else if ( (synpred53_Kermeta()) ) {s = 52;}

                        else if ( (synpred55_Kermeta()) ) {s = 53;}

                        else if ( (synpred58_Kermeta()) ) {s = 54;}

                        else if ( (synpred60_Kermeta()) ) {s = 20;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                        else if ( (synpred70_Kermeta()) ) {s = 55;}

                        else if ( (synpred74_Kermeta()) ) {s = 56;}

                        else if ( (synpred78_Kermeta()) ) {s = 57;}

                        else if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred82_Kermeta()) ) {s = 59;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                         
                        input.seek(index35_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA35_7 = input.LA(1);

                         
                        int index35_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 61;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                         
                        input.seek(index35_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA35_8 = input.LA(1);

                         
                        int index35_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 61;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                         
                        input.seek(index35_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA35_9 = input.LA(1);

                         
                        int index35_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 61;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                         
                        input.seek(index35_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA35_10 = input.LA(1);

                         
                        int index35_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_Kermeta()) ) {s = 62;}

                        else if ( (synpred60_Kermeta()) ) {s = 20;}

                         
                        input.seek(index35_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA35_11 = input.LA(1);

                         
                        int index35_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_Kermeta()) ) {s = 62;}

                        else if ( (synpred60_Kermeta()) ) {s = 20;}

                         
                        input.seek(index35_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA35_12 = input.LA(1);

                         
                        int index35_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_Kermeta()) ) {s = 62;}

                        else if ( (synpred60_Kermeta()) ) {s = 20;}

                         
                        input.seek(index35_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA35_13 = input.LA(1);

                         
                        int index35_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_Kermeta()) ) {s = 48;}

                        else if ( (synpred60_Kermeta()) ) {s = 20;}

                         
                        input.seek(index35_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA35_14 = input.LA(1);

                         
                        int index35_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 63;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                         
                        input.seek(index35_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA35_15 = input.LA(1);

                         
                        int index35_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_Kermeta()) ) {s = 64;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                         
                        input.seek(index35_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA35_16 = input.LA(1);

                         
                        int index35_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_Kermeta()) ) {s = 65;}

                        else if ( (synpred86_Kermeta()) ) {s = 66;}

                         
                        input.seek(index35_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA35_18 = input.LA(1);

                         
                        int index35_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_Kermeta()) ) {s = 54;}

                        else if ( (synpred61_Kermeta()) ) {s = 21;}

                         
                        input.seek(index35_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA35_24 = input.LA(1);

                         
                        int index35_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_Kermeta()) ) {s = 23;}

                        else if ( (synpred65_Kermeta()) ) {s = 67;}

                         
                        input.seek(index35_24);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA35_31 = input.LA(1);

                         
                        int index35_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_Kermeta()) ) {s = 68;}

                        else if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                         
                        input.seek(index35_31);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA35_32 = input.LA(1);

                         
                        int index35_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_Kermeta()) ) {s = 69;}

                        else if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                         
                        input.seek(index35_32);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA35_36 = input.LA(1);

                         
                        int index35_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_Kermeta()) ) {s = 70;}

                        else if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred82_Kermeta()) ) {s = 59;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                         
                        input.seek(index35_36);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA35_38 = input.LA(1);

                         
                        int index35_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                         
                        input.seek(index35_38);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA35_39 = input.LA(1);

                         
                        int index35_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                        else if ( (synpred85_Kermeta()) ) {s = 71;}

                         
                        input.seek(index35_39);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA35_40 = input.LA(1);

                         
                        int index35_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_Kermeta()) ) {s = 58;}

                        else if ( (synpred83_Kermeta()) ) {s = 72;}

                        else if ( (synpred84_Kermeta()) ) {s = 60;}

                         
                        input.seek(index35_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA65_eotS =
        "\23\uffff";
    static final String DFA65_eofS =
        "\23\uffff";
    static final String DFA65_minS =
        "\1\4\3\uffff\7\0\10\uffff";
    static final String DFA65_maxS =
        "\1\135\3\uffff\7\0\10\uffff";
    static final String DFA65_acceptS =
        "\1\uffff\1\1\1\2\1\3\7\uffff\1\7\1\12\1\13\1\4\1\5\1\6\1\10\1\11";
    static final String DFA65_specialS =
        "\4\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\10\uffff}>";
    static final String[] DFA65_transitionS = {
            "\1\6\1\uffff\1\12\1\5\30\uffff\1\4\44\uffff\1\15\3\uffff\1\3"+
            "\2\uffff\1\2\2\uffff\1\1\1\uffff\1\7\1\13\2\uffff\1\11\6\uffff"+
            "\1\10\1\14",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA65_eot = DFA.unpackEncodedString(DFA65_eotS);
    static final short[] DFA65_eof = DFA.unpackEncodedString(DFA65_eofS);
    static final char[] DFA65_min = DFA.unpackEncodedStringToUnsignedChars(DFA65_minS);
    static final char[] DFA65_max = DFA.unpackEncodedStringToUnsignedChars(DFA65_maxS);
    static final short[] DFA65_accept = DFA.unpackEncodedString(DFA65_acceptS);
    static final short[] DFA65_special = DFA.unpackEncodedString(DFA65_specialS);
    static final short[][] DFA65_transition;

    static {
        int numStates = DFA65_transitionS.length;
        DFA65_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA65_transition[i] = DFA.unpackEncodedString(DFA65_transitionS[i]);
        }
    }

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = DFA65_eot;
            this.eof = DFA65_eof;
            this.min = DFA65_min;
            this.max = DFA65_max;
            this.accept = DFA65_accept;
            this.special = DFA65_special;
            this.transition = DFA65_transition;
        }
        public String getDescription() {
            return "12461:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_4 = input.LA(1);

                         
                        int index65_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                         
                        input.seek(index65_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_5 = input.LA(1);

                         
                        int index65_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                         
                        input.seek(index65_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA65_6 = input.LA(1);

                         
                        int index65_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                        else if ( (synpred168_Kermeta()) ) {s = 16;}

                         
                        input.seek(index65_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA65_7 = input.LA(1);

                         
                        int index65_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                        else if ( (synpred168_Kermeta()) ) {s = 16;}

                        else if ( (synpred170_Kermeta()) ) {s = 17;}

                         
                        input.seek(index65_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA65_8 = input.LA(1);

                         
                        int index65_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                        else if ( (synpred171_Kermeta()) ) {s = 18;}

                         
                        input.seek(index65_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA65_9 = input.LA(1);

                         
                        int index65_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                         
                        input.seek(index65_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA65_10 = input.LA(1);

                         
                        int index65_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred166_Kermeta()) ) {s = 14;}

                        else if ( (synpred167_Kermeta()) ) {s = 15;}

                         
                        input.seek(index65_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA71_eotS =
        "\21\uffff";
    static final String DFA71_eofS =
        "\21\uffff";
    static final String DFA71_minS =
        "\1\4\1\0\1\uffff\6\0\10\uffff";
    static final String DFA71_maxS =
        "\1\134\1\0\1\uffff\6\0\10\uffff";
    static final String DFA71_acceptS =
        "\2\uffff\1\2\6\uffff\1\5\1\10\1\11\1\1\1\3\1\4\1\7\1\6";
    static final String DFA71_specialS =
        "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\10\uffff}>";
    static final String[] DFA71_transitionS = {
            "\1\4\1\uffff\1\10\1\1\30\uffff\1\3\26\uffff\1\12\15\uffff\1"+
            "\2\11\uffff\1\13\1\uffff\1\5\1\11\2\uffff\1\7\6\uffff\1\6",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
    static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
    static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
    static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
    static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
    static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
    static final short[][] DFA71_transition;

    static {
        int numStates = DFA71_transitionS.length;
        DFA71_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "13706:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_Kermeta()) ) {s = 12;}

                        else if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_4 = input.LA(1);

                         
                        int index71_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                        else if ( (synpred184_Kermeta()) ) {s = 15;}

                         
                        input.seek(index71_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                        else if ( (synpred183_Kermeta()) ) {s = 16;}

                        else if ( (synpred184_Kermeta()) ) {s = 15;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_7 = input.LA(1);

                         
                        int index71_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                         
                        input.seek(index71_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_8 = input.LA(1);

                         
                        int index71_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_Kermeta()) ) {s = 13;}

                        else if ( (synpred181_Kermeta()) ) {s = 14;}

                         
                        input.seek(index71_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA72_eotS =
        "\20\uffff";
    static final String DFA72_eofS =
        "\20\uffff";
    static final String DFA72_minS =
        "\1\4\2\uffff\7\0\6\uffff";
    static final String DFA72_maxS =
        "\1\134\2\uffff\7\0\6\uffff";
    static final String DFA72_acceptS =
        "\1\uffff\1\1\1\2\7\uffff\1\5\1\7\1\10\1\3\1\4\1\6";
    static final String DFA72_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\6\uffff}>";
    static final String[] DFA72_transitionS = {
            "\1\5\1\uffff\1\11\1\4\30\uffff\1\3\26\uffff\1\14\15\uffff\1"+
            "\2\5\uffff\1\1\3\uffff\1\13\1\uffff\1\6\1\12\2\uffff\1\10\6"+
            "\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "14050:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_3 = input.LA(1);

                         
                        int index72_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                         
                        input.seek(index72_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_4 = input.LA(1);

                         
                        int index72_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                         
                        input.seek(index72_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA72_5 = input.LA(1);

                         
                        int index72_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                         
                        input.seek(index72_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA72_6 = input.LA(1);

                         
                        int index72_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                        else if ( (synpred191_Kermeta()) ) {s = 15;}

                         
                        input.seek(index72_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA72_7 = input.LA(1);

                         
                        int index72_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                         
                        input.seek(index72_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA72_8 = input.LA(1);

                         
                        int index72_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                         
                        input.seek(index72_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA72_9 = input.LA(1);

                         
                        int index72_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred188_Kermeta()) ) {s = 13;}

                        else if ( (synpred189_Kermeta()) ) {s = 14;}

                         
                        input.seek(index72_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA81_eotS =
        "\20\uffff";
    static final String DFA81_eofS =
        "\20\uffff";
    static final String DFA81_minS =
        "\1\4\1\uffff\5\0\11\uffff";
    static final String DFA81_maxS =
        "\1\134\1\uffff\5\0\11\uffff";
    static final String DFA81_acceptS =
        "\1\uffff\1\1\5\uffff\1\3\1\5\1\7\1\11\1\6\1\12\1\4\1\2\1\10";
    static final String DFA81_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\4\11\uffff}>";
    static final String[] DFA81_transitionS = {
            "\1\3\1\uffff\1\6\1\2\30\uffff\1\1\4\uffff\1\11\21\uffff\1\10"+
            "\31\uffff\1\4\1\7\2\uffff\1\5\6\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
    static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
    static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
    static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
    static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
    static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
    static final short[][] DFA81_transition;

    static {
        int numStates = DFA81_transitionS.length;
        DFA81_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = DFA81_eot;
            this.eof = DFA81_eof;
            this.min = DFA81_min;
            this.max = DFA81_max;
            this.accept = DFA81_accept;
            this.special = DFA81_special;
            this.transition = DFA81_transition;
        }
        public String getDescription() {
            return "15435:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_2 = input.LA(1);

                         
                        int index81_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred202_Kermeta()) ) {s = 1;}

                        else if ( (synpred210_Kermeta()) ) {s = 10;}

                         
                        input.seek(index81_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_3 = input.LA(1);

                         
                        int index81_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred202_Kermeta()) ) {s = 1;}

                        else if ( (synpred207_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index81_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred202_Kermeta()) ) {s = 1;}

                        else if ( (synpred205_Kermeta()) ) {s = 13;}

                        else if ( (synpred207_Kermeta()) ) {s = 11;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_5 = input.LA(1);

                         
                        int index81_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred202_Kermeta()) ) {s = 1;}

                        else if ( (synpred203_Kermeta()) ) {s = 14;}

                         
                        input.seek(index81_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_6 = input.LA(1);

                         
                        int index81_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred202_Kermeta()) ) {s = 1;}

                        else if ( (synpred209_Kermeta()) ) {s = 15;}

                         
                        input.seek(index81_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA110_eotS =
        "\34\uffff";
    static final String DFA110_eofS =
        "\34\uffff";
    static final String DFA110_minS =
        "\1\4\2\uffff\3\0\3\uffff\1\0\1\uffff\3\0\16\uffff";
    static final String DFA110_maxS =
        "\1\137\2\uffff\3\0\3\uffff\1\0\1\uffff\3\0\16\uffff";
    static final String DFA110_acceptS =
        "\1\uffff\1\1\1\2\3\uffff\1\6\1\7\1\10\1\uffff\1\13\3\uffff\1\21"+
        "\1\22\1\23\1\24\1\3\1\14\1\17\1\4\1\5\1\11\1\15\1\12\1\20\1\16";
    static final String DFA110_specialS =
        "\3\uffff\1\0\1\1\1\2\3\uffff\1\3\1\uffff\1\4\1\5\1\6\16\uffff}>";
    static final String[] DFA110_transitionS = {
            "\1\5\1\uffff\1\4\1\3\30\uffff\1\13\4\uffff\1\16\21\uffff\1\17"+
            "\15\uffff\1\1\2\uffff\1\2\1\6\2\uffff\1\7\2\uffff\1\10\1\uffff"+
            "\1\11\1\12\2\uffff\1\15\6\uffff\1\14\1\20\1\uffff\1\21",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA110_eot = DFA.unpackEncodedString(DFA110_eotS);
    static final short[] DFA110_eof = DFA.unpackEncodedString(DFA110_eofS);
    static final char[] DFA110_min = DFA.unpackEncodedStringToUnsignedChars(DFA110_minS);
    static final char[] DFA110_max = DFA.unpackEncodedStringToUnsignedChars(DFA110_maxS);
    static final short[] DFA110_accept = DFA.unpackEncodedString(DFA110_acceptS);
    static final short[] DFA110_special = DFA.unpackEncodedString(DFA110_specialS);
    static final short[][] DFA110_transition;

    static {
        int numStates = DFA110_transitionS.length;
        DFA110_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA110_transition[i] = DFA.unpackEncodedString(DFA110_transitionS[i]);
        }
    }

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = DFA110_eot;
            this.eof = DFA110_eof;
            this.min = DFA110_min;
            this.max = DFA110_max;
            this.accept = DFA110_accept;
            this.special = DFA110_special;
            this.transition = DFA110_transition;
        }
        public String getDescription() {
            return "20568:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_3 = input.LA(1);

                         
                        int index110_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_Kermeta()) ) {s = 18;}

                        else if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                         
                        input.seek(index110_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA110_4 = input.LA(1);

                         
                        int index110_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred268_Kermeta()) ) {s = 21;}

                        else if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                         
                        input.seek(index110_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA110_5 = input.LA(1);

                         
                        int index110_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_Kermeta()) ) {s = 22;}

                        else if ( (synpred273_Kermeta()) ) {s = 23;}

                        else if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred277_Kermeta()) ) {s = 24;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                         
                        input.seek(index110_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA110_9 = input.LA(1);

                         
                        int index110_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_Kermeta()) ) {s = 25;}

                        else if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred277_Kermeta()) ) {s = 24;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                         
                        input.seek(index110_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA110_11 = input.LA(1);

                         
                        int index110_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                         
                        input.seek(index110_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA110_12 = input.LA(1);

                         
                        int index110_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                        else if ( (synpred280_Kermeta()) ) {s = 26;}

                         
                        input.seek(index110_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA110_13 = input.LA(1);

                         
                        int index110_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Kermeta()) ) {s = 19;}

                        else if ( (synpred278_Kermeta()) ) {s = 27;}

                        else if ( (synpred279_Kermeta()) ) {s = 20;}

                         
                        input.seek(index110_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA111_eotS =
        "\16\uffff";
    static final String DFA111_eofS =
        "\16\uffff";
    static final String DFA111_minS =
        "\1\4\1\0\5\uffff\1\0\6\uffff";
    static final String DFA111_maxS =
        "\1\102\1\0\5\uffff\1\0\6\uffff";
    static final String DFA111_acceptS =
        "\2\uffff\1\2\1\3\1\5\1\6\1\7\1\uffff\1\10\1\12\1\13\1\1\1\4\1\11";
    static final String DFA111_specialS =
        "\1\uffff\1\0\5\uffff\1\1\6\uffff}>";
    static final String[] DFA111_transitionS = {
            "\1\1\1\3\35\uffff\1\2\1\uffff\1\4\4\uffff\1\5\16\uffff\1\6\1"+
            "\uffff\1\10\1\uffff\1\7\3\uffff\1\11\1\12",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
    static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
    static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
    static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
    static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
    static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
    static final short[][] DFA111_transition;

    static {
        int numStates = DFA111_transitionS.length;
        DFA111_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = DFA111_eot;
            this.eof = DFA111_eof;
            this.min = DFA111_min;
            this.max = DFA111_max;
            this.accept = DFA111_accept;
            this.special = DFA111_special;
            this.transition = DFA111_transition;
        }
        public String getDescription() {
            return "20593:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_1 = input.LA(1);

                         
                        int index111_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_Kermeta()) ) {s = 11;}

                        else if ( (synpred287_Kermeta()) ) {s = 12;}

                        else if ( (synpred289_Kermeta()) ) {s = 5;}

                         
                        input.seek(index111_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_7 = input.LA(1);

                         
                        int index111_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_Kermeta()) ) {s = 6;}

                        else if ( (synpred292_Kermeta()) ) {s = 13;}

                         
                        input.seek(index111_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_start96 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_start110 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211 = new BitSet(new long[]{0x000000000001C012L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267 = new BitSet(new long[]{0x0000000000014012L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323 = new BitSet(new long[]{0x0000000000010012L});
    public static final BitSet FOLLOW_14_in_parse_org_kermeta_language_structure_Using379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_kermeta_language_structure_Require408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_org_kermeta_language_structure_Package441 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package463 = new BitSet(new long[]{0x0020040800760030L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package501 = new BitSet(new long[]{0x0000000000010010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package531 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package564 = new BitSet(new long[]{0x0020040800760030L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package616 = new BitSet(new long[]{0x0020040800740030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package672 = new BitSet(new long[]{0x0020040800700032L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package729 = new BitSet(new long[]{0x0020040800700030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package764 = new BitSet(new long[]{0x0020040800780030L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package838 = new BitSet(new long[]{0x0000000000090010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package873 = new BitSet(new long[]{0x0000000000090010L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition972 = new BitSet(new long[]{0x0000000000600000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1014 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1047 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1065 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1095 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1121 = new BitSet(new long[]{0x0000000001040000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1167 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1201 = new BitSet(new long[]{0x0000000001040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ClassDefinition1282 = new BitSet(new long[]{0x0000000096080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1311 = new BitSet(new long[]{0x0000000096080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1367 = new BitSet(new long[]{0x0000000096080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1423 = new BitSet(new long[]{0x0000000080080010L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ClassDefinition1464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_org_kermeta_language_structure_Property1497 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_Property1520 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1548 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1578 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_kermeta_language_structure_Property1654 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1672 = new BitSet(new long[]{0x0000000068000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1702 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1728 = new BitSet(new long[]{0x0000000060000002L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property1783 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1809 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_parse_org_kermeta_language_structure_Property1859 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property1885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation1950 = new BitSet(new long[]{0x0000000080000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation1985 = new BitSet(new long[]{0x0000000080000010L});
    public static final BitSet FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2011 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2029 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2050 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2079 = new BitSet(new long[]{0x0000000209000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2120 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2154 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_Operation2235 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2269 = new BitSet(new long[]{0x0000000209000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2324 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2366 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2492 = new BitSet(new long[]{0x0000000408000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2515 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2541 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2587 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Operation2639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2682 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Parameter2703 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class2761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration2797 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration2815 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Enumeration2836 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2859 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2882 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration2917 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration2950 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Enumeration2998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3071 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_structure_VoidType3212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Object3241 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Object3255 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Object3278 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Object3298 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3324 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Object3365 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Object3385 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3411 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Object3452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object3601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object3751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object3761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object3771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object3781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object3791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object3801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object3811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object3821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object3831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object3841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object3851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object3861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object3871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object3881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object3891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object3901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object3911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object3921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object3931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object3941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object3951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_Model3976 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Model3990 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Model4013 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Model4033 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4059 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Model4100 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Model4120 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4146 = new BitSet(new long[]{0x0000018000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Model4187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4225 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4255 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ModelType4269 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4292 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4312 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4338 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ModelType4379 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4399 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4425 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4461 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4481 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4507 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4548 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4568 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4594 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4635 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4655 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4681 = new BitSet(new long[]{0x0000398000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ModelType4727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding4756 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_TypeVariableBinding4770 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding4793 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4813 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding4839 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_TypeVariableBinding4880 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4900 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding4926 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding4962 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding4982 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5008 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5044 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5064 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5090 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5131 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5151 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5177 = new BitSet(new long[]{0x0003818000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_TypeVariableBinding5223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5261 = new BitSet(new long[]{0x0004000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5300 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5330 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_MultiplicityElement5344 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5367 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5387 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5413 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_MultiplicityElement5454 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5474 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5500 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_MultiplicityElement5536 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5556 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5582 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_MultiplicityElement5618 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5638 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5664 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5705 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5725 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5751 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement5792 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5812 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5838 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement5879 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5899 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement5925 = new BitSet(new long[]{0x001A918000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_MultiplicityElement5971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement5990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6054 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_53_in_parse_org_kermeta_language_structure_TypeDefinition6084 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_TypeDefinition6098 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6121 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6141 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6167 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_TypeDefinition6208 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6228 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6254 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_TypeDefinition6290 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6310 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6336 = new BitSet(new long[]{0x0000118000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_TypeDefinition6382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_org_kermeta_language_structure_Tag6456 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Tag6470 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Tag6493 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6513 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6539 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Tag6580 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6600 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag6626 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_Tag6662 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6682 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6708 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_structure_Tag6749 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6769 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6795 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_56_in_parse_org_kermeta_language_structure_Tag6836 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6856 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6882 = new BitSet(new long[]{0x0180118000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Tag6928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_org_kermeta_language_structure_ObjectTypeVariable6957 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ObjectTypeVariable6971 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable6994 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7014 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7040 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ObjectTypeVariable7081 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7101 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7127 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ObjectTypeVariable7163 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7183 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7209 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable7245 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7265 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7291 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ObjectTypeVariable7332 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7352 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7378 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7419 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7439 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7465 = new BitSet(new long[]{0x0400998000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ObjectTypeVariable7511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable7530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable7555 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ModelTypeVariable7569 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable7592 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7612 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7638 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ModelTypeVariable7679 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7699 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable7725 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ModelTypeVariable7761 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7781 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable7807 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable7843 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7863 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7889 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelTypeVariable7930 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7950 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7976 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ModelTypeVariable8017 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8037 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8063 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8104 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8124 = new BitSet(new long[]{0x2200000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8150 = new BitSet(new long[]{0x1400998000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ModelTypeVariable8191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_kermeta_language_structure_VirtualType8220 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_VirtualType8234 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType8257 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8277 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8303 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_VirtualType8344 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8364 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8390 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_VirtualType8426 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8446 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8472 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType8508 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8528 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8554 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_VirtualType8595 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8615 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8641 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_VirtualType8682 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8702 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8728 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType8769 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8789 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8815 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType8856 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8876 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8902 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType8943 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8963 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType8989 = new BitSet(new long[]{0xC400998000080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_VirtualType9030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_kermeta_language_structure_ProductType9059 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ProductType9073 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9096 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9116 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9142 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ProductType9183 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9203 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9229 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ProductType9265 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9285 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9311 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ProductType9347 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9367 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9393 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9434 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9454 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9480 = new BitSet(new long[]{0x0002898000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_ProductType9526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_org_kermeta_language_structure_FunctionType9555 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_FunctionType9569 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType9592 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9612 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9638 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_FunctionType9679 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9699 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType9725 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_FunctionType9761 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9781 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType9807 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_FunctionType9843 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9863 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9889 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType9930 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9950 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9976 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10017 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10037 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10063 = new BitSet(new long[]{0x0000898000080000L,0x0000000000000018L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_FunctionType10109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_parse_org_kermeta_language_behavior_Block10138 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10167 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10209 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10251 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10293 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10335 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10377 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10419 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10461 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block10503 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block10545 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block10587 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block10643 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_behavior_Block10684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_kermeta_language_behavior_Rescue10713 = new BitSet(new long[]{0x00800021000000D2L,0x00000000B0269320L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue10736 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue10762 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_Rescue10795 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue10821 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue10849 = new BitSet(new long[]{0x00800021000000D2L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue10897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference10957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Raise10993 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_kermeta_language_behavior_Conditional11164 = new BitSet(new long[]{0x00000001000000D0L,0x0000000010220200L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11187 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11221 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_org_kermeta_language_behavior_Conditional11251 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11274 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11308 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11342 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11376 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11410 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11444 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11478 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11512 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11546 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11585 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11611 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11653 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11737 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11821 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11863 = new BitSet(new long[]{0x0000000000000010L,0x0000000000020000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11939 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_behavior_Conditional11980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_parse_org_kermeta_language_behavior_Loop12009 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B026B320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_parse_org_kermeta_language_behavior_Loop12079 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12097 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12124 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_parse_org_kermeta_language_behavior_VariableDecl12231 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12249 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_VariableDecl12270 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12288 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_kermeta_language_behavior_VariableDecl12315 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_kermeta_language_behavior_CallResult12434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_parse_org_kermeta_language_behavior_CallSuperOperation12463 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallSuperOperation12477 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12506 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallSuperOperation12547 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12581 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation12655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12699 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment12741 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment12783 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_parse_org_kermeta_language_behavior_Assignment12826 = new BitSet(new long[]{0x00800021000000D0L,0x0000000010260000L});
    public static final BitSet FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment12860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_parse_org_kermeta_language_behavior_Assignment12893 = new BitSet(new long[]{0x00800021000000D0L,0x0000000010260000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment12976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_org_kermeta_language_behavior_SelfExpression13427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13456 = new BitSet(new long[]{0x00000000000000D0L,0x0000000010220000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature13479 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature13513 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature13547 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature13581 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature13615 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature13649 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13688 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13714 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13755 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13781 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13814 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13855 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature13910 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature13952 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14056 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14084 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14110 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14151 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14177 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature14227 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14249 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14313 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14351 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14389 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14427 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14476 = new BitSet(new long[]{0x0000000200000000L,0x000000000F000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14527 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14562 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14600 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14638 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14676 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14725 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature14796 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature14830 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature14864 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature14898 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature14932 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature14966 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15005 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15031 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15072 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15098 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15131 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15172 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature15227 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15269 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15373 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15401 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15427 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15468 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15494 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature15544 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15613 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15651 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature15689 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15727 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15776 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_JavaStaticCall15849 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15867 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_JavaStaticCall15888 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall15906 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_JavaStaticCall15927 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall15956 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_JavaStaticCall15997 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16031 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_JavaStaticCall16105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_behavior_VoidLiteral16134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_behavior_CallValue16163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_EmptyExpression16192 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_EmptyExpression16206 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression16229 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16249 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16275 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_EmptyExpression16316 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16336 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16362 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_behavior_EmptyExpression16398 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16418 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression16444 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression16480 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16500 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16526 = new BitSet(new long[]{0x0000818000080000L,0x0000000040000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_EmptyExpression16572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression16601 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaExpression16615 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression16638 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16658 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16684 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaExpression16725 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16745 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression16771 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_behavior_LambdaExpression16807 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16827 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression16853 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression16889 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16909 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16935 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_96_in_parse_org_kermeta_language_behavior_LambdaExpression16976 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16996 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17022 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17058 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17078 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17104 = new BitSet(new long[]{0x0000818000080000L,0x0000000340000000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaExpression17145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaParameter17174 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaParameter17188 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter17211 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17231 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17257 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaParameter17298 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17318 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17344 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_behavior_LambdaParameter17380 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17400 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17426 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaParameter17467 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17487 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter17513 = new BitSet(new long[]{0x0002118000080000L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_behavior_LambdaParameter17554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression17579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression17589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression17599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression17609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression17619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression17629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression17639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression17649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression17659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression17669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression17679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression17689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression17699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression17709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression17719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression17729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression17739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression17749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression17759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression17769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type17790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type17800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type17810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type17820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type17830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type17840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type17850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type17860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type17870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type17880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type17890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred12_Kermeta672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_synpred15_Kermeta729 = new BitSet(new long[]{0x0020040800700030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred15_Kermeta764 = new BitSet(new long[]{0x0020040800780030L});
    public static final BitSet FOLLOW_19_in_synpred15_Kermeta815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred21_Kermeta1311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred30_Kermeta1950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred42_Kermeta3471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred43_Kermeta3481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred44_Kermeta3491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred45_Kermeta3501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred46_Kermeta3511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred47_Kermeta3521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred48_Kermeta3531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred49_Kermeta3541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred50_Kermeta3551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred51_Kermeta3561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred52_Kermeta3571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred53_Kermeta3581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred54_Kermeta3591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred55_Kermeta3601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred56_Kermeta3611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred58_Kermeta3631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred60_Kermeta3651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred61_Kermeta3661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred63_Kermeta3681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred65_Kermeta3701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred70_Kermeta3751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred72_Kermeta3771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred73_Kermeta3781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred74_Kermeta3791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred78_Kermeta3831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred79_Kermeta3841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred81_Kermeta3861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred82_Kermeta3871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred83_Kermeta3881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred84_Kermeta3891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred85_Kermeta3901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred86_Kermeta3911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred103_Kermeta5261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred166_Kermeta10293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred167_Kermeta10335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred168_Kermeta10377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred170_Kermeta10461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred171_Kermeta10503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred178_Kermeta11274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred180_Kermeta11342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred181_Kermeta11376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred183_Kermeta11444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred184_Kermeta11478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred188_Kermeta11695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred189_Kermeta11737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred191_Kermeta11821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_synpred195_Kermeta12124 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred195_Kermeta12157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred199_Kermeta12699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred200_Kermeta12741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred202_Kermeta12934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred203_Kermeta12976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred205_Kermeta13060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred207_Kermeta13144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred209_Kermeta13228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred210_Kermeta13270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred213_Kermeta13513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred216_Kermeta13615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred217_Kermeta13688 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred217_Kermeta13714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred221_Kermeta14084 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred221_Kermeta14110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred231_Kermeta14562 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_synpred231_Kermeta14600 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_synpred231_Kermeta14638 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_synpred231_Kermeta14676 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred231_Kermeta14725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred234_Kermeta14830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred237_Kermeta14932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred238_Kermeta15005 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred238_Kermeta15031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred242_Kermeta15401 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred242_Kermeta15427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred248_Kermeta15613 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_synpred248_Kermeta15651 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_synpred248_Kermeta15689 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_synpred248_Kermeta15727 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred248_Kermeta15776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred267_Kermeta17599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred268_Kermeta17609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred269_Kermeta17619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred273_Kermeta17659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred274_Kermeta17669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred276_Kermeta17689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred277_Kermeta17699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred278_Kermeta17709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred279_Kermeta17719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred280_Kermeta17729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred284_Kermeta17790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred287_Kermeta17820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred289_Kermeta17840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred290_Kermeta17850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred292_Kermeta17870 = new BitSet(new long[]{0x0000000000000002L});

}