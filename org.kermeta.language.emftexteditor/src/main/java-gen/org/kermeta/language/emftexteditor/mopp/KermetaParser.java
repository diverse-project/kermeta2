// $ANTLR 3.1.1

	package org.kermeta.language.emftexteditor.mopp;


import org.antlr.runtime.*;
import java.util.HashMap;
public class KermetaParser extends KermetaANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "IDENTIFIER", "PRIMITIVE_TYPE", "INTEGER", "BOOLEAN", "CASTED", "SL_COMMENT", "ML_COMMENT", "FLOAT", "WHITESPACE", "LINEBREAKS", "'using'", "'require'", "'::'", "'{'", "'}'", "'package'", "'aspect'", "'abstract'", "'class'", "'inherits'", "','", "'attribute'", "'reference'", "':'", "'property'", "'getter'", "'setter'", "'operation'", "'('", "')'", "'is'", "'enumeration'", "';'", "'Void'", "'Object'", "'tag'", "'ownedTags'", "'Model'", "'ModelType'", "'typeContainer'", "'name'", "'includedTypeDefinition'", "'TypeVariableBinding'", "'containedType'", "'variable'", "'type'", "'MultiplicityElement'", "'lower'", "'upper'", "'TypeDefinition'", "'Tag'", "'value'", "'object'", "'ObjectTypeVariable'", "'supertype'", "'ModelTypeVariable'", "'virtualType'", "'VirtualType'", "'classDefinition'", "'modelType'", "'typeParamBinding'", "'ProductType'", "'FunctionType'", "'left'", "'right'", "'do'", "'end'", "'rescue'", "'raise'", "'if'", "'then'", "'else'", "'from'", "'until'", "'loop'", "'var'", "'init'", "'result'", "'super'", "':='", "'='", "'self'", "'.'", "'=='", "'+'", "'-'", "'/'", "'*'", "'extern'", "'EmptyExpression'", "'staticType'", "'LambdaExpression'", "'parameters'", "'body'", "'LambdaParameter'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__16=16;
    public static final int T__15=15;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int T__14=14;
    public static final int PRIMITIVE_TYPE=5;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int WHITESPACE=12;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int SL_COMMENT=9;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int FLOAT=11;
    public static final int T__61=61;
    public static final int LINEBREAKS=13;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int ML_COMMENT=10;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int BOOLEAN=7;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int IDENTIFIER=4;
    public static final int T__59=59;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int INTEGER=6;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int CASTED=8;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;

    // delegates
    // delegators


        public KermetaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public KermetaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[350+1];
             
             
        }
        

    public String[] getTokenNames() { return KermetaParser.tokenNames; }
    public String getGrammarFileName() { return "/home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g"; }


    	private org.kermeta.language.emftexteditor.IKermetaTokenResolverFactory tokenResolverFactory = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolverFactory();
    	@SuppressWarnings("unused")
    	
    	private int lastPosition;
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult tokenResolveResult = new org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult();
    	private boolean rememberExpectedElements = false;
    	private java.lang.Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	private java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> expectedElements = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    	private int mismatchedTokenRecoveryTries = 0;
    	private java.util.Map<?, ?> options;
    	//helper lists to allow a lexer to pass errors to its parser
    	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
    	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private java.util.Collection<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>> postParseCommands;
    	private boolean terminateParsing;
    	private int tokenIndexOfLastCompleteElement;
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.addProblem(new org.kermeta.language.emftexteditor.IKermetaProblem() {
    					public org.kermeta.language.emftexteditor.KermetaEProblemType getType() {
    						return org.kermeta.language.emftexteditor.KermetaEProblemType.ERROR;
    					}
    					public java.lang.String getMessage() {
    						return errorMessage;
    					}
    				}, line, charPositionInLine, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		setPosition(expectedElement, input.index());
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy) {
    		java.lang.Object value = element.eGet(structuralFeature);
    		java.lang.Object mapKey = dummy.getValueByName("key");
    		java.lang.Object mapValue = dummy.getValueByName("value");
    		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
    			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = org.kermeta.language.emftexteditor.util.KermetaMapUtil.castToEMap(value);
    			if (mapKey != null && mapValue != null) {
    				valueMap.put(mapKey, mapValue);
    			}
    		}
    	}
    	
    	@SuppressWarnings("unchecked")
    	
    	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
    		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
    		org.eclipse.emf.ecore.EObject currentTarget = target;
    		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
    			assert(object instanceof org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject);
    			org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject dummy = (org.kermeta.language.emftexteditor.mopp.KermetaDummyEObject) object;
    			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
    			currentTarget = newEObject;
    		}
    		return currentTarget;
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    		int currentPos = getTokenStream().index();
    		if (currentPos == 0) {
    			return;
    		}
    		int endPos = currentPos - 1;
    		for (; endPos >= this.lastPosition; endPos--) {
    			org.antlr.runtime.Token token = getTokenStream().get(endPos);
    			int _channel = token.getChannel();
    			if (_channel != 99) {
    				break;
    			}
    		}
    		for (int pos = this.lastPosition; pos < endPos; pos++) {
    			org.antlr.runtime.Token token = getTokenStream().get(pos);
    			int _channel = token.getChannel();
    			if (_channel == 99) {
    				if (token.getType() == KermetaLexer.SL_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    				if (token.getType() == KermetaLexer.ML_COMMENT) {
    					org.eclipse.emf.ecore.EStructuralFeature feature = element.eClass().getEStructuralFeature("comments");
    					if (feature != null) {
    						// call token resolver
    						org.kermeta.language.emftexteditor.IKermetaTokenResolver resolvedResolver = tokenResolverFactory.createCollectInTokenResolver("comments");
    						resolvedResolver.setOptions(getOptions());
    						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult resolvedResult = getFreshTokenResolveResult();
    						resolvedResolver.resolve(token.getText(), feature, resolvedResult);
    						java.lang.Object resolvedObject = resolvedResult.getResolvedToken();
    						if (resolvedObject == null) {
    							addErrorToResource(resolvedResult.getErrorMessage(), ((org.antlr.runtime.CommonToken) token).getLine(), ((org.antlr.runtime.CommonToken) token).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) token).getStartIndex(), ((org.antlr.runtime.CommonToken) token).getStopIndex());
    						}
    						if (java.lang.String.class.isInstance(resolvedObject)) {
    							((java.util.List) element.eGet(feature)).add((java.lang.String) resolvedObject);
    						} else {
    							System.out.println("WARNING: Attribute comments for token " + token + " has wrong type in element " + element + " (expected java.lang.String).");
    						}
    					} else {
    						System.out.println("WARNING: Attribute comments for token " + token + " was not found in element " + element + ".");
    					}
    				}
    			}
    		}
    		this.lastPosition = (endPos < 0 ? 0 : endPos);
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				org.kermeta.language.emftexteditor.IKermetaLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	public org.kermeta.language.emftexteditor.IKermetaTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
    		try {
    			if (encoding == null) {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new KermetaParser(new org.antlr.runtime.CommonTokenStream(new KermetaLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			org.kermeta.language.emftexteditor.mopp.KermetaPlugin.logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	// This default constructor is only used to call createInstance() on it
    	public KermetaParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((KermetaLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		java.lang.Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelingUnit.class) {
    				return parse_org_kermeta_language_structure_ModelingUnit();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Using.class) {
    				return parse_org_kermeta_language_structure_Using();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Require.class) {
    				return parse_org_kermeta_language_structure_Require();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Package.class) {
    				return parse_org_kermeta_language_structure_Package();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ClassDefinition.class) {
    				return parse_org_kermeta_language_structure_ClassDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Property.class) {
    				return parse_org_kermeta_language_structure_Property();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Operation.class) {
    				return parse_org_kermeta_language_structure_Operation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Parameter.class) {
    				return parse_org_kermeta_language_structure_Parameter();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Class.class) {
    				return parse_org_kermeta_language_structure_Class();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Enumeration.class) {
    				return parse_org_kermeta_language_structure_Enumeration();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.EnumerationLiteral.class) {
    				return parse_org_kermeta_language_structure_EnumerationLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Constraint.class) {
    				return parse_org_kermeta_language_structure_Constraint();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.PrimitiveType.class) {
    				return parse_org_kermeta_language_structure_PrimitiveType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.UnresolvedType.class) {
    				return parse_org_kermeta_language_structure_UnresolvedType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VoidType.class) {
    				return parse_org_kermeta_language_structure_VoidType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Object.class) {
    				return parse_org_kermeta_language_structure_Object();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Model.class) {
    				return parse_org_kermeta_language_structure_Model();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelType.class) {
    				return parse_org_kermeta_language_structure_ModelType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeVariableBinding.class) {
    				return parse_org_kermeta_language_structure_TypeVariableBinding();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.MultiplicityElement.class) {
    				return parse_org_kermeta_language_structure_MultiplicityElement();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.TypeDefinition.class) {
    				return parse_org_kermeta_language_structure_TypeDefinition();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.Tag.class) {
    				return parse_org_kermeta_language_structure_Tag();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ObjectTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ObjectTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ModelTypeVariable.class) {
    				return parse_org_kermeta_language_structure_ModelTypeVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.VirtualType.class) {
    				return parse_org_kermeta_language_structure_VirtualType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.ProductType.class) {
    				return parse_org_kermeta_language_structure_ProductType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.structure.FunctionType.class) {
    				return parse_org_kermeta_language_structure_FunctionType();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Block.class) {
    				return parse_org_kermeta_language_behavior_Block();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Rescue.class) {
    				return parse_org_kermeta_language_behavior_Rescue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeReference.class) {
    				return parse_org_kermeta_language_behavior_TypeReference();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Raise.class) {
    				return parse_org_kermeta_language_behavior_Raise();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.BooleanLiteral.class) {
    				return parse_org_kermeta_language_behavior_BooleanLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.IntegerLiteral.class) {
    				return parse_org_kermeta_language_behavior_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.StringLiteral.class) {
    				return parse_org_kermeta_language_behavior_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Conditional.class) {
    				return parse_org_kermeta_language_behavior_Conditional();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Loop.class) {
    				return parse_org_kermeta_language_behavior_Loop();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VariableDecl.class) {
    				return parse_org_kermeta_language_behavior_VariableDecl();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.TypeLiteral.class) {
    				return parse_org_kermeta_language_behavior_TypeLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallResult.class) {
    				return parse_org_kermeta_language_behavior_CallResult();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallSuperOperation.class) {
    				return parse_org_kermeta_language_behavior_CallSuperOperation();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.Assignment.class) {
    				return parse_org_kermeta_language_behavior_Assignment();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallVariable.class) {
    				return parse_org_kermeta_language_behavior_CallVariable();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.SelfExpression.class) {
    				return parse_org_kermeta_language_behavior_SelfExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallFeature.class) {
    				return parse_org_kermeta_language_behavior_CallFeature();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.JavaStaticCall.class) {
    				return parse_org_kermeta_language_behavior_JavaStaticCall();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.VoidLiteral.class) {
    				return parse_org_kermeta_language_behavior_VoidLiteral();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.CallValue.class) {
    				return parse_org_kermeta_language_behavior_CallValue();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.EmptyExpression.class) {
    				return parse_org_kermeta_language_behavior_EmptyExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaExpression.class) {
    				return parse_org_kermeta_language_behavior_LambdaExpression();
    			}
    			if (type.getInstanceClass() == org.kermeta.language.behavior.LambdaParameter.class) {
    				return parse_org_kermeta_language_behavior_LambdaParameter();
    			}
    		}
    		throw new org.kermeta.language.emftexteditor.mopp.KermetaUnexpectedContentTypeException(typeObject);
    	}
    	
    	private org.kermeta.language.emftexteditor.mopp.KermetaTokenResolveResult getFreshTokenResolveResult() {
    		tokenResolveResult.clear();
    		return tokenResolveResult;
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	protected java.util.Map<?,?> getOptions() {
    		return options;
    	}
    	
    	public org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation getMetaInformation() {
    		return new org.kermeta.language.emftexteditor.mopp.KermetaMetaInformation();
    	}
    	
    	public java.lang.Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch getReferenceResolverSwitch() {
    		return (org.kermeta.language.emftexteditor.mopp.KermetaReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
    	}
    	
    	protected java.lang.Object getTypeObject() {
    		java.lang.Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.kermeta.language.emftexteditor.IKermetaOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	// Implementation that calls {@link #doParse()}  and handles the thrown
    	// RecognitionExceptions.
    	public org.kermeta.language.emftexteditor.IKermetaParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>>();
    		org.kermeta.language.emftexteditor.mopp.KermetaParseResult parseResult = new org.kermeta.language.emftexteditor.mopp.KermetaParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				//? can be caused if a null is set on EMF models where not allowed;
    				//? this will just happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.kermeta.language.emftexteditor.IKermetaTextResource dummyResource) {
    		rememberExpectedElements = true;
    		parseToIndexTypeObject = type;
    		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
    		org.kermeta.language.emftexteditor.IKermetaParseResult result = parse();
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContents().add(root);
    			}
    			for (org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		java.util.List<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal> newFollowSet = new java.util.ArrayList<org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 605;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected terminals
    				// can be set
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are kept
    				for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.kermeta.language.emftexteditor.IKermetaExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.kermeta.language.emftexteditor.IKermetaExpectedElement newFollower : newFollowers) {
    							org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal newFollowTerminal = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(newFollower, followSetID);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements that were
    		// added during the last iteration of the loop
    		for (org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = java.lang.Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = java.lang.Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
    		postParseCommands.add(new org.kermeta.language.emftexteditor.IKermetaCommand<org.kermeta.language.emftexteditor.IKermetaTextResource>() {
    			public boolean execute(org.kermeta.language.emftexteditor.IKermetaTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
    				return true;
    			}
    		});
    	}
    	
    	// Translates errors thrown by the parser into human readable messages.
    	public void reportError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = e.getMessage();
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mte.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mte.expecting];
    				tokenName = org.kermeta.language.emftexteditor.util.KermetaStringUtil.formatTokenName(tokenName);
    			}
    			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
    			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mtne.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mtne.expecting];
    			}
    			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
    		}
    		// the resource may be null if the parse is used for code completion
    		final java.lang.String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime.CommonToken) {
    			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	// Translates errors thrown by the lexer into human readable messages.
    	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = "";
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
    			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
    			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	public void setOptions(java.util.Map<?,?> options) {
    		this.options = options;
    	}
    	
    	public void terminate() {
    		terminateParsing = true;
    	}
    	
    	protected void completedElement(Object element) {
    		if (element instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_0 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("require");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_1 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("using");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_2 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_3 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("package");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_4 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Model");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_5 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("attribute");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_6 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("reference");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_7 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("property");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_8 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_9 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("operation");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_10 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_11 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_12 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_13 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("MultiplicityElement");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_14 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getTypeReference().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_15 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_16 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_17 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_18 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_19 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("aspect");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_20 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_21 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("class");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_22 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("enumeration");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_23 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPrimitiveType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), "PRIMITIVE_TYPE");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_24 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_25 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_26 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_27 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_28 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_29 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getPackage().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_30 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("::");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_31 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_32 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_33 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_34 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_35 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_36 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("inherits");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_37 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_38 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_39 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_40 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_41 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_42 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_43 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_44 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_45 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_46 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_47 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("getter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_48 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("setter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_49 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProperty().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_50 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("do");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_51 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("raise");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_52 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBooleanLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), "BOOLEAN");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_53 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getIntegerLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_54 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getStringLiteral().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_55 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("if");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_56 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("from");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_57 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("var");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_58 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("result");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_59 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("super");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_60 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_61 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_62 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("extern");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_63 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("self");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_64 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_65 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_66 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("EmptyExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_67 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaExpression");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_68 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_69 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_70 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_71 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_72 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_73 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_74 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_75 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_76 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_77 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("is");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_78 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getOperation().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_79 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("abstract");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_80 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_81 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getParameter().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_82 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getClass_().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_83 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_84 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_85 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_86 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("variable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_87 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_88 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_89 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_90 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_91 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_92 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_93 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_94 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("lower");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_95 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("upper");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_96 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_97 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_98 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_99 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_100 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_101 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_102 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_103 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_104 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_105 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_106 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_107 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_108 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_109 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_110 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("virtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_111 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_112 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_113 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_114 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_115 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_116 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_117 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("supertype");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_118 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("classDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_119 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("modelType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_120 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeParamBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_121 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_122 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_123 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_124 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_125 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_126 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_127 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_128 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_129 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_130 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_131 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_132 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("left");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_133 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("right");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_134 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_135 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_136 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_137 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_138 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_139 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_140 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_141 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_142 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("containedType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_143 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("staticType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_144 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("parameters");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_145 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("body");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_146 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_147 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumeration().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_148 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_149 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getEnumerationLiteral().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_150 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_151 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_152 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(";");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_153 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getConstraint().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_154 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getUnresolvedType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_155 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Void");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_156 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_157 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_158 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_159 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_160 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_161 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_162 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObject().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_163 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_164 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("Tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_165 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_166 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_167 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_168 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_169 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_170 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModel().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_171 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_172 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_173 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_174 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_175 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("typeContainer");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_176 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_177 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("includedTypeDefinition");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_178 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_179 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_180 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_181 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_182 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_183 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_184 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_185 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_186 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_187 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_188 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("TypeVariableBinding");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_189 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_190 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_191 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_192 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_193 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_194 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ObjectTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_195 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ModelTypeVariable");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_196 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("VirtualType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_197 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ProductType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_198 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("FunctionType");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_199 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_200 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_201 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_202 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeVariableBinding().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_203 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_204 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_205 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_206 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_207 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_208 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_209 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_210 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_211 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_212 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_213 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_214 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_215 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), "INTEGER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_216 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_217 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_218 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_219 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_220 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_221 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_222 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_223 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_224 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_225 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_226 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_227 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_228 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_229 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_230 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("value");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_231 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("object");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_232 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_233 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_234 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_235 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_236 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_237 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_238 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_239 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_240 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_241 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getTag().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_242 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("tag");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_243 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("ownedTags");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_244 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("name");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_245 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("type");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_246 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("}");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_247 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_248 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_249 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_250 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_251 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_252 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_253 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_254 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_255 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_256 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_257 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getObjectTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_258 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_259 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_260 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_261 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_262 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_263 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_264 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_265 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_266 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_267 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_268 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getModelTypeVariable().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_269 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_270 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_271 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_272 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_273 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_274 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_275 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_276 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_277 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_278 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_279 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_280 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_281 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_282 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_283 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_284 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getVirtualType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_285 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_286 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_287 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_288 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_289 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_290 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_291 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_292 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_293 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_294 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getProductType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_295 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_296 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_297 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_298 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_299 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_300 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_301 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_302 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_303 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_304 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_305 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.structure.StructurePackage.eINSTANCE.getFunctionType().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_306 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("rescue");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_307 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_308 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("until");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_309 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("else");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_310 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("end");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_311 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_312 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_313 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_314 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_315 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_316 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_317 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_318 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getRescue().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_319 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_320 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_321 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("init");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_322 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("then");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_323 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("loop");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_324 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getVariableDecl().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_325 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_326 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_327 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getAssignment().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), "CASTED");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_328 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_329 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("=");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_330 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_331 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_332 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_333 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_334 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_335 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_336 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_337 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_338 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_339 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_340 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_341 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_342 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_343 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_344 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_345 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_346 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_347 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_348 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_349 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_350 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_351 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_352 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_353 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_354 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("==");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_355 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("+");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_356 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("-");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_357 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("/");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_358 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("*");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_359 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_360 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_361 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_362 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(")");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_363 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(",");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_364 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_365 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_366 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_367 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(".");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_368 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getJavaStaticCall().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_369 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("(");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_370 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_371 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_372 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_373 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_374 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_375 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_376 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getEmptyExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_377 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_378 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_379 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_380 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_381 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_382 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_383 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaExpression().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_384 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_385 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("LambdaParameter");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_386 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_387 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString("{");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_388 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_389 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_390 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_391 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_392 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.eINSTANCE.getLambdaParameter().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), "IDENTIFIER");
    	private final static org.kermeta.language.emftexteditor.IKermetaExpectedElement TERMINAL_393 = new org.kermeta.language.emftexteditor.mopp.KermetaExpectedCsString(":");
    	
    	public static void wire0() {
    		TERMINAL_1.addFollower(TERMINAL_1);
    		TERMINAL_1.addFollower(TERMINAL_2);
    		TERMINAL_1.addFollower(TERMINAL_3);
    		TERMINAL_0.addFollower(TERMINAL_0);
    		TERMINAL_0.addFollower(TERMINAL_1);
    		TERMINAL_0.addFollower(TERMINAL_2);
    		TERMINAL_0.addFollower(TERMINAL_3);
    		TERMINAL_2.addFollower(TERMINAL_15);
    		TERMINAL_2.addFollower(TERMINAL_16);
    		TERMINAL_2.addFollower(TERMINAL_17);
    		TERMINAL_2.addFollower(TERMINAL_2);
    		TERMINAL_2.addFollower(TERMINAL_3);
    		TERMINAL_15.addFollower(TERMINAL_2);
    		TERMINAL_15.addFollower(TERMINAL_3);
    		TERMINAL_16.addFollower(TERMINAL_2);
    		TERMINAL_16.addFollower(TERMINAL_3);
    		TERMINAL_16.addFollower(TERMINAL_18);
    		TERMINAL_18.addFollower(TERMINAL_2);
    		TERMINAL_18.addFollower(TERMINAL_3);
    		TERMINAL_18.addFollower(TERMINAL_15);
    		TERMINAL_18.addFollower(TERMINAL_16);
    		TERMINAL_18.addFollower(TERMINAL_17);
    		TERMINAL_17.addFollower(TERMINAL_19);
    		TERMINAL_17.addFollower(TERMINAL_20);
    		TERMINAL_17.addFollower(TERMINAL_21);
    		TERMINAL_17.addFollower(TERMINAL_22);
    		TERMINAL_17.addFollower(TERMINAL_23);
    		TERMINAL_17.addFollower(TERMINAL_24);
    		TERMINAL_17.addFollower(TERMINAL_25);
    		TERMINAL_17.addFollower(TERMINAL_26);
    		TERMINAL_17.addFollower(TERMINAL_27);
    		TERMINAL_28.addFollower(TERMINAL_2);
    		TERMINAL_28.addFollower(TERMINAL_3);
    		TERMINAL_28.addFollower(TERMINAL_15);
    		TERMINAL_28.addFollower(TERMINAL_16);
    		TERMINAL_28.addFollower(TERMINAL_17);
    		TERMINAL_3.addFollower(TERMINAL_29);
    		TERMINAL_29.addFollower(TERMINAL_30);
    		TERMINAL_29.addFollower(TERMINAL_31);
    		TERMINAL_29.addFollower(TERMINAL_32);
    		TERMINAL_29.addFollower(TERMINAL_2);
    		TERMINAL_29.addFollower(TERMINAL_3);
    		TERMINAL_29.addFollower(TERMINAL_15);
    		TERMINAL_29.addFollower(TERMINAL_16);
    		TERMINAL_29.addFollower(TERMINAL_17);
    		TERMINAL_30.addFollower(TERMINAL_2);
    		TERMINAL_30.addFollower(TERMINAL_3);
    		TERMINAL_31.addFollower(TERMINAL_2);
    		TERMINAL_31.addFollower(TERMINAL_3);
    		TERMINAL_31.addFollower(TERMINAL_33);
    		TERMINAL_33.addFollower(TERMINAL_2);
    		TERMINAL_33.addFollower(TERMINAL_3);
    		TERMINAL_33.addFollower(TERMINAL_15);
    		TERMINAL_33.addFollower(TERMINAL_16);
    		TERMINAL_33.addFollower(TERMINAL_17);
    		TERMINAL_32.addFollower(TERMINAL_19);
    		TERMINAL_32.addFollower(TERMINAL_20);
    		TERMINAL_32.addFollower(TERMINAL_21);
    		TERMINAL_32.addFollower(TERMINAL_22);
    		TERMINAL_32.addFollower(TERMINAL_23);
    		TERMINAL_32.addFollower(TERMINAL_24);
    		TERMINAL_32.addFollower(TERMINAL_25);
    		TERMINAL_32.addFollower(TERMINAL_26);
    		TERMINAL_32.addFollower(TERMINAL_27);
    		TERMINAL_34.addFollower(TERMINAL_2);
    		TERMINAL_34.addFollower(TERMINAL_3);
    		TERMINAL_34.addFollower(TERMINAL_15);
    		TERMINAL_34.addFollower(TERMINAL_16);
    		TERMINAL_34.addFollower(TERMINAL_17);
    		TERMINAL_19.addFollower(TERMINAL_20);
    		TERMINAL_19.addFollower(TERMINAL_21);
    		TERMINAL_20.addFollower(TERMINAL_21);
    		TERMINAL_21.addFollower(TERMINAL_35);
    		TERMINAL_35.addFollower(TERMINAL_36);
    		TERMINAL_35.addFollower(TERMINAL_37);
    		TERMINAL_36.addFollower(TERMINAL_38);
    		TERMINAL_38.addFollower(TERMINAL_39);
    		TERMINAL_38.addFollower(TERMINAL_37);
    		TERMINAL_39.addFollower(TERMINAL_40);
    		TERMINAL_40.addFollower(TERMINAL_39);
    		TERMINAL_40.addFollower(TERMINAL_37);
    		TERMINAL_37.addFollower(TERMINAL_8);
    		TERMINAL_37.addFollower(TERMINAL_5);
    		TERMINAL_37.addFollower(TERMINAL_6);
    		TERMINAL_37.addFollower(TERMINAL_7);
    		TERMINAL_37.addFollower(TERMINAL_9);
    		TERMINAL_37.addFollower(TERMINAL_41);
    		TERMINAL_41.addFollower(TERMINAL_19);
    		TERMINAL_41.addFollower(TERMINAL_20);
    		TERMINAL_41.addFollower(TERMINAL_21);
    		TERMINAL_41.addFollower(TERMINAL_22);
    		TERMINAL_41.addFollower(TERMINAL_23);
    		TERMINAL_41.addFollower(TERMINAL_24);
    		TERMINAL_41.addFollower(TERMINAL_25);
    		TERMINAL_41.addFollower(TERMINAL_26);
    		TERMINAL_41.addFollower(TERMINAL_27);
    		TERMINAL_41.addFollower(TERMINAL_28);
    		TERMINAL_5.addFollower(TERMINAL_42);
    		TERMINAL_6.addFollower(TERMINAL_42);
    		TERMINAL_42.addFollower(TERMINAL_43);
    		TERMINAL_42.addFollower(TERMINAL_5);
    		TERMINAL_42.addFollower(TERMINAL_6);
    		TERMINAL_42.addFollower(TERMINAL_7);
    		TERMINAL_42.addFollower(TERMINAL_8);
    		TERMINAL_42.addFollower(TERMINAL_9);
    		TERMINAL_42.addFollower(TERMINAL_41);
    		TERMINAL_43.addFollower(TERMINAL_44);
    		TERMINAL_44.addFollower(TERMINAL_5);
    		TERMINAL_44.addFollower(TERMINAL_6);
    		TERMINAL_44.addFollower(TERMINAL_7);
    		TERMINAL_44.addFollower(TERMINAL_8);
    		TERMINAL_44.addFollower(TERMINAL_9);
    		TERMINAL_44.addFollower(TERMINAL_41);
    		TERMINAL_7.addFollower(TERMINAL_45);
    		TERMINAL_45.addFollower(TERMINAL_46);
    		TERMINAL_45.addFollower(TERMINAL_47);
    		TERMINAL_45.addFollower(TERMINAL_48);
    		TERMINAL_45.addFollower(TERMINAL_5);
    		TERMINAL_45.addFollower(TERMINAL_6);
    		TERMINAL_45.addFollower(TERMINAL_7);
    		TERMINAL_45.addFollower(TERMINAL_8);
    		TERMINAL_45.addFollower(TERMINAL_9);
    		TERMINAL_45.addFollower(TERMINAL_41);
    		TERMINAL_46.addFollower(TERMINAL_49);
    		TERMINAL_49.addFollower(TERMINAL_47);
    		TERMINAL_49.addFollower(TERMINAL_48);
    		TERMINAL_49.addFollower(TERMINAL_5);
    		TERMINAL_49.addFollower(TERMINAL_6);
    		TERMINAL_49.addFollower(TERMINAL_7);
    		TERMINAL_49.addFollower(TERMINAL_8);
    		TERMINAL_49.addFollower(TERMINAL_9);
    		TERMINAL_49.addFollower(TERMINAL_41);
    		TERMINAL_47.addFollower(TERMINAL_50);
    		TERMINAL_47.addFollower(TERMINAL_51);
    		TERMINAL_47.addFollower(TERMINAL_52);
    		TERMINAL_47.addFollower(TERMINAL_53);
    		TERMINAL_47.addFollower(TERMINAL_54);
    		TERMINAL_47.addFollower(TERMINAL_55);
    		TERMINAL_47.addFollower(TERMINAL_56);
    		TERMINAL_47.addFollower(TERMINAL_57);
    		TERMINAL_47.addFollower(TERMINAL_14);
    		TERMINAL_47.addFollower(TERMINAL_58);
    		TERMINAL_47.addFollower(TERMINAL_59);
    		TERMINAL_47.addFollower(TERMINAL_60);
    		TERMINAL_47.addFollower(TERMINAL_61);
    		TERMINAL_47.addFollower(TERMINAL_62);
    		TERMINAL_47.addFollower(TERMINAL_63);
    		TERMINAL_47.addFollower(TERMINAL_64);
    		TERMINAL_47.addFollower(TERMINAL_65);
    		TERMINAL_47.addFollower(TERMINAL_66);
    		TERMINAL_47.addFollower(TERMINAL_67);
    		TERMINAL_48.addFollower(TERMINAL_50);
    		TERMINAL_48.addFollower(TERMINAL_51);
    		TERMINAL_48.addFollower(TERMINAL_52);
    		TERMINAL_48.addFollower(TERMINAL_53);
    		TERMINAL_48.addFollower(TERMINAL_54);
    		TERMINAL_48.addFollower(TERMINAL_55);
    		TERMINAL_48.addFollower(TERMINAL_56);
    		TERMINAL_48.addFollower(TERMINAL_57);
    		TERMINAL_48.addFollower(TERMINAL_14);
    		TERMINAL_48.addFollower(TERMINAL_58);
    		TERMINAL_48.addFollower(TERMINAL_59);
    		TERMINAL_48.addFollower(TERMINAL_60);
    		TERMINAL_48.addFollower(TERMINAL_61);
    		TERMINAL_48.addFollower(TERMINAL_62);
    		TERMINAL_48.addFollower(TERMINAL_63);
    		TERMINAL_48.addFollower(TERMINAL_64);
    		TERMINAL_48.addFollower(TERMINAL_65);
    		TERMINAL_48.addFollower(TERMINAL_66);
    		TERMINAL_48.addFollower(TERMINAL_67);
    		TERMINAL_9.addFollower(TERMINAL_68);
    		TERMINAL_68.addFollower(TERMINAL_69);
    		TERMINAL_69.addFollower(TERMINAL_10);
    		TERMINAL_69.addFollower(TERMINAL_70);
    		TERMINAL_71.addFollower(TERMINAL_73);
    		TERMINAL_73.addFollower(TERMINAL_72);
    		TERMINAL_73.addFollower(TERMINAL_70);
    		TERMINAL_72.addFollower(TERMINAL_10);
    		TERMINAL_74.addFollower(TERMINAL_75);
    		TERMINAL_75.addFollower(TERMINAL_72);
    		TERMINAL_75.addFollower(TERMINAL_70);
    		TERMINAL_70.addFollower(TERMINAL_76);
    		TERMINAL_70.addFollower(TERMINAL_77);
    		TERMINAL_76.addFollower(TERMINAL_78);
    		TERMINAL_78.addFollower(TERMINAL_77);
    		TERMINAL_77.addFollower(TERMINAL_50);
    		TERMINAL_77.addFollower(TERMINAL_79);
    		TERMINAL_79.addFollower(TERMINAL_8);
    		TERMINAL_79.addFollower(TERMINAL_9);
    		TERMINAL_79.addFollower(TERMINAL_41);
    		TERMINAL_10.addFollower(TERMINAL_80);
    		TERMINAL_80.addFollower(TERMINAL_81);
    		TERMINAL_81.addFollower(TERMINAL_71);
    		TERMINAL_81.addFollower(TERMINAL_72);
    		TERMINAL_81.addFollower(TERMINAL_70);
    		TERMINAL_82.addFollower(TERMINAL_83);
    		TERMINAL_82.addFollower(TERMINAL_84);
    		TERMINAL_82.addFollower(TERMINAL_85);
    		TERMINAL_82.addFollower(TERMINAL_86);
    		TERMINAL_82.addFollower(TERMINAL_87);
    		TERMINAL_82.addFollower(TERMINAL_88);
    		TERMINAL_82.addFollower(TERMINAL_89);
    		TERMINAL_82.addFollower(TERMINAL_90);
    		TERMINAL_82.addFollower(TERMINAL_91);
    		TERMINAL_82.addFollower(TERMINAL_92);
    		TERMINAL_82.addFollower(TERMINAL_93);
    		TERMINAL_82.addFollower(TERMINAL_94);
    		TERMINAL_82.addFollower(TERMINAL_95);
    		TERMINAL_82.addFollower(TERMINAL_96);
    		TERMINAL_82.addFollower(TERMINAL_97);
    		TERMINAL_82.addFollower(TERMINAL_98);
    		TERMINAL_82.addFollower(TERMINAL_99);
    		TERMINAL_82.addFollower(TERMINAL_100);
    		TERMINAL_82.addFollower(TERMINAL_101);
    		TERMINAL_82.addFollower(TERMINAL_102);
    		TERMINAL_82.addFollower(TERMINAL_103);
    		TERMINAL_82.addFollower(TERMINAL_104);
    		TERMINAL_82.addFollower(TERMINAL_105);
    		TERMINAL_82.addFollower(TERMINAL_106);
    		TERMINAL_82.addFollower(TERMINAL_107);
    		TERMINAL_82.addFollower(TERMINAL_108);
    		TERMINAL_82.addFollower(TERMINAL_109);
    		TERMINAL_82.addFollower(TERMINAL_110);
    		TERMINAL_82.addFollower(TERMINAL_111);
    		TERMINAL_82.addFollower(TERMINAL_112);
    		TERMINAL_82.addFollower(TERMINAL_113);
    		TERMINAL_82.addFollower(TERMINAL_114);
    		TERMINAL_82.addFollower(TERMINAL_115);
    		TERMINAL_82.addFollower(TERMINAL_116);
    		TERMINAL_82.addFollower(TERMINAL_117);
    		TERMINAL_82.addFollower(TERMINAL_118);
    		TERMINAL_82.addFollower(TERMINAL_119);
    		TERMINAL_82.addFollower(TERMINAL_120);
    		TERMINAL_82.addFollower(TERMINAL_121);
    		TERMINAL_82.addFollower(TERMINAL_122);
    		TERMINAL_82.addFollower(TERMINAL_123);
    		TERMINAL_82.addFollower(TERMINAL_124);
    		TERMINAL_82.addFollower(TERMINAL_125);
    		TERMINAL_82.addFollower(TERMINAL_126);
    		TERMINAL_82.addFollower(TERMINAL_127);
    		TERMINAL_82.addFollower(TERMINAL_128);
    		TERMINAL_82.addFollower(TERMINAL_129);
    		TERMINAL_82.addFollower(TERMINAL_130);
    		TERMINAL_82.addFollower(TERMINAL_131);
    		TERMINAL_82.addFollower(TERMINAL_132);
    		TERMINAL_82.addFollower(TERMINAL_133);
    		TERMINAL_82.addFollower(TERMINAL_134);
    		TERMINAL_82.addFollower(TERMINAL_135);
    		TERMINAL_82.addFollower(TERMINAL_136);
    		TERMINAL_82.addFollower(TERMINAL_137);
    		TERMINAL_82.addFollower(TERMINAL_138);
    		TERMINAL_82.addFollower(TERMINAL_139);
    		TERMINAL_82.addFollower(TERMINAL_140);
    		TERMINAL_82.addFollower(TERMINAL_141);
    		TERMINAL_82.addFollower(TERMINAL_142);
    		TERMINAL_82.addFollower(TERMINAL_143);
    		TERMINAL_82.addFollower(TERMINAL_144);
    		TERMINAL_82.addFollower(TERMINAL_145);
    		TERMINAL_82.addFollower(TERMINAL_146);
    		TERMINAL_22.addFollower(TERMINAL_147);
    		TERMINAL_147.addFollower(TERMINAL_148);
    		TERMINAL_148.addFollower(TERMINAL_149);
    		TERMINAL_150.addFollower(TERMINAL_149);
    		TERMINAL_150.addFollower(TERMINAL_151);
    		TERMINAL_152.addFollower(TERMINAL_149);
    		TERMINAL_152.addFollower(TERMINAL_151);
    		TERMINAL_151.addFollower(TERMINAL_19);
    		TERMINAL_151.addFollower(TERMINAL_20);
    		TERMINAL_151.addFollower(TERMINAL_21);
    		TERMINAL_151.addFollower(TERMINAL_22);
    		TERMINAL_151.addFollower(TERMINAL_23);
    		TERMINAL_151.addFollower(TERMINAL_24);
    		TERMINAL_151.addFollower(TERMINAL_25);
    		TERMINAL_151.addFollower(TERMINAL_26);
    		TERMINAL_151.addFollower(TERMINAL_27);
    		TERMINAL_151.addFollower(TERMINAL_28);
    		TERMINAL_151.addFollower(TERMINAL_83);
    		TERMINAL_151.addFollower(TERMINAL_84);
    		TERMINAL_151.addFollower(TERMINAL_85);
    		TERMINAL_151.addFollower(TERMINAL_86);
    		TERMINAL_151.addFollower(TERMINAL_87);
    		TERMINAL_151.addFollower(TERMINAL_88);
    		TERMINAL_151.addFollower(TERMINAL_89);
    		TERMINAL_151.addFollower(TERMINAL_90);
    		TERMINAL_151.addFollower(TERMINAL_91);
    		TERMINAL_151.addFollower(TERMINAL_92);
    		TERMINAL_151.addFollower(TERMINAL_93);
    		TERMINAL_151.addFollower(TERMINAL_94);
    		TERMINAL_151.addFollower(TERMINAL_95);
    		TERMINAL_151.addFollower(TERMINAL_96);
    		TERMINAL_151.addFollower(TERMINAL_97);
    		TERMINAL_151.addFollower(TERMINAL_98);
    		TERMINAL_151.addFollower(TERMINAL_99);
    		TERMINAL_151.addFollower(TERMINAL_100);
    		TERMINAL_151.addFollower(TERMINAL_101);
    		TERMINAL_151.addFollower(TERMINAL_102);
    		TERMINAL_151.addFollower(TERMINAL_103);
    		TERMINAL_151.addFollower(TERMINAL_104);
    		TERMINAL_151.addFollower(TERMINAL_105);
    		TERMINAL_151.addFollower(TERMINAL_106);
    		TERMINAL_151.addFollower(TERMINAL_107);
    		TERMINAL_151.addFollower(TERMINAL_108);
    		TERMINAL_151.addFollower(TERMINAL_109);
    		TERMINAL_151.addFollower(TERMINAL_110);
    		TERMINAL_151.addFollower(TERMINAL_111);
    		TERMINAL_151.addFollower(TERMINAL_112);
    		TERMINAL_151.addFollower(TERMINAL_113);
    		TERMINAL_151.addFollower(TERMINAL_114);
    		TERMINAL_151.addFollower(TERMINAL_115);
    		TERMINAL_151.addFollower(TERMINAL_116);
    		TERMINAL_151.addFollower(TERMINAL_117);
    		TERMINAL_151.addFollower(TERMINAL_118);
    		TERMINAL_151.addFollower(TERMINAL_119);
    		TERMINAL_151.addFollower(TERMINAL_120);
    		TERMINAL_151.addFollower(TERMINAL_121);
    		TERMINAL_151.addFollower(TERMINAL_122);
    		TERMINAL_151.addFollower(TERMINAL_123);
    		TERMINAL_151.addFollower(TERMINAL_124);
    		TERMINAL_151.addFollower(TERMINAL_125);
    		TERMINAL_151.addFollower(TERMINAL_126);
    		TERMINAL_151.addFollower(TERMINAL_127);
    		TERMINAL_151.addFollower(TERMINAL_128);
    		TERMINAL_151.addFollower(TERMINAL_129);
    		TERMINAL_151.addFollower(TERMINAL_130);
    		TERMINAL_151.addFollower(TERMINAL_131);
    		TERMINAL_151.addFollower(TERMINAL_132);
    		TERMINAL_151.addFollower(TERMINAL_133);
    		TERMINAL_151.addFollower(TERMINAL_134);
    		TERMINAL_151.addFollower(TERMINAL_135);
    		TERMINAL_151.addFollower(TERMINAL_136);
    		TERMINAL_151.addFollower(TERMINAL_137);
    		TERMINAL_151.addFollower(TERMINAL_138);
    		TERMINAL_151.addFollower(TERMINAL_139);
    		TERMINAL_151.addFollower(TERMINAL_140);
    		TERMINAL_151.addFollower(TERMINAL_141);
    		TERMINAL_151.addFollower(TERMINAL_142);
    		TERMINAL_151.addFollower(TERMINAL_143);
    		TERMINAL_151.addFollower(TERMINAL_144);
    		TERMINAL_151.addFollower(TERMINAL_145);
    		TERMINAL_151.addFollower(TERMINAL_146);
    		TERMINAL_149.addFollower(TERMINAL_150);
    		TERMINAL_8.addFollower(TERMINAL_153);
    		TERMINAL_153.addFollower(TERMINAL_8);
    		TERMINAL_153.addFollower(TERMINAL_5);
    		TERMINAL_153.addFollower(TERMINAL_6);
    		TERMINAL_153.addFollower(TERMINAL_7);
    		TERMINAL_153.addFollower(TERMINAL_9);
    		TERMINAL_153.addFollower(TERMINAL_41);
    		TERMINAL_23.addFollower(TERMINAL_19);
    		TERMINAL_23.addFollower(TERMINAL_20);
    		TERMINAL_23.addFollower(TERMINAL_21);
    		TERMINAL_23.addFollower(TERMINAL_22);
    		TERMINAL_23.addFollower(TERMINAL_23);
    		TERMINAL_23.addFollower(TERMINAL_24);
    		TERMINAL_23.addFollower(TERMINAL_25);
    		TERMINAL_23.addFollower(TERMINAL_26);
    		TERMINAL_23.addFollower(TERMINAL_27);
    		TERMINAL_23.addFollower(TERMINAL_28);
    		TERMINAL_23.addFollower(TERMINAL_83);
    		TERMINAL_23.addFollower(TERMINAL_84);
    		TERMINAL_23.addFollower(TERMINAL_85);
    		TERMINAL_23.addFollower(TERMINAL_86);
    		TERMINAL_23.addFollower(TERMINAL_87);
    		TERMINAL_23.addFollower(TERMINAL_88);
    		TERMINAL_23.addFollower(TERMINAL_89);
    		TERMINAL_23.addFollower(TERMINAL_90);
    		TERMINAL_23.addFollower(TERMINAL_91);
    		TERMINAL_23.addFollower(TERMINAL_92);
    		TERMINAL_23.addFollower(TERMINAL_93);
    		TERMINAL_23.addFollower(TERMINAL_94);
    		TERMINAL_23.addFollower(TERMINAL_95);
    		TERMINAL_23.addFollower(TERMINAL_96);
    		TERMINAL_23.addFollower(TERMINAL_97);
    		TERMINAL_23.addFollower(TERMINAL_98);
    		TERMINAL_23.addFollower(TERMINAL_99);
    		TERMINAL_23.addFollower(TERMINAL_100);
    		TERMINAL_23.addFollower(TERMINAL_101);
    		TERMINAL_23.addFollower(TERMINAL_102);
    		TERMINAL_23.addFollower(TERMINAL_103);
    		TERMINAL_23.addFollower(TERMINAL_104);
    		TERMINAL_23.addFollower(TERMINAL_105);
    		TERMINAL_23.addFollower(TERMINAL_106);
    		TERMINAL_23.addFollower(TERMINAL_107);
    		TERMINAL_23.addFollower(TERMINAL_108);
    		TERMINAL_23.addFollower(TERMINAL_109);
    		TERMINAL_23.addFollower(TERMINAL_110);
    		TERMINAL_23.addFollower(TERMINAL_111);
    		TERMINAL_23.addFollower(TERMINAL_112);
    		TERMINAL_23.addFollower(TERMINAL_113);
    		TERMINAL_23.addFollower(TERMINAL_114);
    		TERMINAL_23.addFollower(TERMINAL_115);
    		TERMINAL_23.addFollower(TERMINAL_116);
    		TERMINAL_23.addFollower(TERMINAL_117);
    		TERMINAL_23.addFollower(TERMINAL_118);
    		TERMINAL_23.addFollower(TERMINAL_119);
    		TERMINAL_23.addFollower(TERMINAL_120);
    		TERMINAL_23.addFollower(TERMINAL_121);
    		TERMINAL_23.addFollower(TERMINAL_122);
    		TERMINAL_23.addFollower(TERMINAL_123);
    		TERMINAL_23.addFollower(TERMINAL_124);
    		TERMINAL_23.addFollower(TERMINAL_125);
    		TERMINAL_23.addFollower(TERMINAL_126);
    		TERMINAL_23.addFollower(TERMINAL_127);
    		TERMINAL_23.addFollower(TERMINAL_128);
    		TERMINAL_23.addFollower(TERMINAL_129);
    		TERMINAL_23.addFollower(TERMINAL_130);
    		TERMINAL_23.addFollower(TERMINAL_131);
    		TERMINAL_23.addFollower(TERMINAL_132);
    		TERMINAL_23.addFollower(TERMINAL_133);
    		TERMINAL_23.addFollower(TERMINAL_134);
    		TERMINAL_23.addFollower(TERMINAL_135);
    		TERMINAL_23.addFollower(TERMINAL_136);
    		TERMINAL_23.addFollower(TERMINAL_137);
    		TERMINAL_23.addFollower(TERMINAL_138);
    		TERMINAL_23.addFollower(TERMINAL_139);
    		TERMINAL_23.addFollower(TERMINAL_140);
    		TERMINAL_23.addFollower(TERMINAL_141);
    		TERMINAL_23.addFollower(TERMINAL_142);
    		TERMINAL_23.addFollower(TERMINAL_143);
    		TERMINAL_23.addFollower(TERMINAL_144);
    		TERMINAL_23.addFollower(TERMINAL_145);
    		TERMINAL_23.addFollower(TERMINAL_146);
    		TERMINAL_154.addFollower(TERMINAL_83);
    		TERMINAL_154.addFollower(TERMINAL_84);
    		TERMINAL_154.addFollower(TERMINAL_85);
    		TERMINAL_154.addFollower(TERMINAL_86);
    		TERMINAL_154.addFollower(TERMINAL_87);
    		TERMINAL_154.addFollower(TERMINAL_88);
    		TERMINAL_154.addFollower(TERMINAL_89);
    		TERMINAL_154.addFollower(TERMINAL_90);
    		TERMINAL_154.addFollower(TERMINAL_91);
    		TERMINAL_154.addFollower(TERMINAL_92);
    		TERMINAL_154.addFollower(TERMINAL_93);
    		TERMINAL_154.addFollower(TERMINAL_94);
    		TERMINAL_154.addFollower(TERMINAL_95);
    		TERMINAL_154.addFollower(TERMINAL_96);
    		TERMINAL_154.addFollower(TERMINAL_97);
    		TERMINAL_154.addFollower(TERMINAL_98);
    		TERMINAL_154.addFollower(TERMINAL_99);
    		TERMINAL_154.addFollower(TERMINAL_100);
    		TERMINAL_154.addFollower(TERMINAL_101);
    		TERMINAL_154.addFollower(TERMINAL_102);
    		TERMINAL_154.addFollower(TERMINAL_103);
    		TERMINAL_154.addFollower(TERMINAL_104);
    		TERMINAL_154.addFollower(TERMINAL_105);
    		TERMINAL_154.addFollower(TERMINAL_106);
    		TERMINAL_154.addFollower(TERMINAL_107);
    		TERMINAL_154.addFollower(TERMINAL_108);
    		TERMINAL_154.addFollower(TERMINAL_109);
    		TERMINAL_154.addFollower(TERMINAL_110);
    		TERMINAL_154.addFollower(TERMINAL_111);
    		TERMINAL_154.addFollower(TERMINAL_112);
    		TERMINAL_154.addFollower(TERMINAL_113);
    		TERMINAL_154.addFollower(TERMINAL_114);
    		TERMINAL_154.addFollower(TERMINAL_115);
    		TERMINAL_154.addFollower(TERMINAL_116);
    		TERMINAL_154.addFollower(TERMINAL_117);
    		TERMINAL_154.addFollower(TERMINAL_118);
    		TERMINAL_154.addFollower(TERMINAL_119);
    		TERMINAL_154.addFollower(TERMINAL_120);
    		TERMINAL_154.addFollower(TERMINAL_121);
    		TERMINAL_154.addFollower(TERMINAL_122);
    		TERMINAL_154.addFollower(TERMINAL_123);
    		TERMINAL_154.addFollower(TERMINAL_124);
    		TERMINAL_154.addFollower(TERMINAL_125);
    		TERMINAL_154.addFollower(TERMINAL_126);
    		TERMINAL_154.addFollower(TERMINAL_127);
    		TERMINAL_154.addFollower(TERMINAL_128);
    		TERMINAL_154.addFollower(TERMINAL_129);
    		TERMINAL_154.addFollower(TERMINAL_130);
    		TERMINAL_154.addFollower(TERMINAL_131);
    		TERMINAL_154.addFollower(TERMINAL_132);
    		TERMINAL_154.addFollower(TERMINAL_133);
    		TERMINAL_154.addFollower(TERMINAL_134);
    		TERMINAL_154.addFollower(TERMINAL_135);
    		TERMINAL_154.addFollower(TERMINAL_136);
    		TERMINAL_154.addFollower(TERMINAL_137);
    		TERMINAL_154.addFollower(TERMINAL_138);
    		TERMINAL_154.addFollower(TERMINAL_139);
    		TERMINAL_154.addFollower(TERMINAL_140);
    		TERMINAL_154.addFollower(TERMINAL_141);
    		TERMINAL_154.addFollower(TERMINAL_142);
    		TERMINAL_154.addFollower(TERMINAL_143);
    		TERMINAL_154.addFollower(TERMINAL_144);
    		TERMINAL_154.addFollower(TERMINAL_145);
    		TERMINAL_154.addFollower(TERMINAL_146);
    		TERMINAL_155.addFollower(TERMINAL_83);
    		TERMINAL_155.addFollower(TERMINAL_84);
    		TERMINAL_155.addFollower(TERMINAL_85);
    		TERMINAL_155.addFollower(TERMINAL_86);
    		TERMINAL_155.addFollower(TERMINAL_87);
    		TERMINAL_155.addFollower(TERMINAL_88);
    		TERMINAL_155.addFollower(TERMINAL_89);
    		TERMINAL_155.addFollower(TERMINAL_90);
    		TERMINAL_155.addFollower(TERMINAL_91);
    		TERMINAL_155.addFollower(TERMINAL_92);
    		TERMINAL_155.addFollower(TERMINAL_93);
    		TERMINAL_155.addFollower(TERMINAL_94);
    		TERMINAL_155.addFollower(TERMINAL_95);
    		TERMINAL_155.addFollower(TERMINAL_96);
    		TERMINAL_155.addFollower(TERMINAL_97);
    		TERMINAL_155.addFollower(TERMINAL_98);
    		TERMINAL_155.addFollower(TERMINAL_99);
    		TERMINAL_155.addFollower(TERMINAL_100);
    		TERMINAL_155.addFollower(TERMINAL_101);
    		TERMINAL_155.addFollower(TERMINAL_102);
    		TERMINAL_155.addFollower(TERMINAL_103);
    		TERMINAL_155.addFollower(TERMINAL_104);
    		TERMINAL_155.addFollower(TERMINAL_105);
    		TERMINAL_155.addFollower(TERMINAL_106);
    		TERMINAL_155.addFollower(TERMINAL_107);
    		TERMINAL_155.addFollower(TERMINAL_108);
    		TERMINAL_155.addFollower(TERMINAL_109);
    		TERMINAL_155.addFollower(TERMINAL_110);
    		TERMINAL_155.addFollower(TERMINAL_111);
    		TERMINAL_155.addFollower(TERMINAL_112);
    		TERMINAL_155.addFollower(TERMINAL_113);
    		TERMINAL_155.addFollower(TERMINAL_114);
    		TERMINAL_155.addFollower(TERMINAL_115);
    		TERMINAL_155.addFollower(TERMINAL_116);
    		TERMINAL_155.addFollower(TERMINAL_117);
    		TERMINAL_155.addFollower(TERMINAL_118);
    		TERMINAL_155.addFollower(TERMINAL_119);
    		TERMINAL_155.addFollower(TERMINAL_120);
    		TERMINAL_155.addFollower(TERMINAL_121);
    		TERMINAL_155.addFollower(TERMINAL_122);
    		TERMINAL_155.addFollower(TERMINAL_123);
    		TERMINAL_155.addFollower(TERMINAL_124);
    		TERMINAL_155.addFollower(TERMINAL_125);
    		TERMINAL_155.addFollower(TERMINAL_126);
    		TERMINAL_155.addFollower(TERMINAL_127);
    		TERMINAL_155.addFollower(TERMINAL_128);
    		TERMINAL_155.addFollower(TERMINAL_129);
    		TERMINAL_155.addFollower(TERMINAL_130);
    		TERMINAL_155.addFollower(TERMINAL_131);
    		TERMINAL_155.addFollower(TERMINAL_132);
    		TERMINAL_155.addFollower(TERMINAL_133);
    		TERMINAL_155.addFollower(TERMINAL_134);
    		TERMINAL_155.addFollower(TERMINAL_135);
    		TERMINAL_155.addFollower(TERMINAL_136);
    		TERMINAL_155.addFollower(TERMINAL_137);
    		TERMINAL_155.addFollower(TERMINAL_138);
    		TERMINAL_155.addFollower(TERMINAL_139);
    		TERMINAL_155.addFollower(TERMINAL_140);
    		TERMINAL_155.addFollower(TERMINAL_141);
    		TERMINAL_155.addFollower(TERMINAL_142);
    		TERMINAL_155.addFollower(TERMINAL_143);
    		TERMINAL_155.addFollower(TERMINAL_144);
    		TERMINAL_155.addFollower(TERMINAL_145);
    		TERMINAL_155.addFollower(TERMINAL_146);
    		TERMINAL_156.addFollower(TERMINAL_157);
    		TERMINAL_157.addFollower(TERMINAL_158);
    		TERMINAL_157.addFollower(TERMINAL_159);
    		TERMINAL_157.addFollower(TERMINAL_160);
    		TERMINAL_158.addFollower(TERMINAL_161);
    		TERMINAL_161.addFollower(TERMINAL_162);
    		TERMINAL_162.addFollower(TERMINAL_158);
    		TERMINAL_162.addFollower(TERMINAL_159);
    		TERMINAL_162.addFollower(TERMINAL_160);
    		TERMINAL_159.addFollower(TERMINAL_163);
    		TERMINAL_163.addFollower(TERMINAL_164);
    		TERMINAL_4.addFollower(TERMINAL_165);
    		TERMINAL_165.addFollower(TERMINAL_166);
    		TERMINAL_165.addFollower(TERMINAL_167);
    		TERMINAL_165.addFollower(TERMINAL_168);
    		TERMINAL_166.addFollower(TERMINAL_169);
    		TERMINAL_169.addFollower(TERMINAL_170);
    		TERMINAL_170.addFollower(TERMINAL_166);
    		TERMINAL_170.addFollower(TERMINAL_167);
    		TERMINAL_170.addFollower(TERMINAL_168);
    		TERMINAL_167.addFollower(TERMINAL_171);
    		TERMINAL_171.addFollower(TERMINAL_164);
    		TERMINAL_24.addFollower(TERMINAL_25);
    		TERMINAL_25.addFollower(TERMINAL_172);
    		TERMINAL_172.addFollower(TERMINAL_173);
    		TERMINAL_172.addFollower(TERMINAL_174);
    		TERMINAL_172.addFollower(TERMINAL_175);
    		TERMINAL_172.addFollower(TERMINAL_176);
    		TERMINAL_172.addFollower(TERMINAL_177);
    		TERMINAL_172.addFollower(TERMINAL_178);
    		TERMINAL_173.addFollower(TERMINAL_179);
    		TERMINAL_179.addFollower(TERMINAL_180);
    		TERMINAL_180.addFollower(TERMINAL_173);
    		TERMINAL_180.addFollower(TERMINAL_174);
    		TERMINAL_180.addFollower(TERMINAL_175);
    		TERMINAL_180.addFollower(TERMINAL_176);
    		TERMINAL_180.addFollower(TERMINAL_177);
    		TERMINAL_180.addFollower(TERMINAL_178);
    		TERMINAL_174.addFollower(TERMINAL_181);
    		TERMINAL_181.addFollower(TERMINAL_164);
    		TERMINAL_175.addFollower(TERMINAL_182);
    		TERMINAL_182.addFollower(TERMINAL_183);
    		TERMINAL_183.addFollower(TERMINAL_173);
    		TERMINAL_183.addFollower(TERMINAL_174);
    		TERMINAL_183.addFollower(TERMINAL_175);
    		TERMINAL_183.addFollower(TERMINAL_176);
    		TERMINAL_183.addFollower(TERMINAL_177);
    		TERMINAL_183.addFollower(TERMINAL_178);
    		TERMINAL_176.addFollower(TERMINAL_184);
    		TERMINAL_184.addFollower(TERMINAL_185);
    		TERMINAL_185.addFollower(TERMINAL_173);
    		TERMINAL_185.addFollower(TERMINAL_174);
    		TERMINAL_185.addFollower(TERMINAL_175);
    		TERMINAL_185.addFollower(TERMINAL_176);
    		TERMINAL_185.addFollower(TERMINAL_177);
    		TERMINAL_185.addFollower(TERMINAL_178);
    		TERMINAL_177.addFollower(TERMINAL_186);
    		TERMINAL_186.addFollower(TERMINAL_187);
    		TERMINAL_187.addFollower(TERMINAL_173);
    		TERMINAL_187.addFollower(TERMINAL_174);
    		TERMINAL_187.addFollower(TERMINAL_175);
    		TERMINAL_187.addFollower(TERMINAL_176);
    		TERMINAL_187.addFollower(TERMINAL_177);
    		TERMINAL_187.addFollower(TERMINAL_178);
    		TERMINAL_178.addFollower(TERMINAL_19);
    		TERMINAL_178.addFollower(TERMINAL_20);
    		TERMINAL_178.addFollower(TERMINAL_21);
    		TERMINAL_178.addFollower(TERMINAL_22);
    		TERMINAL_178.addFollower(TERMINAL_23);
    		TERMINAL_178.addFollower(TERMINAL_24);
    		TERMINAL_178.addFollower(TERMINAL_25);
    		TERMINAL_178.addFollower(TERMINAL_26);
    		TERMINAL_178.addFollower(TERMINAL_27);
    		TERMINAL_178.addFollower(TERMINAL_28);
    		TERMINAL_178.addFollower(TERMINAL_83);
    		TERMINAL_178.addFollower(TERMINAL_84);
    		TERMINAL_178.addFollower(TERMINAL_85);
    		TERMINAL_178.addFollower(TERMINAL_86);
    		TERMINAL_178.addFollower(TERMINAL_87);
    		TERMINAL_178.addFollower(TERMINAL_88);
    		TERMINAL_178.addFollower(TERMINAL_89);
    		TERMINAL_178.addFollower(TERMINAL_90);
    		TERMINAL_178.addFollower(TERMINAL_91);
    		TERMINAL_178.addFollower(TERMINAL_92);
    		TERMINAL_178.addFollower(TERMINAL_93);
    		TERMINAL_178.addFollower(TERMINAL_94);
    		TERMINAL_178.addFollower(TERMINAL_95);
    		TERMINAL_178.addFollower(TERMINAL_96);
    		TERMINAL_178.addFollower(TERMINAL_97);
    		TERMINAL_178.addFollower(TERMINAL_98);
    		TERMINAL_178.addFollower(TERMINAL_99);
    		TERMINAL_178.addFollower(TERMINAL_100);
    		TERMINAL_178.addFollower(TERMINAL_101);
    		TERMINAL_178.addFollower(TERMINAL_102);
    		TERMINAL_178.addFollower(TERMINAL_103);
    		TERMINAL_178.addFollower(TERMINAL_104);
    		TERMINAL_178.addFollower(TERMINAL_105);
    		TERMINAL_178.addFollower(TERMINAL_106);
    		TERMINAL_178.addFollower(TERMINAL_107);
    		TERMINAL_178.addFollower(TERMINAL_108);
    		TERMINAL_178.addFollower(TERMINAL_109);
    		TERMINAL_178.addFollower(TERMINAL_110);
    		TERMINAL_178.addFollower(TERMINAL_111);
    		TERMINAL_178.addFollower(TERMINAL_112);
    		TERMINAL_178.addFollower(TERMINAL_113);
    		TERMINAL_178.addFollower(TERMINAL_114);
    		TERMINAL_178.addFollower(TERMINAL_115);
    		TERMINAL_178.addFollower(TERMINAL_116);
    		TERMINAL_178.addFollower(TERMINAL_117);
    		TERMINAL_178.addFollower(TERMINAL_118);
    		TERMINAL_178.addFollower(TERMINAL_119);
    		TERMINAL_178.addFollower(TERMINAL_120);
    		TERMINAL_178.addFollower(TERMINAL_121);
    		TERMINAL_178.addFollower(TERMINAL_122);
    		TERMINAL_178.addFollower(TERMINAL_123);
    		TERMINAL_178.addFollower(TERMINAL_124);
    		TERMINAL_178.addFollower(TERMINAL_125);
    		TERMINAL_178.addFollower(TERMINAL_126);
    		TERMINAL_178.addFollower(TERMINAL_127);
    		TERMINAL_178.addFollower(TERMINAL_128);
    		TERMINAL_178.addFollower(TERMINAL_129);
    		TERMINAL_178.addFollower(TERMINAL_130);
    		TERMINAL_178.addFollower(TERMINAL_131);
    		TERMINAL_178.addFollower(TERMINAL_132);
    		TERMINAL_178.addFollower(TERMINAL_133);
    		TERMINAL_178.addFollower(TERMINAL_134);
    		TERMINAL_178.addFollower(TERMINAL_135);
    		TERMINAL_178.addFollower(TERMINAL_136);
    		TERMINAL_178.addFollower(TERMINAL_137);
    		TERMINAL_178.addFollower(TERMINAL_138);
    		TERMINAL_178.addFollower(TERMINAL_139);
    		TERMINAL_178.addFollower(TERMINAL_140);
    		TERMINAL_178.addFollower(TERMINAL_141);
    		TERMINAL_178.addFollower(TERMINAL_142);
    		TERMINAL_178.addFollower(TERMINAL_143);
    		TERMINAL_178.addFollower(TERMINAL_144);
    		TERMINAL_178.addFollower(TERMINAL_145);
    		TERMINAL_178.addFollower(TERMINAL_146);
    		TERMINAL_188.addFollower(TERMINAL_189);
    	}
    	public static void wire1() {
    		TERMINAL_189.addFollower(TERMINAL_83);
    		TERMINAL_189.addFollower(TERMINAL_84);
    		TERMINAL_189.addFollower(TERMINAL_85);
    		TERMINAL_189.addFollower(TERMINAL_86);
    		TERMINAL_189.addFollower(TERMINAL_87);
    		TERMINAL_189.addFollower(TERMINAL_88);
    		TERMINAL_83.addFollower(TERMINAL_190);
    		TERMINAL_190.addFollower(TERMINAL_191);
    		TERMINAL_191.addFollower(TERMINAL_83);
    		TERMINAL_191.addFollower(TERMINAL_84);
    		TERMINAL_191.addFollower(TERMINAL_85);
    		TERMINAL_191.addFollower(TERMINAL_86);
    		TERMINAL_191.addFollower(TERMINAL_87);
    		TERMINAL_191.addFollower(TERMINAL_88);
    		TERMINAL_84.addFollower(TERMINAL_192);
    		TERMINAL_192.addFollower(TERMINAL_164);
    		TERMINAL_85.addFollower(TERMINAL_193);
    		TERMINAL_193.addFollower(TERMINAL_82);
    		TERMINAL_193.addFollower(TERMINAL_22);
    		TERMINAL_193.addFollower(TERMINAL_23);
    		TERMINAL_193.addFollower(TERMINAL_154);
    		TERMINAL_193.addFollower(TERMINAL_155);
    		TERMINAL_193.addFollower(TERMINAL_24);
    		TERMINAL_193.addFollower(TERMINAL_25);
    		TERMINAL_193.addFollower(TERMINAL_194);
    		TERMINAL_193.addFollower(TERMINAL_195);
    		TERMINAL_193.addFollower(TERMINAL_196);
    		TERMINAL_193.addFollower(TERMINAL_197);
    		TERMINAL_193.addFollower(TERMINAL_198);
    		TERMINAL_86.addFollower(TERMINAL_199);
    		TERMINAL_199.addFollower(TERMINAL_200);
    		TERMINAL_200.addFollower(TERMINAL_83);
    		TERMINAL_200.addFollower(TERMINAL_84);
    		TERMINAL_200.addFollower(TERMINAL_85);
    		TERMINAL_200.addFollower(TERMINAL_86);
    		TERMINAL_200.addFollower(TERMINAL_87);
    		TERMINAL_200.addFollower(TERMINAL_88);
    		TERMINAL_87.addFollower(TERMINAL_201);
    		TERMINAL_201.addFollower(TERMINAL_202);
    		TERMINAL_202.addFollower(TERMINAL_83);
    		TERMINAL_202.addFollower(TERMINAL_84);
    		TERMINAL_202.addFollower(TERMINAL_85);
    		TERMINAL_202.addFollower(TERMINAL_86);
    		TERMINAL_202.addFollower(TERMINAL_87);
    		TERMINAL_202.addFollower(TERMINAL_88);
    		TERMINAL_88.addFollower(TERMINAL_112);
    		TERMINAL_88.addFollower(TERMINAL_113);
    		TERMINAL_88.addFollower(TERMINAL_114);
    		TERMINAL_88.addFollower(TERMINAL_115);
    		TERMINAL_88.addFollower(TERMINAL_116);
    		TERMINAL_88.addFollower(TERMINAL_117);
    		TERMINAL_88.addFollower(TERMINAL_118);
    		TERMINAL_88.addFollower(TERMINAL_119);
    		TERMINAL_88.addFollower(TERMINAL_120);
    		TERMINAL_88.addFollower(TERMINAL_121);
    		TERMINAL_11.addFollower(TERMINAL_12);
    		TERMINAL_11.addFollower(TERMINAL_13);
    		TERMINAL_12.addFollower(TERMINAL_13);
    		TERMINAL_13.addFollower(TERMINAL_203);
    		TERMINAL_203.addFollower(TERMINAL_89);
    		TERMINAL_203.addFollower(TERMINAL_90);
    		TERMINAL_203.addFollower(TERMINAL_91);
    		TERMINAL_203.addFollower(TERMINAL_92);
    		TERMINAL_203.addFollower(TERMINAL_93);
    		TERMINAL_203.addFollower(TERMINAL_94);
    		TERMINAL_203.addFollower(TERMINAL_95);
    		TERMINAL_203.addFollower(TERMINAL_96);
    		TERMINAL_89.addFollower(TERMINAL_204);
    		TERMINAL_204.addFollower(TERMINAL_205);
    		TERMINAL_205.addFollower(TERMINAL_89);
    		TERMINAL_205.addFollower(TERMINAL_90);
    		TERMINAL_205.addFollower(TERMINAL_91);
    		TERMINAL_205.addFollower(TERMINAL_92);
    		TERMINAL_205.addFollower(TERMINAL_93);
    		TERMINAL_205.addFollower(TERMINAL_94);
    		TERMINAL_205.addFollower(TERMINAL_95);
    		TERMINAL_205.addFollower(TERMINAL_96);
    		TERMINAL_90.addFollower(TERMINAL_206);
    		TERMINAL_206.addFollower(TERMINAL_164);
    		TERMINAL_91.addFollower(TERMINAL_207);
    		TERMINAL_207.addFollower(TERMINAL_82);
    		TERMINAL_207.addFollower(TERMINAL_22);
    		TERMINAL_207.addFollower(TERMINAL_23);
    		TERMINAL_207.addFollower(TERMINAL_154);
    		TERMINAL_207.addFollower(TERMINAL_155);
    		TERMINAL_207.addFollower(TERMINAL_24);
    		TERMINAL_207.addFollower(TERMINAL_25);
    		TERMINAL_207.addFollower(TERMINAL_194);
    		TERMINAL_207.addFollower(TERMINAL_195);
    		TERMINAL_207.addFollower(TERMINAL_196);
    		TERMINAL_207.addFollower(TERMINAL_197);
    		TERMINAL_207.addFollower(TERMINAL_198);
    		TERMINAL_92.addFollower(TERMINAL_208);
    		TERMINAL_208.addFollower(TERMINAL_209);
    		TERMINAL_209.addFollower(TERMINAL_89);
    		TERMINAL_209.addFollower(TERMINAL_90);
    		TERMINAL_209.addFollower(TERMINAL_91);
    		TERMINAL_209.addFollower(TERMINAL_92);
    		TERMINAL_209.addFollower(TERMINAL_93);
    		TERMINAL_209.addFollower(TERMINAL_94);
    		TERMINAL_209.addFollower(TERMINAL_95);
    		TERMINAL_209.addFollower(TERMINAL_96);
    		TERMINAL_93.addFollower(TERMINAL_210);
    		TERMINAL_210.addFollower(TERMINAL_211);
    		TERMINAL_211.addFollower(TERMINAL_89);
    		TERMINAL_211.addFollower(TERMINAL_90);
    		TERMINAL_211.addFollower(TERMINAL_91);
    		TERMINAL_211.addFollower(TERMINAL_92);
    		TERMINAL_211.addFollower(TERMINAL_93);
    		TERMINAL_211.addFollower(TERMINAL_94);
    		TERMINAL_211.addFollower(TERMINAL_95);
    		TERMINAL_211.addFollower(TERMINAL_96);
    		TERMINAL_94.addFollower(TERMINAL_212);
    		TERMINAL_212.addFollower(TERMINAL_213);
    		TERMINAL_213.addFollower(TERMINAL_89);
    		TERMINAL_213.addFollower(TERMINAL_90);
    		TERMINAL_213.addFollower(TERMINAL_91);
    		TERMINAL_213.addFollower(TERMINAL_92);
    		TERMINAL_213.addFollower(TERMINAL_93);
    		TERMINAL_213.addFollower(TERMINAL_94);
    		TERMINAL_213.addFollower(TERMINAL_95);
    		TERMINAL_213.addFollower(TERMINAL_96);
    		TERMINAL_95.addFollower(TERMINAL_214);
    		TERMINAL_214.addFollower(TERMINAL_215);
    		TERMINAL_215.addFollower(TERMINAL_89);
    		TERMINAL_215.addFollower(TERMINAL_90);
    		TERMINAL_215.addFollower(TERMINAL_91);
    		TERMINAL_215.addFollower(TERMINAL_92);
    		TERMINAL_215.addFollower(TERMINAL_93);
    		TERMINAL_215.addFollower(TERMINAL_94);
    		TERMINAL_215.addFollower(TERMINAL_95);
    		TERMINAL_215.addFollower(TERMINAL_96);
    		TERMINAL_26.addFollower(TERMINAL_27);
    		TERMINAL_27.addFollower(TERMINAL_216);
    		TERMINAL_216.addFollower(TERMINAL_217);
    		TERMINAL_216.addFollower(TERMINAL_218);
    		TERMINAL_216.addFollower(TERMINAL_219);
    		TERMINAL_216.addFollower(TERMINAL_220);
    		TERMINAL_217.addFollower(TERMINAL_221);
    		TERMINAL_221.addFollower(TERMINAL_222);
    		TERMINAL_222.addFollower(TERMINAL_217);
    		TERMINAL_222.addFollower(TERMINAL_218);
    		TERMINAL_222.addFollower(TERMINAL_219);
    		TERMINAL_222.addFollower(TERMINAL_220);
    		TERMINAL_218.addFollower(TERMINAL_223);
    		TERMINAL_223.addFollower(TERMINAL_164);
    		TERMINAL_219.addFollower(TERMINAL_224);
    		TERMINAL_224.addFollower(TERMINAL_225);
    		TERMINAL_225.addFollower(TERMINAL_217);
    		TERMINAL_225.addFollower(TERMINAL_218);
    		TERMINAL_225.addFollower(TERMINAL_219);
    		TERMINAL_225.addFollower(TERMINAL_220);
    		TERMINAL_220.addFollower(TERMINAL_19);
    		TERMINAL_220.addFollower(TERMINAL_20);
    		TERMINAL_220.addFollower(TERMINAL_21);
    		TERMINAL_220.addFollower(TERMINAL_22);
    		TERMINAL_220.addFollower(TERMINAL_23);
    		TERMINAL_220.addFollower(TERMINAL_24);
    		TERMINAL_220.addFollower(TERMINAL_25);
    		TERMINAL_220.addFollower(TERMINAL_26);
    		TERMINAL_220.addFollower(TERMINAL_27);
    		TERMINAL_220.addFollower(TERMINAL_28);
    		TERMINAL_164.addFollower(TERMINAL_226);
    		TERMINAL_226.addFollower(TERMINAL_227);
    		TERMINAL_226.addFollower(TERMINAL_228);
    		TERMINAL_226.addFollower(TERMINAL_229);
    		TERMINAL_226.addFollower(TERMINAL_230);
    		TERMINAL_226.addFollower(TERMINAL_231);
    		TERMINAL_226.addFollower(TERMINAL_232);
    		TERMINAL_227.addFollower(TERMINAL_233);
    		TERMINAL_233.addFollower(TERMINAL_234);
    		TERMINAL_234.addFollower(TERMINAL_227);
    		TERMINAL_234.addFollower(TERMINAL_228);
    		TERMINAL_234.addFollower(TERMINAL_229);
    		TERMINAL_234.addFollower(TERMINAL_230);
    		TERMINAL_234.addFollower(TERMINAL_231);
    		TERMINAL_234.addFollower(TERMINAL_232);
    		TERMINAL_228.addFollower(TERMINAL_235);
    		TERMINAL_235.addFollower(TERMINAL_164);
    		TERMINAL_229.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_237);
    		TERMINAL_237.addFollower(TERMINAL_227);
    		TERMINAL_237.addFollower(TERMINAL_228);
    		TERMINAL_237.addFollower(TERMINAL_229);
    		TERMINAL_237.addFollower(TERMINAL_230);
    		TERMINAL_237.addFollower(TERMINAL_231);
    		TERMINAL_237.addFollower(TERMINAL_232);
    		TERMINAL_230.addFollower(TERMINAL_238);
    		TERMINAL_238.addFollower(TERMINAL_239);
    		TERMINAL_239.addFollower(TERMINAL_227);
    		TERMINAL_239.addFollower(TERMINAL_228);
    		TERMINAL_239.addFollower(TERMINAL_229);
    		TERMINAL_239.addFollower(TERMINAL_230);
    		TERMINAL_239.addFollower(TERMINAL_231);
    		TERMINAL_239.addFollower(TERMINAL_232);
    		TERMINAL_231.addFollower(TERMINAL_240);
    		TERMINAL_240.addFollower(TERMINAL_241);
    		TERMINAL_241.addFollower(TERMINAL_227);
    		TERMINAL_241.addFollower(TERMINAL_228);
    		TERMINAL_241.addFollower(TERMINAL_229);
    		TERMINAL_241.addFollower(TERMINAL_230);
    		TERMINAL_241.addFollower(TERMINAL_231);
    		TERMINAL_241.addFollower(TERMINAL_232);
    		TERMINAL_232.addFollower(TERMINAL_158);
    		TERMINAL_232.addFollower(TERMINAL_159);
    		TERMINAL_232.addFollower(TERMINAL_160);
    		TERMINAL_232.addFollower(TERMINAL_166);
    		TERMINAL_232.addFollower(TERMINAL_167);
    		TERMINAL_232.addFollower(TERMINAL_168);
    		TERMINAL_232.addFollower(TERMINAL_173);
    		TERMINAL_232.addFollower(TERMINAL_174);
    		TERMINAL_232.addFollower(TERMINAL_175);
    		TERMINAL_232.addFollower(TERMINAL_176);
    		TERMINAL_232.addFollower(TERMINAL_177);
    		TERMINAL_232.addFollower(TERMINAL_178);
    		TERMINAL_232.addFollower(TERMINAL_83);
    		TERMINAL_232.addFollower(TERMINAL_84);
    		TERMINAL_232.addFollower(TERMINAL_85);
    		TERMINAL_232.addFollower(TERMINAL_86);
    		TERMINAL_232.addFollower(TERMINAL_87);
    		TERMINAL_232.addFollower(TERMINAL_88);
    		TERMINAL_232.addFollower(TERMINAL_89);
    		TERMINAL_232.addFollower(TERMINAL_90);
    		TERMINAL_232.addFollower(TERMINAL_91);
    		TERMINAL_232.addFollower(TERMINAL_92);
    		TERMINAL_232.addFollower(TERMINAL_93);
    		TERMINAL_232.addFollower(TERMINAL_94);
    		TERMINAL_232.addFollower(TERMINAL_95);
    		TERMINAL_232.addFollower(TERMINAL_96);
    		TERMINAL_232.addFollower(TERMINAL_217);
    		TERMINAL_232.addFollower(TERMINAL_218);
    		TERMINAL_232.addFollower(TERMINAL_219);
    		TERMINAL_232.addFollower(TERMINAL_220);
    		TERMINAL_232.addFollower(TERMINAL_227);
    		TERMINAL_232.addFollower(TERMINAL_228);
    		TERMINAL_232.addFollower(TERMINAL_229);
    		TERMINAL_232.addFollower(TERMINAL_230);
    		TERMINAL_232.addFollower(TERMINAL_231);
    		TERMINAL_232.addFollower(TERMINAL_232);
    		TERMINAL_232.addFollower(TERMINAL_97);
    		TERMINAL_232.addFollower(TERMINAL_98);
    		TERMINAL_232.addFollower(TERMINAL_99);
    		TERMINAL_232.addFollower(TERMINAL_100);
    		TERMINAL_232.addFollower(TERMINAL_101);
    		TERMINAL_232.addFollower(TERMINAL_102);
    		TERMINAL_232.addFollower(TERMINAL_103);
    		TERMINAL_232.addFollower(TERMINAL_104);
    		TERMINAL_232.addFollower(TERMINAL_105);
    		TERMINAL_232.addFollower(TERMINAL_106);
    		TERMINAL_232.addFollower(TERMINAL_107);
    		TERMINAL_232.addFollower(TERMINAL_108);
    		TERMINAL_232.addFollower(TERMINAL_109);
    		TERMINAL_232.addFollower(TERMINAL_110);
    		TERMINAL_232.addFollower(TERMINAL_111);
    		TERMINAL_232.addFollower(TERMINAL_112);
    		TERMINAL_232.addFollower(TERMINAL_113);
    		TERMINAL_232.addFollower(TERMINAL_114);
    		TERMINAL_232.addFollower(TERMINAL_115);
    		TERMINAL_232.addFollower(TERMINAL_116);
    		TERMINAL_232.addFollower(TERMINAL_117);
    		TERMINAL_232.addFollower(TERMINAL_118);
    		TERMINAL_232.addFollower(TERMINAL_119);
    		TERMINAL_232.addFollower(TERMINAL_120);
    		TERMINAL_232.addFollower(TERMINAL_121);
    		TERMINAL_232.addFollower(TERMINAL_122);
    		TERMINAL_232.addFollower(TERMINAL_123);
    		TERMINAL_232.addFollower(TERMINAL_124);
    		TERMINAL_232.addFollower(TERMINAL_125);
    		TERMINAL_232.addFollower(TERMINAL_126);
    		TERMINAL_232.addFollower(TERMINAL_127);
    		TERMINAL_232.addFollower(TERMINAL_128);
    		TERMINAL_232.addFollower(TERMINAL_129);
    		TERMINAL_232.addFollower(TERMINAL_130);
    		TERMINAL_232.addFollower(TERMINAL_131);
    		TERMINAL_232.addFollower(TERMINAL_132);
    		TERMINAL_232.addFollower(TERMINAL_133);
    		TERMINAL_232.addFollower(TERMINAL_134);
    		TERMINAL_232.addFollower(TERMINAL_135);
    		TERMINAL_232.addFollower(TERMINAL_136);
    		TERMINAL_232.addFollower(TERMINAL_137);
    		TERMINAL_232.addFollower(TERMINAL_138);
    		TERMINAL_232.addFollower(TERMINAL_139);
    		TERMINAL_232.addFollower(TERMINAL_140);
    		TERMINAL_232.addFollower(TERMINAL_141);
    		TERMINAL_232.addFollower(TERMINAL_142);
    		TERMINAL_232.addFollower(TERMINAL_143);
    		TERMINAL_232.addFollower(TERMINAL_144);
    		TERMINAL_232.addFollower(TERMINAL_145);
    		TERMINAL_232.addFollower(TERMINAL_146);
    		TERMINAL_232.addFollower(TERMINAL_242);
    		TERMINAL_232.addFollower(TERMINAL_243);
    		TERMINAL_232.addFollower(TERMINAL_244);
    		TERMINAL_232.addFollower(TERMINAL_245);
    		TERMINAL_232.addFollower(TERMINAL_246);
    		TERMINAL_194.addFollower(TERMINAL_247);
    		TERMINAL_247.addFollower(TERMINAL_97);
    		TERMINAL_247.addFollower(TERMINAL_98);
    		TERMINAL_247.addFollower(TERMINAL_99);
    		TERMINAL_247.addFollower(TERMINAL_100);
    		TERMINAL_247.addFollower(TERMINAL_101);
    		TERMINAL_247.addFollower(TERMINAL_102);
    		TERMINAL_247.addFollower(TERMINAL_103);
    		TERMINAL_97.addFollower(TERMINAL_248);
    		TERMINAL_248.addFollower(TERMINAL_249);
    		TERMINAL_249.addFollower(TERMINAL_97);
    		TERMINAL_249.addFollower(TERMINAL_98);
    		TERMINAL_249.addFollower(TERMINAL_99);
    		TERMINAL_249.addFollower(TERMINAL_100);
    		TERMINAL_249.addFollower(TERMINAL_101);
    		TERMINAL_249.addFollower(TERMINAL_102);
    		TERMINAL_249.addFollower(TERMINAL_103);
    		TERMINAL_98.addFollower(TERMINAL_250);
    		TERMINAL_250.addFollower(TERMINAL_164);
    		TERMINAL_99.addFollower(TERMINAL_251);
    		TERMINAL_251.addFollower(TERMINAL_82);
    		TERMINAL_251.addFollower(TERMINAL_22);
    		TERMINAL_251.addFollower(TERMINAL_23);
    		TERMINAL_251.addFollower(TERMINAL_154);
    		TERMINAL_251.addFollower(TERMINAL_155);
    		TERMINAL_251.addFollower(TERMINAL_24);
    		TERMINAL_251.addFollower(TERMINAL_25);
    		TERMINAL_251.addFollower(TERMINAL_194);
    		TERMINAL_251.addFollower(TERMINAL_195);
    		TERMINAL_251.addFollower(TERMINAL_196);
    		TERMINAL_251.addFollower(TERMINAL_197);
    		TERMINAL_251.addFollower(TERMINAL_198);
    		TERMINAL_100.addFollower(TERMINAL_252);
    		TERMINAL_252.addFollower(TERMINAL_253);
    		TERMINAL_253.addFollower(TERMINAL_97);
    		TERMINAL_253.addFollower(TERMINAL_98);
    		TERMINAL_253.addFollower(TERMINAL_99);
    		TERMINAL_253.addFollower(TERMINAL_100);
    		TERMINAL_253.addFollower(TERMINAL_101);
    		TERMINAL_253.addFollower(TERMINAL_102);
    		TERMINAL_253.addFollower(TERMINAL_103);
    		TERMINAL_101.addFollower(TERMINAL_254);
    		TERMINAL_254.addFollower(TERMINAL_255);
    		TERMINAL_255.addFollower(TERMINAL_97);
    		TERMINAL_255.addFollower(TERMINAL_98);
    		TERMINAL_255.addFollower(TERMINAL_99);
    		TERMINAL_255.addFollower(TERMINAL_100);
    		TERMINAL_255.addFollower(TERMINAL_101);
    		TERMINAL_255.addFollower(TERMINAL_102);
    		TERMINAL_255.addFollower(TERMINAL_103);
    		TERMINAL_102.addFollower(TERMINAL_256);
    		TERMINAL_256.addFollower(TERMINAL_257);
    		TERMINAL_257.addFollower(TERMINAL_97);
    		TERMINAL_257.addFollower(TERMINAL_98);
    		TERMINAL_257.addFollower(TERMINAL_99);
    		TERMINAL_257.addFollower(TERMINAL_100);
    		TERMINAL_257.addFollower(TERMINAL_101);
    		TERMINAL_257.addFollower(TERMINAL_102);
    		TERMINAL_257.addFollower(TERMINAL_103);
    		TERMINAL_103.addFollower(TERMINAL_83);
    		TERMINAL_103.addFollower(TERMINAL_84);
    		TERMINAL_103.addFollower(TERMINAL_85);
    		TERMINAL_103.addFollower(TERMINAL_86);
    		TERMINAL_103.addFollower(TERMINAL_87);
    		TERMINAL_103.addFollower(TERMINAL_88);
    		TERMINAL_103.addFollower(TERMINAL_89);
    		TERMINAL_103.addFollower(TERMINAL_90);
    		TERMINAL_103.addFollower(TERMINAL_91);
    		TERMINAL_103.addFollower(TERMINAL_92);
    		TERMINAL_103.addFollower(TERMINAL_93);
    		TERMINAL_103.addFollower(TERMINAL_94);
    		TERMINAL_103.addFollower(TERMINAL_95);
    		TERMINAL_103.addFollower(TERMINAL_96);
    		TERMINAL_103.addFollower(TERMINAL_97);
    		TERMINAL_103.addFollower(TERMINAL_98);
    		TERMINAL_103.addFollower(TERMINAL_99);
    		TERMINAL_103.addFollower(TERMINAL_100);
    		TERMINAL_103.addFollower(TERMINAL_101);
    		TERMINAL_103.addFollower(TERMINAL_102);
    		TERMINAL_103.addFollower(TERMINAL_103);
    		TERMINAL_103.addFollower(TERMINAL_104);
    		TERMINAL_103.addFollower(TERMINAL_105);
    		TERMINAL_103.addFollower(TERMINAL_106);
    		TERMINAL_103.addFollower(TERMINAL_107);
    		TERMINAL_103.addFollower(TERMINAL_108);
    		TERMINAL_103.addFollower(TERMINAL_109);
    		TERMINAL_103.addFollower(TERMINAL_110);
    		TERMINAL_103.addFollower(TERMINAL_111);
    		TERMINAL_103.addFollower(TERMINAL_112);
    		TERMINAL_103.addFollower(TERMINAL_113);
    		TERMINAL_103.addFollower(TERMINAL_114);
    		TERMINAL_103.addFollower(TERMINAL_115);
    		TERMINAL_103.addFollower(TERMINAL_116);
    		TERMINAL_103.addFollower(TERMINAL_117);
    		TERMINAL_103.addFollower(TERMINAL_118);
    		TERMINAL_103.addFollower(TERMINAL_119);
    		TERMINAL_103.addFollower(TERMINAL_120);
    		TERMINAL_103.addFollower(TERMINAL_121);
    		TERMINAL_103.addFollower(TERMINAL_122);
    		TERMINAL_103.addFollower(TERMINAL_123);
    		TERMINAL_103.addFollower(TERMINAL_124);
    		TERMINAL_103.addFollower(TERMINAL_125);
    		TERMINAL_103.addFollower(TERMINAL_126);
    		TERMINAL_103.addFollower(TERMINAL_127);
    		TERMINAL_103.addFollower(TERMINAL_128);
    		TERMINAL_103.addFollower(TERMINAL_129);
    		TERMINAL_103.addFollower(TERMINAL_130);
    		TERMINAL_103.addFollower(TERMINAL_131);
    		TERMINAL_103.addFollower(TERMINAL_132);
    		TERMINAL_103.addFollower(TERMINAL_133);
    		TERMINAL_103.addFollower(TERMINAL_134);
    		TERMINAL_103.addFollower(TERMINAL_135);
    		TERMINAL_103.addFollower(TERMINAL_136);
    		TERMINAL_103.addFollower(TERMINAL_137);
    		TERMINAL_103.addFollower(TERMINAL_138);
    		TERMINAL_103.addFollower(TERMINAL_139);
    		TERMINAL_103.addFollower(TERMINAL_140);
    		TERMINAL_103.addFollower(TERMINAL_141);
    		TERMINAL_103.addFollower(TERMINAL_142);
    		TERMINAL_103.addFollower(TERMINAL_143);
    		TERMINAL_103.addFollower(TERMINAL_144);
    		TERMINAL_103.addFollower(TERMINAL_145);
    		TERMINAL_103.addFollower(TERMINAL_146);
    		TERMINAL_195.addFollower(TERMINAL_258);
    		TERMINAL_258.addFollower(TERMINAL_104);
    		TERMINAL_258.addFollower(TERMINAL_105);
    		TERMINAL_258.addFollower(TERMINAL_106);
    		TERMINAL_258.addFollower(TERMINAL_107);
    		TERMINAL_258.addFollower(TERMINAL_108);
    		TERMINAL_258.addFollower(TERMINAL_109);
    		TERMINAL_258.addFollower(TERMINAL_110);
    		TERMINAL_258.addFollower(TERMINAL_111);
    		TERMINAL_104.addFollower(TERMINAL_259);
    		TERMINAL_259.addFollower(TERMINAL_260);
    		TERMINAL_260.addFollower(TERMINAL_104);
    		TERMINAL_260.addFollower(TERMINAL_105);
    		TERMINAL_260.addFollower(TERMINAL_106);
    		TERMINAL_260.addFollower(TERMINAL_107);
    		TERMINAL_260.addFollower(TERMINAL_108);
    		TERMINAL_260.addFollower(TERMINAL_109);
    		TERMINAL_260.addFollower(TERMINAL_110);
    		TERMINAL_260.addFollower(TERMINAL_111);
    		TERMINAL_105.addFollower(TERMINAL_261);
    		TERMINAL_261.addFollower(TERMINAL_164);
    		TERMINAL_106.addFollower(TERMINAL_262);
    		TERMINAL_262.addFollower(TERMINAL_82);
    		TERMINAL_262.addFollower(TERMINAL_22);
    		TERMINAL_262.addFollower(TERMINAL_23);
    		TERMINAL_262.addFollower(TERMINAL_154);
    		TERMINAL_262.addFollower(TERMINAL_155);
    		TERMINAL_262.addFollower(TERMINAL_24);
    		TERMINAL_262.addFollower(TERMINAL_25);
    		TERMINAL_262.addFollower(TERMINAL_194);
    		TERMINAL_262.addFollower(TERMINAL_195);
    		TERMINAL_262.addFollower(TERMINAL_196);
    		TERMINAL_262.addFollower(TERMINAL_197);
    		TERMINAL_262.addFollower(TERMINAL_198);
    		TERMINAL_107.addFollower(TERMINAL_263);
    		TERMINAL_263.addFollower(TERMINAL_264);
    		TERMINAL_264.addFollower(TERMINAL_104);
    		TERMINAL_264.addFollower(TERMINAL_105);
    		TERMINAL_264.addFollower(TERMINAL_106);
    		TERMINAL_264.addFollower(TERMINAL_107);
    		TERMINAL_264.addFollower(TERMINAL_108);
    		TERMINAL_264.addFollower(TERMINAL_109);
    		TERMINAL_264.addFollower(TERMINAL_110);
    		TERMINAL_264.addFollower(TERMINAL_111);
    		TERMINAL_108.addFollower(TERMINAL_265);
    	}
    	public static void wire2() {
    		TERMINAL_265.addFollower(TERMINAL_266);
    		TERMINAL_266.addFollower(TERMINAL_104);
    		TERMINAL_266.addFollower(TERMINAL_105);
    		TERMINAL_266.addFollower(TERMINAL_106);
    		TERMINAL_266.addFollower(TERMINAL_107);
    		TERMINAL_266.addFollower(TERMINAL_108);
    		TERMINAL_266.addFollower(TERMINAL_109);
    		TERMINAL_266.addFollower(TERMINAL_110);
    		TERMINAL_266.addFollower(TERMINAL_111);
    		TERMINAL_109.addFollower(TERMINAL_267);
    		TERMINAL_267.addFollower(TERMINAL_268);
    		TERMINAL_268.addFollower(TERMINAL_104);
    		TERMINAL_268.addFollower(TERMINAL_105);
    		TERMINAL_268.addFollower(TERMINAL_106);
    		TERMINAL_268.addFollower(TERMINAL_107);
    		TERMINAL_268.addFollower(TERMINAL_108);
    		TERMINAL_268.addFollower(TERMINAL_109);
    		TERMINAL_268.addFollower(TERMINAL_110);
    		TERMINAL_268.addFollower(TERMINAL_111);
    		TERMINAL_110.addFollower(TERMINAL_269);
    		TERMINAL_269.addFollower(TERMINAL_196);
    		TERMINAL_111.addFollower(TERMINAL_83);
    		TERMINAL_111.addFollower(TERMINAL_84);
    		TERMINAL_111.addFollower(TERMINAL_85);
    		TERMINAL_111.addFollower(TERMINAL_86);
    		TERMINAL_111.addFollower(TERMINAL_87);
    		TERMINAL_111.addFollower(TERMINAL_88);
    		TERMINAL_111.addFollower(TERMINAL_89);
    		TERMINAL_111.addFollower(TERMINAL_90);
    		TERMINAL_111.addFollower(TERMINAL_91);
    		TERMINAL_111.addFollower(TERMINAL_92);
    		TERMINAL_111.addFollower(TERMINAL_93);
    		TERMINAL_111.addFollower(TERMINAL_94);
    		TERMINAL_111.addFollower(TERMINAL_95);
    		TERMINAL_111.addFollower(TERMINAL_96);
    		TERMINAL_111.addFollower(TERMINAL_97);
    		TERMINAL_111.addFollower(TERMINAL_98);
    		TERMINAL_111.addFollower(TERMINAL_99);
    		TERMINAL_111.addFollower(TERMINAL_100);
    		TERMINAL_111.addFollower(TERMINAL_101);
    		TERMINAL_111.addFollower(TERMINAL_102);
    		TERMINAL_111.addFollower(TERMINAL_103);
    		TERMINAL_111.addFollower(TERMINAL_104);
    		TERMINAL_111.addFollower(TERMINAL_105);
    		TERMINAL_111.addFollower(TERMINAL_106);
    		TERMINAL_111.addFollower(TERMINAL_107);
    		TERMINAL_111.addFollower(TERMINAL_108);
    		TERMINAL_111.addFollower(TERMINAL_109);
    		TERMINAL_111.addFollower(TERMINAL_110);
    		TERMINAL_111.addFollower(TERMINAL_111);
    		TERMINAL_111.addFollower(TERMINAL_112);
    		TERMINAL_111.addFollower(TERMINAL_113);
    		TERMINAL_111.addFollower(TERMINAL_114);
    		TERMINAL_111.addFollower(TERMINAL_115);
    		TERMINAL_111.addFollower(TERMINAL_116);
    		TERMINAL_111.addFollower(TERMINAL_117);
    		TERMINAL_111.addFollower(TERMINAL_118);
    		TERMINAL_111.addFollower(TERMINAL_119);
    		TERMINAL_111.addFollower(TERMINAL_120);
    		TERMINAL_111.addFollower(TERMINAL_121);
    		TERMINAL_111.addFollower(TERMINAL_122);
    		TERMINAL_111.addFollower(TERMINAL_123);
    		TERMINAL_111.addFollower(TERMINAL_124);
    		TERMINAL_111.addFollower(TERMINAL_125);
    		TERMINAL_111.addFollower(TERMINAL_126);
    		TERMINAL_111.addFollower(TERMINAL_127);
    		TERMINAL_111.addFollower(TERMINAL_128);
    		TERMINAL_111.addFollower(TERMINAL_129);
    		TERMINAL_111.addFollower(TERMINAL_130);
    		TERMINAL_111.addFollower(TERMINAL_131);
    		TERMINAL_111.addFollower(TERMINAL_132);
    		TERMINAL_111.addFollower(TERMINAL_133);
    		TERMINAL_111.addFollower(TERMINAL_134);
    		TERMINAL_111.addFollower(TERMINAL_135);
    		TERMINAL_111.addFollower(TERMINAL_136);
    		TERMINAL_111.addFollower(TERMINAL_137);
    		TERMINAL_111.addFollower(TERMINAL_138);
    		TERMINAL_111.addFollower(TERMINAL_139);
    		TERMINAL_111.addFollower(TERMINAL_140);
    		TERMINAL_111.addFollower(TERMINAL_141);
    		TERMINAL_111.addFollower(TERMINAL_142);
    		TERMINAL_111.addFollower(TERMINAL_143);
    		TERMINAL_111.addFollower(TERMINAL_144);
    		TERMINAL_111.addFollower(TERMINAL_145);
    		TERMINAL_111.addFollower(TERMINAL_146);
    		TERMINAL_196.addFollower(TERMINAL_270);
    		TERMINAL_270.addFollower(TERMINAL_112);
    		TERMINAL_270.addFollower(TERMINAL_113);
    		TERMINAL_270.addFollower(TERMINAL_114);
    		TERMINAL_270.addFollower(TERMINAL_115);
    		TERMINAL_270.addFollower(TERMINAL_116);
    		TERMINAL_270.addFollower(TERMINAL_117);
    		TERMINAL_270.addFollower(TERMINAL_118);
    		TERMINAL_270.addFollower(TERMINAL_119);
    		TERMINAL_270.addFollower(TERMINAL_120);
    		TERMINAL_270.addFollower(TERMINAL_121);
    		TERMINAL_112.addFollower(TERMINAL_271);
    		TERMINAL_271.addFollower(TERMINAL_272);
    		TERMINAL_272.addFollower(TERMINAL_112);
    		TERMINAL_272.addFollower(TERMINAL_113);
    		TERMINAL_272.addFollower(TERMINAL_114);
    		TERMINAL_272.addFollower(TERMINAL_115);
    		TERMINAL_272.addFollower(TERMINAL_116);
    		TERMINAL_272.addFollower(TERMINAL_117);
    		TERMINAL_272.addFollower(TERMINAL_118);
    		TERMINAL_272.addFollower(TERMINAL_119);
    		TERMINAL_272.addFollower(TERMINAL_120);
    		TERMINAL_272.addFollower(TERMINAL_121);
    		TERMINAL_113.addFollower(TERMINAL_273);
    		TERMINAL_273.addFollower(TERMINAL_164);
    		TERMINAL_114.addFollower(TERMINAL_274);
    		TERMINAL_274.addFollower(TERMINAL_82);
    		TERMINAL_274.addFollower(TERMINAL_22);
    		TERMINAL_274.addFollower(TERMINAL_23);
    		TERMINAL_274.addFollower(TERMINAL_154);
    		TERMINAL_274.addFollower(TERMINAL_155);
    		TERMINAL_274.addFollower(TERMINAL_24);
    		TERMINAL_274.addFollower(TERMINAL_25);
    		TERMINAL_274.addFollower(TERMINAL_194);
    		TERMINAL_274.addFollower(TERMINAL_195);
    		TERMINAL_274.addFollower(TERMINAL_196);
    		TERMINAL_274.addFollower(TERMINAL_197);
    		TERMINAL_274.addFollower(TERMINAL_198);
    		TERMINAL_115.addFollower(TERMINAL_275);
    		TERMINAL_275.addFollower(TERMINAL_276);
    		TERMINAL_276.addFollower(TERMINAL_112);
    		TERMINAL_276.addFollower(TERMINAL_113);
    		TERMINAL_276.addFollower(TERMINAL_114);
    		TERMINAL_276.addFollower(TERMINAL_115);
    		TERMINAL_276.addFollower(TERMINAL_116);
    		TERMINAL_276.addFollower(TERMINAL_117);
    		TERMINAL_276.addFollower(TERMINAL_118);
    		TERMINAL_276.addFollower(TERMINAL_119);
    		TERMINAL_276.addFollower(TERMINAL_120);
    		TERMINAL_276.addFollower(TERMINAL_121);
    		TERMINAL_116.addFollower(TERMINAL_277);
    		TERMINAL_277.addFollower(TERMINAL_278);
    		TERMINAL_278.addFollower(TERMINAL_112);
    		TERMINAL_278.addFollower(TERMINAL_113);
    		TERMINAL_278.addFollower(TERMINAL_114);
    		TERMINAL_278.addFollower(TERMINAL_115);
    		TERMINAL_278.addFollower(TERMINAL_116);
    		TERMINAL_278.addFollower(TERMINAL_117);
    		TERMINAL_278.addFollower(TERMINAL_118);
    		TERMINAL_278.addFollower(TERMINAL_119);
    		TERMINAL_278.addFollower(TERMINAL_120);
    		TERMINAL_278.addFollower(TERMINAL_121);
    		TERMINAL_117.addFollower(TERMINAL_279);
    		TERMINAL_279.addFollower(TERMINAL_280);
    		TERMINAL_280.addFollower(TERMINAL_112);
    		TERMINAL_280.addFollower(TERMINAL_113);
    		TERMINAL_280.addFollower(TERMINAL_114);
    		TERMINAL_280.addFollower(TERMINAL_115);
    		TERMINAL_280.addFollower(TERMINAL_116);
    		TERMINAL_280.addFollower(TERMINAL_117);
    		TERMINAL_280.addFollower(TERMINAL_118);
    		TERMINAL_280.addFollower(TERMINAL_119);
    		TERMINAL_280.addFollower(TERMINAL_120);
    		TERMINAL_280.addFollower(TERMINAL_121);
    		TERMINAL_118.addFollower(TERMINAL_281);
    		TERMINAL_281.addFollower(TERMINAL_282);
    		TERMINAL_282.addFollower(TERMINAL_112);
    		TERMINAL_282.addFollower(TERMINAL_113);
    		TERMINAL_282.addFollower(TERMINAL_114);
    		TERMINAL_282.addFollower(TERMINAL_115);
    		TERMINAL_282.addFollower(TERMINAL_116);
    		TERMINAL_282.addFollower(TERMINAL_117);
    		TERMINAL_282.addFollower(TERMINAL_118);
    		TERMINAL_282.addFollower(TERMINAL_119);
    		TERMINAL_282.addFollower(TERMINAL_120);
    		TERMINAL_282.addFollower(TERMINAL_121);
    		TERMINAL_119.addFollower(TERMINAL_283);
    		TERMINAL_283.addFollower(TERMINAL_284);
    		TERMINAL_284.addFollower(TERMINAL_112);
    		TERMINAL_284.addFollower(TERMINAL_113);
    		TERMINAL_284.addFollower(TERMINAL_114);
    		TERMINAL_284.addFollower(TERMINAL_115);
    		TERMINAL_284.addFollower(TERMINAL_116);
    		TERMINAL_284.addFollower(TERMINAL_117);
    		TERMINAL_284.addFollower(TERMINAL_118);
    		TERMINAL_284.addFollower(TERMINAL_119);
    		TERMINAL_284.addFollower(TERMINAL_120);
    		TERMINAL_284.addFollower(TERMINAL_121);
    		TERMINAL_120.addFollower(TERMINAL_285);
    		TERMINAL_285.addFollower(TERMINAL_188);
    		TERMINAL_121.addFollower(TERMINAL_83);
    		TERMINAL_121.addFollower(TERMINAL_84);
    		TERMINAL_121.addFollower(TERMINAL_85);
    		TERMINAL_121.addFollower(TERMINAL_86);
    		TERMINAL_121.addFollower(TERMINAL_87);
    		TERMINAL_121.addFollower(TERMINAL_88);
    		TERMINAL_121.addFollower(TERMINAL_89);
    		TERMINAL_121.addFollower(TERMINAL_90);
    		TERMINAL_121.addFollower(TERMINAL_91);
    		TERMINAL_121.addFollower(TERMINAL_92);
    		TERMINAL_121.addFollower(TERMINAL_93);
    		TERMINAL_121.addFollower(TERMINAL_94);
    		TERMINAL_121.addFollower(TERMINAL_95);
    		TERMINAL_121.addFollower(TERMINAL_96);
    		TERMINAL_121.addFollower(TERMINAL_97);
    		TERMINAL_121.addFollower(TERMINAL_98);
    		TERMINAL_121.addFollower(TERMINAL_99);
    		TERMINAL_121.addFollower(TERMINAL_100);
    		TERMINAL_121.addFollower(TERMINAL_101);
    		TERMINAL_121.addFollower(TERMINAL_102);
    		TERMINAL_121.addFollower(TERMINAL_103);
    		TERMINAL_121.addFollower(TERMINAL_104);
    		TERMINAL_121.addFollower(TERMINAL_105);
    		TERMINAL_121.addFollower(TERMINAL_106);
    		TERMINAL_121.addFollower(TERMINAL_107);
    		TERMINAL_121.addFollower(TERMINAL_108);
    		TERMINAL_121.addFollower(TERMINAL_109);
    		TERMINAL_121.addFollower(TERMINAL_110);
    		TERMINAL_121.addFollower(TERMINAL_111);
    		TERMINAL_121.addFollower(TERMINAL_112);
    		TERMINAL_121.addFollower(TERMINAL_113);
    		TERMINAL_121.addFollower(TERMINAL_114);
    		TERMINAL_121.addFollower(TERMINAL_115);
    		TERMINAL_121.addFollower(TERMINAL_116);
    		TERMINAL_121.addFollower(TERMINAL_117);
    		TERMINAL_121.addFollower(TERMINAL_118);
    		TERMINAL_121.addFollower(TERMINAL_119);
    		TERMINAL_121.addFollower(TERMINAL_120);
    		TERMINAL_121.addFollower(TERMINAL_121);
    		TERMINAL_121.addFollower(TERMINAL_122);
    		TERMINAL_121.addFollower(TERMINAL_123);
    		TERMINAL_121.addFollower(TERMINAL_124);
    		TERMINAL_121.addFollower(TERMINAL_125);
    		TERMINAL_121.addFollower(TERMINAL_126);
    		TERMINAL_121.addFollower(TERMINAL_127);
    		TERMINAL_121.addFollower(TERMINAL_128);
    		TERMINAL_121.addFollower(TERMINAL_129);
    		TERMINAL_121.addFollower(TERMINAL_130);
    		TERMINAL_121.addFollower(TERMINAL_131);
    		TERMINAL_121.addFollower(TERMINAL_132);
    		TERMINAL_121.addFollower(TERMINAL_133);
    		TERMINAL_121.addFollower(TERMINAL_134);
    		TERMINAL_121.addFollower(TERMINAL_135);
    		TERMINAL_121.addFollower(TERMINAL_136);
    		TERMINAL_121.addFollower(TERMINAL_137);
    		TERMINAL_121.addFollower(TERMINAL_138);
    		TERMINAL_121.addFollower(TERMINAL_139);
    		TERMINAL_121.addFollower(TERMINAL_140);
    		TERMINAL_121.addFollower(TERMINAL_141);
    		TERMINAL_121.addFollower(TERMINAL_142);
    		TERMINAL_121.addFollower(TERMINAL_143);
    		TERMINAL_121.addFollower(TERMINAL_144);
    		TERMINAL_121.addFollower(TERMINAL_145);
    		TERMINAL_121.addFollower(TERMINAL_146);
    		TERMINAL_197.addFollower(TERMINAL_286);
    		TERMINAL_286.addFollower(TERMINAL_122);
    		TERMINAL_286.addFollower(TERMINAL_123);
    		TERMINAL_286.addFollower(TERMINAL_124);
    		TERMINAL_286.addFollower(TERMINAL_125);
    		TERMINAL_286.addFollower(TERMINAL_126);
    		TERMINAL_286.addFollower(TERMINAL_127);
    		TERMINAL_122.addFollower(TERMINAL_287);
    		TERMINAL_287.addFollower(TERMINAL_288);
    		TERMINAL_288.addFollower(TERMINAL_122);
    		TERMINAL_288.addFollower(TERMINAL_123);
    		TERMINAL_288.addFollower(TERMINAL_124);
    		TERMINAL_288.addFollower(TERMINAL_125);
    		TERMINAL_288.addFollower(TERMINAL_126);
    		TERMINAL_288.addFollower(TERMINAL_127);
    		TERMINAL_123.addFollower(TERMINAL_289);
    		TERMINAL_289.addFollower(TERMINAL_164);
    		TERMINAL_124.addFollower(TERMINAL_290);
    		TERMINAL_290.addFollower(TERMINAL_82);
    		TERMINAL_290.addFollower(TERMINAL_22);
    		TERMINAL_290.addFollower(TERMINAL_23);
    		TERMINAL_290.addFollower(TERMINAL_154);
    		TERMINAL_290.addFollower(TERMINAL_155);
    		TERMINAL_290.addFollower(TERMINAL_24);
    		TERMINAL_290.addFollower(TERMINAL_25);
    		TERMINAL_290.addFollower(TERMINAL_194);
    		TERMINAL_290.addFollower(TERMINAL_195);
    		TERMINAL_290.addFollower(TERMINAL_196);
    		TERMINAL_290.addFollower(TERMINAL_197);
    		TERMINAL_290.addFollower(TERMINAL_198);
    		TERMINAL_125.addFollower(TERMINAL_291);
    		TERMINAL_291.addFollower(TERMINAL_292);
    		TERMINAL_292.addFollower(TERMINAL_122);
    		TERMINAL_292.addFollower(TERMINAL_123);
    		TERMINAL_292.addFollower(TERMINAL_124);
    		TERMINAL_292.addFollower(TERMINAL_125);
    		TERMINAL_292.addFollower(TERMINAL_126);
    		TERMINAL_292.addFollower(TERMINAL_127);
    		TERMINAL_126.addFollower(TERMINAL_293);
    		TERMINAL_293.addFollower(TERMINAL_294);
    		TERMINAL_294.addFollower(TERMINAL_122);
    		TERMINAL_294.addFollower(TERMINAL_123);
    		TERMINAL_294.addFollower(TERMINAL_124);
    		TERMINAL_294.addFollower(TERMINAL_125);
    		TERMINAL_294.addFollower(TERMINAL_126);
    		TERMINAL_294.addFollower(TERMINAL_127);
    		TERMINAL_127.addFollower(TERMINAL_83);
    		TERMINAL_127.addFollower(TERMINAL_84);
    		TERMINAL_127.addFollower(TERMINAL_85);
    		TERMINAL_127.addFollower(TERMINAL_86);
    		TERMINAL_127.addFollower(TERMINAL_87);
    		TERMINAL_127.addFollower(TERMINAL_88);
    		TERMINAL_127.addFollower(TERMINAL_89);
    		TERMINAL_127.addFollower(TERMINAL_90);
    		TERMINAL_127.addFollower(TERMINAL_91);
    		TERMINAL_127.addFollower(TERMINAL_92);
    		TERMINAL_127.addFollower(TERMINAL_93);
    		TERMINAL_127.addFollower(TERMINAL_94);
    		TERMINAL_127.addFollower(TERMINAL_95);
    		TERMINAL_127.addFollower(TERMINAL_96);
    		TERMINAL_127.addFollower(TERMINAL_97);
    		TERMINAL_127.addFollower(TERMINAL_98);
    		TERMINAL_127.addFollower(TERMINAL_99);
    		TERMINAL_127.addFollower(TERMINAL_100);
    		TERMINAL_127.addFollower(TERMINAL_101);
    		TERMINAL_127.addFollower(TERMINAL_102);
    		TERMINAL_127.addFollower(TERMINAL_103);
    		TERMINAL_127.addFollower(TERMINAL_104);
    		TERMINAL_127.addFollower(TERMINAL_105);
    		TERMINAL_127.addFollower(TERMINAL_106);
    		TERMINAL_127.addFollower(TERMINAL_107);
    		TERMINAL_127.addFollower(TERMINAL_108);
    		TERMINAL_127.addFollower(TERMINAL_109);
    		TERMINAL_127.addFollower(TERMINAL_110);
    		TERMINAL_127.addFollower(TERMINAL_111);
    		TERMINAL_127.addFollower(TERMINAL_112);
    		TERMINAL_127.addFollower(TERMINAL_113);
    		TERMINAL_127.addFollower(TERMINAL_114);
    		TERMINAL_127.addFollower(TERMINAL_115);
    		TERMINAL_127.addFollower(TERMINAL_116);
    		TERMINAL_127.addFollower(TERMINAL_117);
    		TERMINAL_127.addFollower(TERMINAL_118);
    		TERMINAL_127.addFollower(TERMINAL_119);
    		TERMINAL_127.addFollower(TERMINAL_120);
    		TERMINAL_127.addFollower(TERMINAL_121);
    		TERMINAL_127.addFollower(TERMINAL_122);
    		TERMINAL_127.addFollower(TERMINAL_123);
    		TERMINAL_127.addFollower(TERMINAL_124);
    		TERMINAL_127.addFollower(TERMINAL_125);
    		TERMINAL_127.addFollower(TERMINAL_126);
    		TERMINAL_127.addFollower(TERMINAL_127);
    		TERMINAL_127.addFollower(TERMINAL_128);
    		TERMINAL_127.addFollower(TERMINAL_129);
    		TERMINAL_127.addFollower(TERMINAL_130);
    		TERMINAL_127.addFollower(TERMINAL_131);
    		TERMINAL_127.addFollower(TERMINAL_132);
    		TERMINAL_127.addFollower(TERMINAL_133);
    		TERMINAL_127.addFollower(TERMINAL_134);
    		TERMINAL_127.addFollower(TERMINAL_135);
    		TERMINAL_127.addFollower(TERMINAL_136);
    		TERMINAL_127.addFollower(TERMINAL_137);
    		TERMINAL_127.addFollower(TERMINAL_138);
    		TERMINAL_127.addFollower(TERMINAL_139);
    		TERMINAL_127.addFollower(TERMINAL_140);
    		TERMINAL_127.addFollower(TERMINAL_141);
    		TERMINAL_127.addFollower(TERMINAL_142);
    		TERMINAL_127.addFollower(TERMINAL_143);
    		TERMINAL_127.addFollower(TERMINAL_144);
    		TERMINAL_127.addFollower(TERMINAL_145);
    		TERMINAL_127.addFollower(TERMINAL_146);
    		TERMINAL_198.addFollower(TERMINAL_295);
    		TERMINAL_295.addFollower(TERMINAL_128);
    		TERMINAL_295.addFollower(TERMINAL_129);
    		TERMINAL_295.addFollower(TERMINAL_130);
    		TERMINAL_295.addFollower(TERMINAL_131);
    		TERMINAL_295.addFollower(TERMINAL_132);
    		TERMINAL_295.addFollower(TERMINAL_133);
    		TERMINAL_295.addFollower(TERMINAL_134);
    		TERMINAL_128.addFollower(TERMINAL_296);
    		TERMINAL_296.addFollower(TERMINAL_297);
    		TERMINAL_297.addFollower(TERMINAL_128);
    		TERMINAL_297.addFollower(TERMINAL_129);
    		TERMINAL_297.addFollower(TERMINAL_130);
    		TERMINAL_297.addFollower(TERMINAL_131);
    		TERMINAL_297.addFollower(TERMINAL_132);
    		TERMINAL_297.addFollower(TERMINAL_133);
    		TERMINAL_297.addFollower(TERMINAL_134);
    		TERMINAL_129.addFollower(TERMINAL_298);
    		TERMINAL_298.addFollower(TERMINAL_164);
    		TERMINAL_130.addFollower(TERMINAL_299);
    		TERMINAL_299.addFollower(TERMINAL_82);
    		TERMINAL_299.addFollower(TERMINAL_22);
    		TERMINAL_299.addFollower(TERMINAL_23);
    		TERMINAL_299.addFollower(TERMINAL_154);
    		TERMINAL_299.addFollower(TERMINAL_155);
    		TERMINAL_299.addFollower(TERMINAL_24);
    		TERMINAL_299.addFollower(TERMINAL_25);
    		TERMINAL_299.addFollower(TERMINAL_194);
    		TERMINAL_299.addFollower(TERMINAL_195);
    		TERMINAL_299.addFollower(TERMINAL_196);
    		TERMINAL_299.addFollower(TERMINAL_197);
    		TERMINAL_299.addFollower(TERMINAL_198);
    		TERMINAL_131.addFollower(TERMINAL_300);
    		TERMINAL_300.addFollower(TERMINAL_301);
    		TERMINAL_301.addFollower(TERMINAL_128);
    		TERMINAL_301.addFollower(TERMINAL_129);
    		TERMINAL_301.addFollower(TERMINAL_130);
    		TERMINAL_301.addFollower(TERMINAL_131);
    		TERMINAL_301.addFollower(TERMINAL_132);
    		TERMINAL_301.addFollower(TERMINAL_133);
    		TERMINAL_301.addFollower(TERMINAL_134);
    		TERMINAL_132.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_303);
    		TERMINAL_303.addFollower(TERMINAL_128);
    		TERMINAL_303.addFollower(TERMINAL_129);
    		TERMINAL_303.addFollower(TERMINAL_130);
    		TERMINAL_303.addFollower(TERMINAL_131);
    		TERMINAL_303.addFollower(TERMINAL_132);
    		TERMINAL_303.addFollower(TERMINAL_133);
    		TERMINAL_303.addFollower(TERMINAL_134);
    		TERMINAL_133.addFollower(TERMINAL_304);
    		TERMINAL_304.addFollower(TERMINAL_305);
    		TERMINAL_305.addFollower(TERMINAL_128);
    		TERMINAL_305.addFollower(TERMINAL_129);
    		TERMINAL_305.addFollower(TERMINAL_130);
    		TERMINAL_305.addFollower(TERMINAL_131);
    		TERMINAL_305.addFollower(TERMINAL_132);
    		TERMINAL_305.addFollower(TERMINAL_133);
    		TERMINAL_305.addFollower(TERMINAL_134);
    		TERMINAL_134.addFollower(TERMINAL_83);
    		TERMINAL_134.addFollower(TERMINAL_84);
    		TERMINAL_134.addFollower(TERMINAL_85);
    		TERMINAL_134.addFollower(TERMINAL_86);
    		TERMINAL_134.addFollower(TERMINAL_87);
    		TERMINAL_134.addFollower(TERMINAL_88);
    		TERMINAL_134.addFollower(TERMINAL_89);
    		TERMINAL_134.addFollower(TERMINAL_90);
    		TERMINAL_134.addFollower(TERMINAL_91);
    		TERMINAL_134.addFollower(TERMINAL_92);
    		TERMINAL_134.addFollower(TERMINAL_93);
    		TERMINAL_134.addFollower(TERMINAL_94);
    		TERMINAL_134.addFollower(TERMINAL_95);
    		TERMINAL_134.addFollower(TERMINAL_96);
    		TERMINAL_134.addFollower(TERMINAL_97);
    		TERMINAL_134.addFollower(TERMINAL_98);
    		TERMINAL_134.addFollower(TERMINAL_99);
    		TERMINAL_134.addFollower(TERMINAL_100);
    		TERMINAL_134.addFollower(TERMINAL_101);
    		TERMINAL_134.addFollower(TERMINAL_102);
    		TERMINAL_134.addFollower(TERMINAL_103);
    		TERMINAL_134.addFollower(TERMINAL_104);
    		TERMINAL_134.addFollower(TERMINAL_105);
    		TERMINAL_134.addFollower(TERMINAL_106);
    		TERMINAL_134.addFollower(TERMINAL_107);
    		TERMINAL_134.addFollower(TERMINAL_108);
    		TERMINAL_134.addFollower(TERMINAL_109);
    		TERMINAL_134.addFollower(TERMINAL_110);
    		TERMINAL_134.addFollower(TERMINAL_111);
    		TERMINAL_134.addFollower(TERMINAL_112);
    		TERMINAL_134.addFollower(TERMINAL_113);
    		TERMINAL_134.addFollower(TERMINAL_114);
    		TERMINAL_134.addFollower(TERMINAL_115);
    		TERMINAL_134.addFollower(TERMINAL_116);
    		TERMINAL_134.addFollower(TERMINAL_117);
    		TERMINAL_134.addFollower(TERMINAL_118);
    		TERMINAL_134.addFollower(TERMINAL_119);
    		TERMINAL_134.addFollower(TERMINAL_120);
    		TERMINAL_134.addFollower(TERMINAL_121);
    		TERMINAL_134.addFollower(TERMINAL_122);
    		TERMINAL_134.addFollower(TERMINAL_123);
    		TERMINAL_134.addFollower(TERMINAL_124);
    		TERMINAL_134.addFollower(TERMINAL_125);
    		TERMINAL_134.addFollower(TERMINAL_126);
    		TERMINAL_134.addFollower(TERMINAL_127);
    		TERMINAL_134.addFollower(TERMINAL_128);
    		TERMINAL_134.addFollower(TERMINAL_129);
    		TERMINAL_134.addFollower(TERMINAL_130);
    		TERMINAL_134.addFollower(TERMINAL_131);
    		TERMINAL_134.addFollower(TERMINAL_132);
    		TERMINAL_134.addFollower(TERMINAL_133);
    		TERMINAL_134.addFollower(TERMINAL_134);
    		TERMINAL_134.addFollower(TERMINAL_135);
    		TERMINAL_134.addFollower(TERMINAL_136);
    		TERMINAL_134.addFollower(TERMINAL_137);
    		TERMINAL_134.addFollower(TERMINAL_138);
    		TERMINAL_134.addFollower(TERMINAL_139);
    		TERMINAL_134.addFollower(TERMINAL_140);
    		TERMINAL_134.addFollower(TERMINAL_141);
    		TERMINAL_134.addFollower(TERMINAL_142);
    		TERMINAL_134.addFollower(TERMINAL_143);
    		TERMINAL_134.addFollower(TERMINAL_144);
    		TERMINAL_134.addFollower(TERMINAL_145);
    		TERMINAL_134.addFollower(TERMINAL_146);
    		TERMINAL_50.addFollower(TERMINAL_57);
    		TERMINAL_50.addFollower(TERMINAL_56);
    		TERMINAL_50.addFollower(TERMINAL_55);
    		TERMINAL_50.addFollower(TERMINAL_60);
    		TERMINAL_50.addFollower(TERMINAL_52);
    		TERMINAL_50.addFollower(TERMINAL_58);
    		TERMINAL_50.addFollower(TERMINAL_61);
    		TERMINAL_50.addFollower(TERMINAL_62);
    		TERMINAL_50.addFollower(TERMINAL_63);
    		TERMINAL_50.addFollower(TERMINAL_54);
    		TERMINAL_50.addFollower(TERMINAL_53);
    		TERMINAL_50.addFollower(TERMINAL_59);
    		TERMINAL_50.addFollower(TERMINAL_66);
    		TERMINAL_50.addFollower(TERMINAL_50);
    		TERMINAL_50.addFollower(TERMINAL_306);
    		TERMINAL_50.addFollower(TERMINAL_307);
    		TERMINAL_307.addFollower(TERMINAL_48);
    		TERMINAL_307.addFollower(TERMINAL_5);
    		TERMINAL_307.addFollower(TERMINAL_6);
    		TERMINAL_307.addFollower(TERMINAL_7);
    		TERMINAL_307.addFollower(TERMINAL_8);
    		TERMINAL_307.addFollower(TERMINAL_9);
    		TERMINAL_307.addFollower(TERMINAL_41);
    		TERMINAL_307.addFollower(TERMINAL_57);
    		TERMINAL_307.addFollower(TERMINAL_56);
    		TERMINAL_307.addFollower(TERMINAL_55);
    		TERMINAL_307.addFollower(TERMINAL_60);
    		TERMINAL_307.addFollower(TERMINAL_52);
    		TERMINAL_307.addFollower(TERMINAL_58);
    		TERMINAL_307.addFollower(TERMINAL_61);
    		TERMINAL_307.addFollower(TERMINAL_62);
    		TERMINAL_307.addFollower(TERMINAL_63);
    		TERMINAL_307.addFollower(TERMINAL_54);
    		TERMINAL_307.addFollower(TERMINAL_53);
    		TERMINAL_307.addFollower(TERMINAL_59);
    		TERMINAL_307.addFollower(TERMINAL_66);
    		TERMINAL_307.addFollower(TERMINAL_50);
    		TERMINAL_307.addFollower(TERMINAL_306);
    		TERMINAL_307.addFollower(TERMINAL_307);
    		TERMINAL_307.addFollower(TERMINAL_308);
    		TERMINAL_307.addFollower(TERMINAL_309);
    		TERMINAL_307.addFollower(TERMINAL_65);
    		TERMINAL_307.addFollower(TERMINAL_310);
    		TERMINAL_307.addFollower(TERMINAL_311);
    		TERMINAL_307.addFollower(TERMINAL_312);
    		TERMINAL_307.addFollower(TERMINAL_313);
    		TERMINAL_307.addFollower(TERMINAL_314);
    		TERMINAL_307.addFollower(TERMINAL_315);
    		TERMINAL_307.addFollower(TERMINAL_316);
    		TERMINAL_307.addFollower(TERMINAL_140);
    		TERMINAL_307.addFollower(TERMINAL_141);
    		TERMINAL_307.addFollower(TERMINAL_142);
    		TERMINAL_307.addFollower(TERMINAL_143);
    		TERMINAL_307.addFollower(TERMINAL_144);
    		TERMINAL_307.addFollower(TERMINAL_145);
    		TERMINAL_307.addFollower(TERMINAL_146);
    		TERMINAL_306.addFollower(TERMINAL_317);
    		TERMINAL_306.addFollower(TERMINAL_50);
    		TERMINAL_306.addFollower(TERMINAL_51);
    		TERMINAL_306.addFollower(TERMINAL_52);
    		TERMINAL_306.addFollower(TERMINAL_53);
    		TERMINAL_306.addFollower(TERMINAL_54);
    		TERMINAL_306.addFollower(TERMINAL_55);
    		TERMINAL_306.addFollower(TERMINAL_56);
    		TERMINAL_306.addFollower(TERMINAL_57);
    		TERMINAL_306.addFollower(TERMINAL_14);
    		TERMINAL_306.addFollower(TERMINAL_58);
    		TERMINAL_306.addFollower(TERMINAL_59);
    		TERMINAL_306.addFollower(TERMINAL_60);
    		TERMINAL_306.addFollower(TERMINAL_61);
    		TERMINAL_306.addFollower(TERMINAL_62);
    		TERMINAL_306.addFollower(TERMINAL_63);
    		TERMINAL_306.addFollower(TERMINAL_64);
    		TERMINAL_306.addFollower(TERMINAL_65);
    		TERMINAL_306.addFollower(TERMINAL_66);
    		TERMINAL_306.addFollower(TERMINAL_67);
    		TERMINAL_306.addFollower(TERMINAL_306);
    		TERMINAL_306.addFollower(TERMINAL_307);
    		TERMINAL_317.addFollower(TERMINAL_318);
    		TERMINAL_318.addFollower(TERMINAL_319);
    		TERMINAL_319.addFollower(TERMINAL_14);
    		TERMINAL_320.addFollower(TERMINAL_50);
    		TERMINAL_320.addFollower(TERMINAL_51);
    		TERMINAL_320.addFollower(TERMINAL_52);
    		TERMINAL_320.addFollower(TERMINAL_53);
    		TERMINAL_320.addFollower(TERMINAL_54);
    		TERMINAL_320.addFollower(TERMINAL_55);
    		TERMINAL_320.addFollower(TERMINAL_56);
    		TERMINAL_320.addFollower(TERMINAL_57);
    		TERMINAL_320.addFollower(TERMINAL_14);
    		TERMINAL_320.addFollower(TERMINAL_58);
    		TERMINAL_320.addFollower(TERMINAL_59);
    		TERMINAL_320.addFollower(TERMINAL_60);
    		TERMINAL_320.addFollower(TERMINAL_61);
    		TERMINAL_320.addFollower(TERMINAL_62);
    		TERMINAL_320.addFollower(TERMINAL_63);
    		TERMINAL_320.addFollower(TERMINAL_64);
    		TERMINAL_320.addFollower(TERMINAL_65);
    		TERMINAL_320.addFollower(TERMINAL_66);
    		TERMINAL_320.addFollower(TERMINAL_67);
    		TERMINAL_320.addFollower(TERMINAL_306);
    		TERMINAL_320.addFollower(TERMINAL_307);
    		TERMINAL_14.addFollower(TERMINAL_320);
    		TERMINAL_14.addFollower(TERMINAL_321);
    		TERMINAL_14.addFollower(TERMINAL_48);
    		TERMINAL_14.addFollower(TERMINAL_5);
    		TERMINAL_14.addFollower(TERMINAL_6);
    		TERMINAL_14.addFollower(TERMINAL_7);
    		TERMINAL_14.addFollower(TERMINAL_8);
    		TERMINAL_14.addFollower(TERMINAL_9);
    		TERMINAL_14.addFollower(TERMINAL_41);
    		TERMINAL_14.addFollower(TERMINAL_57);
    		TERMINAL_14.addFollower(TERMINAL_56);
    		TERMINAL_14.addFollower(TERMINAL_55);
    		TERMINAL_14.addFollower(TERMINAL_60);
    		TERMINAL_14.addFollower(TERMINAL_52);
    		TERMINAL_14.addFollower(TERMINAL_58);
    		TERMINAL_14.addFollower(TERMINAL_61);
    		TERMINAL_14.addFollower(TERMINAL_62);
    		TERMINAL_14.addFollower(TERMINAL_63);
    		TERMINAL_14.addFollower(TERMINAL_54);
    		TERMINAL_14.addFollower(TERMINAL_53);
    		TERMINAL_14.addFollower(TERMINAL_59);
    		TERMINAL_14.addFollower(TERMINAL_66);
    		TERMINAL_14.addFollower(TERMINAL_50);
    		TERMINAL_14.addFollower(TERMINAL_306);
    		TERMINAL_14.addFollower(TERMINAL_307);
    		TERMINAL_14.addFollower(TERMINAL_308);
    		TERMINAL_14.addFollower(TERMINAL_311);
    		TERMINAL_14.addFollower(TERMINAL_312);
    		TERMINAL_14.addFollower(TERMINAL_313);
    		TERMINAL_14.addFollower(TERMINAL_314);
    		TERMINAL_14.addFollower(TERMINAL_315);
    		TERMINAL_14.addFollower(TERMINAL_316);
    		TERMINAL_14.addFollower(TERMINAL_140);
    		TERMINAL_14.addFollower(TERMINAL_141);
    		TERMINAL_14.addFollower(TERMINAL_142);
    		TERMINAL_14.addFollower(TERMINAL_143);
    		TERMINAL_14.addFollower(TERMINAL_144);
    		TERMINAL_14.addFollower(TERMINAL_145);
    		TERMINAL_14.addFollower(TERMINAL_146);
    		TERMINAL_14.addFollower(TERMINAL_309);
    		TERMINAL_14.addFollower(TERMINAL_65);
    		TERMINAL_14.addFollower(TERMINAL_310);
    		TERMINAL_14.addFollower(TERMINAL_242);
    		TERMINAL_14.addFollower(TERMINAL_243);
    		TERMINAL_14.addFollower(TERMINAL_244);
    		TERMINAL_14.addFollower(TERMINAL_245);
    		TERMINAL_14.addFollower(TERMINAL_246);
    		TERMINAL_51.addFollower(TERMINAL_50);
    		TERMINAL_51.addFollower(TERMINAL_51);
    		TERMINAL_51.addFollower(TERMINAL_52);
    		TERMINAL_51.addFollower(TERMINAL_53);
    		TERMINAL_51.addFollower(TERMINAL_54);
    		TERMINAL_51.addFollower(TERMINAL_55);
    		TERMINAL_51.addFollower(TERMINAL_56);
    		TERMINAL_51.addFollower(TERMINAL_57);
    		TERMINAL_51.addFollower(TERMINAL_14);
    		TERMINAL_51.addFollower(TERMINAL_58);
    		TERMINAL_51.addFollower(TERMINAL_59);
    		TERMINAL_51.addFollower(TERMINAL_60);
    		TERMINAL_51.addFollower(TERMINAL_61);
    		TERMINAL_51.addFollower(TERMINAL_62);
    		TERMINAL_51.addFollower(TERMINAL_63);
    		TERMINAL_51.addFollower(TERMINAL_64);
    		TERMINAL_51.addFollower(TERMINAL_65);
    		TERMINAL_51.addFollower(TERMINAL_66);
    		TERMINAL_51.addFollower(TERMINAL_67);
    		TERMINAL_52.addFollower(TERMINAL_48);
    		TERMINAL_52.addFollower(TERMINAL_5);
    		TERMINAL_52.addFollower(TERMINAL_6);
    		TERMINAL_52.addFollower(TERMINAL_7);
    		TERMINAL_52.addFollower(TERMINAL_8);
    		TERMINAL_52.addFollower(TERMINAL_9);
    		TERMINAL_52.addFollower(TERMINAL_41);
    		TERMINAL_52.addFollower(TERMINAL_306);
    		TERMINAL_52.addFollower(TERMINAL_307);
    		TERMINAL_52.addFollower(TERMINAL_308);
    		TERMINAL_52.addFollower(TERMINAL_309);
    		TERMINAL_52.addFollower(TERMINAL_50);
    		TERMINAL_52.addFollower(TERMINAL_60);
    		TERMINAL_52.addFollower(TERMINAL_52);
    		TERMINAL_52.addFollower(TERMINAL_58);
    		TERMINAL_52.addFollower(TERMINAL_61);
    		TERMINAL_52.addFollower(TERMINAL_62);
    		TERMINAL_52.addFollower(TERMINAL_63);
    		TERMINAL_52.addFollower(TERMINAL_54);
    		TERMINAL_52.addFollower(TERMINAL_53);
    		TERMINAL_52.addFollower(TERMINAL_59);
    		TERMINAL_52.addFollower(TERMINAL_57);
    		TERMINAL_52.addFollower(TERMINAL_65);
    		TERMINAL_52.addFollower(TERMINAL_310);
    		TERMINAL_52.addFollower(TERMINAL_311);
    		TERMINAL_52.addFollower(TERMINAL_312);
    		TERMINAL_52.addFollower(TERMINAL_313);
    		TERMINAL_52.addFollower(TERMINAL_314);
    		TERMINAL_52.addFollower(TERMINAL_315);
    		TERMINAL_52.addFollower(TERMINAL_316);
    		TERMINAL_52.addFollower(TERMINAL_140);
    		TERMINAL_52.addFollower(TERMINAL_141);
    		TERMINAL_52.addFollower(TERMINAL_142);
    		TERMINAL_52.addFollower(TERMINAL_143);
    		TERMINAL_52.addFollower(TERMINAL_144);
    		TERMINAL_52.addFollower(TERMINAL_145);
    		TERMINAL_52.addFollower(TERMINAL_146);
    		TERMINAL_53.addFollower(TERMINAL_48);
    		TERMINAL_53.addFollower(TERMINAL_5);
    		TERMINAL_53.addFollower(TERMINAL_6);
    		TERMINAL_53.addFollower(TERMINAL_7);
    		TERMINAL_53.addFollower(TERMINAL_8);
    		TERMINAL_53.addFollower(TERMINAL_9);
    		TERMINAL_53.addFollower(TERMINAL_41);
    		TERMINAL_53.addFollower(TERMINAL_306);
    		TERMINAL_53.addFollower(TERMINAL_307);
    		TERMINAL_53.addFollower(TERMINAL_308);
    		TERMINAL_53.addFollower(TERMINAL_309);
    		TERMINAL_53.addFollower(TERMINAL_50);
    		TERMINAL_53.addFollower(TERMINAL_60);
    		TERMINAL_53.addFollower(TERMINAL_52);
    		TERMINAL_53.addFollower(TERMINAL_58);
    		TERMINAL_53.addFollower(TERMINAL_61);
    		TERMINAL_53.addFollower(TERMINAL_62);
    		TERMINAL_53.addFollower(TERMINAL_63);
    		TERMINAL_53.addFollower(TERMINAL_54);
    		TERMINAL_53.addFollower(TERMINAL_53);
    		TERMINAL_53.addFollower(TERMINAL_59);
    		TERMINAL_53.addFollower(TERMINAL_57);
    		TERMINAL_53.addFollower(TERMINAL_65);
    		TERMINAL_53.addFollower(TERMINAL_310);
    		TERMINAL_53.addFollower(TERMINAL_311);
    		TERMINAL_53.addFollower(TERMINAL_312);
    		TERMINAL_53.addFollower(TERMINAL_313);
    		TERMINAL_53.addFollower(TERMINAL_314);
    		TERMINAL_53.addFollower(TERMINAL_315);
    		TERMINAL_53.addFollower(TERMINAL_316);
    		TERMINAL_53.addFollower(TERMINAL_140);
    		TERMINAL_53.addFollower(TERMINAL_141);
    		TERMINAL_53.addFollower(TERMINAL_142);
    		TERMINAL_53.addFollower(TERMINAL_143);
    		TERMINAL_53.addFollower(TERMINAL_144);
    		TERMINAL_53.addFollower(TERMINAL_145);
    		TERMINAL_53.addFollower(TERMINAL_146);
    		TERMINAL_54.addFollower(TERMINAL_48);
    		TERMINAL_54.addFollower(TERMINAL_5);
    		TERMINAL_54.addFollower(TERMINAL_6);
    		TERMINAL_54.addFollower(TERMINAL_7);
    		TERMINAL_54.addFollower(TERMINAL_8);
    		TERMINAL_54.addFollower(TERMINAL_9);
    		TERMINAL_54.addFollower(TERMINAL_41);
    		TERMINAL_54.addFollower(TERMINAL_306);
    		TERMINAL_54.addFollower(TERMINAL_307);
    		TERMINAL_54.addFollower(TERMINAL_308);
    		TERMINAL_54.addFollower(TERMINAL_309);
    		TERMINAL_54.addFollower(TERMINAL_50);
    		TERMINAL_54.addFollower(TERMINAL_60);
    		TERMINAL_54.addFollower(TERMINAL_52);
    		TERMINAL_54.addFollower(TERMINAL_58);
    		TERMINAL_54.addFollower(TERMINAL_61);
    		TERMINAL_54.addFollower(TERMINAL_62);
    		TERMINAL_54.addFollower(TERMINAL_63);
    		TERMINAL_54.addFollower(TERMINAL_54);
    		TERMINAL_54.addFollower(TERMINAL_53);
    		TERMINAL_54.addFollower(TERMINAL_59);
    		TERMINAL_54.addFollower(TERMINAL_57);
    		TERMINAL_54.addFollower(TERMINAL_65);
    		TERMINAL_54.addFollower(TERMINAL_310);
    		TERMINAL_54.addFollower(TERMINAL_311);
    		TERMINAL_54.addFollower(TERMINAL_312);
    		TERMINAL_54.addFollower(TERMINAL_313);
    		TERMINAL_54.addFollower(TERMINAL_314);
    		TERMINAL_54.addFollower(TERMINAL_315);
    		TERMINAL_54.addFollower(TERMINAL_316);
    		TERMINAL_54.addFollower(TERMINAL_140);
    		TERMINAL_54.addFollower(TERMINAL_141);
    		TERMINAL_54.addFollower(TERMINAL_142);
    		TERMINAL_54.addFollower(TERMINAL_143);
    		TERMINAL_54.addFollower(TERMINAL_144);
    		TERMINAL_54.addFollower(TERMINAL_145);
    		TERMINAL_54.addFollower(TERMINAL_146);
    		TERMINAL_55.addFollower(TERMINAL_60);
    		TERMINAL_55.addFollower(TERMINAL_52);
    		TERMINAL_55.addFollower(TERMINAL_58);
    		TERMINAL_55.addFollower(TERMINAL_61);
    		TERMINAL_55.addFollower(TERMINAL_62);
    		TERMINAL_55.addFollower(TERMINAL_63);
    		TERMINAL_55.addFollower(TERMINAL_54);
    		TERMINAL_55.addFollower(TERMINAL_53);
    		TERMINAL_55.addFollower(TERMINAL_55);
    		TERMINAL_322.addFollower(TERMINAL_52);
    		TERMINAL_322.addFollower(TERMINAL_50);
    		TERMINAL_322.addFollower(TERMINAL_60);
    		TERMINAL_322.addFollower(TERMINAL_58);
    		TERMINAL_322.addFollower(TERMINAL_61);
    		TERMINAL_322.addFollower(TERMINAL_62);
    		TERMINAL_322.addFollower(TERMINAL_63);
    		TERMINAL_322.addFollower(TERMINAL_54);
    		TERMINAL_322.addFollower(TERMINAL_53);
    		TERMINAL_322.addFollower(TERMINAL_59);
    		TERMINAL_322.addFollower(TERMINAL_65);
    		TERMINAL_322.addFollower(TERMINAL_57);
    		TERMINAL_309.addFollower(TERMINAL_52);
    		TERMINAL_310.addFollower(TERMINAL_48);
    		TERMINAL_310.addFollower(TERMINAL_5);
    		TERMINAL_310.addFollower(TERMINAL_6);
    		TERMINAL_310.addFollower(TERMINAL_7);
    		TERMINAL_310.addFollower(TERMINAL_8);
    		TERMINAL_310.addFollower(TERMINAL_9);
    		TERMINAL_310.addFollower(TERMINAL_41);
    		TERMINAL_310.addFollower(TERMINAL_57);
    		TERMINAL_310.addFollower(TERMINAL_56);
    		TERMINAL_310.addFollower(TERMINAL_55);
    		TERMINAL_310.addFollower(TERMINAL_60);
    		TERMINAL_310.addFollower(TERMINAL_52);
    		TERMINAL_310.addFollower(TERMINAL_58);
    		TERMINAL_310.addFollower(TERMINAL_61);
    		TERMINAL_310.addFollower(TERMINAL_62);
    		TERMINAL_310.addFollower(TERMINAL_63);
    		TERMINAL_310.addFollower(TERMINAL_54);
    		TERMINAL_310.addFollower(TERMINAL_53);
    		TERMINAL_310.addFollower(TERMINAL_59);
    		TERMINAL_310.addFollower(TERMINAL_66);
    		TERMINAL_310.addFollower(TERMINAL_50);
    		TERMINAL_310.addFollower(TERMINAL_306);
    		TERMINAL_310.addFollower(TERMINAL_307);
    		TERMINAL_310.addFollower(TERMINAL_308);
    		TERMINAL_310.addFollower(TERMINAL_309);
    		TERMINAL_310.addFollower(TERMINAL_65);
    		TERMINAL_310.addFollower(TERMINAL_310);
    		TERMINAL_310.addFollower(TERMINAL_311);
    		TERMINAL_310.addFollower(TERMINAL_312);
    		TERMINAL_310.addFollower(TERMINAL_313);
    		TERMINAL_310.addFollower(TERMINAL_314);
    		TERMINAL_310.addFollower(TERMINAL_315);
    		TERMINAL_310.addFollower(TERMINAL_316);
    		TERMINAL_310.addFollower(TERMINAL_140);
    		TERMINAL_310.addFollower(TERMINAL_141);
    		TERMINAL_310.addFollower(TERMINAL_142);
    		TERMINAL_310.addFollower(TERMINAL_143);
    		TERMINAL_310.addFollower(TERMINAL_144);
    		TERMINAL_310.addFollower(TERMINAL_145);
    		TERMINAL_310.addFollower(TERMINAL_146);
    		TERMINAL_56.addFollower(TERMINAL_50);
    		TERMINAL_56.addFollower(TERMINAL_51);
    		TERMINAL_56.addFollower(TERMINAL_52);
    		TERMINAL_56.addFollower(TERMINAL_53);
    		TERMINAL_56.addFollower(TERMINAL_54);
    		TERMINAL_56.addFollower(TERMINAL_55);
    		TERMINAL_56.addFollower(TERMINAL_56);
    		TERMINAL_56.addFollower(TERMINAL_57);
    		TERMINAL_56.addFollower(TERMINAL_14);
    		TERMINAL_56.addFollower(TERMINAL_58);
    		TERMINAL_56.addFollower(TERMINAL_59);
    		TERMINAL_56.addFollower(TERMINAL_60);
    		TERMINAL_56.addFollower(TERMINAL_61);
    		TERMINAL_56.addFollower(TERMINAL_62);
    		TERMINAL_56.addFollower(TERMINAL_63);
    		TERMINAL_56.addFollower(TERMINAL_64);
    		TERMINAL_56.addFollower(TERMINAL_65);
    		TERMINAL_56.addFollower(TERMINAL_66);
    		TERMINAL_56.addFollower(TERMINAL_67);
    		TERMINAL_56.addFollower(TERMINAL_308);
    		TERMINAL_308.addFollower(TERMINAL_50);
    		TERMINAL_308.addFollower(TERMINAL_51);
    		TERMINAL_308.addFollower(TERMINAL_52);
    		TERMINAL_308.addFollower(TERMINAL_53);
    		TERMINAL_308.addFollower(TERMINAL_54);
    		TERMINAL_308.addFollower(TERMINAL_55);
    		TERMINAL_308.addFollower(TERMINAL_56);
    		TERMINAL_308.addFollower(TERMINAL_57);
    		TERMINAL_308.addFollower(TERMINAL_14);
    		TERMINAL_308.addFollower(TERMINAL_58);
    		TERMINAL_308.addFollower(TERMINAL_59);
    		TERMINAL_308.addFollower(TERMINAL_60);
    		TERMINAL_308.addFollower(TERMINAL_61);
    		TERMINAL_308.addFollower(TERMINAL_62);
    		TERMINAL_308.addFollower(TERMINAL_63);
    		TERMINAL_308.addFollower(TERMINAL_64);
    		TERMINAL_308.addFollower(TERMINAL_65);
    		TERMINAL_308.addFollower(TERMINAL_66);
    		TERMINAL_308.addFollower(TERMINAL_67);
    		TERMINAL_323.addFollower(TERMINAL_50);
    		TERMINAL_323.addFollower(TERMINAL_51);
    		TERMINAL_323.addFollower(TERMINAL_52);
    		TERMINAL_323.addFollower(TERMINAL_53);
    		TERMINAL_323.addFollower(TERMINAL_54);
    		TERMINAL_323.addFollower(TERMINAL_55);
    		TERMINAL_323.addFollower(TERMINAL_56);
    		TERMINAL_323.addFollower(TERMINAL_57);
    		TERMINAL_323.addFollower(TERMINAL_14);
    		TERMINAL_323.addFollower(TERMINAL_58);
    		TERMINAL_323.addFollower(TERMINAL_59);
    		TERMINAL_323.addFollower(TERMINAL_60);
    		TERMINAL_323.addFollower(TERMINAL_61);
    		TERMINAL_323.addFollower(TERMINAL_62);
    		TERMINAL_323.addFollower(TERMINAL_63);
    		TERMINAL_323.addFollower(TERMINAL_64);
    		TERMINAL_323.addFollower(TERMINAL_65);
    		TERMINAL_323.addFollower(TERMINAL_66);
    		TERMINAL_323.addFollower(TERMINAL_67);
    		TERMINAL_57.addFollower(TERMINAL_324);
    		TERMINAL_324.addFollower(TERMINAL_325);
    		TERMINAL_325.addFollower(TERMINAL_14);
    		TERMINAL_321.addFollower(TERMINAL_50);
    		TERMINAL_321.addFollower(TERMINAL_51);
    		TERMINAL_321.addFollower(TERMINAL_52);
    		TERMINAL_321.addFollower(TERMINAL_53);
    		TERMINAL_321.addFollower(TERMINAL_54);
    		TERMINAL_321.addFollower(TERMINAL_55);
    		TERMINAL_321.addFollower(TERMINAL_56);
    		TERMINAL_321.addFollower(TERMINAL_57);
    		TERMINAL_321.addFollower(TERMINAL_14);
    		TERMINAL_321.addFollower(TERMINAL_58);
    		TERMINAL_321.addFollower(TERMINAL_59);
    		TERMINAL_321.addFollower(TERMINAL_60);
    		TERMINAL_321.addFollower(TERMINAL_61);
    		TERMINAL_321.addFollower(TERMINAL_62);
    		TERMINAL_321.addFollower(TERMINAL_63);
    		TERMINAL_321.addFollower(TERMINAL_64);
    		TERMINAL_321.addFollower(TERMINAL_65);
    		TERMINAL_321.addFollower(TERMINAL_66);
    		TERMINAL_321.addFollower(TERMINAL_67);
    		TERMINAL_58.addFollower(TERMINAL_48);
    		TERMINAL_58.addFollower(TERMINAL_5);
    		TERMINAL_58.addFollower(TERMINAL_6);
    		TERMINAL_58.addFollower(TERMINAL_7);
    		TERMINAL_58.addFollower(TERMINAL_8);
    		TERMINAL_58.addFollower(TERMINAL_9);
    		TERMINAL_58.addFollower(TERMINAL_41);
    		TERMINAL_58.addFollower(TERMINAL_57);
    		TERMINAL_58.addFollower(TERMINAL_56);
    		TERMINAL_58.addFollower(TERMINAL_55);
    		TERMINAL_58.addFollower(TERMINAL_60);
    		TERMINAL_58.addFollower(TERMINAL_52);
    		TERMINAL_58.addFollower(TERMINAL_58);
    		TERMINAL_58.addFollower(TERMINAL_61);
    		TERMINAL_58.addFollower(TERMINAL_62);
    		TERMINAL_58.addFollower(TERMINAL_63);
    		TERMINAL_58.addFollower(TERMINAL_54);
    		TERMINAL_58.addFollower(TERMINAL_53);
    		TERMINAL_58.addFollower(TERMINAL_59);
    		TERMINAL_58.addFollower(TERMINAL_66);
    		TERMINAL_58.addFollower(TERMINAL_50);
    		TERMINAL_58.addFollower(TERMINAL_306);
    		TERMINAL_58.addFollower(TERMINAL_307);
    		TERMINAL_58.addFollower(TERMINAL_308);
    		TERMINAL_58.addFollower(TERMINAL_309);
    		TERMINAL_58.addFollower(TERMINAL_65);
    		TERMINAL_58.addFollower(TERMINAL_310);
    		TERMINAL_58.addFollower(TERMINAL_311);
    		TERMINAL_58.addFollower(TERMINAL_312);
    		TERMINAL_58.addFollower(TERMINAL_313);
    		TERMINAL_58.addFollower(TERMINAL_314);
    		TERMINAL_58.addFollower(TERMINAL_315);
    		TERMINAL_58.addFollower(TERMINAL_316);
    		TERMINAL_58.addFollower(TERMINAL_140);
    		TERMINAL_58.addFollower(TERMINAL_141);
    		TERMINAL_58.addFollower(TERMINAL_142);
    		TERMINAL_58.addFollower(TERMINAL_143);
    		TERMINAL_58.addFollower(TERMINAL_144);
    		TERMINAL_58.addFollower(TERMINAL_145);
    		TERMINAL_58.addFollower(TERMINAL_146);
    		TERMINAL_58.addFollower(TERMINAL_326);
    		TERMINAL_58.addFollower(TERMINAL_327);
    		TERMINAL_59.addFollower(TERMINAL_328);
    		TERMINAL_328.addFollower(TERMINAL_50);
    		TERMINAL_328.addFollower(TERMINAL_51);
    		TERMINAL_328.addFollower(TERMINAL_52);
    		TERMINAL_328.addFollower(TERMINAL_53);
    		TERMINAL_328.addFollower(TERMINAL_54);
    		TERMINAL_328.addFollower(TERMINAL_55);
    		TERMINAL_328.addFollower(TERMINAL_56);
    		TERMINAL_328.addFollower(TERMINAL_57);
    		TERMINAL_328.addFollower(TERMINAL_14);
    		TERMINAL_328.addFollower(TERMINAL_58);
    		TERMINAL_328.addFollower(TERMINAL_59);
    		TERMINAL_328.addFollower(TERMINAL_60);
    		TERMINAL_328.addFollower(TERMINAL_61);
    		TERMINAL_328.addFollower(TERMINAL_62);
    		TERMINAL_328.addFollower(TERMINAL_63);
    		TERMINAL_328.addFollower(TERMINAL_64);
    		TERMINAL_328.addFollower(TERMINAL_65);
    		TERMINAL_328.addFollower(TERMINAL_66);
    		TERMINAL_328.addFollower(TERMINAL_67);
    		TERMINAL_328.addFollower(TERMINAL_312);
    		TERMINAL_311.addFollower(TERMINAL_50);
    		TERMINAL_311.addFollower(TERMINAL_51);
    		TERMINAL_311.addFollower(TERMINAL_52);
    		TERMINAL_311.addFollower(TERMINAL_53);
    		TERMINAL_311.addFollower(TERMINAL_54);
    		TERMINAL_311.addFollower(TERMINAL_55);
    		TERMINAL_311.addFollower(TERMINAL_56);
    		TERMINAL_311.addFollower(TERMINAL_57);
    		TERMINAL_311.addFollower(TERMINAL_14);
    		TERMINAL_311.addFollower(TERMINAL_58);
    		TERMINAL_311.addFollower(TERMINAL_59);
    		TERMINAL_311.addFollower(TERMINAL_60);
    		TERMINAL_311.addFollower(TERMINAL_61);
    		TERMINAL_311.addFollower(TERMINAL_62);
    		TERMINAL_311.addFollower(TERMINAL_63);
    		TERMINAL_311.addFollower(TERMINAL_64);
    		TERMINAL_311.addFollower(TERMINAL_65);
    		TERMINAL_311.addFollower(TERMINAL_66);
    		TERMINAL_311.addFollower(TERMINAL_67);
    		TERMINAL_312.addFollower(TERMINAL_48);
    		TERMINAL_312.addFollower(TERMINAL_5);
    		TERMINAL_312.addFollower(TERMINAL_6);
    		TERMINAL_312.addFollower(TERMINAL_7);
    		TERMINAL_312.addFollower(TERMINAL_8);
    		TERMINAL_312.addFollower(TERMINAL_9);
    		TERMINAL_312.addFollower(TERMINAL_41);
    		TERMINAL_312.addFollower(TERMINAL_57);
    		TERMINAL_312.addFollower(TERMINAL_56);
    		TERMINAL_312.addFollower(TERMINAL_55);
    		TERMINAL_312.addFollower(TERMINAL_60);
    		TERMINAL_312.addFollower(TERMINAL_52);
    		TERMINAL_312.addFollower(TERMINAL_58);
    		TERMINAL_312.addFollower(TERMINAL_61);
    		TERMINAL_312.addFollower(TERMINAL_62);
    		TERMINAL_312.addFollower(TERMINAL_63);
    		TERMINAL_312.addFollower(TERMINAL_54);
    		TERMINAL_312.addFollower(TERMINAL_53);
    		TERMINAL_312.addFollower(TERMINAL_59);
    		TERMINAL_312.addFollower(TERMINAL_66);
    		TERMINAL_312.addFollower(TERMINAL_50);
    		TERMINAL_312.addFollower(TERMINAL_306);
    		TERMINAL_312.addFollower(TERMINAL_307);
    		TERMINAL_312.addFollower(TERMINAL_308);
    		TERMINAL_312.addFollower(TERMINAL_309);
    		TERMINAL_312.addFollower(TERMINAL_65);
    		TERMINAL_312.addFollower(TERMINAL_310);
    		TERMINAL_312.addFollower(TERMINAL_311);
    		TERMINAL_312.addFollower(TERMINAL_312);
    		TERMINAL_312.addFollower(TERMINAL_313);
    		TERMINAL_312.addFollower(TERMINAL_314);
    		TERMINAL_312.addFollower(TERMINAL_315);
    		TERMINAL_312.addFollower(TERMINAL_316);
    		TERMINAL_312.addFollower(TERMINAL_140);
    		TERMINAL_312.addFollower(TERMINAL_141);
    		TERMINAL_312.addFollower(TERMINAL_142);
    		TERMINAL_312.addFollower(TERMINAL_143);
    		TERMINAL_312.addFollower(TERMINAL_144);
    		TERMINAL_312.addFollower(TERMINAL_145);
    		TERMINAL_312.addFollower(TERMINAL_146);
    		TERMINAL_326.addFollower(TERMINAL_60);
    		TERMINAL_326.addFollower(TERMINAL_52);
    		TERMINAL_326.addFollower(TERMINAL_58);
    		TERMINAL_326.addFollower(TERMINAL_61);
    		TERMINAL_326.addFollower(TERMINAL_62);
    		TERMINAL_326.addFollower(TERMINAL_63);
    		TERMINAL_326.addFollower(TERMINAL_54);
    		TERMINAL_326.addFollower(TERMINAL_53);
    		TERMINAL_326.addFollower(TERMINAL_59);
    		TERMINAL_326.addFollower(TERMINAL_65);
    		TERMINAL_326.addFollower(TERMINAL_64);
    		TERMINAL_327.addFollower(TERMINAL_329);
    	}
    	public static void wire3() {
    		TERMINAL_329.addFollower(TERMINAL_60);
    		TERMINAL_329.addFollower(TERMINAL_52);
    		TERMINAL_329.addFollower(TERMINAL_58);
    		TERMINAL_329.addFollower(TERMINAL_61);
    		TERMINAL_329.addFollower(TERMINAL_62);
    		TERMINAL_329.addFollower(TERMINAL_63);
    		TERMINAL_329.addFollower(TERMINAL_54);
    		TERMINAL_329.addFollower(TERMINAL_53);
    		TERMINAL_329.addFollower(TERMINAL_59);
    		TERMINAL_329.addFollower(TERMINAL_65);
    		TERMINAL_329.addFollower(TERMINAL_64);
    		TERMINAL_61.addFollower(TERMINAL_48);
    		TERMINAL_61.addFollower(TERMINAL_5);
    		TERMINAL_61.addFollower(TERMINAL_6);
    		TERMINAL_61.addFollower(TERMINAL_7);
    		TERMINAL_61.addFollower(TERMINAL_8);
    		TERMINAL_61.addFollower(TERMINAL_9);
    		TERMINAL_61.addFollower(TERMINAL_41);
    		TERMINAL_61.addFollower(TERMINAL_57);
    		TERMINAL_61.addFollower(TERMINAL_56);
    		TERMINAL_61.addFollower(TERMINAL_55);
    		TERMINAL_61.addFollower(TERMINAL_60);
    		TERMINAL_61.addFollower(TERMINAL_52);
    		TERMINAL_61.addFollower(TERMINAL_58);
    		TERMINAL_61.addFollower(TERMINAL_61);
    		TERMINAL_61.addFollower(TERMINAL_62);
    		TERMINAL_61.addFollower(TERMINAL_63);
    		TERMINAL_61.addFollower(TERMINAL_54);
    		TERMINAL_61.addFollower(TERMINAL_53);
    		TERMINAL_61.addFollower(TERMINAL_59);
    		TERMINAL_61.addFollower(TERMINAL_66);
    		TERMINAL_61.addFollower(TERMINAL_50);
    		TERMINAL_61.addFollower(TERMINAL_306);
    		TERMINAL_61.addFollower(TERMINAL_307);
    		TERMINAL_61.addFollower(TERMINAL_308);
    		TERMINAL_61.addFollower(TERMINAL_309);
    		TERMINAL_61.addFollower(TERMINAL_65);
    		TERMINAL_61.addFollower(TERMINAL_310);
    		TERMINAL_61.addFollower(TERMINAL_311);
    		TERMINAL_61.addFollower(TERMINAL_312);
    		TERMINAL_61.addFollower(TERMINAL_313);
    		TERMINAL_61.addFollower(TERMINAL_314);
    		TERMINAL_61.addFollower(TERMINAL_315);
    		TERMINAL_61.addFollower(TERMINAL_316);
    		TERMINAL_61.addFollower(TERMINAL_140);
    		TERMINAL_61.addFollower(TERMINAL_141);
    		TERMINAL_61.addFollower(TERMINAL_142);
    		TERMINAL_61.addFollower(TERMINAL_143);
    		TERMINAL_61.addFollower(TERMINAL_144);
    		TERMINAL_61.addFollower(TERMINAL_145);
    		TERMINAL_61.addFollower(TERMINAL_146);
    		TERMINAL_61.addFollower(TERMINAL_326);
    		TERMINAL_61.addFollower(TERMINAL_327);
    		TERMINAL_63.addFollower(TERMINAL_48);
    		TERMINAL_63.addFollower(TERMINAL_5);
    		TERMINAL_63.addFollower(TERMINAL_6);
    		TERMINAL_63.addFollower(TERMINAL_7);
    		TERMINAL_63.addFollower(TERMINAL_8);
    		TERMINAL_63.addFollower(TERMINAL_9);
    		TERMINAL_63.addFollower(TERMINAL_41);
    		TERMINAL_63.addFollower(TERMINAL_306);
    		TERMINAL_63.addFollower(TERMINAL_307);
    		TERMINAL_63.addFollower(TERMINAL_308);
    		TERMINAL_63.addFollower(TERMINAL_309);
    		TERMINAL_63.addFollower(TERMINAL_50);
    		TERMINAL_63.addFollower(TERMINAL_60);
    		TERMINAL_63.addFollower(TERMINAL_52);
    		TERMINAL_63.addFollower(TERMINAL_58);
    		TERMINAL_63.addFollower(TERMINAL_61);
    		TERMINAL_63.addFollower(TERMINAL_62);
    		TERMINAL_63.addFollower(TERMINAL_63);
    		TERMINAL_63.addFollower(TERMINAL_54);
    		TERMINAL_63.addFollower(TERMINAL_53);
    		TERMINAL_63.addFollower(TERMINAL_59);
    		TERMINAL_63.addFollower(TERMINAL_57);
    		TERMINAL_63.addFollower(TERMINAL_65);
    		TERMINAL_63.addFollower(TERMINAL_310);
    		TERMINAL_63.addFollower(TERMINAL_311);
    		TERMINAL_63.addFollower(TERMINAL_312);
    		TERMINAL_63.addFollower(TERMINAL_313);
    		TERMINAL_63.addFollower(TERMINAL_314);
    		TERMINAL_63.addFollower(TERMINAL_315);
    		TERMINAL_63.addFollower(TERMINAL_316);
    		TERMINAL_63.addFollower(TERMINAL_140);
    		TERMINAL_63.addFollower(TERMINAL_141);
    		TERMINAL_63.addFollower(TERMINAL_142);
    		TERMINAL_63.addFollower(TERMINAL_143);
    		TERMINAL_63.addFollower(TERMINAL_144);
    		TERMINAL_63.addFollower(TERMINAL_145);
    		TERMINAL_63.addFollower(TERMINAL_146);
    		TERMINAL_60.addFollower(TERMINAL_52);
    		TERMINAL_60.addFollower(TERMINAL_58);
    		TERMINAL_60.addFollower(TERMINAL_61);
    		TERMINAL_60.addFollower(TERMINAL_62);
    		TERMINAL_60.addFollower(TERMINAL_63);
    		TERMINAL_60.addFollower(TERMINAL_54);
    		TERMINAL_60.addFollower(TERMINAL_53);
    		TERMINAL_330.addFollower(TERMINAL_340);
    		TERMINAL_340.addFollower(TERMINAL_330);
    		TERMINAL_340.addFollower(TERMINAL_331);
    		TERMINAL_340.addFollower(TERMINAL_332);
    		TERMINAL_340.addFollower(TERMINAL_333);
    		TERMINAL_340.addFollower(TERMINAL_334);
    		TERMINAL_340.addFollower(TERMINAL_335);
    		TERMINAL_340.addFollower(TERMINAL_336);
    		TERMINAL_340.addFollower(TERMINAL_337);
    		TERMINAL_340.addFollower(TERMINAL_338);
    		TERMINAL_340.addFollower(TERMINAL_339);
    		TERMINAL_331.addFollower(TERMINAL_341);
    		TERMINAL_341.addFollower(TERMINAL_342);
    		TERMINAL_342.addFollower(TERMINAL_50);
    		TERMINAL_342.addFollower(TERMINAL_51);
    		TERMINAL_342.addFollower(TERMINAL_52);
    		TERMINAL_342.addFollower(TERMINAL_53);
    		TERMINAL_342.addFollower(TERMINAL_54);
    		TERMINAL_342.addFollower(TERMINAL_55);
    		TERMINAL_342.addFollower(TERMINAL_56);
    		TERMINAL_342.addFollower(TERMINAL_57);
    		TERMINAL_342.addFollower(TERMINAL_14);
    		TERMINAL_342.addFollower(TERMINAL_58);
    		TERMINAL_342.addFollower(TERMINAL_59);
    		TERMINAL_342.addFollower(TERMINAL_60);
    		TERMINAL_342.addFollower(TERMINAL_61);
    		TERMINAL_342.addFollower(TERMINAL_62);
    		TERMINAL_342.addFollower(TERMINAL_63);
    		TERMINAL_342.addFollower(TERMINAL_64);
    		TERMINAL_342.addFollower(TERMINAL_65);
    		TERMINAL_342.addFollower(TERMINAL_66);
    		TERMINAL_342.addFollower(TERMINAL_67);
    		TERMINAL_342.addFollower(TERMINAL_314);
    		TERMINAL_313.addFollower(TERMINAL_50);
    		TERMINAL_313.addFollower(TERMINAL_51);
    		TERMINAL_313.addFollower(TERMINAL_52);
    		TERMINAL_313.addFollower(TERMINAL_53);
    		TERMINAL_313.addFollower(TERMINAL_54);
    		TERMINAL_313.addFollower(TERMINAL_55);
    		TERMINAL_313.addFollower(TERMINAL_56);
    		TERMINAL_313.addFollower(TERMINAL_57);
    		TERMINAL_313.addFollower(TERMINAL_14);
    		TERMINAL_313.addFollower(TERMINAL_58);
    		TERMINAL_313.addFollower(TERMINAL_59);
    		TERMINAL_313.addFollower(TERMINAL_60);
    		TERMINAL_313.addFollower(TERMINAL_61);
    		TERMINAL_313.addFollower(TERMINAL_62);
    		TERMINAL_313.addFollower(TERMINAL_63);
    		TERMINAL_313.addFollower(TERMINAL_64);
    		TERMINAL_313.addFollower(TERMINAL_65);
    		TERMINAL_313.addFollower(TERMINAL_66);
    		TERMINAL_313.addFollower(TERMINAL_67);
    		TERMINAL_314.addFollower(TERMINAL_330);
    		TERMINAL_314.addFollower(TERMINAL_331);
    		TERMINAL_314.addFollower(TERMINAL_332);
    		TERMINAL_314.addFollower(TERMINAL_333);
    		TERMINAL_314.addFollower(TERMINAL_334);
    		TERMINAL_314.addFollower(TERMINAL_335);
    		TERMINAL_314.addFollower(TERMINAL_336);
    		TERMINAL_314.addFollower(TERMINAL_337);
    		TERMINAL_314.addFollower(TERMINAL_338);
    		TERMINAL_314.addFollower(TERMINAL_339);
    		TERMINAL_332.addFollower(TERMINAL_343);
    		TERMINAL_343.addFollower(TERMINAL_330);
    		TERMINAL_343.addFollower(TERMINAL_331);
    		TERMINAL_343.addFollower(TERMINAL_332);
    		TERMINAL_343.addFollower(TERMINAL_333);
    		TERMINAL_343.addFollower(TERMINAL_334);
    		TERMINAL_343.addFollower(TERMINAL_335);
    		TERMINAL_343.addFollower(TERMINAL_336);
    		TERMINAL_343.addFollower(TERMINAL_337);
    		TERMINAL_343.addFollower(TERMINAL_338);
    		TERMINAL_343.addFollower(TERMINAL_339);
    		TERMINAL_333.addFollower(TERMINAL_344);
    		TERMINAL_344.addFollower(TERMINAL_330);
    		TERMINAL_344.addFollower(TERMINAL_331);
    		TERMINAL_344.addFollower(TERMINAL_332);
    		TERMINAL_344.addFollower(TERMINAL_333);
    		TERMINAL_344.addFollower(TERMINAL_334);
    		TERMINAL_344.addFollower(TERMINAL_335);
    		TERMINAL_344.addFollower(TERMINAL_336);
    		TERMINAL_344.addFollower(TERMINAL_337);
    		TERMINAL_344.addFollower(TERMINAL_338);
    		TERMINAL_344.addFollower(TERMINAL_339);
    		TERMINAL_334.addFollower(TERMINAL_50);
    		TERMINAL_334.addFollower(TERMINAL_51);
    		TERMINAL_334.addFollower(TERMINAL_52);
    		TERMINAL_334.addFollower(TERMINAL_53);
    		TERMINAL_334.addFollower(TERMINAL_54);
    		TERMINAL_334.addFollower(TERMINAL_55);
    		TERMINAL_334.addFollower(TERMINAL_56);
    		TERMINAL_334.addFollower(TERMINAL_57);
    		TERMINAL_334.addFollower(TERMINAL_14);
    		TERMINAL_334.addFollower(TERMINAL_58);
    		TERMINAL_334.addFollower(TERMINAL_59);
    		TERMINAL_334.addFollower(TERMINAL_60);
    		TERMINAL_334.addFollower(TERMINAL_61);
    		TERMINAL_334.addFollower(TERMINAL_62);
    		TERMINAL_334.addFollower(TERMINAL_63);
    		TERMINAL_334.addFollower(TERMINAL_64);
    		TERMINAL_334.addFollower(TERMINAL_65);
    		TERMINAL_334.addFollower(TERMINAL_66);
    		TERMINAL_334.addFollower(TERMINAL_67);
    		TERMINAL_345.addFollower(TERMINAL_48);
    		TERMINAL_345.addFollower(TERMINAL_5);
    		TERMINAL_345.addFollower(TERMINAL_6);
    		TERMINAL_345.addFollower(TERMINAL_7);
    		TERMINAL_345.addFollower(TERMINAL_8);
    		TERMINAL_345.addFollower(TERMINAL_9);
    		TERMINAL_345.addFollower(TERMINAL_41);
    		TERMINAL_345.addFollower(TERMINAL_57);
    		TERMINAL_345.addFollower(TERMINAL_56);
    		TERMINAL_345.addFollower(TERMINAL_55);
    		TERMINAL_345.addFollower(TERMINAL_60);
    		TERMINAL_345.addFollower(TERMINAL_52);
    		TERMINAL_345.addFollower(TERMINAL_58);
    		TERMINAL_345.addFollower(TERMINAL_61);
    		TERMINAL_345.addFollower(TERMINAL_62);
    		TERMINAL_345.addFollower(TERMINAL_63);
    		TERMINAL_345.addFollower(TERMINAL_54);
    		TERMINAL_345.addFollower(TERMINAL_53);
    		TERMINAL_345.addFollower(TERMINAL_59);
    		TERMINAL_345.addFollower(TERMINAL_66);
    		TERMINAL_345.addFollower(TERMINAL_50);
    		TERMINAL_345.addFollower(TERMINAL_306);
    		TERMINAL_345.addFollower(TERMINAL_307);
    		TERMINAL_345.addFollower(TERMINAL_308);
    		TERMINAL_345.addFollower(TERMINAL_309);
    		TERMINAL_345.addFollower(TERMINAL_65);
    		TERMINAL_345.addFollower(TERMINAL_310);
    		TERMINAL_345.addFollower(TERMINAL_311);
    		TERMINAL_345.addFollower(TERMINAL_312);
    		TERMINAL_345.addFollower(TERMINAL_313);
    		TERMINAL_345.addFollower(TERMINAL_314);
    		TERMINAL_345.addFollower(TERMINAL_315);
    		TERMINAL_345.addFollower(TERMINAL_316);
    		TERMINAL_345.addFollower(TERMINAL_140);
    		TERMINAL_345.addFollower(TERMINAL_141);
    		TERMINAL_345.addFollower(TERMINAL_142);
    		TERMINAL_345.addFollower(TERMINAL_143);
    		TERMINAL_345.addFollower(TERMINAL_144);
    		TERMINAL_345.addFollower(TERMINAL_145);
    		TERMINAL_345.addFollower(TERMINAL_146);
    		TERMINAL_345.addFollower(TERMINAL_326);
    		TERMINAL_345.addFollower(TERMINAL_327);
    		TERMINAL_335.addFollower(TERMINAL_50);
    		TERMINAL_335.addFollower(TERMINAL_51);
    		TERMINAL_335.addFollower(TERMINAL_52);
    		TERMINAL_335.addFollower(TERMINAL_53);
    		TERMINAL_335.addFollower(TERMINAL_54);
    		TERMINAL_335.addFollower(TERMINAL_55);
    		TERMINAL_335.addFollower(TERMINAL_56);
    		TERMINAL_335.addFollower(TERMINAL_57);
    		TERMINAL_335.addFollower(TERMINAL_14);
    		TERMINAL_335.addFollower(TERMINAL_58);
    		TERMINAL_335.addFollower(TERMINAL_59);
    		TERMINAL_335.addFollower(TERMINAL_60);
    		TERMINAL_335.addFollower(TERMINAL_61);
    		TERMINAL_335.addFollower(TERMINAL_62);
    		TERMINAL_335.addFollower(TERMINAL_63);
    		TERMINAL_335.addFollower(TERMINAL_64);
    		TERMINAL_335.addFollower(TERMINAL_65);
    		TERMINAL_335.addFollower(TERMINAL_66);
    		TERMINAL_335.addFollower(TERMINAL_67);
    		TERMINAL_336.addFollower(TERMINAL_50);
    		TERMINAL_336.addFollower(TERMINAL_51);
    		TERMINAL_336.addFollower(TERMINAL_52);
    		TERMINAL_336.addFollower(TERMINAL_53);
    		TERMINAL_336.addFollower(TERMINAL_54);
    		TERMINAL_336.addFollower(TERMINAL_55);
    		TERMINAL_336.addFollower(TERMINAL_56);
    		TERMINAL_336.addFollower(TERMINAL_57);
    		TERMINAL_336.addFollower(TERMINAL_14);
    		TERMINAL_336.addFollower(TERMINAL_58);
    		TERMINAL_336.addFollower(TERMINAL_59);
    		TERMINAL_336.addFollower(TERMINAL_60);
    		TERMINAL_336.addFollower(TERMINAL_61);
    		TERMINAL_336.addFollower(TERMINAL_62);
    		TERMINAL_336.addFollower(TERMINAL_63);
    		TERMINAL_336.addFollower(TERMINAL_64);
    		TERMINAL_336.addFollower(TERMINAL_65);
    		TERMINAL_336.addFollower(TERMINAL_66);
    		TERMINAL_336.addFollower(TERMINAL_67);
    		TERMINAL_337.addFollower(TERMINAL_50);
    		TERMINAL_337.addFollower(TERMINAL_51);
    		TERMINAL_337.addFollower(TERMINAL_52);
    		TERMINAL_337.addFollower(TERMINAL_53);
    		TERMINAL_337.addFollower(TERMINAL_54);
    		TERMINAL_337.addFollower(TERMINAL_55);
    		TERMINAL_337.addFollower(TERMINAL_56);
    		TERMINAL_337.addFollower(TERMINAL_57);
    		TERMINAL_337.addFollower(TERMINAL_14);
    		TERMINAL_337.addFollower(TERMINAL_58);
    		TERMINAL_337.addFollower(TERMINAL_59);
    		TERMINAL_337.addFollower(TERMINAL_60);
    		TERMINAL_337.addFollower(TERMINAL_61);
    		TERMINAL_337.addFollower(TERMINAL_62);
    		TERMINAL_337.addFollower(TERMINAL_63);
    		TERMINAL_337.addFollower(TERMINAL_64);
    		TERMINAL_337.addFollower(TERMINAL_65);
    		TERMINAL_337.addFollower(TERMINAL_66);
    		TERMINAL_337.addFollower(TERMINAL_67);
    		TERMINAL_338.addFollower(TERMINAL_50);
    		TERMINAL_338.addFollower(TERMINAL_51);
    		TERMINAL_338.addFollower(TERMINAL_52);
    		TERMINAL_338.addFollower(TERMINAL_53);
    		TERMINAL_338.addFollower(TERMINAL_54);
    		TERMINAL_338.addFollower(TERMINAL_55);
    		TERMINAL_338.addFollower(TERMINAL_56);
    		TERMINAL_338.addFollower(TERMINAL_57);
    		TERMINAL_338.addFollower(TERMINAL_14);
    		TERMINAL_338.addFollower(TERMINAL_58);
    		TERMINAL_338.addFollower(TERMINAL_59);
    		TERMINAL_338.addFollower(TERMINAL_60);
    		TERMINAL_338.addFollower(TERMINAL_61);
    		TERMINAL_338.addFollower(TERMINAL_62);
    		TERMINAL_338.addFollower(TERMINAL_63);
    		TERMINAL_338.addFollower(TERMINAL_64);
    		TERMINAL_338.addFollower(TERMINAL_65);
    		TERMINAL_338.addFollower(TERMINAL_66);
    		TERMINAL_338.addFollower(TERMINAL_67);
    		TERMINAL_339.addFollower(TERMINAL_346);
    		TERMINAL_339.addFollower(TERMINAL_347);
    		TERMINAL_339.addFollower(TERMINAL_348);
    		TERMINAL_339.addFollower(TERMINAL_349);
    		TERMINAL_339.addFollower(TERMINAL_48);
    		TERMINAL_339.addFollower(TERMINAL_5);
    		TERMINAL_339.addFollower(TERMINAL_6);
    		TERMINAL_339.addFollower(TERMINAL_7);
    		TERMINAL_339.addFollower(TERMINAL_8);
    		TERMINAL_339.addFollower(TERMINAL_9);
    		TERMINAL_339.addFollower(TERMINAL_41);
    		TERMINAL_339.addFollower(TERMINAL_57);
    		TERMINAL_339.addFollower(TERMINAL_56);
    		TERMINAL_339.addFollower(TERMINAL_55);
    		TERMINAL_339.addFollower(TERMINAL_60);
    		TERMINAL_339.addFollower(TERMINAL_52);
    		TERMINAL_339.addFollower(TERMINAL_58);
    		TERMINAL_339.addFollower(TERMINAL_61);
    		TERMINAL_339.addFollower(TERMINAL_62);
    		TERMINAL_339.addFollower(TERMINAL_63);
    		TERMINAL_339.addFollower(TERMINAL_54);
    		TERMINAL_339.addFollower(TERMINAL_53);
    		TERMINAL_339.addFollower(TERMINAL_59);
    		TERMINAL_339.addFollower(TERMINAL_66);
    		TERMINAL_339.addFollower(TERMINAL_50);
    		TERMINAL_339.addFollower(TERMINAL_306);
    		TERMINAL_339.addFollower(TERMINAL_307);
    		TERMINAL_339.addFollower(TERMINAL_308);
    		TERMINAL_339.addFollower(TERMINAL_309);
    		TERMINAL_339.addFollower(TERMINAL_65);
    		TERMINAL_339.addFollower(TERMINAL_310);
    		TERMINAL_339.addFollower(TERMINAL_311);
    		TERMINAL_339.addFollower(TERMINAL_312);
    		TERMINAL_339.addFollower(TERMINAL_313);
    		TERMINAL_339.addFollower(TERMINAL_314);
    		TERMINAL_339.addFollower(TERMINAL_315);
    		TERMINAL_339.addFollower(TERMINAL_316);
    		TERMINAL_339.addFollower(TERMINAL_140);
    		TERMINAL_339.addFollower(TERMINAL_141);
    		TERMINAL_339.addFollower(TERMINAL_142);
    		TERMINAL_339.addFollower(TERMINAL_143);
    		TERMINAL_339.addFollower(TERMINAL_144);
    		TERMINAL_339.addFollower(TERMINAL_145);
    		TERMINAL_339.addFollower(TERMINAL_146);
    		TERMINAL_339.addFollower(TERMINAL_326);
    		TERMINAL_339.addFollower(TERMINAL_327);
    		TERMINAL_346.addFollower(TERMINAL_50);
    		TERMINAL_346.addFollower(TERMINAL_51);
    		TERMINAL_346.addFollower(TERMINAL_52);
    		TERMINAL_346.addFollower(TERMINAL_53);
    		TERMINAL_346.addFollower(TERMINAL_54);
    		TERMINAL_346.addFollower(TERMINAL_55);
    		TERMINAL_346.addFollower(TERMINAL_56);
    		TERMINAL_346.addFollower(TERMINAL_57);
    		TERMINAL_346.addFollower(TERMINAL_14);
    		TERMINAL_346.addFollower(TERMINAL_58);
    		TERMINAL_346.addFollower(TERMINAL_59);
    		TERMINAL_346.addFollower(TERMINAL_60);
    		TERMINAL_346.addFollower(TERMINAL_61);
    		TERMINAL_346.addFollower(TERMINAL_62);
    		TERMINAL_346.addFollower(TERMINAL_63);
    		TERMINAL_346.addFollower(TERMINAL_64);
    		TERMINAL_346.addFollower(TERMINAL_65);
    		TERMINAL_346.addFollower(TERMINAL_66);
    		TERMINAL_346.addFollower(TERMINAL_67);
    		TERMINAL_347.addFollower(TERMINAL_50);
    		TERMINAL_347.addFollower(TERMINAL_51);
    		TERMINAL_347.addFollower(TERMINAL_52);
    		TERMINAL_347.addFollower(TERMINAL_53);
    		TERMINAL_347.addFollower(TERMINAL_54);
    		TERMINAL_347.addFollower(TERMINAL_55);
    		TERMINAL_347.addFollower(TERMINAL_56);
    		TERMINAL_347.addFollower(TERMINAL_57);
    		TERMINAL_347.addFollower(TERMINAL_14);
    		TERMINAL_347.addFollower(TERMINAL_58);
    		TERMINAL_347.addFollower(TERMINAL_59);
    		TERMINAL_347.addFollower(TERMINAL_60);
    		TERMINAL_347.addFollower(TERMINAL_61);
    		TERMINAL_347.addFollower(TERMINAL_62);
    		TERMINAL_347.addFollower(TERMINAL_63);
    		TERMINAL_347.addFollower(TERMINAL_64);
    		TERMINAL_347.addFollower(TERMINAL_65);
    		TERMINAL_347.addFollower(TERMINAL_66);
    		TERMINAL_347.addFollower(TERMINAL_67);
    		TERMINAL_348.addFollower(TERMINAL_50);
    		TERMINAL_348.addFollower(TERMINAL_51);
    		TERMINAL_348.addFollower(TERMINAL_52);
    		TERMINAL_348.addFollower(TERMINAL_53);
    		TERMINAL_348.addFollower(TERMINAL_54);
    		TERMINAL_348.addFollower(TERMINAL_55);
    		TERMINAL_348.addFollower(TERMINAL_56);
    		TERMINAL_348.addFollower(TERMINAL_57);
    		TERMINAL_348.addFollower(TERMINAL_14);
    		TERMINAL_348.addFollower(TERMINAL_58);
    		TERMINAL_348.addFollower(TERMINAL_59);
    		TERMINAL_348.addFollower(TERMINAL_60);
    		TERMINAL_348.addFollower(TERMINAL_61);
    		TERMINAL_348.addFollower(TERMINAL_62);
    		TERMINAL_348.addFollower(TERMINAL_63);
    		TERMINAL_348.addFollower(TERMINAL_64);
    		TERMINAL_348.addFollower(TERMINAL_65);
    		TERMINAL_348.addFollower(TERMINAL_66);
    		TERMINAL_348.addFollower(TERMINAL_67);
    		TERMINAL_349.addFollower(TERMINAL_50);
    		TERMINAL_349.addFollower(TERMINAL_51);
    		TERMINAL_349.addFollower(TERMINAL_52);
    		TERMINAL_349.addFollower(TERMINAL_53);
    		TERMINAL_349.addFollower(TERMINAL_54);
    		TERMINAL_349.addFollower(TERMINAL_55);
    		TERMINAL_349.addFollower(TERMINAL_56);
    		TERMINAL_349.addFollower(TERMINAL_57);
    		TERMINAL_349.addFollower(TERMINAL_14);
    		TERMINAL_349.addFollower(TERMINAL_58);
    		TERMINAL_349.addFollower(TERMINAL_59);
    		TERMINAL_349.addFollower(TERMINAL_60);
    		TERMINAL_349.addFollower(TERMINAL_61);
    		TERMINAL_349.addFollower(TERMINAL_62);
    		TERMINAL_349.addFollower(TERMINAL_63);
    		TERMINAL_349.addFollower(TERMINAL_64);
    		TERMINAL_349.addFollower(TERMINAL_65);
    		TERMINAL_349.addFollower(TERMINAL_66);
    		TERMINAL_349.addFollower(TERMINAL_67);
    		TERMINAL_350.addFollower(TERMINAL_359);
    		TERMINAL_359.addFollower(TERMINAL_350);
    		TERMINAL_359.addFollower(TERMINAL_351);
    		TERMINAL_359.addFollower(TERMINAL_352);
    		TERMINAL_359.addFollower(TERMINAL_353);
    		TERMINAL_359.addFollower(TERMINAL_354);
    		TERMINAL_359.addFollower(TERMINAL_355);
    		TERMINAL_359.addFollower(TERMINAL_356);
    		TERMINAL_359.addFollower(TERMINAL_357);
    		TERMINAL_359.addFollower(TERMINAL_358);
    		TERMINAL_359.addFollower(TERMINAL_48);
    		TERMINAL_359.addFollower(TERMINAL_5);
    		TERMINAL_359.addFollower(TERMINAL_6);
    		TERMINAL_359.addFollower(TERMINAL_7);
    		TERMINAL_359.addFollower(TERMINAL_8);
    		TERMINAL_359.addFollower(TERMINAL_9);
    		TERMINAL_359.addFollower(TERMINAL_41);
    		TERMINAL_359.addFollower(TERMINAL_57);
    		TERMINAL_359.addFollower(TERMINAL_56);
    		TERMINAL_359.addFollower(TERMINAL_55);
    		TERMINAL_359.addFollower(TERMINAL_60);
    		TERMINAL_359.addFollower(TERMINAL_52);
    		TERMINAL_359.addFollower(TERMINAL_58);
    		TERMINAL_359.addFollower(TERMINAL_61);
    		TERMINAL_359.addFollower(TERMINAL_62);
    		TERMINAL_359.addFollower(TERMINAL_63);
    		TERMINAL_359.addFollower(TERMINAL_54);
    		TERMINAL_359.addFollower(TERMINAL_53);
    		TERMINAL_359.addFollower(TERMINAL_59);
    		TERMINAL_359.addFollower(TERMINAL_66);
    		TERMINAL_359.addFollower(TERMINAL_50);
    		TERMINAL_359.addFollower(TERMINAL_306);
    		TERMINAL_359.addFollower(TERMINAL_307);
    		TERMINAL_359.addFollower(TERMINAL_308);
    		TERMINAL_359.addFollower(TERMINAL_309);
    		TERMINAL_359.addFollower(TERMINAL_65);
    		TERMINAL_359.addFollower(TERMINAL_310);
    		TERMINAL_359.addFollower(TERMINAL_311);
    		TERMINAL_359.addFollower(TERMINAL_312);
    		TERMINAL_359.addFollower(TERMINAL_313);
    		TERMINAL_359.addFollower(TERMINAL_314);
    		TERMINAL_359.addFollower(TERMINAL_315);
    		TERMINAL_359.addFollower(TERMINAL_316);
    		TERMINAL_359.addFollower(TERMINAL_140);
    		TERMINAL_359.addFollower(TERMINAL_141);
    		TERMINAL_359.addFollower(TERMINAL_142);
    		TERMINAL_359.addFollower(TERMINAL_143);
    		TERMINAL_359.addFollower(TERMINAL_144);
    		TERMINAL_359.addFollower(TERMINAL_145);
    		TERMINAL_359.addFollower(TERMINAL_146);
    		TERMINAL_359.addFollower(TERMINAL_326);
    		TERMINAL_359.addFollower(TERMINAL_327);
    		TERMINAL_351.addFollower(TERMINAL_360);
    		TERMINAL_360.addFollower(TERMINAL_361);
    		TERMINAL_361.addFollower(TERMINAL_50);
    		TERMINAL_361.addFollower(TERMINAL_51);
    		TERMINAL_361.addFollower(TERMINAL_52);
    		TERMINAL_361.addFollower(TERMINAL_53);
    		TERMINAL_361.addFollower(TERMINAL_54);
    		TERMINAL_361.addFollower(TERMINAL_55);
    		TERMINAL_361.addFollower(TERMINAL_56);
    		TERMINAL_361.addFollower(TERMINAL_57);
    		TERMINAL_361.addFollower(TERMINAL_14);
    		TERMINAL_361.addFollower(TERMINAL_58);
    		TERMINAL_361.addFollower(TERMINAL_59);
    		TERMINAL_361.addFollower(TERMINAL_60);
    		TERMINAL_361.addFollower(TERMINAL_61);
    		TERMINAL_361.addFollower(TERMINAL_62);
    		TERMINAL_361.addFollower(TERMINAL_63);
    		TERMINAL_361.addFollower(TERMINAL_64);
    		TERMINAL_361.addFollower(TERMINAL_65);
    		TERMINAL_361.addFollower(TERMINAL_66);
    		TERMINAL_361.addFollower(TERMINAL_67);
    		TERMINAL_361.addFollower(TERMINAL_362);
    		TERMINAL_363.addFollower(TERMINAL_50);
    		TERMINAL_363.addFollower(TERMINAL_51);
    		TERMINAL_363.addFollower(TERMINAL_52);
    		TERMINAL_363.addFollower(TERMINAL_53);
    		TERMINAL_363.addFollower(TERMINAL_54);
    		TERMINAL_363.addFollower(TERMINAL_55);
    		TERMINAL_363.addFollower(TERMINAL_56);
    		TERMINAL_363.addFollower(TERMINAL_57);
    		TERMINAL_363.addFollower(TERMINAL_14);
    		TERMINAL_363.addFollower(TERMINAL_58);
    		TERMINAL_363.addFollower(TERMINAL_59);
    		TERMINAL_363.addFollower(TERMINAL_60);
    		TERMINAL_363.addFollower(TERMINAL_61);
    		TERMINAL_363.addFollower(TERMINAL_62);
    		TERMINAL_363.addFollower(TERMINAL_63);
    		TERMINAL_363.addFollower(TERMINAL_64);
    		TERMINAL_363.addFollower(TERMINAL_65);
    		TERMINAL_363.addFollower(TERMINAL_66);
    		TERMINAL_363.addFollower(TERMINAL_67);
    		TERMINAL_362.addFollower(TERMINAL_350);
    		TERMINAL_362.addFollower(TERMINAL_351);
    		TERMINAL_362.addFollower(TERMINAL_352);
    		TERMINAL_362.addFollower(TERMINAL_353);
    		TERMINAL_362.addFollower(TERMINAL_354);
    		TERMINAL_362.addFollower(TERMINAL_355);
    		TERMINAL_362.addFollower(TERMINAL_356);
    		TERMINAL_362.addFollower(TERMINAL_357);
    		TERMINAL_362.addFollower(TERMINAL_358);
    		TERMINAL_362.addFollower(TERMINAL_48);
    		TERMINAL_362.addFollower(TERMINAL_5);
    		TERMINAL_362.addFollower(TERMINAL_6);
    		TERMINAL_362.addFollower(TERMINAL_7);
    		TERMINAL_362.addFollower(TERMINAL_8);
    		TERMINAL_362.addFollower(TERMINAL_9);
    		TERMINAL_362.addFollower(TERMINAL_41);
    		TERMINAL_362.addFollower(TERMINAL_57);
    		TERMINAL_362.addFollower(TERMINAL_56);
    		TERMINAL_362.addFollower(TERMINAL_55);
    		TERMINAL_362.addFollower(TERMINAL_60);
    		TERMINAL_362.addFollower(TERMINAL_52);
    		TERMINAL_362.addFollower(TERMINAL_58);
    		TERMINAL_362.addFollower(TERMINAL_61);
    		TERMINAL_362.addFollower(TERMINAL_62);
    		TERMINAL_362.addFollower(TERMINAL_63);
    		TERMINAL_362.addFollower(TERMINAL_54);
    		TERMINAL_362.addFollower(TERMINAL_53);
    		TERMINAL_362.addFollower(TERMINAL_59);
    		TERMINAL_362.addFollower(TERMINAL_66);
    		TERMINAL_362.addFollower(TERMINAL_50);
    		TERMINAL_362.addFollower(TERMINAL_306);
    		TERMINAL_362.addFollower(TERMINAL_307);
    		TERMINAL_362.addFollower(TERMINAL_308);
    		TERMINAL_362.addFollower(TERMINAL_309);
    		TERMINAL_362.addFollower(TERMINAL_65);
    		TERMINAL_362.addFollower(TERMINAL_310);
    		TERMINAL_362.addFollower(TERMINAL_311);
    		TERMINAL_362.addFollower(TERMINAL_312);
    		TERMINAL_362.addFollower(TERMINAL_313);
    		TERMINAL_362.addFollower(TERMINAL_314);
    		TERMINAL_362.addFollower(TERMINAL_315);
    		TERMINAL_362.addFollower(TERMINAL_316);
    		TERMINAL_362.addFollower(TERMINAL_140);
    		TERMINAL_362.addFollower(TERMINAL_141);
    		TERMINAL_362.addFollower(TERMINAL_142);
    		TERMINAL_362.addFollower(TERMINAL_143);
    		TERMINAL_362.addFollower(TERMINAL_144);
    		TERMINAL_362.addFollower(TERMINAL_145);
    		TERMINAL_362.addFollower(TERMINAL_146);
    		TERMINAL_362.addFollower(TERMINAL_326);
    		TERMINAL_362.addFollower(TERMINAL_327);
    		TERMINAL_352.addFollower(TERMINAL_364);
    		TERMINAL_364.addFollower(TERMINAL_350);
    		TERMINAL_364.addFollower(TERMINAL_351);
    		TERMINAL_364.addFollower(TERMINAL_352);
    		TERMINAL_364.addFollower(TERMINAL_353);
    		TERMINAL_364.addFollower(TERMINAL_354);
    		TERMINAL_364.addFollower(TERMINAL_355);
    		TERMINAL_364.addFollower(TERMINAL_356);
    		TERMINAL_364.addFollower(TERMINAL_357);
    		TERMINAL_364.addFollower(TERMINAL_358);
    		TERMINAL_364.addFollower(TERMINAL_48);
    		TERMINAL_364.addFollower(TERMINAL_5);
    		TERMINAL_364.addFollower(TERMINAL_6);
    		TERMINAL_364.addFollower(TERMINAL_7);
    		TERMINAL_364.addFollower(TERMINAL_8);
    		TERMINAL_364.addFollower(TERMINAL_9);
    		TERMINAL_364.addFollower(TERMINAL_41);
    		TERMINAL_364.addFollower(TERMINAL_57);
    		TERMINAL_364.addFollower(TERMINAL_56);
    		TERMINAL_364.addFollower(TERMINAL_55);
    		TERMINAL_364.addFollower(TERMINAL_60);
    		TERMINAL_364.addFollower(TERMINAL_52);
    		TERMINAL_364.addFollower(TERMINAL_58);
    		TERMINAL_364.addFollower(TERMINAL_61);
    		TERMINAL_364.addFollower(TERMINAL_62);
    		TERMINAL_364.addFollower(TERMINAL_63);
    		TERMINAL_364.addFollower(TERMINAL_54);
    		TERMINAL_364.addFollower(TERMINAL_53);
    		TERMINAL_364.addFollower(TERMINAL_59);
    		TERMINAL_364.addFollower(TERMINAL_66);
    		TERMINAL_364.addFollower(TERMINAL_50);
    		TERMINAL_364.addFollower(TERMINAL_306);
    		TERMINAL_364.addFollower(TERMINAL_307);
    		TERMINAL_364.addFollower(TERMINAL_308);
    		TERMINAL_364.addFollower(TERMINAL_309);
    		TERMINAL_364.addFollower(TERMINAL_65);
    		TERMINAL_364.addFollower(TERMINAL_310);
    		TERMINAL_364.addFollower(TERMINAL_311);
    		TERMINAL_364.addFollower(TERMINAL_312);
    		TERMINAL_364.addFollower(TERMINAL_313);
    		TERMINAL_364.addFollower(TERMINAL_314);
    		TERMINAL_364.addFollower(TERMINAL_315);
    		TERMINAL_364.addFollower(TERMINAL_316);
    		TERMINAL_364.addFollower(TERMINAL_140);
    		TERMINAL_364.addFollower(TERMINAL_141);
    		TERMINAL_364.addFollower(TERMINAL_142);
    		TERMINAL_364.addFollower(TERMINAL_143);
    		TERMINAL_364.addFollower(TERMINAL_144);
    		TERMINAL_364.addFollower(TERMINAL_145);
    		TERMINAL_364.addFollower(TERMINAL_146);
    		TERMINAL_364.addFollower(TERMINAL_326);
    		TERMINAL_364.addFollower(TERMINAL_327);
    		TERMINAL_353.addFollower(TERMINAL_365);
    		TERMINAL_365.addFollower(TERMINAL_350);
    		TERMINAL_365.addFollower(TERMINAL_351);
    		TERMINAL_365.addFollower(TERMINAL_352);
    		TERMINAL_365.addFollower(TERMINAL_353);
    		TERMINAL_365.addFollower(TERMINAL_354);
    		TERMINAL_365.addFollower(TERMINAL_355);
    		TERMINAL_365.addFollower(TERMINAL_356);
    		TERMINAL_365.addFollower(TERMINAL_357);
    		TERMINAL_365.addFollower(TERMINAL_358);
    		TERMINAL_365.addFollower(TERMINAL_48);
    		TERMINAL_365.addFollower(TERMINAL_5);
    		TERMINAL_365.addFollower(TERMINAL_6);
    		TERMINAL_365.addFollower(TERMINAL_7);
    		TERMINAL_365.addFollower(TERMINAL_8);
    		TERMINAL_365.addFollower(TERMINAL_9);
    		TERMINAL_365.addFollower(TERMINAL_41);
    		TERMINAL_365.addFollower(TERMINAL_57);
    		TERMINAL_365.addFollower(TERMINAL_56);
    		TERMINAL_365.addFollower(TERMINAL_55);
    		TERMINAL_365.addFollower(TERMINAL_60);
    		TERMINAL_365.addFollower(TERMINAL_52);
    		TERMINAL_365.addFollower(TERMINAL_58);
    		TERMINAL_365.addFollower(TERMINAL_61);
    		TERMINAL_365.addFollower(TERMINAL_62);
    		TERMINAL_365.addFollower(TERMINAL_63);
    		TERMINAL_365.addFollower(TERMINAL_54);
    		TERMINAL_365.addFollower(TERMINAL_53);
    		TERMINAL_365.addFollower(TERMINAL_59);
    		TERMINAL_365.addFollower(TERMINAL_66);
    		TERMINAL_365.addFollower(TERMINAL_50);
    		TERMINAL_365.addFollower(TERMINAL_306);
    		TERMINAL_365.addFollower(TERMINAL_307);
    		TERMINAL_365.addFollower(TERMINAL_308);
    		TERMINAL_365.addFollower(TERMINAL_309);
    		TERMINAL_365.addFollower(TERMINAL_65);
    		TERMINAL_365.addFollower(TERMINAL_310);
    		TERMINAL_365.addFollower(TERMINAL_311);
    		TERMINAL_365.addFollower(TERMINAL_312);
    		TERMINAL_365.addFollower(TERMINAL_313);
    		TERMINAL_365.addFollower(TERMINAL_314);
    		TERMINAL_365.addFollower(TERMINAL_315);
    		TERMINAL_365.addFollower(TERMINAL_316);
    		TERMINAL_365.addFollower(TERMINAL_140);
    		TERMINAL_365.addFollower(TERMINAL_141);
    		TERMINAL_365.addFollower(TERMINAL_142);
    		TERMINAL_365.addFollower(TERMINAL_143);
    		TERMINAL_365.addFollower(TERMINAL_144);
    		TERMINAL_365.addFollower(TERMINAL_145);
    		TERMINAL_365.addFollower(TERMINAL_146);
    		TERMINAL_365.addFollower(TERMINAL_326);
    		TERMINAL_365.addFollower(TERMINAL_327);
    		TERMINAL_354.addFollower(TERMINAL_50);
    		TERMINAL_354.addFollower(TERMINAL_51);
    		TERMINAL_354.addFollower(TERMINAL_52);
    		TERMINAL_354.addFollower(TERMINAL_53);
    		TERMINAL_354.addFollower(TERMINAL_54);
    		TERMINAL_354.addFollower(TERMINAL_55);
    		TERMINAL_354.addFollower(TERMINAL_56);
    		TERMINAL_354.addFollower(TERMINAL_57);
    		TERMINAL_354.addFollower(TERMINAL_14);
    		TERMINAL_354.addFollower(TERMINAL_58);
    		TERMINAL_354.addFollower(TERMINAL_59);
    		TERMINAL_354.addFollower(TERMINAL_60);
    		TERMINAL_354.addFollower(TERMINAL_61);
    		TERMINAL_354.addFollower(TERMINAL_62);
    		TERMINAL_354.addFollower(TERMINAL_63);
    		TERMINAL_354.addFollower(TERMINAL_64);
    		TERMINAL_354.addFollower(TERMINAL_65);
    		TERMINAL_354.addFollower(TERMINAL_66);
    		TERMINAL_354.addFollower(TERMINAL_67);
    		TERMINAL_355.addFollower(TERMINAL_50);
    		TERMINAL_355.addFollower(TERMINAL_51);
    		TERMINAL_355.addFollower(TERMINAL_52);
    		TERMINAL_355.addFollower(TERMINAL_53);
    		TERMINAL_355.addFollower(TERMINAL_54);
    		TERMINAL_355.addFollower(TERMINAL_55);
    		TERMINAL_355.addFollower(TERMINAL_56);
    		TERMINAL_355.addFollower(TERMINAL_57);
    		TERMINAL_355.addFollower(TERMINAL_14);
    		TERMINAL_355.addFollower(TERMINAL_58);
    		TERMINAL_355.addFollower(TERMINAL_59);
    		TERMINAL_355.addFollower(TERMINAL_60);
    		TERMINAL_355.addFollower(TERMINAL_61);
    		TERMINAL_355.addFollower(TERMINAL_62);
    		TERMINAL_355.addFollower(TERMINAL_63);
    		TERMINAL_355.addFollower(TERMINAL_64);
    		TERMINAL_355.addFollower(TERMINAL_65);
    		TERMINAL_355.addFollower(TERMINAL_66);
    		TERMINAL_355.addFollower(TERMINAL_67);
    		TERMINAL_356.addFollower(TERMINAL_50);
    		TERMINAL_356.addFollower(TERMINAL_51);
    		TERMINAL_356.addFollower(TERMINAL_52);
    		TERMINAL_356.addFollower(TERMINAL_53);
    		TERMINAL_356.addFollower(TERMINAL_54);
    		TERMINAL_356.addFollower(TERMINAL_55);
    		TERMINAL_356.addFollower(TERMINAL_56);
    		TERMINAL_356.addFollower(TERMINAL_57);
    		TERMINAL_356.addFollower(TERMINAL_14);
    		TERMINAL_356.addFollower(TERMINAL_58);
    		TERMINAL_356.addFollower(TERMINAL_59);
    		TERMINAL_356.addFollower(TERMINAL_60);
    		TERMINAL_356.addFollower(TERMINAL_61);
    		TERMINAL_356.addFollower(TERMINAL_62);
    		TERMINAL_356.addFollower(TERMINAL_63);
    		TERMINAL_356.addFollower(TERMINAL_64);
    		TERMINAL_356.addFollower(TERMINAL_65);
    		TERMINAL_356.addFollower(TERMINAL_66);
    		TERMINAL_356.addFollower(TERMINAL_67);
    		TERMINAL_357.addFollower(TERMINAL_50);
    		TERMINAL_357.addFollower(TERMINAL_51);
    		TERMINAL_357.addFollower(TERMINAL_52);
    		TERMINAL_357.addFollower(TERMINAL_53);
    		TERMINAL_357.addFollower(TERMINAL_54);
    		TERMINAL_357.addFollower(TERMINAL_55);
    		TERMINAL_357.addFollower(TERMINAL_56);
    		TERMINAL_357.addFollower(TERMINAL_57);
    		TERMINAL_357.addFollower(TERMINAL_14);
    		TERMINAL_357.addFollower(TERMINAL_58);
    		TERMINAL_357.addFollower(TERMINAL_59);
    		TERMINAL_357.addFollower(TERMINAL_60);
    		TERMINAL_357.addFollower(TERMINAL_61);
    		TERMINAL_357.addFollower(TERMINAL_62);
    		TERMINAL_357.addFollower(TERMINAL_63);
    		TERMINAL_357.addFollower(TERMINAL_64);
    		TERMINAL_357.addFollower(TERMINAL_65);
    		TERMINAL_357.addFollower(TERMINAL_66);
    		TERMINAL_357.addFollower(TERMINAL_67);
    		TERMINAL_358.addFollower(TERMINAL_50);
    		TERMINAL_358.addFollower(TERMINAL_51);
    		TERMINAL_358.addFollower(TERMINAL_52);
    		TERMINAL_358.addFollower(TERMINAL_53);
    		TERMINAL_358.addFollower(TERMINAL_54);
    		TERMINAL_358.addFollower(TERMINAL_55);
    		TERMINAL_358.addFollower(TERMINAL_56);
    		TERMINAL_358.addFollower(TERMINAL_57);
    		TERMINAL_358.addFollower(TERMINAL_14);
    		TERMINAL_358.addFollower(TERMINAL_58);
    		TERMINAL_358.addFollower(TERMINAL_59);
    		TERMINAL_358.addFollower(TERMINAL_60);
    		TERMINAL_358.addFollower(TERMINAL_61);
    		TERMINAL_358.addFollower(TERMINAL_62);
    		TERMINAL_358.addFollower(TERMINAL_63);
    		TERMINAL_358.addFollower(TERMINAL_64);
    		TERMINAL_358.addFollower(TERMINAL_65);
    		TERMINAL_358.addFollower(TERMINAL_66);
    		TERMINAL_358.addFollower(TERMINAL_67);
    		TERMINAL_62.addFollower(TERMINAL_366);
    		TERMINAL_366.addFollower(TERMINAL_367);
    		TERMINAL_367.addFollower(TERMINAL_368);
    		TERMINAL_368.addFollower(TERMINAL_369);
    		TERMINAL_369.addFollower(TERMINAL_50);
    		TERMINAL_369.addFollower(TERMINAL_51);
    		TERMINAL_369.addFollower(TERMINAL_52);
    		TERMINAL_369.addFollower(TERMINAL_53);
    		TERMINAL_369.addFollower(TERMINAL_54);
    		TERMINAL_369.addFollower(TERMINAL_55);
    		TERMINAL_369.addFollower(TERMINAL_56);
    		TERMINAL_369.addFollower(TERMINAL_57);
    		TERMINAL_369.addFollower(TERMINAL_14);
    		TERMINAL_369.addFollower(TERMINAL_58);
    		TERMINAL_369.addFollower(TERMINAL_59);
    		TERMINAL_369.addFollower(TERMINAL_60);
    		TERMINAL_369.addFollower(TERMINAL_61);
    		TERMINAL_369.addFollower(TERMINAL_62);
    		TERMINAL_369.addFollower(TERMINAL_63);
    		TERMINAL_369.addFollower(TERMINAL_64);
    		TERMINAL_369.addFollower(TERMINAL_65);
    		TERMINAL_369.addFollower(TERMINAL_66);
    		TERMINAL_369.addFollower(TERMINAL_67);
    		TERMINAL_369.addFollower(TERMINAL_316);
    		TERMINAL_315.addFollower(TERMINAL_50);
    		TERMINAL_315.addFollower(TERMINAL_51);
    		TERMINAL_315.addFollower(TERMINAL_52);
    		TERMINAL_315.addFollower(TERMINAL_53);
    		TERMINAL_315.addFollower(TERMINAL_54);
    		TERMINAL_315.addFollower(TERMINAL_55);
    		TERMINAL_315.addFollower(TERMINAL_56);
    		TERMINAL_315.addFollower(TERMINAL_57);
    		TERMINAL_315.addFollower(TERMINAL_14);
    		TERMINAL_315.addFollower(TERMINAL_58);
    		TERMINAL_315.addFollower(TERMINAL_59);
    		TERMINAL_315.addFollower(TERMINAL_60);
    		TERMINAL_315.addFollower(TERMINAL_61);
    		TERMINAL_315.addFollower(TERMINAL_62);
    		TERMINAL_315.addFollower(TERMINAL_63);
    		TERMINAL_315.addFollower(TERMINAL_64);
    		TERMINAL_315.addFollower(TERMINAL_65);
    		TERMINAL_315.addFollower(TERMINAL_66);
    		TERMINAL_315.addFollower(TERMINAL_67);
    		TERMINAL_316.addFollower(TERMINAL_48);
    		TERMINAL_316.addFollower(TERMINAL_5);
    		TERMINAL_316.addFollower(TERMINAL_6);
    		TERMINAL_316.addFollower(TERMINAL_7);
    		TERMINAL_316.addFollower(TERMINAL_8);
    		TERMINAL_316.addFollower(TERMINAL_9);
    		TERMINAL_316.addFollower(TERMINAL_41);
    		TERMINAL_316.addFollower(TERMINAL_57);
    		TERMINAL_316.addFollower(TERMINAL_56);
    		TERMINAL_316.addFollower(TERMINAL_55);
    		TERMINAL_316.addFollower(TERMINAL_60);
    		TERMINAL_316.addFollower(TERMINAL_52);
    		TERMINAL_316.addFollower(TERMINAL_58);
    		TERMINAL_316.addFollower(TERMINAL_61);
    		TERMINAL_316.addFollower(TERMINAL_62);
    		TERMINAL_316.addFollower(TERMINAL_63);
    		TERMINAL_316.addFollower(TERMINAL_54);
    		TERMINAL_316.addFollower(TERMINAL_53);
    		TERMINAL_316.addFollower(TERMINAL_59);
    		TERMINAL_316.addFollower(TERMINAL_66);
    		TERMINAL_316.addFollower(TERMINAL_50);
    		TERMINAL_316.addFollower(TERMINAL_306);
    		TERMINAL_316.addFollower(TERMINAL_307);
    		TERMINAL_316.addFollower(TERMINAL_308);
    		TERMINAL_316.addFollower(TERMINAL_309);
    		TERMINAL_316.addFollower(TERMINAL_65);
    		TERMINAL_316.addFollower(TERMINAL_310);
    		TERMINAL_316.addFollower(TERMINAL_311);
    		TERMINAL_316.addFollower(TERMINAL_312);
    		TERMINAL_316.addFollower(TERMINAL_313);
    		TERMINAL_316.addFollower(TERMINAL_314);
    		TERMINAL_316.addFollower(TERMINAL_315);
    		TERMINAL_316.addFollower(TERMINAL_316);
    		TERMINAL_316.addFollower(TERMINAL_140);
    		TERMINAL_316.addFollower(TERMINAL_141);
    		TERMINAL_316.addFollower(TERMINAL_142);
    		TERMINAL_316.addFollower(TERMINAL_143);
    		TERMINAL_316.addFollower(TERMINAL_144);
    		TERMINAL_316.addFollower(TERMINAL_145);
    		TERMINAL_316.addFollower(TERMINAL_146);
    		TERMINAL_64.addFollower(TERMINAL_48);
    		TERMINAL_64.addFollower(TERMINAL_5);
    		TERMINAL_64.addFollower(TERMINAL_6);
    		TERMINAL_64.addFollower(TERMINAL_7);
    		TERMINAL_64.addFollower(TERMINAL_8);
    		TERMINAL_64.addFollower(TERMINAL_9);
    		TERMINAL_64.addFollower(TERMINAL_41);
    		TERMINAL_64.addFollower(TERMINAL_306);
    		TERMINAL_64.addFollower(TERMINAL_307);
    		TERMINAL_64.addFollower(TERMINAL_308);
    		TERMINAL_64.addFollower(TERMINAL_309);
    		TERMINAL_64.addFollower(TERMINAL_50);
    		TERMINAL_64.addFollower(TERMINAL_60);
    		TERMINAL_64.addFollower(TERMINAL_52);
    		TERMINAL_64.addFollower(TERMINAL_58);
    		TERMINAL_64.addFollower(TERMINAL_61);
    		TERMINAL_64.addFollower(TERMINAL_62);
    		TERMINAL_64.addFollower(TERMINAL_63);
    		TERMINAL_64.addFollower(TERMINAL_54);
    		TERMINAL_64.addFollower(TERMINAL_53);
    		TERMINAL_64.addFollower(TERMINAL_59);
    		TERMINAL_64.addFollower(TERMINAL_57);
    		TERMINAL_64.addFollower(TERMINAL_65);
    		TERMINAL_64.addFollower(TERMINAL_310);
    		TERMINAL_64.addFollower(TERMINAL_311);
    		TERMINAL_64.addFollower(TERMINAL_312);
    		TERMINAL_64.addFollower(TERMINAL_313);
    		TERMINAL_64.addFollower(TERMINAL_314);
    		TERMINAL_64.addFollower(TERMINAL_315);
    		TERMINAL_64.addFollower(TERMINAL_316);
    		TERMINAL_64.addFollower(TERMINAL_140);
    		TERMINAL_64.addFollower(TERMINAL_141);
    		TERMINAL_64.addFollower(TERMINAL_142);
    		TERMINAL_64.addFollower(TERMINAL_143);
    		TERMINAL_64.addFollower(TERMINAL_144);
    		TERMINAL_64.addFollower(TERMINAL_145);
    		TERMINAL_64.addFollower(TERMINAL_146);
    		TERMINAL_65.addFollower(TERMINAL_48);
    		TERMINAL_65.addFollower(TERMINAL_5);
    		TERMINAL_65.addFollower(TERMINAL_6);
    		TERMINAL_65.addFollower(TERMINAL_7);
    		TERMINAL_65.addFollower(TERMINAL_8);
    		TERMINAL_65.addFollower(TERMINAL_9);
    		TERMINAL_65.addFollower(TERMINAL_41);
    		TERMINAL_65.addFollower(TERMINAL_306);
    		TERMINAL_65.addFollower(TERMINAL_307);
    		TERMINAL_65.addFollower(TERMINAL_308);
    		TERMINAL_65.addFollower(TERMINAL_309);
    		TERMINAL_65.addFollower(TERMINAL_50);
    		TERMINAL_65.addFollower(TERMINAL_60);
    		TERMINAL_65.addFollower(TERMINAL_52);
    		TERMINAL_65.addFollower(TERMINAL_58);
    		TERMINAL_65.addFollower(TERMINAL_61);
    		TERMINAL_65.addFollower(TERMINAL_62);
    		TERMINAL_65.addFollower(TERMINAL_63);
    		TERMINAL_65.addFollower(TERMINAL_54);
    		TERMINAL_65.addFollower(TERMINAL_53);
    		TERMINAL_65.addFollower(TERMINAL_59);
    		TERMINAL_65.addFollower(TERMINAL_57);
    		TERMINAL_65.addFollower(TERMINAL_65);
    		TERMINAL_65.addFollower(TERMINAL_310);
    		TERMINAL_65.addFollower(TERMINAL_311);
    		TERMINAL_65.addFollower(TERMINAL_312);
    		TERMINAL_65.addFollower(TERMINAL_313);
    		TERMINAL_65.addFollower(TERMINAL_314);
    		TERMINAL_65.addFollower(TERMINAL_315);
    		TERMINAL_65.addFollower(TERMINAL_316);
    		TERMINAL_65.addFollower(TERMINAL_140);
    		TERMINAL_65.addFollower(TERMINAL_141);
    		TERMINAL_65.addFollower(TERMINAL_142);
    		TERMINAL_65.addFollower(TERMINAL_143);
    		TERMINAL_65.addFollower(TERMINAL_144);
    		TERMINAL_65.addFollower(TERMINAL_145);
    		TERMINAL_65.addFollower(TERMINAL_146);
    		TERMINAL_66.addFollower(TERMINAL_370);
    		TERMINAL_370.addFollower(TERMINAL_135);
    		TERMINAL_370.addFollower(TERMINAL_136);
    		TERMINAL_370.addFollower(TERMINAL_137);
    		TERMINAL_370.addFollower(TERMINAL_138);
    		TERMINAL_370.addFollower(TERMINAL_139);
    		TERMINAL_135.addFollower(TERMINAL_371);
    		TERMINAL_371.addFollower(TERMINAL_372);
    		TERMINAL_372.addFollower(TERMINAL_135);
    		TERMINAL_372.addFollower(TERMINAL_136);
    		TERMINAL_372.addFollower(TERMINAL_137);
    		TERMINAL_372.addFollower(TERMINAL_138);
    		TERMINAL_372.addFollower(TERMINAL_139);
    		TERMINAL_136.addFollower(TERMINAL_373);
    		TERMINAL_373.addFollower(TERMINAL_164);
    		TERMINAL_137.addFollower(TERMINAL_374);
    		TERMINAL_374.addFollower(TERMINAL_82);
    		TERMINAL_374.addFollower(TERMINAL_22);
    		TERMINAL_374.addFollower(TERMINAL_23);
    		TERMINAL_374.addFollower(TERMINAL_154);
    		TERMINAL_374.addFollower(TERMINAL_155);
    		TERMINAL_374.addFollower(TERMINAL_24);
    		TERMINAL_374.addFollower(TERMINAL_25);
    		TERMINAL_374.addFollower(TERMINAL_194);
    		TERMINAL_374.addFollower(TERMINAL_195);
    		TERMINAL_374.addFollower(TERMINAL_196);
    		TERMINAL_374.addFollower(TERMINAL_197);
    		TERMINAL_374.addFollower(TERMINAL_198);
    		TERMINAL_138.addFollower(TERMINAL_375);
    		TERMINAL_375.addFollower(TERMINAL_376);
    		TERMINAL_376.addFollower(TERMINAL_135);
    		TERMINAL_376.addFollower(TERMINAL_136);
    		TERMINAL_376.addFollower(TERMINAL_137);
    		TERMINAL_376.addFollower(TERMINAL_138);
    		TERMINAL_376.addFollower(TERMINAL_139);
    		TERMINAL_139.addFollower(TERMINAL_48);
    		TERMINAL_139.addFollower(TERMINAL_5);
    		TERMINAL_139.addFollower(TERMINAL_6);
    		TERMINAL_139.addFollower(TERMINAL_7);
    		TERMINAL_139.addFollower(TERMINAL_8);
    		TERMINAL_139.addFollower(TERMINAL_9);
    		TERMINAL_139.addFollower(TERMINAL_41);
    		TERMINAL_139.addFollower(TERMINAL_57);
    		TERMINAL_139.addFollower(TERMINAL_56);
    		TERMINAL_139.addFollower(TERMINAL_55);
    		TERMINAL_139.addFollower(TERMINAL_60);
    		TERMINAL_139.addFollower(TERMINAL_52);
    		TERMINAL_139.addFollower(TERMINAL_58);
    		TERMINAL_139.addFollower(TERMINAL_61);
    		TERMINAL_139.addFollower(TERMINAL_62);
    		TERMINAL_139.addFollower(TERMINAL_63);
    		TERMINAL_139.addFollower(TERMINAL_54);
    		TERMINAL_139.addFollower(TERMINAL_53);
    		TERMINAL_139.addFollower(TERMINAL_59);
    		TERMINAL_139.addFollower(TERMINAL_66);
    		TERMINAL_139.addFollower(TERMINAL_50);
    		TERMINAL_139.addFollower(TERMINAL_306);
    		TERMINAL_139.addFollower(TERMINAL_307);
    		TERMINAL_139.addFollower(TERMINAL_308);
    		TERMINAL_139.addFollower(TERMINAL_309);
    		TERMINAL_139.addFollower(TERMINAL_65);
    		TERMINAL_139.addFollower(TERMINAL_310);
    		TERMINAL_139.addFollower(TERMINAL_311);
    		TERMINAL_139.addFollower(TERMINAL_312);
    		TERMINAL_139.addFollower(TERMINAL_313);
    		TERMINAL_139.addFollower(TERMINAL_314);
    		TERMINAL_139.addFollower(TERMINAL_315);
    		TERMINAL_139.addFollower(TERMINAL_316);
    		TERMINAL_139.addFollower(TERMINAL_140);
    		TERMINAL_139.addFollower(TERMINAL_141);
    		TERMINAL_139.addFollower(TERMINAL_142);
    		TERMINAL_139.addFollower(TERMINAL_143);
    		TERMINAL_139.addFollower(TERMINAL_144);
    		TERMINAL_139.addFollower(TERMINAL_145);
    		TERMINAL_139.addFollower(TERMINAL_146);
    		TERMINAL_67.addFollower(TERMINAL_377);
    		TERMINAL_377.addFollower(TERMINAL_140);
    		TERMINAL_377.addFollower(TERMINAL_141);
    		TERMINAL_377.addFollower(TERMINAL_142);
    		TERMINAL_377.addFollower(TERMINAL_143);
    		TERMINAL_377.addFollower(TERMINAL_144);
    		TERMINAL_377.addFollower(TERMINAL_145);
    		TERMINAL_377.addFollower(TERMINAL_146);
    		TERMINAL_140.addFollower(TERMINAL_378);
    		TERMINAL_378.addFollower(TERMINAL_379);
    		TERMINAL_379.addFollower(TERMINAL_140);
    		TERMINAL_379.addFollower(TERMINAL_141);
    		TERMINAL_379.addFollower(TERMINAL_142);
    		TERMINAL_379.addFollower(TERMINAL_143);
    		TERMINAL_379.addFollower(TERMINAL_144);
    		TERMINAL_379.addFollower(TERMINAL_145);
    		TERMINAL_379.addFollower(TERMINAL_146);
    		TERMINAL_141.addFollower(TERMINAL_380);
    		TERMINAL_380.addFollower(TERMINAL_164);
    		TERMINAL_142.addFollower(TERMINAL_381);
    		TERMINAL_381.addFollower(TERMINAL_82);
    		TERMINAL_381.addFollower(TERMINAL_22);
    		TERMINAL_381.addFollower(TERMINAL_23);
    		TERMINAL_381.addFollower(TERMINAL_154);
    		TERMINAL_381.addFollower(TERMINAL_155);
    		TERMINAL_381.addFollower(TERMINAL_24);
    		TERMINAL_381.addFollower(TERMINAL_25);
    		TERMINAL_381.addFollower(TERMINAL_194);
    		TERMINAL_381.addFollower(TERMINAL_195);
    		TERMINAL_381.addFollower(TERMINAL_196);
    		TERMINAL_381.addFollower(TERMINAL_197);
    		TERMINAL_381.addFollower(TERMINAL_198);
    		TERMINAL_143.addFollower(TERMINAL_382);
    		TERMINAL_382.addFollower(TERMINAL_383);
    		TERMINAL_383.addFollower(TERMINAL_140);
    		TERMINAL_383.addFollower(TERMINAL_141);
    		TERMINAL_383.addFollower(TERMINAL_142);
    		TERMINAL_383.addFollower(TERMINAL_143);
    		TERMINAL_383.addFollower(TERMINAL_144);
    		TERMINAL_383.addFollower(TERMINAL_145);
    		TERMINAL_383.addFollower(TERMINAL_146);
    		TERMINAL_144.addFollower(TERMINAL_384);
    		TERMINAL_384.addFollower(TERMINAL_385);
    		TERMINAL_145.addFollower(TERMINAL_386);
    		TERMINAL_386.addFollower(TERMINAL_50);
    		TERMINAL_386.addFollower(TERMINAL_51);
    		TERMINAL_386.addFollower(TERMINAL_52);
    		TERMINAL_386.addFollower(TERMINAL_53);
    		TERMINAL_386.addFollower(TERMINAL_54);
    		TERMINAL_386.addFollower(TERMINAL_55);
    		TERMINAL_386.addFollower(TERMINAL_56);
    		TERMINAL_386.addFollower(TERMINAL_57);
    		TERMINAL_386.addFollower(TERMINAL_14);
    		TERMINAL_386.addFollower(TERMINAL_58);
    		TERMINAL_386.addFollower(TERMINAL_59);
    		TERMINAL_386.addFollower(TERMINAL_60);
    		TERMINAL_386.addFollower(TERMINAL_61);
    		TERMINAL_386.addFollower(TERMINAL_62);
    		TERMINAL_386.addFollower(TERMINAL_63);
    		TERMINAL_386.addFollower(TERMINAL_64);
    		TERMINAL_386.addFollower(TERMINAL_65);
    		TERMINAL_386.addFollower(TERMINAL_66);
    		TERMINAL_386.addFollower(TERMINAL_67);
    		TERMINAL_146.addFollower(TERMINAL_48);
    		TERMINAL_146.addFollower(TERMINAL_5);
    		TERMINAL_146.addFollower(TERMINAL_6);
    		TERMINAL_146.addFollower(TERMINAL_7);
    		TERMINAL_146.addFollower(TERMINAL_8);
    		TERMINAL_146.addFollower(TERMINAL_9);
    		TERMINAL_146.addFollower(TERMINAL_41);
    		TERMINAL_146.addFollower(TERMINAL_306);
    		TERMINAL_146.addFollower(TERMINAL_307);
    		TERMINAL_146.addFollower(TERMINAL_308);
    		TERMINAL_146.addFollower(TERMINAL_309);
    		TERMINAL_146.addFollower(TERMINAL_50);
    		TERMINAL_146.addFollower(TERMINAL_60);
    		TERMINAL_146.addFollower(TERMINAL_52);
    		TERMINAL_146.addFollower(TERMINAL_58);
    		TERMINAL_146.addFollower(TERMINAL_61);
    		TERMINAL_146.addFollower(TERMINAL_62);
    		TERMINAL_146.addFollower(TERMINAL_63);
    		TERMINAL_146.addFollower(TERMINAL_54);
    		TERMINAL_146.addFollower(TERMINAL_53);
    		TERMINAL_146.addFollower(TERMINAL_59);
    		TERMINAL_146.addFollower(TERMINAL_57);
    		TERMINAL_146.addFollower(TERMINAL_65);
    		TERMINAL_146.addFollower(TERMINAL_310);
    		TERMINAL_146.addFollower(TERMINAL_311);
    		TERMINAL_146.addFollower(TERMINAL_312);
    		TERMINAL_146.addFollower(TERMINAL_313);
    		TERMINAL_146.addFollower(TERMINAL_314);
    		TERMINAL_146.addFollower(TERMINAL_315);
    		TERMINAL_146.addFollower(TERMINAL_316);
    		TERMINAL_146.addFollower(TERMINAL_140);
    		TERMINAL_146.addFollower(TERMINAL_141);
    		TERMINAL_146.addFollower(TERMINAL_142);
    		TERMINAL_146.addFollower(TERMINAL_143);
    		TERMINAL_146.addFollower(TERMINAL_144);
    		TERMINAL_146.addFollower(TERMINAL_145);
    		TERMINAL_146.addFollower(TERMINAL_146);
    		TERMINAL_385.addFollower(TERMINAL_387);
    		TERMINAL_387.addFollower(TERMINAL_242);
    		TERMINAL_387.addFollower(TERMINAL_243);
    		TERMINAL_387.addFollower(TERMINAL_244);
    		TERMINAL_387.addFollower(TERMINAL_245);
    		TERMINAL_387.addFollower(TERMINAL_246);
    		TERMINAL_242.addFollower(TERMINAL_388);
    		TERMINAL_388.addFollower(TERMINAL_389);
    		TERMINAL_389.addFollower(TERMINAL_242);
    		TERMINAL_389.addFollower(TERMINAL_243);
    		TERMINAL_389.addFollower(TERMINAL_244);
    		TERMINAL_389.addFollower(TERMINAL_245);
    		TERMINAL_389.addFollower(TERMINAL_246);
    		TERMINAL_243.addFollower(TERMINAL_390);
    		TERMINAL_390.addFollower(TERMINAL_164);
    		TERMINAL_244.addFollower(TERMINAL_391);
    		TERMINAL_391.addFollower(TERMINAL_392);
    		TERMINAL_392.addFollower(TERMINAL_242);
    		TERMINAL_392.addFollower(TERMINAL_243);
    		TERMINAL_392.addFollower(TERMINAL_244);
    		TERMINAL_392.addFollower(TERMINAL_245);
    		TERMINAL_392.addFollower(TERMINAL_246);
    		TERMINAL_245.addFollower(TERMINAL_393);
    		TERMINAL_393.addFollower(TERMINAL_14);
    		TERMINAL_246.addFollower(TERMINAL_140);
    		TERMINAL_246.addFollower(TERMINAL_141);
    		TERMINAL_246.addFollower(TERMINAL_142);
    		TERMINAL_246.addFollower(TERMINAL_143);
    		TERMINAL_246.addFollower(TERMINAL_144);
    		TERMINAL_246.addFollower(TERMINAL_145);
    		TERMINAL_246.addFollower(TERMINAL_146);
    	}
    	// wire the terminals
    	static {
    		wire0();
    		wire1();
    		wire2();
    		wire3();
    	}



    // $ANTLR start "start"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4399:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;
        int start_StartIndex = input.index();
        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Model c1 = null;

        org.kermeta.language.structure.Property c2 = null;

        org.kermeta.language.structure.Operation c3 = null;

        org.kermeta.language.structure.Parameter c4 = null;

        org.kermeta.language.structure.MultiplicityElement c5 = null;

        org.kermeta.language.behavior.TypeReference c6 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4400:1: ( (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4401:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference ) EOF
            {
            if ( state.backtracking==0 ) {

              		// follow set for start rule(s)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_4, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_11, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 0));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 0));
              		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4420:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )
            int alt1=7;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4421:3: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4422:8: c1= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_start96);
                    c1=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4423:8: c2= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_start110);
                    c2=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4424:8: c3= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124);
                    c3=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4425:8: c4= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138);
                    c4=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4426:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152);
                    c5=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4427:8: c6= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166);
                    c6=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; 
                    }

                    }
                    break;

            }

            match(input,EOF,FOLLOW_EOF_in_start173); if (state.failed) return element;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "start"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelingUnit"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4432:1: parse_org_kermeta_language_structure_ModelingUnit returns [org.kermeta.language.structure.ModelingUnit element = null] : ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ;
    public final org.kermeta.language.structure.ModelingUnit parse_org_kermeta_language_structure_ModelingUnit() throws RecognitionException {
        org.kermeta.language.structure.ModelingUnit element =  null;
        int parse_org_kermeta_language_structure_ModelingUnit_StartIndex = input.index();
        org.kermeta.language.structure.Require a0_0 = null;

        org.kermeta.language.structure.Using a1_0 = null;

        org.kermeta.language.structure.Package a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4435:1: ( ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4436:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )* ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )* ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4436:2: ( ( (a0_0= parse_org_kermeta_language_structure_Require ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==15) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4437:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4437:3: ( (a0_0= parse_org_kermeta_language_structure_Require ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4438:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4438:4: (a0_0= parse_org_kermeta_language_structure_Require )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4439:5: a0_0= parse_org_kermeta_language_structure_Require
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211);
            	    a0_0=parse_org_kermeta_language_structure_Require();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a0_0 != null) {
            	      						if (a0_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__REQUIRES, a0_0);
            	      							completedElement(a0_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a0_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 1));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 1));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 2));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 2));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4473:2: ( ( (a1_0= parse_org_kermeta_language_structure_Using ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==14) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4474:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4474:3: ( (a1_0= parse_org_kermeta_language_structure_Using ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4475:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4475:4: (a1_0= parse_org_kermeta_language_structure_Using )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4476:5: a1_0= parse_org_kermeta_language_structure_Using
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267);
            	    a1_0=parse_org_kermeta_language_structure_Using();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a1_0 != null) {
            	      						if (a1_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__USINGS, a1_0);
            	      							completedElement(a1_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a1_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 3));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 3));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 4));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 4));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4508:2: ( ( (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==IDENTIFIER||LA4_0==19) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4509:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4509:3: ( (a2_0= parse_org_kermeta_language_structure_Package ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4510:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4510:4: (a2_0= parse_org_kermeta_language_structure_Package )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4511:5: a2_0= parse_org_kermeta_language_structure_Package
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323);
            	    a2_0=parse_org_kermeta_language_structure_Package();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelingUnit();
            	      					}
            	      					if (a2_0 != null) {
            	      						if (a2_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODELING_UNIT__PACKAGES, a2_0);
            	      							completedElement(a2_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a2_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 5));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 5));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 6));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 6));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_kermeta_language_structure_ModelingUnit_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelingUnit"


    // $ANTLR start "parse_org_kermeta_language_structure_Using"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4543:1: parse_org_kermeta_language_structure_Using returns [org.kermeta.language.structure.Using element = null] : a0= 'using' ;
    public final org.kermeta.language.structure.Using parse_org_kermeta_language_structure_Using() throws RecognitionException {
        org.kermeta.language.structure.Using element =  null;
        int parse_org_kermeta_language_structure_Using_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4546:1: (a0= 'using' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4547:2: a0= 'using'
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_kermeta_language_structure_Using379); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUsing();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 7));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 7));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_kermeta_language_structure_Using_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Using"


    // $ANTLR start "parse_org_kermeta_language_structure_Require"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4563:1: parse_org_kermeta_language_structure_Require returns [org.kermeta.language.structure.Require element = null] : a0= 'require' ;
    public final org.kermeta.language.structure.Require parse_org_kermeta_language_structure_Require() throws RecognitionException {
        org.kermeta.language.structure.Require element =  null;
        int parse_org_kermeta_language_structure_Require_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4566:1: (a0= 'require' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4567:2: a0= 'require'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_kermeta_language_structure_Require408); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createRequire();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_0, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_1, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 8));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 8));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_kermeta_language_structure_Require_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Require"


    // $ANTLR start "parse_org_kermeta_language_structure_Package"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4584:1: parse_org_kermeta_language_structure_Package returns [org.kermeta.language.structure.Package element = null] : ( (a0= IDENTIFIER ) ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' ) )? | a9= 'package' (a10= IDENTIFIER ) ( (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' ) )? );
    public final org.kermeta.language.structure.Package parse_org_kermeta_language_structure_Package() throws RecognitionException {
        org.kermeta.language.structure.Package element =  null;
        int parse_org_kermeta_language_structure_Package_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a18=null;
        org.kermeta.language.structure.Package a2_0 = null;

        org.kermeta.language.structure.Package a4_0 = null;

        org.kermeta.language.structure.TypeDefinition a7_0 = null;

        org.kermeta.language.structure.Package a12_0 = null;

        org.kermeta.language.structure.Package a14_0 = null;

        org.kermeta.language.structure.TypeDefinition a17_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4587:1: ( (a0= IDENTIFIER ) ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' ) )? | a9= 'package' (a10= IDENTIFIER ) ( (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' ) )? )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==IDENTIFIER) ) {
                alt15=1;
            }
            else if ( (LA15_0==19) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4588:2: (a0= IDENTIFIER ) ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' ) )?
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4588:2: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4589:3: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package441); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 9));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 9));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4625:2: ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==16) ) {
                            int LA5_2 = input.LA(2);

                            if ( (synpred10_Kermeta()) ) {
                                alt5=1;
                            }


                        }


                        switch (alt5) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4626:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4626:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4627:4: a1= '::' (a2_0= parse_org_kermeta_language_structure_Package )
                    	    {
                    	    a1=(Token)match(input,16,FOLLOW_16_in_parse_org_kermeta_language_structure_Package471); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      				if (element == null) {
                    	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      				}
                    	      				collectHiddenTokens(element);
                    	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                    	      			
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 10));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 10));
                    	      			
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4640:4: (a2_0= parse_org_kermeta_language_structure_Package )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4641:5: a2_0= parse_org_kermeta_language_structure_Package
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package497);
                    	    a2_0=parse_org_kermeta_language_structure_Package();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					if (a2_0 != null) {
                    	      						if (a2_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a2_0);
                    	      							completedElement(a2_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a2_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 11));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 11));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 11));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 11));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 11));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 12));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 12));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4677:2: ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==17) ) {
                        int LA9_1 = input.LA(2);

                        if ( (synpred14_Kermeta()) ) {
                            alt9=1;
                        }
                    }
                    switch (alt9) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4678:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4678:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' )
                            int alt8=2;
                            int LA8_0 = input.LA(1);

                            if ( (LA8_0==17) ) {
                                switch ( input.LA(2) ) {
                                case IDENTIFIER:
                                    {
                                    int LA8_2 = input.LA(3);

                                    if ( (LA8_2==IDENTIFIER||(LA8_2>=16 && LA8_2<=19)) ) {
                                        alt8=1;
                                    }
                                    else if ( (LA8_2==42||LA8_2==53) ) {
                                        alt8=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 8, 2, input);

                                        throw nvae;
                                    }
                                    }
                                    break;
                                case PRIMITIVE_TYPE:
                                case 20:
                                case 21:
                                case 22:
                                case 35:
                                case 42:
                                case 53:
                                    {
                                    alt8=2;
                                    }
                                    break;
                                case 18:
                                case 19:
                                    {
                                    alt8=1;
                                    }
                                    break;
                                default:
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 8, 1, input);

                                    throw nvae;
                                }

                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 8, 0, input);

                                throw nvae;
                            }
                            switch (alt8) {
                                case 1 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4679:4: a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}'
                                    {
                                    a3=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package547); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 13));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 13));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 13));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4693:4: ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )*
                                    loop6:
                                    do {
                                        int alt6=2;
                                        int LA6_0 = input.LA(1);

                                        if ( (LA6_0==IDENTIFIER||LA6_0==19) ) {
                                            alt6=1;
                                        }


                                        switch (alt6) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4694:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4694:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4695:6: (a4_0= parse_org_kermeta_language_structure_Package )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4695:6: (a4_0= parse_org_kermeta_language_structure_Package )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4696:7: a4_0= parse_org_kermeta_language_structure_Package
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package588);
                                    	    a4_0=parse_org_kermeta_language_structure_Package();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a4_0 != null) {
                                    	      								if (a4_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a4_0);
                                    	      									completedElement(a4_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a4_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 14));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 14));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop6;
                                        }
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 15));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_18, 15));
                                      			
                                    }
                                    a5=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package649); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 16));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 16));
                                      			
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4745:8: a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}'
                                    {
                                    a6=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package677); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 17));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 17));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4765:4: ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt7=0;
                                    loop7:
                                    do {
                                        int alt7=2;
                                        int LA7_0 = input.LA(1);

                                        if ( ((LA7_0>=IDENTIFIER && LA7_0<=PRIMITIVE_TYPE)||(LA7_0>=20 && LA7_0<=22)||LA7_0==35||LA7_0==42||LA7_0==53) ) {
                                            alt7=1;
                                        }


                                        switch (alt7) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4766:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4766:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4767:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4767:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4768:7: a7_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package718);
                                    	    a7_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a7_0 != null) {
                                    	      								if (a7_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a7_0);
                                    	      									completedElement(a7_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a7_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 18));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 18));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt7 >= 1 ) break loop7;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(7, input);
                                                throw eee;
                                        }
                                        cnt7++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 19));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 19));
                                      			
                                    }
                                    a8=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package779); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 20));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 20));
                                      			
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 21));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 21));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 21));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 21));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 21));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4842:4: a9= 'package' (a10= IDENTIFIER ) ( (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) ) )* ( (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' ) )?
                    {
                    a9=(Token)match(input,19,FOLLOW_19_in_parse_org_kermeta_language_structure_Package816); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_29, 22));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4854:2: (a10= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4855:3: a10= IDENTIFIER
                    {
                    a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package834); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                      			}
                      			if (a10 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PACKAGE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 23));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 23));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4894:2: ( (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==16) ) {
                            int LA10_2 = input.LA(2);

                            if ( (synpred16_Kermeta()) ) {
                                alt10=1;
                            }


                        }


                        switch (alt10) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4895:3: (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4895:3: (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4896:4: a11= '::' (a12_0= parse_org_kermeta_language_structure_Package )
                    	    {
                    	    a11=(Token)match(input,16,FOLLOW_16_in_parse_org_kermeta_language_structure_Package864); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      				if (element == null) {
                    	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      				}
                    	      				collectHiddenTokens(element);
                    	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	      			
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 24));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 24));
                    	      			
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4909:4: (a12_0= parse_org_kermeta_language_structure_Package )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4910:5: a12_0= parse_org_kermeta_language_structure_Package
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package890);
                    	    a12_0=parse_org_kermeta_language_structure_Package();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      					if (terminateParsing) {
                    	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      					}
                    	      					if (element == null) {
                    	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                    	      					}
                    	      					if (a12_0 != null) {
                    	      						if (a12_0 != null) {
                    	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a12_0);
                    	      							completedElement(a12_0);
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos(a12_0, element); 					}
                    	      				
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      				// expected elements (follow set)
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 25));
                    	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 25));
                    	      			
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_30, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_31, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_32, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 26));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 26));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4952:2: ( (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' ) )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==17) ) {
                        int LA14_1 = input.LA(2);

                        if ( (synpred20_Kermeta()) ) {
                            alt14=1;
                        }
                    }
                    switch (alt14) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4953:3: (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4953:3: (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' )
                            int alt13=2;
                            int LA13_0 = input.LA(1);

                            if ( (LA13_0==17) ) {
                                switch ( input.LA(2) ) {
                                case IDENTIFIER:
                                    {
                                    int LA13_2 = input.LA(3);

                                    if ( (LA13_2==42||LA13_2==53) ) {
                                        alt13=2;
                                    }
                                    else if ( (LA13_2==IDENTIFIER||(LA13_2>=16 && LA13_2<=19)) ) {
                                        alt13=1;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 13, 2, input);

                                        throw nvae;
                                    }
                                    }
                                    break;
                                case 18:
                                case 19:
                                    {
                                    alt13=1;
                                    }
                                    break;
                                case PRIMITIVE_TYPE:
                                case 20:
                                case 21:
                                case 22:
                                case 35:
                                case 42:
                                case 53:
                                    {
                                    alt13=2;
                                    }
                                    break;
                                default:
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 13, 1, input);

                                    throw nvae;
                                }

                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 13, 0, input);

                                throw nvae;
                            }
                            switch (alt13) {
                                case 1 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4954:4: a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}'
                                    {
                                    a13=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package940); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 27));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 27));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 27));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4968:4: ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )*
                                    loop11:
                                    do {
                                        int alt11=2;
                                        int LA11_0 = input.LA(1);

                                        if ( (LA11_0==IDENTIFIER||LA11_0==19) ) {
                                            alt11=1;
                                        }


                                        switch (alt11) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4969:5: ( (a14_0= parse_org_kermeta_language_structure_Package ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4969:5: ( (a14_0= parse_org_kermeta_language_structure_Package ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4970:6: (a14_0= parse_org_kermeta_language_structure_Package )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4970:6: (a14_0= parse_org_kermeta_language_structure_Package )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4971:7: a14_0= parse_org_kermeta_language_structure_Package
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package981);
                                    	    a14_0=parse_org_kermeta_language_structure_Package();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a14_0 != null) {
                                    	      								if (a14_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__NESTED_PACKAGE, a14_0);
                                    	      									completedElement(a14_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a14_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 28));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 28));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 28));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop11;
                                        }
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 29));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 29));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_33, 29));
                                      			
                                    }
                                    a15=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package1042); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 30));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 30));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 30));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 30));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 30));
                                      			
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:8: a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}'
                                    {
                                    a16=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Package1070); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 31));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 31));
                                      			
                                    }
                                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5040:4: ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                                    int cnt12=0;
                                    loop12:
                                    do {
                                        int alt12=2;
                                        int LA12_0 = input.LA(1);

                                        if ( ((LA12_0>=IDENTIFIER && LA12_0<=PRIMITIVE_TYPE)||(LA12_0>=20 && LA12_0<=22)||LA12_0==35||LA12_0==42||LA12_0==53) ) {
                                            alt12=1;
                                        }


                                        switch (alt12) {
                                    	case 1 :
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5041:5: ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5041:5: ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5042:6: (a17_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    {
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5042:6: (a17_0= parse_org_kermeta_language_structure_TypeDefinition )
                                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5043:7: a17_0= parse_org_kermeta_language_structure_TypeDefinition
                                    	    {
                                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1111);
                                    	    a17_0=parse_org_kermeta_language_structure_TypeDefinition();

                                    	    state._fsp--;
                                    	    if (state.failed) return element;
                                    	    if ( state.backtracking==0 ) {

                                    	      							if (terminateParsing) {
                                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                                    	      							}
                                    	      							if (element == null) {
                                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                    	      							}
                                    	      							if (a17_0 != null) {
                                    	      								if (a17_0 != null) {
                                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.PACKAGE__OWNED_TYPE_DEFINITION, a17_0);
                                    	      									completedElement(a17_0);
                                    	      								}
                                    	      								collectHiddenTokens(element);
                                    	      								copyLocalizationInfos(a17_0, element); 							}
                                    	      						
                                    	    }

                                    	    }

                                    	    if ( state.backtracking==0 ) {

                                    	      						// expected elements (follow set)
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 32));
                                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 32));
                                    	      					
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt12 >= 1 ) break loop12;
                                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(12, input);
                                                throw eee;
                                        }
                                        cnt12++;
                                    } while (true);

                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 33));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_34, 33));
                                      			
                                    }
                                    a18=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Package1172); if (state.failed) return element;
                                    if ( state.backtracking==0 ) {

                                      				if (element == null) {
                                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPackage();
                                      				}
                                      				collectHiddenTokens(element);
                                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                                      			
                                    }
                                    if ( state.backtracking==0 ) {

                                      				// expected elements (follow set)
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 34));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 34));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 34));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 34));
                                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 34));
                                      			
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_2, 35));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_3, 35));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_15, 35));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_16, 35));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_17, 35));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_kermeta_language_structure_Package_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Package"


    // $ANTLR start "parse_org_kermeta_language_structure_ClassDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5118:1: parse_org_kermeta_language_structure_ClassDefinition returns [org.kermeta.language.structure.ClassDefinition element = null] : ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' ;
    public final org.kermeta.language.structure.ClassDefinition parse_org_kermeta_language_structure_ClassDefinition() throws RecognitionException {
        org.kermeta.language.structure.ClassDefinition element =  null;
        int parse_org_kermeta_language_structure_ClassDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a12=null;
        org.kermeta.language.structure.Constraint a9_0 = null;

        org.kermeta.language.structure.Property a10_0 = null;

        org.kermeta.language.structure.Operation a11_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5121:1: ( ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5122:2: ( (a0= 'aspect' ) )? ( (a1= 'abstract' ) )? a2= 'class' (a3= IDENTIFIER ) ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )? a8= '{' ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )* ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )* ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )* a12= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5122:2: ( (a0= 'aspect' ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==20) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5123:3: (a0= 'aspect' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5123:3: (a0= 'aspect' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5124:4: a0= 'aspect'
                    {
                    a0=(Token)match(input,20,FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1229); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 36));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 36));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 37));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 37));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5145:2: ( (a1= 'abstract' ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==21) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5146:3: (a1= 'abstract' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5146:3: (a1= 'abstract' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5147:4: a1= 'abstract'
                    {
                    a1=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1271); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 38));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 39));
              	
            }
            a2=(Token)match(input,22,FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1304); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_35, 40));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5178:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5179:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1322); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_36, 41));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 41));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5212:2: ( (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==23) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5213:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5213:3: (a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5214:4: a4= 'inherits' (a5= IDENTIFIER ) ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    {
                    a4=(Token)match(input,23,FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1352); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_38, 42));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5226:4: (a5= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5227:5: a5= IDENTIFIER
                    {
                    a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1378); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                      					}
                      					if (a5 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 43));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 43));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5264:4: ( (a6= ',' (a7= IDENTIFIER ) ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==24) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5265:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5265:5: (a6= ',' (a7= IDENTIFIER ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5266:6: a6= ',' (a7= IDENTIFIER )
                    	    {
                    	    a6=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1424); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_40, 44));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5278:6: (a7= IDENTIFIER )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5279:7: a7= IDENTIFIER
                    	    {
                    	    a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1458); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
                    	      							}
                    	      							if (a7 != null) {
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	      								tokenResolver.setOptions(getOptions());
                    	      								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	      								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), result);
                    	      								java.lang.Object resolvedObject = result.getResolvedToken();
                    	      								if (resolvedObject == null) {
                    	      									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                    	      								}
                    	      								String resolved = (String) resolvedObject;
                    	      								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	      								collectHiddenTokens(element);
                    	      								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ClassDefinition, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getClassDefinitionSuperTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE), resolved, proxy);
                    	      								if (proxy != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__SUPER_TYPE, proxy);
                    	      									completedElement(proxy);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                    	      							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 45));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 45));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_39, 46));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 46));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_37, 47));
              	
            }
            a8=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_ClassDefinition1539); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 48));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 48));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 48));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 48));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 48));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 48));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5348:2: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==IDENTIFIER) ) {
                    int LA20_2 = input.LA(2);

                    if ( (LA20_2==IDENTIFIER) ) {
                        int LA20_3 = input.LA(3);

                        if ( (synpred25_Kermeta()) ) {
                            alt20=1;
                        }


                    }


                }


                switch (alt20) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5349:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5349:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5350:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5350:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5351:5: a9_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1568);
            	    a9_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a9_0 != null) {
            	      						if (a9_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__INV, a9_0);
            	      							completedElement(a9_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a9_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 49));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 49));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 49));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 49));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 49));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 49));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 50));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 50));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 50));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 50));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 50));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 50));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5389:2: ( ( (a10_0= parse_org_kermeta_language_structure_Property ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( ((LA21_0>=25 && LA21_0<=26)||LA21_0==28) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5390:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5390:3: ( (a10_0= parse_org_kermeta_language_structure_Property ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5391:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5391:4: (a10_0= parse_org_kermeta_language_structure_Property )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5392:5: a10_0= parse_org_kermeta_language_structure_Property
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1624);
            	    a10_0=parse_org_kermeta_language_structure_Property();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a10_0 != null) {
            	      						if (a10_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_ATTRIBUTE, a10_0);
            	      							completedElement(a10_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a10_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 51));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 51));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 51));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 51));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 51));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 51));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 52));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 52));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5430:2: ( ( (a11_0= parse_org_kermeta_language_structure_Operation ) ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==IDENTIFIER||LA22_0==31) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5431:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5431:3: ( (a11_0= parse_org_kermeta_language_structure_Operation ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5432:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5432:4: (a11_0= parse_org_kermeta_language_structure_Operation )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5433:5: a11_0= parse_org_kermeta_language_structure_Operation
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1680);
            	    a11_0=parse_org_kermeta_language_structure_Operation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	      					}
            	      					if (a11_0 != null) {
            	      						if (a11_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.CLASS_DEFINITION__OWNED_OPERATION, a11_0);
            	      							completedElement(a11_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a11_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 53));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 53));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 53));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 54));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 54));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 54));
              	
            }
            a12=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ClassDefinition1721); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 55));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 55));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_kermeta_language_structure_ClassDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ClassDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Property"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5488:1: parse_org_kermeta_language_structure_Property returns [org.kermeta.language.structure.Property element = null] : ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? );
    public final org.kermeta.language.structure.Property parse_org_kermeta_language_structure_Property() throws RecognitionException {
        org.kermeta.language.structure.Property element =  null;
        int parse_org_kermeta_language_structure_Property_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        org.kermeta.language.behavior.Expression a10_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5491:1: ( (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )? | a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=25 && LA28_0<=26)) ) {
                alt28=1;
            }
            else if ( (LA28_0==28) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5492:2: (a0= 'attribute' | a1= 'reference' ) (a2= IDENTIFIER ) ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5492:2: (a0= 'attribute' | a1= 'reference' )
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==25) ) {
                        alt23=1;
                    }
                    else if ( (LA23_0==26) ) {
                        alt23=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 23, 0, input);

                        throw nvae;
                    }
                    switch (alt23) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5493:3: a0= 'attribute'
                            {
                            a0=(Token)match(input,25,FOLLOW_25_in_parse_org_kermeta_language_structure_Property1754); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 56));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5506:6: a1= 'reference'
                            {
                            a1=(Token)match(input,26,FOLLOW_26_in_parse_org_kermeta_language_structure_Property1777); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 57));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_42, 58));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5524:2: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5525:3: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1805); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a2 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_43, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 59));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 59));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5563:2: ( (a3= ':' (a4= IDENTIFIER ) ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==27) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5564:3: (a3= ':' (a4= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5564:3: (a3= ':' (a4= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5565:4: a3= ':' (a4= IDENTIFIER )
                            {
                            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1835); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_44, 60));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5577:4: (a4= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5578:5: a4= IDENTIFIER
                            {
                            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1861); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a4 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 61));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 61));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 62));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 62));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5632:4: a5= 'property' (a6= IDENTIFIER ) ( (a7= ':' (a8= IDENTIFIER ) ) )? ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )? ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    {
                    a5=(Token)match(input,28,FOLLOW_28_in_parse_org_kermeta_language_structure_Property1911); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_45, 63));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5644:2: (a6= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5645:3: a6= IDENTIFIER
                    {
                    a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1929); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                      			}
                      			if (a6 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_46, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 64));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 64));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5685:2: ( (a7= ':' (a8= IDENTIFIER ) ) )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==27) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5686:3: (a7= ':' (a8= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5686:3: (a7= ':' (a8= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5687:4: a7= ':' (a8= IDENTIFIER )
                            {
                            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Property1959); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_49, 65));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5699:4: (a8= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5700:5: a8= IDENTIFIER
                            {
                            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1985); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a8 != null) {
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              						tokenResolver.setOptions(getOptions());
                              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                              						}
                              						String resolved = (String) resolvedObject;
                              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              						collectHiddenTokens(element);
                              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), resolved, proxy);
                              						if (proxy != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__TYPE), proxy);
                              							completedElement(proxy);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 66));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 66));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_47, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 67));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 67));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5757:2: ( (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==29) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5758:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5758:3: (a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5759:4: a9= 'getter' (a10_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a9=(Token)match(input,29,FOLLOW_29_in_parse_org_kermeta_language_structure_Property2040); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 68));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 68));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5789:4: (a10_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5790:5: a10_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2066);
                            a10_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a10_0 != null) {
                              						if (a10_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__GETTER_BODY), a10_0);
                              							completedElement(a10_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a10_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 69));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 69));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 69));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 69));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 69));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 69));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 69));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 70));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 70));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 70));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 70));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 70));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 70));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 70));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5830:2: ( (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) ) )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==30) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5831:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5831:3: (a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5832:4: a11= 'setter' (a12_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a11=(Token)match(input,30,FOLLOW_30_in_parse_org_kermeta_language_structure_Property2116); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 71));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 71));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5862:4: (a12_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5863:5: a12_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2142);
                            a12_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                              					}
                              					if (a12_0 != null) {
                              						if (a12_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PROPERTY__SETTER_BODY), a12_0);
                              							completedElement(a12_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a12_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 72));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 72));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 72));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 72));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 72));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 72));
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 73));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 73));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 73));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 73));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 73));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 73));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_kermeta_language_structure_Property_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Property"


    // $ANTLR start "parse_org_kermeta_language_structure_Operation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5903:1: parse_org_kermeta_language_structure_Operation returns [org.kermeta.language.structure.Operation element = null] : ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) ;
    public final org.kermeta.language.structure.Operation parse_org_kermeta_language_structure_Operation() throws RecognitionException {
        org.kermeta.language.structure.Operation element =  null;
        int parse_org_kermeta_language_structure_Operation_StartIndex = input.index();
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        org.kermeta.language.structure.Constraint a0_0 = null;

        org.kermeta.language.structure.Constraint a1_0 = null;

        org.kermeta.language.structure.Parameter a5_0 = null;

        org.kermeta.language.structure.Parameter a9_0 = null;

        org.kermeta.language.behavior.Block a16_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5906:1: ( ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5907:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )* ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )* a2= 'operation' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )? a12= ')' ( (a13= ':' (a14= IDENTIFIER ) ) )? a15= 'is' ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5907:2: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==IDENTIFIER) ) {
                    int LA29_1 = input.LA(2);

                    if ( (LA29_1==IDENTIFIER) ) {
                        int LA29_3 = input.LA(3);

                        if ( (synpred34_Kermeta()) ) {
                            alt29=1;
                        }


                    }


                }


                switch (alt29) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5908:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5908:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5909:4: a0_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2207);
            	    a0_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a0_0 != null) {
            	      					if (a0_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__PRE, a0_0);
            	      						completedElement(a0_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a0_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 74));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 74));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5932:2: ( (a1_0= parse_org_kermeta_language_structure_Constraint ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==IDENTIFIER) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5933:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5933:3: (a1_0= parse_org_kermeta_language_structure_Constraint )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5934:4: a1_0= parse_org_kermeta_language_structure_Constraint
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2242);
            	    a1_0=parse_org_kermeta_language_structure_Constraint();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
            	      				}
            	      				if (a1_0 != null) {
            	      					if (a1_0 != null) {
            	      						addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__POST, a1_0);
            	      						completedElement(a1_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a1_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 75));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 75));
              	
            }
            a2=(Token)match(input,31,FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2268); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_68, 76));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5969:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5970:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2286); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_69, 77));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2307); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 78));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 78));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6015:2: ( ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==IDENTIFIER) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6016:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6016:3: ( (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6017:4: (a5_0= parse_org_kermeta_language_structure_Parameter ) ( (a6= ':' (a7= IDENTIFIER ) ) )? ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6017:4: (a5_0= parse_org_kermeta_language_structure_Parameter )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6018:5: a5_0= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2336);
                    a5_0=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 79));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 79));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 79));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6041:4: ( (a6= ':' (a7= IDENTIFIER ) ) )?
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==27) ) {
                        alt31=1;
                    }
                    switch (alt31) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6042:5: (a6= ':' (a7= IDENTIFIER ) )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6042:5: (a6= ':' (a7= IDENTIFIER ) )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6043:6: a6= ':' (a7= IDENTIFIER )
                            {
                            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2377); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (element == null) {
                              							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_73, 80));
                              					
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6055:6: (a7= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6056:7: a7= IDENTIFIER
                            {
                            a7=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2411); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              							if (terminateParsing) {
                              								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              							}
                              							if (element == null) {
                              								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                              							}
                              							if (a7 != null) {
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              								tokenResolver.setOptions(getOptions());
                              								org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              								tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                              								java.lang.Object resolvedObject = result.getResolvedToken();
                              								if (resolvedObject == null) {
                              									addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a7).getLine(), ((org.antlr.runtime.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a7).getStartIndex(), ((org.antlr.runtime.CommonToken) a7).getStopIndex());
                              								}
                              								String resolved = (String) resolvedObject;
                              								org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                              								collectHiddenTokens(element);
                              								registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                              								if (proxy != null) {
                              									element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                              									completedElement(proxy);
                              								}
                              								collectHiddenTokens(element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, element);
                              								copyLocalizationInfos((org.antlr.runtime.CommonToken) a7, proxy);
                              							}
                              						
                            }

                            }

                            if ( state.backtracking==0 ) {

                              						// expected elements (follow set)
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 81));
                              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 81));
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 82));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 82));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6101:4: ( (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? ) )*
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==24) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6102:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6102:5: (a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )? )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6103:6: a8= ',' (a9_0= parse_org_kermeta_language_structure_Parameter ) ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    {
                    	    a8=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_structure_Operation2492); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_10, 83));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6115:6: (a9_0= parse_org_kermeta_language_structure_Parameter )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6116:7: a9_0= parse_org_kermeta_language_structure_Parameter
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2526);
                    	    a9_0=parse_org_kermeta_language_structure_Parameter();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	      							}
                    	      							if (a9_0 != null) {
                    	      								if (a9_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.structure.StructurePackage.OPERATION__OWNED_PARAMETER, a9_0);
                    	      									completedElement(a9_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a9_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_74, 84));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 84));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 84));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6139:6: ( (a10= ':' (a11= IDENTIFIER ) ) )?
                    	    int alt32=2;
                    	    int LA32_0 = input.LA(1);

                    	    if ( (LA32_0==27) ) {
                    	        alt32=1;
                    	    }
                    	    switch (alt32) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6140:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            {
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6140:7: (a10= ':' (a11= IDENTIFIER ) )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6141:8: a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2581); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              								if (element == null) {
                    	              									element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              								}
                    	              								collectHiddenTokens(element);
                    	              								copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_75, 85));
                    	              							
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6153:8: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6154:9: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2623); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              									if (terminateParsing) {
                    	              										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              									}
                    	              									if (element == null) {
                    	              										element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              									}
                    	              									if (a11 != null) {
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              										tokenResolver.setOptions(getOptions());
                    	              										org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              										tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                    	              										java.lang.Object resolvedObject = result.getResolvedToken();
                    	              										if (resolvedObject == null) {
                    	              											addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              										}
                    	              										String resolved = (String) resolvedObject;
                    	              										org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              										collectHiddenTokens(element);
                    	              										registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                    	              										if (proxy != null) {
                    	              											element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                    	              											completedElement(proxy);
                    	              										}
                    	              										collectHiddenTokens(element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              										copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
                    	              									}
                    	              								
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              								// expected elements (follow set)
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 86));
                    	              								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 86));
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 87));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 87));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop33;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 88));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 88));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 89));
              	
            }
            a12=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2749); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_76, 90));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 90));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6227:2: ( (a13= ':' (a14= IDENTIFIER ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==27) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6228:3: (a13= ':' (a14= IDENTIFIER ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6228:3: (a13= ':' (a14= IDENTIFIER ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6229:4: a13= ':' (a14= IDENTIFIER )
                    {
                    a13=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2772); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_78, 91));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6241:4: (a14= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6242:5: a14= IDENTIFIER
                    {
                    a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2798); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      					}
                      					if (a14 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
                      						}
                      						String resolved = (String) resolvedObject;
                      						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                      						collectHiddenTokens(element);
                      						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), resolved, proxy);
                      						if (proxy != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__TYPE), proxy);
                      							completedElement(proxy);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, proxy);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 92));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_77, 93));
              	
            }
            a15=(Token)match(input,34,FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2844); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 94));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_79, 94));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6298:2: ( (a16_0= parse_org_kermeta_language_behavior_Block ) | a17= 'abstract' )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==69) ) {
                alt36=1;
            }
            else if ( (LA36_0==21) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6299:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6299:3: (a16_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6300:4: a16_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2867);
                    a16_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      				}
                      				if (a16_0 != null) {
                      					if (a16_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OPERATION__BODY), a16_0);
                      						completedElement(a16_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a16_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 95));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 95));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 95));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6324:6: a17= 'abstract'
                    {
                    a17=(Token)match(input,21,FOLLOW_21_in_parse_org_kermeta_language_structure_Operation2896); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (element == null) {
                      				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                      			}
                      			collectHiddenTokens(element);
                      			copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 96));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 96));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 96));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 97));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 97));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 97));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_kermeta_language_structure_Operation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Operation"


    // $ANTLR start "parse_org_kermeta_language_structure_Parameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6348:1: parse_org_kermeta_language_structure_Parameter returns [org.kermeta.language.structure.Parameter element = null] : (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Parameter parse_org_kermeta_language_structure_Parameter() throws RecognitionException {
        org.kermeta.language.structure.Parameter element =  null;
        int parse_org_kermeta_language_structure_Parameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6351:1: ( (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6352:2: (a0= IDENTIFIER ) a1= ':' (a2= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6352:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6353:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2939); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_80, 98));
              	
            }
            a1=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Parameter2960); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_81, 99));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6397:2: (a2= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6398:3: a2= IDENTIFIER
            {
            a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2978); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createParameter();
              			}
              			if (a2 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PARAMETER__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_71, 100));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_72, 100));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_70, 100));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_kermeta_language_structure_Parameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Parameter"


    // $ANTLR start "parse_org_kermeta_language_structure_Class"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6438:1: parse_org_kermeta_language_structure_Class returns [org.kermeta.language.structure.Class element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Class parse_org_kermeta_language_structure_Class() throws RecognitionException {
        org.kermeta.language.structure.Class element =  null;
        int parse_org_kermeta_language_structure_Class_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6441:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6442:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6442:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6443:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class3018); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ParameterizedType, org.kermeta.language.structure.GenericTypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterizedTypeTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CLASS__TYPE_DEFINITION), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 101));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 101));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_kermeta_language_structure_Class_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Class"


    // $ANTLR start "parse_org_kermeta_language_structure_Enumeration"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6544:1: parse_org_kermeta_language_structure_Enumeration returns [org.kermeta.language.structure.Enumeration element = null] : a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' ;
    public final org.kermeta.language.structure.Enumeration parse_org_kermeta_language_structure_Enumeration() throws RecognitionException {
        org.kermeta.language.structure.Enumeration element =  null;
        int parse_org_kermeta_language_structure_Enumeration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        org.kermeta.language.structure.EnumerationLiteral a3_0 = null;

        org.kermeta.language.structure.EnumerationLiteral a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6547:1: (a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6548:2: a0= 'enumeration' (a1= IDENTIFIER ) a2= '{' ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* ) a7= '}'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration3054); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_147, 102));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6560:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6561:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration3072); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_148, 103));
              	
            }
            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Enumeration3093); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 104));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6605:2: ( (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )* )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6606:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a4= ';' ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6606:3: (a3_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6607:4: a3_0= parse_org_kermeta_language_structure_EnumerationLiteral
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3116);
            a3_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              				if (terminateParsing) {
              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              				}
              				if (element == null) {
              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              				}
              				if (a3_0 != null) {
              					if (a3_0 != null) {
              						addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a3_0);
              						completedElement(a3_0);
              					}
              					collectHiddenTokens(element);
              					copyLocalizationInfos(a3_0, element); 				}
              			
            }

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 105));
              		
            }
            a4=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3139); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              			}
              			collectHiddenTokens(element);
              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              		
            }
            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 106));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 106));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6641:3: ( ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==IDENTIFIER) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6642:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6642:4: ( (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';' )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6643:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral ) a6= ';'
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6643:5: (a5_0= parse_org_kermeta_language_structure_EnumerationLiteral )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6644:6: a5_0= parse_org_kermeta_language_structure_EnumerationLiteral
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3174);
            	    a5_0=parse_org_kermeta_language_structure_EnumerationLiteral();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      						if (terminateParsing) {
            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      						}
            	      						if (element == null) {
            	      							element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      						}
            	      						if (a5_0 != null) {
            	      							if (a5_0 != null) {
            	      								addObjectToList(element, org.kermeta.language.structure.StructurePackage.ENUMERATION__OWNED_LITERAL, a5_0);
            	      								completedElement(a5_0);
            	      							}
            	      							collectHiddenTokens(element);
            	      							copyLocalizationInfos(a5_0, element); 						}
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_152, 107));
            	      				
            	    }
            	    a6=(Token)match(input,36,FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3207); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (element == null) {
            	      						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					// expected elements (follow set)
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 108));
            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 108));
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_149, 109));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 109));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_151, 110));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Enumeration3255); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumeration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 111));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 111));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_kermeta_language_structure_Enumeration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Enumeration"


    // $ANTLR start "parse_org_kermeta_language_structure_EnumerationLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6779:1: parse_org_kermeta_language_structure_EnumerationLiteral returns [org.kermeta.language.structure.EnumerationLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.EnumerationLiteral parse_org_kermeta_language_structure_EnumerationLiteral() throws RecognitionException {
        org.kermeta.language.structure.EnumerationLiteral element =  null;
        int parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6782:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6783:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6783:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6784:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3288); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.ENUMERATION_LITERAL__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_150, 112));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_kermeta_language_structure_EnumerationLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_EnumerationLiteral"


    // $ANTLR start "parse_org_kermeta_language_structure_Constraint"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6818:1: parse_org_kermeta_language_structure_Constraint returns [org.kermeta.language.structure.Constraint element = null] : (a0= IDENTIFIER ) (a1= IDENTIFIER ) ;
    public final org.kermeta.language.structure.Constraint parse_org_kermeta_language_structure_Constraint() throws RecognitionException {
        org.kermeta.language.structure.Constraint element =  null;
        int parse_org_kermeta_language_structure_Constraint_StartIndex = input.index();
        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6821:1: ( (a0= IDENTIFIER ) (a1= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6822:2: (a0= IDENTIFIER ) (a1= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6822:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6823:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3328); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintType resolved = (org.kermeta.language.structure.ConstraintType)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__STEREOTYPE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_153, 113));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6855:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6856:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3353); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createConstraint();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				org.kermeta.language.structure.ConstraintLanguage resolved = (org.kermeta.language.structure.ConstraintLanguage)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.CONSTRAINT__LANGUAGE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 114));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 114));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 114));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 114));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 114));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 114));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_kermeta_language_structure_Constraint_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Constraint"


    // $ANTLR start "parse_org_kermeta_language_structure_PrimitiveType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6895:1: parse_org_kermeta_language_structure_PrimitiveType returns [org.kermeta.language.structure.PrimitiveType element = null] : (a0= PRIMITIVE_TYPE ) ;
    public final org.kermeta.language.structure.PrimitiveType parse_org_kermeta_language_structure_PrimitiveType() throws RecognitionException {
        org.kermeta.language.structure.PrimitiveType element =  null;
        int parse_org_kermeta_language_structure_PrimitiveType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6898:1: ( (a0= PRIMITIVE_TYPE ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6899:2: (a0= PRIMITIVE_TYPE )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6899:2: (a0= PRIMITIVE_TYPE )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:6900:3: a0= PRIMITIVE_TYPE
            {
            a0=(Token)match(input,PRIMITIVE_TYPE,FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3393); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createPrimitiveType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("PRIMITIVE_TYPE");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRIMITIVE_TYPE__NAME), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 115));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 115));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_kermeta_language_structure_PrimitiveType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_PrimitiveType"


    // $ANTLR start "parse_org_kermeta_language_structure_UnresolvedType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7007:1: parse_org_kermeta_language_structure_UnresolvedType returns [org.kermeta.language.structure.UnresolvedType element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.structure.UnresolvedType parse_org_kermeta_language_structure_UnresolvedType() throws RecognitionException {
        org.kermeta.language.structure.UnresolvedType element =  null;
        int parse_org_kermeta_language_structure_UnresolvedType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7010:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7011:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7011:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7012:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3433); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createUnresolvedType();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.UNRESOLVED_TYPE__TYPE_IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 116));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 116));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_kermeta_language_structure_UnresolvedType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_UnresolvedType"


    // $ANTLR start "parse_org_kermeta_language_structure_VoidType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7109:1: parse_org_kermeta_language_structure_VoidType returns [org.kermeta.language.structure.VoidType element = null] : a0= 'Void' ;
    public final org.kermeta.language.structure.VoidType parse_org_kermeta_language_structure_VoidType() throws RecognitionException {
        org.kermeta.language.structure.VoidType element =  null;
        int parse_org_kermeta_language_structure_VoidType_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7112:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7113:2: a0= 'Void'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_structure_VoidType3469); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVoidType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 117));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 117));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_kermeta_language_structure_VoidType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VoidType"


    // $ANTLR start "parse_org_kermeta_language_structure_Object"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7190:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );
    public final org.kermeta.language.structure.Object parse_org_kermeta_language_structure_Object() throws RecognitionException {
        org.kermeta.language.structure.Object element =  null;
        int parse_org_kermeta_language_structure_Object_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.ModelingUnit c0 = null;

        org.kermeta.language.structure.Using c1 = null;

        org.kermeta.language.structure.Require c2 = null;

        org.kermeta.language.structure.Package c3 = null;

        org.kermeta.language.structure.ClassDefinition c4 = null;

        org.kermeta.language.structure.Property c5 = null;

        org.kermeta.language.structure.Operation c6 = null;

        org.kermeta.language.structure.Parameter c7 = null;

        org.kermeta.language.structure.Class c8 = null;

        org.kermeta.language.structure.Enumeration c9 = null;

        org.kermeta.language.structure.EnumerationLiteral c10 = null;

        org.kermeta.language.structure.Constraint c11 = null;

        org.kermeta.language.structure.PrimitiveType c12 = null;

        org.kermeta.language.structure.UnresolvedType c13 = null;

        org.kermeta.language.structure.VoidType c14 = null;

        org.kermeta.language.structure.Model c15 = null;

        org.kermeta.language.structure.ModelType c16 = null;

        org.kermeta.language.structure.TypeVariableBinding c17 = null;

        org.kermeta.language.structure.MultiplicityElement c18 = null;

        org.kermeta.language.structure.TypeDefinition c19 = null;

        org.kermeta.language.structure.Tag c20 = null;

        org.kermeta.language.structure.ObjectTypeVariable c21 = null;

        org.kermeta.language.structure.ModelTypeVariable c22 = null;

        org.kermeta.language.structure.VirtualType c23 = null;

        org.kermeta.language.structure.ProductType c24 = null;

        org.kermeta.language.structure.FunctionType c25 = null;

        org.kermeta.language.behavior.Block c26 = null;

        org.kermeta.language.behavior.Rescue c27 = null;

        org.kermeta.language.behavior.TypeReference c28 = null;

        org.kermeta.language.behavior.Raise c29 = null;

        org.kermeta.language.behavior.BooleanLiteral c30 = null;

        org.kermeta.language.behavior.IntegerLiteral c31 = null;

        org.kermeta.language.behavior.StringLiteral c32 = null;

        org.kermeta.language.behavior.Conditional c33 = null;

        org.kermeta.language.behavior.Loop c34 = null;

        org.kermeta.language.behavior.VariableDecl c35 = null;

        org.kermeta.language.behavior.TypeLiteral c36 = null;

        org.kermeta.language.behavior.CallResult c37 = null;

        org.kermeta.language.behavior.CallSuperOperation c38 = null;

        org.kermeta.language.behavior.Assignment c39 = null;

        org.kermeta.language.behavior.CallVariable c40 = null;

        org.kermeta.language.behavior.SelfExpression c41 = null;

        org.kermeta.language.behavior.CallFeature c42 = null;

        org.kermeta.language.behavior.JavaStaticCall c43 = null;

        org.kermeta.language.behavior.VoidLiteral c44 = null;

        org.kermeta.language.behavior.CallValue c45 = null;

        org.kermeta.language.behavior.EmptyExpression c46 = null;

        org.kermeta.language.behavior.LambdaExpression c47 = null;

        org.kermeta.language.behavior.LambdaParameter c48 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7193:1: (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter )
            int alt40=50;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7194:2: a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
                    {
                    a0=(Token)match(input,38,FOLLOW_38_in_parse_org_kermeta_language_structure_Object3498); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_157, 118));
                      	
                    }
                    a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Object3512); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 119));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 119));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 119));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7220:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( ((LA39_0>=39 && LA39_0<=40)) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7221:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7221:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
                    	    int alt38=2;
                    	    int LA38_0 = input.LA(1);

                    	    if ( (LA38_0==39) ) {
                    	        alt38=1;
                    	    }
                    	    else if ( (LA38_0==40) ) {
                    	        alt38=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 38, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt38) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7222:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Object3535); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_161, 120));
                    	              			
                    	            }
                    	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Object3555); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_162, 121));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7246:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7247:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3581); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 122));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 122));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 122));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7286:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Object3622); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_163, 123));
                    	              			
                    	            }
                    	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Object3642); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 124));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7310:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7311:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3668);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 125));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 125));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 125));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 126));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 126));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 126));
                      	
                    }
                    a8=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Object3709); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7356:2: c0= parse_org_kermeta_language_structure_ModelingUnit
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3728);
                    c0=parse_org_kermeta_language_structure_ModelingUnit();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7357:4: c1= parse_org_kermeta_language_structure_Using
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3738);
                    c1=parse_org_kermeta_language_structure_Using();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7358:4: c2= parse_org_kermeta_language_structure_Require
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3748);
                    c2=parse_org_kermeta_language_structure_Require();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7359:4: c3= parse_org_kermeta_language_structure_Package
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3758);
                    c3=parse_org_kermeta_language_structure_Package();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7360:4: c4= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3768);
                    c4=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7361:4: c5= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3778);
                    c5=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7362:4: c6= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3788);
                    c6=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7363:4: c7= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3798);
                    c7=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7364:4: c8= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3808);
                    c8=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7365:4: c9= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3818);
                    c9=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7366:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3828);
                    c10=parse_org_kermeta_language_structure_EnumerationLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7367:4: c11= parse_org_kermeta_language_structure_Constraint
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3838);
                    c11=parse_org_kermeta_language_structure_Constraint();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7368:4: c12= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3848);
                    c12=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:4: c13= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object3858);
                    c13=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7370:4: c14= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3868);
                    c14=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7371:4: c15= parse_org_kermeta_language_structure_Model
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3878);
                    c15=parse_org_kermeta_language_structure_Model();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7372:4: c16= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3888);
                    c16=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7373:4: c17= parse_org_kermeta_language_structure_TypeVariableBinding
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3898);
                    c17=parse_org_kermeta_language_structure_TypeVariableBinding();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7374:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3908);
                    c18=parse_org_kermeta_language_structure_MultiplicityElement();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 21 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7375:4: c19= parse_org_kermeta_language_structure_TypeDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3918);
                    c19=parse_org_kermeta_language_structure_TypeDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 22 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7376:4: c20= parse_org_kermeta_language_structure_Tag
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3928);
                    c20=parse_org_kermeta_language_structure_Tag();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c20; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 23 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7377:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3938);
                    c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c21; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 24 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7378:4: c22= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3948);
                    c22=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c22; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 25 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:4: c23= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3958);
                    c23=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c23; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 26 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7380:4: c24= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3968);
                    c24=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c24; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 27 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7381:4: c25= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3978);
                    c25=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c25; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 28 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7382:4: c26= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3988);
                    c26=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c26; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 29 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7383:4: c27= parse_org_kermeta_language_behavior_Rescue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3998);
                    c27=parse_org_kermeta_language_behavior_Rescue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c27; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 30 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7384:4: c28= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object4008);
                    c28=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c28; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 31 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7385:4: c29= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object4018);
                    c29=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c29; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 32 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7386:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object4028);
                    c30=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c30; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 33 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7387:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object4038);
                    c31=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c31; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 34 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7388:4: c32= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object4048);
                    c32=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c32; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 35 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7389:4: c33= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object4058);
                    c33=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c33; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 36 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7390:4: c34= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object4068);
                    c34=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c34; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 37 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7391:4: c35= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object4078);
                    c35=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c35; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 38 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7392:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object4088);
                    c36=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c36; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 39 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7393:4: c37= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object4098);
                    c37=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c37; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 40 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7394:4: c38= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object4108);
                    c38=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c38; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 41 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7395:4: c39= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object4118);
                    c39=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c39; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 42 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7396:4: c40= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object4128);
                    c40=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c40; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 43 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7397:4: c41= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object4138);
                    c41=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c41; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 44 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7398:4: c42= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object4148);
                    c42=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c42; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 45 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7399:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object4158);
                    c43=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c43; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 46 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7400:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object4168);
                    c44=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c44; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 47 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7401:4: c45= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object4178);
                    c45=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c45; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 48 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7402:4: c46= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object4188);
                    c46=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c46; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 49 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7403:4: c47= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object4198);
                    c47=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c47; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 50 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7404:4: c48= parse_org_kermeta_language_behavior_LambdaParameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object4208);
                    c48=parse_org_kermeta_language_behavior_LambdaParameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c48; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_kermeta_language_structure_Object_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Object"


    // $ANTLR start "parse_org_kermeta_language_structure_Model"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7408:1: parse_org_kermeta_language_structure_Model returns [org.kermeta.language.structure.Model element = null] : a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' ;
    public final org.kermeta.language.structure.Model parse_org_kermeta_language_structure_Model() throws RecognitionException {
        org.kermeta.language.structure.Model element =  null;
        int parse_org_kermeta_language_structure_Model_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7411:1: (a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7412:2: a0= 'Model' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}'
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_org_kermeta_language_structure_Model4233); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_165, 128));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Model4247); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 129));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 129));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 129));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7438:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=39 && LA42_0<=40)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7439:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7439:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) )
            	    int alt41=2;
            	    int LA41_0 = input.LA(1);

            	    if ( (LA41_0==39) ) {
            	        alt41=1;
            	    }
            	    else if ( (LA41_0==40) ) {
            	        alt41=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 41, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt41) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7440:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Model4270); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_169, 130));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Model4290); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_170, 131));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7464:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7465:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4316); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 132));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 132));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 132));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7504:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Model4357); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_171, 133));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Model4377); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 134));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7528:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7529:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4403);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 135));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 135));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 136));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 136));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 136));
              	
            }
            a8=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Model4444); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModel();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_kermeta_language_structure_Model_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Model"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7574:1: parse_org_kermeta_language_structure_ModelType returns [org.kermeta.language.structure.ModelType element = null] : ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' ;
    public final org.kermeta.language.structure.ModelType parse_org_kermeta_language_structure_ModelType() throws RecognitionException {
        org.kermeta.language.structure.ModelType element =  null;
        int parse_org_kermeta_language_structure_ModelType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        org.kermeta.language.structure.Tag a8_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7577:1: ( ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7578:2: ( (a0= IDENTIFIER ) )? a1= 'ModelType' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )* a18= '}'
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7578:2: ( (a0= IDENTIFIER ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==IDENTIFIER) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7579:3: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7579:3: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7580:4: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4482); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
                      				}
                      				if (a0 != null) {
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      					tokenResolver.setOptions(getOptions());
                      					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__IS_ASPECT), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 138));
              	
            }
            a1=(Token)match(input,42,FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4512); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_172, 139));
              	
            }
            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_ModelType4526); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 140));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 140));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 140));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 140));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 140));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 140));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7642:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=39 && LA45_0<=40)||(LA45_0>=43 && LA45_0<=45)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7643:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7643:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'typeContainer' a10= ':' (a11= IDENTIFIER ) | a12= 'name' a13= ':' (a14= IDENTIFIER ) | a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER ) )
            	    int alt44=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt44=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt44=2;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt44=3;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt44=4;
            	        }
            	        break;
            	    case 45:
            	        {
            	        alt44=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt44) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7644:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
            	            {
            	            a3=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4549); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_179, 141));
            	              			
            	            }
            	            a4=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4569); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_180, 142));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7668:4: (a5= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7669:5: a5= IDENTIFIER
            	            {
            	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4595); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a5 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 143));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 143));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7711:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a6=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ModelType4636); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_181, 144));
            	              			
            	            }
            	            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4656); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 145));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7735:4: (a8_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7736:5: a8_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4682);
            	            a8_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__OWNED_TAGS, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 146));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 146));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7763:8: a9= 'typeContainer' a10= ':' (a11= IDENTIFIER )
            	            {
            	            a9=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4718); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_182, 147));
            	              			
            	            }
            	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4738); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_183, 148));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7787:4: (a11= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7788:5: a11= IDENTIFIER
            	            {
            	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4764); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a11 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 149));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 149));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 149));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 149));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 149));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 149));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7830:8: a12= 'name' a13= ':' (a14= IDENTIFIER )
            	            {
            	            a12=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4805); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_184, 150));
            	              			
            	            }
            	            a13=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4825); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_185, 151));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7854:4: (a14= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7855:5: a14= IDENTIFIER
            	            {
            	            a14=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4851); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a14 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a14.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a14).getLine(), ((org.antlr.runtime.CommonToken) a14).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a14).getStartIndex(), ((org.antlr.runtime.CommonToken) a14).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a14, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 152));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 152));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 152));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 152));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 152));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 152));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7893:8: a15= 'includedTypeDefinition' a16= ':' (a17= IDENTIFIER )
            	            {
            	            a15=(Token)match(input,45,FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4892); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_186, 153));
            	              			
            	            }
            	            a16=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4912); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_187, 154));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7917:4: (a17= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7918:5: a17= IDENTIFIER
            	            {
            	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4938); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
            	              					}
            	              					if (a17 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.TypeDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ModelType, org.kermeta.language.structure.TypeDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getModelTypeIncludedTypeDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE__INCLUDED_TYPE_DEFINITION, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 155));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 155));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 155));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 155));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 155));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 155));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 156));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 156));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 156));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 156));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 156));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 156));
              	
            }
            a18=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ModelType4984); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 157));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 157));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_kermeta_language_structure_ModelType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelType"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeVariableBinding"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8058:1: parse_org_kermeta_language_structure_TypeVariableBinding returns [org.kermeta.language.structure.TypeVariableBinding element = null] : a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.TypeVariableBinding parse_org_kermeta_language_structure_TypeVariableBinding() throws RecognitionException {
        org.kermeta.language.structure.TypeVariableBinding element =  null;
        int parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8061:1: (a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8062:2: a0= 'TypeVariableBinding' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding5013); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_189, 158));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_TypeVariableBinding5027); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 159));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 159));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 159));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 159));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 159));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 159));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8091:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=39 && LA47_0<=40)||(LA47_0>=47 && LA47_0<=49)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8092:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8092:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'variable' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt46=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt46=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt46=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt46=3;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt46=4;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt46=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 46, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt46) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8093:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding5050); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_190, 160));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5070); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_191, 161));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8117:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8118:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5096); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 162));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 162));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8160:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_TypeVariableBinding5137); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_192, 163));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5157); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 164));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8184:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8185:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding5183);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 165));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 165));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8212:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding5219); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_193, 166));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5239); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 167));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 167));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8247:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8248:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5265);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 168));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 168));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 168));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 168));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 168));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 168));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8275:8: a11= 'variable' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,48,FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5301); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_199, 169));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5321); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_200, 170));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8299:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8300:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5347); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ObjectTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.TypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingVariableReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__VARIABLE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 171));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 171));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 171));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 171));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 171));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 171));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8342:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5388); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_201, 172));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5408); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_202, 173));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8366:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8367:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5434); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariableBinding, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableBindingTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_VARIABLE_BINDING__TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 174));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 174));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 175));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 175));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 175));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 175));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 175));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 175));
              	
            }
            a17=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_TypeVariableBinding5480); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeVariableBinding();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 176));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 176));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_kermeta_language_structure_TypeVariableBinding_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeVariableBinding"


    // $ANTLR start "parse_org_kermeta_language_structure_MultiplicityElement"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8443:1: parse_org_kermeta_language_structure_MultiplicityElement returns [org.kermeta.language.structure.MultiplicityElement element = null] : ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference );
    public final org.kermeta.language.structure.MultiplicityElement parse_org_kermeta_language_structure_MultiplicityElement() throws RecognitionException {
        org.kermeta.language.structure.MultiplicityElement element =  null;
        int parse_org_kermeta_language_structure_MultiplicityElement_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        org.kermeta.language.structure.Tag a9_0 = null;

        org.kermeta.language.structure.Type a12_0 = null;

        org.kermeta.language.structure.Property c0 = null;

        org.kermeta.language.structure.Operation c1 = null;

        org.kermeta.language.structure.Parameter c2 = null;

        org.kermeta.language.behavior.TypeReference c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8446:1: ( ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}' | c0= parse_org_kermeta_language_structure_Property | c1= parse_org_kermeta_language_structure_Operation | c2= parse_org_kermeta_language_structure_Parameter | c3= parse_org_kermeta_language_behavior_TypeReference )
            int alt52=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                switch ( input.LA(2) ) {
                case EOF:
                    {
                    alt52=5;
                    }
                    break;
                case IDENTIFIER:
                    {
                    int LA52_6 = input.LA(3);

                    if ( (LA52_6==IDENTIFIER||LA52_6==31) ) {
                        alt52=3;
                    }
                    else if ( (LA52_6==50) ) {
                        alt52=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 52, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 27:
                    {
                    alt52=4;
                    }
                    break;
                case 50:
                    {
                    alt52=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;
                }

                }
                break;
            case 50:
                {
                alt52=1;
                }
                break;
            case 25:
            case 26:
            case 28:
                {
                alt52=2;
                }
                break;
            case 31:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8447:2: ( (a0= IDENTIFIER ) )? ( (a1= IDENTIFIER ) )? a2= 'MultiplicityElement' a3= '{' ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )* a25= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8447:2: ( (a0= IDENTIFIER ) )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==IDENTIFIER) ) {
                        int LA48_1 = input.LA(2);

                        if ( (synpred107_Kermeta()) ) {
                            alt48=1;
                        }
                    }
                    switch (alt48) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8448:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8448:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8449:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5518); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_ORDERED), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_12, 177));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 177));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8483:2: ( (a1= IDENTIFIER ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==IDENTIFIER) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8484:3: (a1= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8484:3: (a1= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8485:4: a1= IDENTIFIER
                            {
                            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5557); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                              				}
                              				if (a1 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__IS_UNIQUE), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_13, 178));
                      	
                    }
                    a2=(Token)match(input,50,FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5587); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_203, 179));
                      	
                    }
                    a3=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_MultiplicityElement5601); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 180));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 180));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8549:2: ( (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( ((LA51_0>=39 && LA51_0<=40)||LA51_0==44||LA51_0==47||LA51_0==49||(LA51_0>=51 && LA51_0<=52)) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8550:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8550:3: (a4= 'tag' a5= ':' (a6= IDENTIFIER ) | a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag ) | a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type ) | a13= 'name' a14= ':' (a15= IDENTIFIER ) | a16= 'type' a17= ':' (a18= IDENTIFIER ) | a19= 'lower' a20= ':' (a21= INTEGER ) | a22= 'upper' a23= ':' (a24= INTEGER ) )
                    	    int alt50=7;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt50=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt50=2;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt50=3;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt50=4;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt50=5;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt50=6;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt50=7;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 50, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt50) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8551:4: a4= 'tag' a5= ':' (a6= IDENTIFIER )
                    	            {
                    	            a4=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5624); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_204, 181));
                    	              			
                    	            }
                    	            a5=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5644); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_205, 182));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8575:4: (a6= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8576:5: a6= IDENTIFIER
                    	            {
                    	            a6=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5670); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a6 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a6).getLine(), ((org.antlr.runtime.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a6).getStartIndex(), ((org.antlr.runtime.CommonToken) a6).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a6, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 183));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 183));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8620:8: a7= 'ownedTags' a8= ':' (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a7=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_MultiplicityElement5711); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_206, 184));
                    	              			
                    	            }
                    	            a8=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5731); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 185));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8644:4: (a9_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8645:5: a9_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5757);
                    	            a9_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a9_0 != null) {
                    	              						if (a9_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__OWNED_TAGS, a9_0);
                    	              							completedElement(a9_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a9_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 186));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 186));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8674:8: a10= 'containedType' a11= ':' (a12_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a10=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_MultiplicityElement5793); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_207, 187));
                    	              			
                    	            }
                    	            a11=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5813); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 188));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 188));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8709:4: (a12_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8710:5: a12_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5839);
                    	            a12_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a12_0 != null) {
                    	              						if (a12_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__CONTAINED_TYPE, a12_0);
                    	              							completedElement(a12_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a12_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 189));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 189));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8739:8: a13= 'name' a14= ':' (a15= IDENTIFIER )
                    	            {
                    	            a13=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_MultiplicityElement5875); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_208, 190));
                    	              			
                    	            }
                    	            a14=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5895); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_209, 191));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8763:4: (a15= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8764:5: a15= IDENTIFIER
                    	            {
                    	            a15=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5921); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a15 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a15.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a15).getLine(), ((org.antlr.runtime.CommonToken) a15).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a15).getStartIndex(), ((org.antlr.runtime.CommonToken) a15).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a15, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 192));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 192));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8804:8: a16= 'type' a17= ':' (a18= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5962); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_210, 193));
                    	              			
                    	            }
                    	            a17=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5982); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_211, 194));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8828:4: (a18= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8829:5: a18= IDENTIFIER
                    	            {
                    	            a18=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement6008); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a18 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a18.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a18).getLine(), ((org.antlr.runtime.CommonToken) a18).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a18).getStartIndex(), ((org.antlr.runtime.CommonToken) a18).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__TYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a18, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 195));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 195));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8873:8: a19= 'lower' a20= ':' (a21= INTEGER )
                    	            {
                    	            a19=(Token)match(input,51,FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement6049); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a19, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_212, 196));
                    	              			
                    	            }
                    	            a20=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement6069); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_213, 197));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8897:4: (a21= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8898:5: a21= INTEGER
                    	            {
                    	            a21=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6095); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a21 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a21.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a21).getLine(), ((org.antlr.runtime.CommonToken) a21).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a21).getStartIndex(), ((org.antlr.runtime.CommonToken) a21).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__LOWER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a21, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 198));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 198));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 7 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8938:8: a22= 'upper' a23= ':' (a24= INTEGER )
                    	            {
                    	            a22=(Token)match(input,52,FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement6136); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_214, 199));
                    	              			
                    	            }
                    	            a23=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement6156); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_215, 200));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8962:4: (a24= INTEGER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8963:5: a24= INTEGER
                    	            {
                    	            a24=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6182); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                    	              					}
                    	              					if (a24 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a24.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a24).getLine(), ((org.antlr.runtime.CommonToken) a24).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a24).getStartIndex(), ((org.antlr.runtime.CommonToken) a24).getStopIndex());
                    	              						}
                    	              						java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MULTIPLICITY_ELEMENT__UPPER), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a24, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 201));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 201));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 202));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 202));
                      	
                    }
                    a25=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_MultiplicityElement6228); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createMultiplicityElement();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9029:2: c0= parse_org_kermeta_language_structure_Property
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6247);
                    c0=parse_org_kermeta_language_structure_Property();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9030:4: c1= parse_org_kermeta_language_structure_Operation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6257);
                    c1=parse_org_kermeta_language_structure_Operation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9031:4: c2= parse_org_kermeta_language_structure_Parameter
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6267);
                    c2=parse_org_kermeta_language_structure_Parameter();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9032:4: c3= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6277);
                    c3=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_kermeta_language_structure_MultiplicityElement_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_MultiplicityElement"


    // $ANTLR start "parse_org_kermeta_language_structure_TypeDefinition"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9036:1: parse_org_kermeta_language_structure_TypeDefinition returns [org.kermeta.language.structure.TypeDefinition element = null] : ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType );
    public final org.kermeta.language.structure.TypeDefinition parse_org_kermeta_language_structure_TypeDefinition() throws RecognitionException {
        org.kermeta.language.structure.TypeDefinition element =  null;
        int parse_org_kermeta_language_structure_TypeDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        org.kermeta.language.structure.Tag a8_0 = null;

        org.kermeta.language.structure.ClassDefinition c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.ModelType c3 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9039:1: ( ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}' | c0= parse_org_kermeta_language_structure_ClassDefinition | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_ModelType )
            int alt56=5;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
                {
                int LA56_1 = input.LA(2);

                if ( (LA56_1==53) ) {
                    alt56=1;
                }
                else if ( (LA56_1==42) ) {
                    alt56=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
                }
                break;
            case 53:
                {
                alt56=1;
                }
                break;
            case 20:
            case 21:
            case 22:
                {
                alt56=2;
                }
                break;
            case 35:
                {
                alt56=3;
                }
                break;
            case PRIMITIVE_TYPE:
                {
                alt56=4;
                }
                break;
            case 42:
                {
                alt56=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9040:2: ( (a0= IDENTIFIER ) )? a1= 'TypeDefinition' a2= '{' ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )* a12= '}'
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9040:2: ( (a0= IDENTIFIER ) )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==IDENTIFIER) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9041:3: (a0= IDENTIFIER )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9041:3: (a0= IDENTIFIER )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9042:4: a0= IDENTIFIER
                            {
                            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6311); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                              				}
                              				if (a0 != null) {
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                              					tokenResolver.setOptions(getOptions());
                              					org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                              					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), result);
                              					java.lang.Object resolvedObject = result.getResolvedToken();
                              					if (resolvedObject == null) {
                              						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                              					}
                              					java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                              					if (resolved != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__IS_ASPECT), resolved);
                              						completedElement(resolved);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                              				}
                              			
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 204));
                      	
                    }
                    a1=(Token)match(input,53,FOLLOW_53_in_parse_org_kermeta_language_structure_TypeDefinition6341); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_216, 205));
                      	
                    }
                    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_TypeDefinition6355); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 206));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 206));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 206));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 206));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9102:2: ( (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( ((LA55_0>=39 && LA55_0<=40)||LA55_0==44) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9103:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9103:3: (a3= 'tag' a4= ':' (a5= IDENTIFIER ) | a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag ) | a9= 'name' a10= ':' (a11= IDENTIFIER ) )
                    	    int alt54=3;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt54=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt54=2;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt54=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 54, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt54) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9104:4: a3= 'tag' a4= ':' (a5= IDENTIFIER )
                    	            {
                    	            a3=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6378); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_221, 207));
                    	              			
                    	            }
                    	            a4=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6398); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_222, 208));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9128:4: (a5= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9129:5: a5= IDENTIFIER
                    	            {
                    	            a5=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6424); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a5 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a5).getLine(), ((org.antlr.runtime.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a5).getStartIndex(), ((org.antlr.runtime.CommonToken) a5).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a5, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 209));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 209));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 209));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 209));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9169:8: a6= 'ownedTags' a7= ':' (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a6=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_TypeDefinition6465); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_223, 210));
                    	              			
                    	            }
                    	            a7=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6485); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 211));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9193:4: (a8_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9194:5: a8_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6511);
                    	            a8_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a8_0 != null) {
                    	              						if (a8_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__OWNED_TAGS, a8_0);
                    	              							completedElement(a8_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a8_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 212));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 212));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 212));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 212));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9219:8: a9= 'name' a10= ':' (a11= IDENTIFIER )
                    	            {
                    	            a9=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_TypeDefinition6547); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_224, 213));
                    	              			
                    	            }
                    	            a10=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6567); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_225, 214));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9243:4: (a11= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9244:5: a11= IDENTIFIER
                    	            {
                    	            a11=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6593); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                    	              					}
                    	              					if (a11 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a11.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a11).getLine(), ((org.antlr.runtime.CommonToken) a11).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a11).getStartIndex(), ((org.antlr.runtime.CommonToken) a11).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TYPE_DEFINITION__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a11, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 215));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 215));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 215));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 215));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 216));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 216));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 216));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 216));
                      	
                    }
                    a12=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_TypeDefinition6639); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTypeDefinition();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_19, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_20, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_21, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_26, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_27, 217));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_28, 217));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9312:2: c0= parse_org_kermeta_language_structure_ClassDefinition
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6658);
                    c0=parse_org_kermeta_language_structure_ClassDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9313:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6668);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9314:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6678);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9315:4: c3= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6688);
                    c3=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_kermeta_language_structure_TypeDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_TypeDefinition"


    // $ANTLR start "parse_org_kermeta_language_structure_Tag"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9319:1: parse_org_kermeta_language_structure_Tag returns [org.kermeta.language.structure.Tag element = null] : a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.Tag parse_org_kermeta_language_structure_Tag() throws RecognitionException {
        org.kermeta.language.structure.Tag element =  null;
        int parse_org_kermeta_language_structure_Tag_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9322:1: (a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9323:2: a0= 'Tag' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_org_kermeta_language_structure_Tag6713); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_226, 218));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_Tag6727); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 219));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 219));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 219));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 219));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 219));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 219));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9352:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=39 && LA58_0<=40)||LA58_0==44||(LA58_0>=55 && LA58_0<=56)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9353:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9353:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'value' a12= ':' (a13= IDENTIFIER ) | a14= 'object' a15= ':' (a16= IDENTIFIER ) )
            	    int alt57=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt57=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt57=2;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt57=3;
            	        }
            	        break;
            	    case 55:
            	        {
            	        alt57=4;
            	        }
            	        break;
            	    case 56:
            	        {
            	        alt57=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt57) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9354:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_Tag6750); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_233, 220));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6770); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_234, 221));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9378:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9379:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6796); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 222));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 222));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9421:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_Tag6837); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_235, 223));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6857); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 224));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9445:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9446:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag6883);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 225));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 225));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9473:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_Tag6919); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_236, 226));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6939); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_237, 227));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9497:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9498:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6965); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 228));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 228));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 228));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 228));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 228));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 228));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9536:8: a11= 'value' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_structure_Tag7006); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_238, 229));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag7026); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_239, 230));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9560:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9561:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7052); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__VALUE), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 231));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 231));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 231));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 231));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 231));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 231));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9599:8: a14= 'object' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,56,FOLLOW_56_in_parse_org_kermeta_language_structure_Tag7093); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_240, 232));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_Tag7113); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_241, 233));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9623:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9624:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7139); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Object proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObject();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Tag, org.kermeta.language.structure.Object>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTagObjectReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.TAG__OBJECT), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.TAG__OBJECT, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 234));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 234));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 234));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 234));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 234));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 234));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 235));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 235));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 235));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 235));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 235));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 235));
              	
            }
            a17=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_Tag7185); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_158, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_159, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_160, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_166, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_167, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_168, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_173, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_174, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_175, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_176, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_177, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_178, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_217, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_218, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_219, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_220, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_227, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_228, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_229, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_230, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_231, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_232, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 236));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 236));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_kermeta_language_structure_Tag_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Tag"


    // $ANTLR start "parse_org_kermeta_language_structure_ObjectTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9781:1: parse_org_kermeta_language_structure_ObjectTypeVariable returns [org.kermeta.language.structure.ObjectTypeVariable element = null] : (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType );
    public final org.kermeta.language.structure.ObjectTypeVariable parse_org_kermeta_language_structure_ObjectTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ObjectTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9784:1: (a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' | c0= parse_org_kermeta_language_structure_VirtualType )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==57) ) {
                alt61=1;
            }
            else if ( (LA61_0==61) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9785:2: a0= 'ObjectTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
                    {
                    a0=(Token)match(input,57,FOLLOW_57_in_parse_org_kermeta_language_structure_ObjectTypeVariable7214); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_247, 237));
                      	
                    }
                    a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_ObjectTypeVariable7228); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 238));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 238));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 238));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 238));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 238));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 238));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 238));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9815:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( ((LA60_0>=39 && LA60_0<=40)||(LA60_0>=43 && LA60_0<=44)||LA60_0==47||LA60_0==58) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9816:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9816:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) )
                    	    int alt59=6;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt59=1;
                    	        }
                    	        break;
                    	    case 40:
                    	        {
                    	        alt59=2;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt59=3;
                    	        }
                    	        break;
                    	    case 43:
                    	        {
                    	        alt59=4;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt59=5;
                    	        }
                    	        break;
                    	    case 58:
                    	        {
                    	        alt59=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 59, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt59) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9817:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
                    	            {
                    	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable7251); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_248, 239));
                    	              			
                    	            }
                    	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7271); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_249, 240));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9841:4: (a4= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9842:5: a4= IDENTIFIER
                    	            {
                    	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7297); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a4 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TAG, proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 241));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 241));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9885:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            {
                    	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ObjectTypeVariable7338); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_250, 242));
                    	              			
                    	            }
                    	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7358); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 243));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9909:4: (a7_0= parse_org_kermeta_language_structure_Tag )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9910:5: a7_0= parse_org_kermeta_language_structure_Tag
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7384);
                    	            a7_0=parse_org_kermeta_language_structure_Tag();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a7_0 != null) {
                    	              						if (a7_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__OWNED_TAGS, a7_0);
                    	              							completedElement(a7_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a7_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 244));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 244));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9938:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
                    	            {
                    	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ObjectTypeVariable7420); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_251, 245));
                    	              			
                    	            }
                    	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7440); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 246));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 246));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9973:4: (a10_0= parse_org_kermeta_language_structure_Type )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:9974:5: a10_0= parse_org_kermeta_language_structure_Type
                    	            {
                    	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7466);
                    	            a10_0=parse_org_kermeta_language_structure_Type();

                    	            state._fsp--;
                    	            if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a10_0 != null) {
                    	              						if (a10_0 != null) {
                    	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
                    	              							completedElement(a10_0);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos(a10_0, element); 					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 247));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 247));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10002:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
                    	            {
                    	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable7502); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_252, 248));
                    	              			
                    	            }
                    	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7522); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_253, 249));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10026:4: (a13= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10027:5: a13= IDENTIFIER
                    	            {
                    	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7548); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a13 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 250));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 250));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 250));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 250));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 250));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 250));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 250));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 5 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10070:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
                    	            {
                    	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ObjectTypeVariable7589); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_254, 251));
                    	              			
                    	            }
                    	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7609); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_255, 252));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10094:4: (a16= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10095:5: a16= IDENTIFIER
                    	            {
                    	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7635); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a16 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
                    	              						}
                    	              						java.lang.String resolved = (java.lang.String)resolvedObject;
                    	              						if (resolved != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__NAME), resolved);
                    	              							completedElement(resolved);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 253));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 253));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 6 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10134:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
                    	            {
                    	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7676); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_256, 254));
                    	              			
                    	            }
                    	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7696); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_257, 255));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10158:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10159:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7722); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.OBJECT_TYPE_VARIABLE__SUPERTYPE), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 256));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 256));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 256));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 256));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 256));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 256));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 256));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 257));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 257));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 257));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 257));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 257));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 257));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 257));
                      	
                    }
                    a20=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ObjectTypeVariable7768); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createObjectTypeVariable();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 258));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 258));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10291:2: c0= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable7787);
                    c0=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_kermeta_language_structure_ObjectTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ObjectTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_ModelTypeVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10295:1: parse_org_kermeta_language_structure_ModelTypeVariable returns [org.kermeta.language.structure.ModelTypeVariable element = null] : a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' ;
    public final org.kermeta.language.structure.ModelTypeVariable parse_org_kermeta_language_structure_ModelTypeVariable() throws RecognitionException {
        org.kermeta.language.structure.ModelTypeVariable element =  null;
        int parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a23=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.VirtualType a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10298:1: (a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10299:2: a0= 'ModelTypeVariable' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )* a23= '}'
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable7812); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_258, 259));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_ModelTypeVariable7826); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 260));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 260));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10330:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( ((LA63_0>=39 && LA63_0<=40)||(LA63_0>=43 && LA63_0<=44)||LA63_0==47||LA63_0==58||LA63_0==60) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10331:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10331:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType ) )
            	    int alt62=7;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt62=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt62=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt62=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt62=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt62=5;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt62=6;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt62=7;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 62, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt62) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10332:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable7849); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_259, 261));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7869); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_260, 262));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10356:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10357:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7895); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 263));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 263));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10401:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ModelTypeVariable7936); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_261, 264));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7956); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 265));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10425:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10426:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable7982);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 266));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 266));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10455:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ModelTypeVariable8018); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_262, 267));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8038); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 268));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 268));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10490:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10491:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable8064);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 269));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 269));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10520:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable8100); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_263, 270));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8120); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_264, 271));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10544:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10545:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8146); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 272));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 272));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10589:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_ModelTypeVariable8187); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_265, 273));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8207); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_266, 274));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10613:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10614:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8233); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 275));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 275));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10654:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_ModelTypeVariable8274); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_267, 276));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8294); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_268, 277));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10678:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10679:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8320); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 278));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 278));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10723:8: a20= 'virtualType' a21= ':' (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            {
            	            a20=(Token)match(input,60,FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8361); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_269, 279));
            	              			
            	            }
            	            a21=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8381); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 280));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10747:4: (a22_0= parse_org_kermeta_language_structure_VirtualType )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10748:5: a22_0= parse_org_kermeta_language_structure_VirtualType
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8407);
            	            a22_0=parse_org_kermeta_language_structure_VirtualType();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              					}
            	              					if (a22_0 != null) {
            	              						if (a22_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.MODEL_TYPE_VARIABLE__VIRTUAL_TYPE, a22_0);
            	              							completedElement(a22_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a22_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 281));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 281));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 282));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 282));
              	
            }
            a23=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ModelTypeVariable8448); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 283));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 283));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_kermeta_language_structure_ModelTypeVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ModelTypeVariable"


    // $ANTLR start "parse_org_kermeta_language_structure_VirtualType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10867:1: parse_org_kermeta_language_structure_VirtualType returns [org.kermeta.language.structure.VirtualType element = null] : a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' ;
    public final org.kermeta.language.structure.VirtualType parse_org_kermeta_language_structure_VirtualType() throws RecognitionException {
        org.kermeta.language.structure.VirtualType element =  null;
        int parse_org_kermeta_language_structure_VirtualType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a21=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a27=null;
        Token a29=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.structure.TypeVariableBinding a28_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10870:1: (a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10871:2: a0= 'VirtualType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )* a29= '}'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_org_kermeta_language_structure_VirtualType8477); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_270, 284));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_VirtualType8491); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 285));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 285));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10904:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( ((LA65_0>=39 && LA65_0<=40)||(LA65_0>=43 && LA65_0<=44)||LA65_0==47||LA65_0==58||(LA65_0>=62 && LA65_0<=64)) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10905:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10905:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'name' a15= ':' (a16= IDENTIFIER ) | a17= 'supertype' a18= ':' (a19= IDENTIFIER ) | a20= 'classDefinition' a21= ':' (a22= IDENTIFIER ) | a23= 'modelType' a24= ':' (a25= IDENTIFIER ) | a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding ) )
            	    int alt64=9;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt64=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt64=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt64=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt64=4;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt64=5;
            	        }
            	        break;
            	    case 58:
            	        {
            	        alt64=6;
            	        }
            	        break;
            	    case 62:
            	        {
            	        alt64=7;
            	        }
            	        break;
            	    case 63:
            	        {
            	        alt64=8;
            	        }
            	        break;
            	    case 64:
            	        {
            	        alt64=9;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 64, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt64) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10906:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType8514); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_271, 286));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8534); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_272, 287));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10930:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10931:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8560); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 288));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 288));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:10977:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_VirtualType8601); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_273, 289));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8621); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 290));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11001:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11002:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8647);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 291));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 291));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11033:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_VirtualType8683); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_274, 292));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8703); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 293));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 293));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11068:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11069:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8729);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 294));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 294));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11100:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType8765); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_275, 295));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8785); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_276, 296));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11124:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11125:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8811); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 297));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 297));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11171:8: a14= 'name' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_structure_VirtualType8852); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_277, 298));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8872); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_278, 299));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11195:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11196:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8898); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 300));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 300));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11238:8: a17= 'supertype' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,58,FOLLOW_58_in_parse_org_kermeta_language_structure_VirtualType8939); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_279, 301));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8959); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_280, 302));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11262:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11263:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8985); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypeVariable, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeVariableSupertypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__SUPERTYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 303));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 303));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11309:8: a20= 'classDefinition' a21= ':' (a22= IDENTIFIER )
            	            {
            	            a20=(Token)match(input,62,FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType9026); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_281, 304));
            	              			
            	            }
            	            a21=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType9046); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a21, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_282, 305));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11333:4: (a22= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11334:5: a22= IDENTIFIER
            	            {
            	            a22=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9072); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a22 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a22.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a22).getLine(), ((org.antlr.runtime.CommonToken) a22).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a22).getStartIndex(), ((org.antlr.runtime.CommonToken) a22).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ClassDefinition proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClassDefinition();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ClassDefinition>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeClassDefinitionReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__CLASS_DEFINITION), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a22, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 306));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 306));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11380:8: a23= 'modelType' a24= ':' (a25= IDENTIFIER )
            	            {
            	            a23=(Token)match(input,63,FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType9113); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_283, 307));
            	              			
            	            }
            	            a24=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType9133); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_284, 308));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11404:4: (a25= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11405:5: a25= IDENTIFIER
            	            {
            	            a25=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9159); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a25 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a25.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a25).getLine(), ((org.antlr.runtime.CommonToken) a25).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a25).getStartIndex(), ((org.antlr.runtime.CommonToken) a25).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.ModelTypeVariable proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createModelTypeVariable();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.VirtualType, org.kermeta.language.structure.ModelTypeVariable>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getVirtualTypeModelTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__MODEL_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a25, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 309));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 309));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11451:8: a26= 'typeParamBinding' a27= ':' (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            {
            	            a26=(Token)match(input,64,FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType9200); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_285, 310));
            	              			
            	            }
            	            a27=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType9220); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a27, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_188, 311));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11475:4: (a28_0= parse_org_kermeta_language_structure_TypeVariableBinding )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11476:5: a28_0= parse_org_kermeta_language_structure_TypeVariableBinding
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9246);
            	            a28_0=parse_org_kermeta_language_structure_TypeVariableBinding();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
            	              					}
            	              					if (a28_0 != null) {
            	              						if (a28_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.VIRTUAL_TYPE__TYPE_PARAM_BINDING, a28_0);
            	              							completedElement(a28_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a28_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 312));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 312));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 313));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 313));
              	
            }
            a29=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_VirtualType9287); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createVirtualType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 314));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 314));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_kermeta_language_structure_VirtualType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_VirtualType"


    // $ANTLR start "parse_org_kermeta_language_structure_ProductType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11599:1: parse_org_kermeta_language_structure_ProductType returns [org.kermeta.language.structure.ProductType element = null] : a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' ;
    public final org.kermeta.language.structure.ProductType parse_org_kermeta_language_structure_ProductType() throws RecognitionException {
        org.kermeta.language.structure.ProductType element =  null;
        int parse_org_kermeta_language_structure_ProductType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11602:1: (a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11603:2: a0= 'ProductType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )* a17= '}'
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_org_kermeta_language_structure_ProductType9316); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_286, 315));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_ProductType9330); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 316));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 316));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 316));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 316));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 316));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 316));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11632:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0>=39 && LA67_0<=40)||LA67_0==43||LA67_0==47||LA67_0==49) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11633:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11633:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'type' a15= ':' (a16= IDENTIFIER ) )
            	    int alt66=5;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt66=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt66=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt66=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt66=4;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt66=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 66, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt66) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11634:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9353); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_287, 317));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9373); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_288, 318));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11658:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11659:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9399); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 319));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 319));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11701:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_ProductType9440); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_289, 320));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9460); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 321));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11725:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11726:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9486);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 322));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 322));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11753:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_ProductType9522); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_290, 323));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9542); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 324));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 324));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11788:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11789:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9568);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 325));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 325));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 325));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 325));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 325));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 325));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11816:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_ProductType9604); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_291, 326));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9624); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_292, 327));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11840:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11841:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9650); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 328));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 328));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 328));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 328));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 328));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 328));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11883:8: a14= 'type' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9691); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_293, 329));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9711); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_294, 330));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11907:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:11908:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9737); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.ProductType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getProductTypeTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.PRODUCT_TYPE__TYPE, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 331));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 331));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 332));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 332));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 332));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 332));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 332));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 332));
              	
            }
            a17=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_ProductType9783); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProductType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 333));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 333));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_kermeta_language_structure_ProductType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_ProductType"


    // $ANTLR start "parse_org_kermeta_language_structure_FunctionType"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12038:1: parse_org_kermeta_language_structure_FunctionType returns [org.kermeta.language.structure.FunctionType element = null] : a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' ;
    public final org.kermeta.language.structure.FunctionType parse_org_kermeta_language_structure_FunctionType() throws RecognitionException {
        org.kermeta.language.structure.FunctionType element =  null;
        int parse_org_kermeta_language_structure_FunctionType_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12041:1: (a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12042:2: a0= 'FunctionType' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )* a20= '}'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_org_kermeta_language_structure_FunctionType9812); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_295, 334));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_structure_FunctionType9826); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 335));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 335));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 335));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 335));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 335));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 335));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 335));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12072:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0>=39 && LA69_0<=40)||LA69_0==43||LA69_0==47||(LA69_0>=67 && LA69_0<=68)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12073:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12073:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'typeContainer' a12= ':' (a13= IDENTIFIER ) | a14= 'left' a15= ':' (a16= IDENTIFIER ) | a17= 'right' a18= ':' (a19= IDENTIFIER ) )
            	    int alt68=6;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt68=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt68=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt68=3;
            	        }
            	        break;
            	    case 43:
            	        {
            	        alt68=4;
            	        }
            	        break;
            	    case 67:
            	        {
            	        alt68=5;
            	        }
            	        break;
            	    case 68:
            	        {
            	        alt68=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 68, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt68) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12074:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType9849); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_296, 336));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9869); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_297, 337));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12098:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12099:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9895); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 338));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 338));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12142:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_structure_FunctionType9936); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_298, 339));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9956); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 340));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12166:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12167:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType9982);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 341));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 341));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12195:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_structure_FunctionType10018); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_299, 342));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10038); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 343));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 343));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12230:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12231:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType10064);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 344));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 344));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12259:8: a11= 'typeContainer' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,43,FOLLOW_43_in_parse_org_kermeta_language_structure_FunctionType10100); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_300, 345));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10120); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_301, 346));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12283:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12284:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10146); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.behavior.Assignment proxy = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Type, org.kermeta.language.structure.TypeContainer>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypeTypeContainerReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__TYPE_CONTAINER), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 347));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 347));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 347));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 347));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 347));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 347));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 347));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12327:8: a14= 'left' a15= ':' (a16= IDENTIFIER )
            	            {
            	            a14=(Token)match(input,67,FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType10187); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_302, 348));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10207); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_303, 349));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12351:4: (a16= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12352:5: a16= IDENTIFIER
            	            {
            	            a16=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10233); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a16 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a16.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a16).getLine(), ((org.antlr.runtime.CommonToken) a16).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a16).getStartIndex(), ((org.antlr.runtime.CommonToken) a16).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeLeftReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__LEFT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a16, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 350));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 350));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12395:8: a17= 'right' a18= ':' (a19= IDENTIFIER )
            	            {
            	            a17=(Token)match(input,68,FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10274); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_304, 351));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10294); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_305, 352));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12419:4: (a19= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12420:5: a19= IDENTIFIER
            	            {
            	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10320); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
            	              					}
            	              					if (a19 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.FunctionType, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getFunctionTypeRightReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.structure.StructurePackage.FUNCTION_TYPE__RIGHT), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 353));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 353));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 354));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 354));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 354));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 354));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 354));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 354));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 354));
              	
            }
            a20=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_structure_FunctionType10366); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.structure.StructureFactory.eINSTANCE.createFunctionType();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_83, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_84, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_85, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_86, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_87, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_88, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_89, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_90, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_91, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_92, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_93, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_94, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_95, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_96, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_97, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_98, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_99, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_100, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_101, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_102, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_103, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_104, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_105, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_106, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_107, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_108, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_109, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_110, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_111, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_112, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_113, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_114, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_115, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_116, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_117, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_118, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_119, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_120, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_121, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_122, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_123, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_124, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_125, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_126, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_127, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_128, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_129, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_130, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_131, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_132, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_133, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_134, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 355));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 355));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_kermeta_language_structure_FunctionType_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_FunctionType"


    // $ANTLR start "parse_org_kermeta_language_behavior_Block"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12552:1: parse_org_kermeta_language_behavior_Block returns [org.kermeta.language.behavior.Block element = null] : a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' ;
    public final org.kermeta.language.behavior.Block parse_org_kermeta_language_behavior_Block() throws RecognitionException {
        org.kermeta.language.behavior.Block element =  null;
        int parse_org_kermeta_language_behavior_Block_StartIndex = input.index();
        Token a0=null;
        Token a13=null;
        org.kermeta.language.behavior.VariableDecl a1_0 = null;

        org.kermeta.language.behavior.Loop a2_0 = null;

        org.kermeta.language.behavior.Conditional a3_0 = null;

        org.kermeta.language.behavior.Assignment a4_0 = null;

        org.kermeta.language.behavior.CallFeature a5_0 = null;

        org.kermeta.language.behavior.CallVariable a6_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a7_0 = null;

        org.kermeta.language.behavior.CallResult a8_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;

        org.kermeta.language.behavior.EmptyExpression a10_0 = null;

        org.kermeta.language.behavior.Block a11_0 = null;

        org.kermeta.language.behavior.Rescue a12_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12555:1: (a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12556:2: a0= 'do' ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )* ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )* a13= 'end'
            {
            a0=(Token)match(input,69,FOLLOW_69_in_parse_org_kermeta_language_behavior_Block10395); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 356));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 356));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12583:2: ( ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==IDENTIFIER||(LA71_0>=INTEGER && LA71_0<=BOOLEAN)||LA71_0==32||LA71_0==69||LA71_0==73||LA71_0==76||LA71_0==79||(LA71_0>=81 && LA71_0<=82)||LA71_0==85||(LA71_0>=92 && LA71_0<=93)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12584:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12584:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )
            	    int alt70=11;
            	    alt70 = dfa70.predict(input);
            	    switch (alt70) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12585:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12585:4: (a1_0= parse_org_kermeta_language_behavior_VariableDecl )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12586:5: a1_0= parse_org_kermeta_language_behavior_VariableDecl
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10424);
            	            a1_0=parse_org_kermeta_language_behavior_VariableDecl();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a1_0 != null) {
            	              						if (a1_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a1_0);
            	              							completedElement(a1_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a1_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 357));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 357));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12623:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12623:8: (a2_0= parse_org_kermeta_language_behavior_Loop )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12624:5: a2_0= parse_org_kermeta_language_behavior_Loop
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10466);
            	            a2_0=parse_org_kermeta_language_behavior_Loop();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a2_0 != null) {
            	              						if (a2_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a2_0);
            	              							completedElement(a2_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a2_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 358));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 358));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12661:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12661:8: (a3_0= parse_org_kermeta_language_behavior_Conditional )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12662:5: a3_0= parse_org_kermeta_language_behavior_Conditional
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10508);
            	            a3_0=parse_org_kermeta_language_behavior_Conditional();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a3_0 != null) {
            	              						if (a3_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a3_0);
            	              							completedElement(a3_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a3_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 359));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 359));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12699:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12699:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12700:5: a4_0= parse_org_kermeta_language_behavior_Assignment
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10550);
            	            a4_0=parse_org_kermeta_language_behavior_Assignment();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a4_0 != null) {
            	              						if (a4_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a4_0);
            	              							completedElement(a4_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a4_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 360));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 360));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12737:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12737:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12738:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10592);
            	            a5_0=parse_org_kermeta_language_behavior_CallFeature();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a5_0 != null) {
            	              						if (a5_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a5_0);
            	              							completedElement(a5_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a5_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 361));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 361));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12775:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12775:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12776:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10634);
            	            a6_0=parse_org_kermeta_language_behavior_CallVariable();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a6_0 != null) {
            	              						if (a6_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a6_0);
            	              							completedElement(a6_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a6_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 362));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 362));
            	              			
            	            }

            	            }
            	            break;
            	        case 7 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12813:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12813:8: (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12814:5: a7_0= parse_org_kermeta_language_behavior_CallSuperOperation
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10676);
            	            a7_0=parse_org_kermeta_language_behavior_CallSuperOperation();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 363));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 363));
            	              			
            	            }

            	            }
            	            break;
            	        case 8 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12851:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12851:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12852:5: a8_0= parse_org_kermeta_language_behavior_CallResult
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10718);
            	            a8_0=parse_org_kermeta_language_behavior_CallResult();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a8_0 != null) {
            	              						if (a8_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a8_0);
            	              							completedElement(a8_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a8_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 364));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 364));
            	              			
            	            }

            	            }
            	            break;
            	        case 9 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12889:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12889:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12890:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block10760);
            	            a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a9_0 != null) {
            	              						if (a9_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a9_0);
            	              							completedElement(a9_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a9_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 365));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 365));
            	              			
            	            }

            	            }
            	            break;
            	        case 10 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12927:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12927:8: (a10_0= parse_org_kermeta_language_behavior_EmptyExpression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12928:5: a10_0= parse_org_kermeta_language_behavior_EmptyExpression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block10802);
            	            a10_0=parse_org_kermeta_language_behavior_EmptyExpression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 366));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 366));
            	              			
            	            }

            	            }
            	            break;
            	        case 11 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12965:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            {
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12965:8: (a11_0= parse_org_kermeta_language_behavior_Block )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12966:5: a11_0= parse_org_kermeta_language_behavior_Block
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block10844);
            	            a11_0=parse_org_kermeta_language_behavior_Block();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	              					}
            	              					if (a11_0 != null) {
            	              						if (a11_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__STATEMENT, a11_0);
            	              							completedElement(a11_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a11_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 367));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 367));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 368));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 368));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13024:2: ( ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==71) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13025:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13025:3: ( (a12_0= parse_org_kermeta_language_behavior_Rescue ) )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13026:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13026:4: (a12_0= parse_org_kermeta_language_behavior_Rescue )
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13027:5: a12_0= parse_org_kermeta_language_behavior_Rescue
            	    {
            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block10900);
            	    a12_0=parse_org_kermeta_language_behavior_Rescue();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
            	      					}
            	      					if (a12_0 != null) {
            	      						if (a12_0 != null) {
            	      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.BLOCK__RESCUE_BLOCK, a12_0);
            	      							completedElement(a12_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a12_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 369));
            	      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 369));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 370));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 370));
              	
            }
            a13=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_behavior_Block10941); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBlock();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 371));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 371));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_kermeta_language_behavior_Block_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Block"


    // $ANTLR start "parse_org_kermeta_language_behavior_Rescue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13110:1: parse_org_kermeta_language_behavior_Rescue returns [org.kermeta.language.behavior.Rescue element = null] : a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.Rescue parse_org_kermeta_language_behavior_Rescue() throws RecognitionException {
        org.kermeta.language.behavior.Rescue element =  null;
        int parse_org_kermeta_language_behavior_Rescue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.TypeReference a4_0 = null;

        org.kermeta.language.behavior.Expression a6_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13113:1: (a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13114:2: a0= 'rescue' ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )? ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_org_kermeta_language_behavior_Rescue10970); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_317, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 372));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 372));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13147:2: ( (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==32) ) {
                int LA73_1 = input.LA(2);

                if ( (LA73_1==IDENTIFIER) ) {
                    int LA73_3 = input.LA(3);

                    if ( (LA73_3==27) ) {
                        alt73=1;
                    }
                }
            }
            switch (alt73) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13148:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13148:3: (a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')' )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13149:4: a1= '(' (a2= IDENTIFIER ) a3= ':' (a4_0= parse_org_kermeta_language_behavior_TypeReference ) a5= ')'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue10993); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_318, 373));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13161:4: (a2= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13162:5: a2= IDENTIFIER
                    {
                    a2=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue11019); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a2 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      						}
                      						java.lang.String resolved = (java.lang.String)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_NAME), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_319, 374));
                      			
                    }
                    a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_Rescue11052); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 375));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13206:4: (a4_0= parse_org_kermeta_language_behavior_TypeReference )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13207:5: a4_0= parse_org_kermeta_language_behavior_TypeReference
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue11078);
                    a4_0=parse_org_kermeta_language_behavior_TypeReference();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a4_0 != null) {
                      						if (a4_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RESCUE__EXCEPTION_TYPE), a4_0);
                      							completedElement(a4_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a4_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 376));
                      			
                    }
                    a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue11106); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 377));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 377));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 378));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 378));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13287:2: ( ( (a6_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==IDENTIFIER||(LA74_0>=INTEGER && LA74_0<=BOOLEAN)||LA74_0==32||LA74_0==37||LA74_0==55||LA74_0==69||(LA74_0>=72 && LA74_0<=73)||LA74_0==76||LA74_0==79||(LA74_0>=81 && LA74_0<=82)||LA74_0==85||(LA74_0>=92 && LA74_0<=93)||LA74_0==95) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13288:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13288:3: ( (a6_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13289:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13289:4: (a6_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13290:5: a6_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue11154);
                    a6_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRescue();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.RESCUE__BODY, a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 379));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 379));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 380));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 380));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_kermeta_language_behavior_Rescue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Rescue"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeReference"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13322:1: parse_org_kermeta_language_behavior_TypeReference returns [org.kermeta.language.behavior.TypeReference element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.TypeReference parse_org_kermeta_language_behavior_TypeReference() throws RecognitionException {
        org.kermeta.language.behavior.TypeReference element =  null;
        int parse_org_kermeta_language_behavior_TypeReference_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13325:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13326:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13326:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13327:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference11214); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeReference();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				String resolved = (String) resolvedObject;
              				org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
              				collectHiddenTokens(element);
              				registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.TypedElement, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypedElementTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), resolved, proxy);
              				if (proxy != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_REFERENCE__TYPE), proxy);
              					completedElement(proxy);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, proxy);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_320, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 381));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 381));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_kermeta_language_behavior_TypeReference_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeReference"


    // $ANTLR start "parse_org_kermeta_language_behavior_Raise"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13411:1: parse_org_kermeta_language_behavior_Raise returns [org.kermeta.language.behavior.Raise element = null] : a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) ;
    public final org.kermeta.language.behavior.Raise parse_org_kermeta_language_behavior_Raise() throws RecognitionException {
        org.kermeta.language.behavior.Raise element =  null;
        int parse_org_kermeta_language_behavior_Raise_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.Expression a1_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13414:1: (a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13415:2: a0= 'raise' (a1_0= parse_org_kermeta_language_behavior_Expression )
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_org_kermeta_language_behavior_Raise11250); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 382));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 382));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13445:2: (a1_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13446:3: a1_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11268);
            a1_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createRaise();
              			}
              			if (a1_0 != null) {
              				if (a1_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.RAISE__EXPRESSION), a1_0);
              					completedElement(a1_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a1_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 383));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 383));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_kermeta_language_behavior_Raise_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Raise"


    // $ANTLR start "parse_org_kermeta_language_behavior_BooleanLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13505:1: parse_org_kermeta_language_behavior_BooleanLiteral returns [org.kermeta.language.behavior.BooleanLiteral element = null] : (a0= BOOLEAN ) ;
    public final org.kermeta.language.behavior.BooleanLiteral parse_org_kermeta_language_behavior_BooleanLiteral() throws RecognitionException {
        org.kermeta.language.behavior.BooleanLiteral element =  null;
        int parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13508:1: ( (a0= BOOLEAN ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13509:2: (a0= BOOLEAN )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13509:2: (a0= BOOLEAN )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13510:3: a0= BOOLEAN
            {
            a0=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11305); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createBooleanLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.BOOLEAN_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 384));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 384));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_kermeta_language_behavior_BooleanLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_BooleanLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_IntegerLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13580:1: parse_org_kermeta_language_behavior_IntegerLiteral returns [org.kermeta.language.behavior.IntegerLiteral element = null] : (a0= INTEGER ) ;
    public final org.kermeta.language.behavior.IntegerLiteral parse_org_kermeta_language_behavior_IntegerLiteral() throws RecognitionException {
        org.kermeta.language.behavior.IntegerLiteral element =  null;
        int parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13583:1: ( (a0= INTEGER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13584:2: (a0= INTEGER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13584:2: (a0= INTEGER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13585:3: a0= INTEGER
            {
            a0=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11345); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createIntegerLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.INTEGER_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 385));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 385));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_kermeta_language_behavior_IntegerLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_IntegerLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_StringLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13655:1: parse_org_kermeta_language_behavior_StringLiteral returns [org.kermeta.language.behavior.StringLiteral element = null] : (a0= IDENTIFIER ) ;
    public final org.kermeta.language.behavior.StringLiteral parse_org_kermeta_language_behavior_StringLiteral() throws RecognitionException {
        org.kermeta.language.behavior.StringLiteral element =  null;
        int parse_org_kermeta_language_behavior_StringLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13658:1: ( (a0= IDENTIFIER ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13659:2: (a0= IDENTIFIER )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13659:2: (a0= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13660:3: a0= IDENTIFIER
            {
            a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11385); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createStringLiteral();
              			}
              			if (a0 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.STRING_LITERAL__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 386));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 386));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_kermeta_language_behavior_StringLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_StringLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_Conditional"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13730:1: parse_org_kermeta_language_behavior_Conditional returns [org.kermeta.language.behavior.Conditional element = null] : a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' ;
    public final org.kermeta.language.behavior.Conditional parse_org_kermeta_language_behavior_Conditional() throws RecognitionException {
        org.kermeta.language.behavior.Conditional element =  null;
        int parse_org_kermeta_language_behavior_Conditional_StartIndex = input.index();
        Token a0=null;
        Token a3=null;
        Token a13=null;
        Token a23=null;
        org.kermeta.language.behavior.CallFeature a1_0 = null;

        org.kermeta.language.behavior.Conditional a2_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;

        org.kermeta.language.behavior.Block a5_0 = null;

        org.kermeta.language.behavior.Assignment a6_0 = null;

        org.kermeta.language.behavior.CallFeature a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallVariable a10_0 = null;

        org.kermeta.language.behavior.CallValue a11_0 = null;

        org.kermeta.language.behavior.VariableDecl a12_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.Block a15_0 = null;

        org.kermeta.language.behavior.Assignment a16_0 = null;

        org.kermeta.language.behavior.CallFeature a17_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a18_0 = null;

        org.kermeta.language.behavior.CallResult a19_0 = null;

        org.kermeta.language.behavior.VariableDecl a20_0 = null;

        org.kermeta.language.behavior.CallVariable a21_0 = null;

        org.kermeta.language.behavior.CallValue a22_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13733:1: (a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13734:2: a0= 'if' ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) ) a3= 'then' ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) ) ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )? a23= 'end'
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_org_kermeta_language_behavior_Conditional11421); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 387));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 387));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13754:2: ( (a1_0= parse_org_kermeta_language_behavior_CallFeature ) | (a2_0= parse_org_kermeta_language_behavior_Conditional ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==IDENTIFIER||(LA75_0>=INTEGER && LA75_0<=BOOLEAN)||LA75_0==32||LA75_0==81||LA75_0==85||LA75_0==92) ) {
                alt75=1;
            }
            else if ( (LA75_0==73) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13755:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13755:3: (a1_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13756:4: a1_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11444);
                    a1_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a1_0 != null) {
                      					if (a1_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a1_0);
                      						completedElement(a1_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a1_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 388));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13778:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13778:6: (a2_0= parse_org_kermeta_language_behavior_Conditional )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13779:4: a2_0= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11478);
                    a2_0=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a2_0 != null) {
                      					if (a2_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__CONDITION), a2_0);
                      						completedElement(a2_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a2_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 389));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_322, 390));
              	
            }
            a3=(Token)match(input,74,FOLLOW_74_in_parse_org_kermeta_language_behavior_Conditional11508); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 391));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 391));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13829:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )
            int alt76=9;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13830:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13830:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13831:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11531);
                    a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 392));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 392));
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13866:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13866:6: (a5_0= parse_org_kermeta_language_behavior_Block )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13867:4: a5_0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11565);
                    a5_0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a5_0 != null) {
                      					if (a5_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a5_0);
                      						completedElement(a5_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a5_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 393));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 393));
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13902:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13902:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13903:4: a6_0= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11599);
                    a6_0=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a6_0 != null) {
                      					if (a6_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a6_0);
                      						completedElement(a6_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a6_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 394));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 394));
                      		
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13938:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13938:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13939:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11633);
                    a7_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a7_0 != null) {
                      					if (a7_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a7_0);
                      						completedElement(a7_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a7_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 395));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 395));
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13974:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13974:6: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13975:4: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11667);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a8_0 != null) {
                      					if (a8_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a8_0);
                      						completedElement(a8_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a8_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 396));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 396));
                      		
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14010:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14010:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14011:4: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11701);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a9_0 != null) {
                      					if (a9_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a9_0);
                      						completedElement(a9_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a9_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 397));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 397));
                      		
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14046:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14046:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14047:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11735);
                    a10_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a10_0 != null) {
                      					if (a10_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a10_0);
                      						completedElement(a10_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a10_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 398));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 398));
                      		
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14082:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14082:6: (a11_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14083:4: a11_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11769);
                    a11_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a11_0 != null) {
                      					if (a11_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a11_0);
                      						completedElement(a11_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a11_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 399));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 399));
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14118:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14118:6: (a12_0= parse_org_kermeta_language_behavior_VariableDecl )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14119:4: a12_0= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11803);
                    a12_0=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                      				}
                      				if (a12_0 != null) {
                      					if (a12_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__THEN_BODY), a12_0);
                      						completedElement(a12_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a12_0, element); 				}
                      			
                    }

                    }

                    if ( state.backtracking==0 ) {

                      			// expected elements (follow set)
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 400));
                      			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 400));
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 401));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 401));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14172:2: ( (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==IDENTIFIER||(LA78_0>=INTEGER && LA78_0<=BOOLEAN)||LA78_0==32||LA78_0==55||LA78_0==69||LA78_0==75||LA78_0==79||(LA78_0>=81 && LA78_0<=82)||LA78_0==85||LA78_0==92) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14173:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14173:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )
                    int alt77=8;
                    alt77 = dfa77.predict(input);
                    switch (alt77) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14174:4: a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            a13=(Token)match(input,75,FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11842); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 402));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14186:4: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14187:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11868);
                            a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a14_0 != null) {
                              						if (a14_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a14_0);
                              							completedElement(a14_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a14_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 403));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14209:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14209:8: (a15_0= parse_org_kermeta_language_behavior_Block )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14210:5: a15_0= parse_org_kermeta_language_behavior_Block
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11910);
                            a15_0=parse_org_kermeta_language_behavior_Block();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a15_0 != null) {
                              						if (a15_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a15_0);
                              							completedElement(a15_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a15_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 404));
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14232:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14232:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14233:5: a16_0= parse_org_kermeta_language_behavior_Assignment
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11952);
                            a16_0=parse_org_kermeta_language_behavior_Assignment();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a16_0 != null) {
                              						if (a16_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a16_0);
                              							completedElement(a16_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a16_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 405));
                              			
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14255:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14255:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14256:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11994);
                            a17_0=parse_org_kermeta_language_behavior_CallFeature();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a17_0 != null) {
                              						if (a17_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a17_0);
                              							completedElement(a17_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a17_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 406));
                              			
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14278:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14278:8: (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14279:5: a18_0= parse_org_kermeta_language_behavior_CallSuperOperation
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12036);
                            a18_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a18_0 != null) {
                              						if (a18_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a18_0);
                              							completedElement(a18_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a18_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 407));
                              			
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14301:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14301:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14302:5: a19_0= parse_org_kermeta_language_behavior_CallResult
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12078);
                            a19_0=parse_org_kermeta_language_behavior_CallResult();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a19_0 != null) {
                              						if (a19_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a19_0);
                              							completedElement(a19_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a19_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 408));
                              			
                            }

                            }
                            break;
                        case 7 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14324:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14324:8: (a20_0= parse_org_kermeta_language_behavior_VariableDecl )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14325:5: a20_0= parse_org_kermeta_language_behavior_VariableDecl
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12120);
                            a20_0=parse_org_kermeta_language_behavior_VariableDecl();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a20_0 != null) {
                              						if (a20_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a20_0);
                              							completedElement(a20_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a20_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 409));
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 409));
                              			
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14347:4: (a21_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14348:5: a21_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12154);
                            a21_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a21_0 != null) {
                              						if (a21_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a21_0);
                              							completedElement(a21_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a21_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 410));
                              			
                            }

                            }
                            break;
                        case 8 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14370:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14370:8: (a22_0= parse_org_kermeta_language_behavior_CallValue )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14371:5: a22_0= parse_org_kermeta_language_behavior_CallValue
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12196);
                            a22_0=parse_org_kermeta_language_behavior_CallValue();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
                              					}
                              					if (a22_0 != null) {
                              						if (a22_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CONDITIONAL__ELSE_BODY), a22_0);
                              							completedElement(a22_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a22_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 411));
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 412));
              	
            }
            a23=(Token)match(input,70,FOLLOW_70_in_parse_org_kermeta_language_behavior_Conditional12237); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createConditional();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 413));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 413));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_kermeta_language_behavior_Conditional_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Conditional"


    // $ANTLR start "parse_org_kermeta_language_behavior_Loop"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14452:1: parse_org_kermeta_language_behavior_Loop returns [org.kermeta.language.behavior.Loop element = null] : a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? ;
    public final org.kermeta.language.behavior.Loop parse_org_kermeta_language_behavior_Loop() throws RecognitionException {
        org.kermeta.language.behavior.Loop element =  null;
        int parse_org_kermeta_language_behavior_Loop_StartIndex = input.index();
        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.Expression a1_0 = null;

        org.kermeta.language.behavior.Expression a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14455:1: (a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14456:2: a0= 'from' ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )? a2= 'until' (a3_0= parse_org_kermeta_language_behavior_Expression ) ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            {
            a0=(Token)match(input,76,FOLLOW_76_in_parse_org_kermeta_language_behavior_Loop12266); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 414));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 414));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14487:2: ( ( (a1_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==IDENTIFIER||(LA79_0>=INTEGER && LA79_0<=BOOLEAN)||LA79_0==32||LA79_0==37||LA79_0==55||LA79_0==69||(LA79_0>=72 && LA79_0<=73)||LA79_0==76||LA79_0==79||(LA79_0>=81 && LA79_0<=82)||LA79_0==85||(LA79_0>=92 && LA79_0<=93)||LA79_0==95) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14488:3: ( (a1_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14489:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14489:4: (a1_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14490:5: a1_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12295);
                    a1_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__INITIALIZATION), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 415));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 416));
              	
            }
            a2=(Token)match(input,77,FOLLOW_77_in_parse_org_kermeta_language_behavior_Loop12336); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 417));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 417));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14548:2: (a3_0= parse_org_kermeta_language_behavior_Expression )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14549:3: a3_0= parse_org_kermeta_language_behavior_Expression
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12354);
            a3_0=parse_org_kermeta_language_behavior_Expression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__STOP_CONDITION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_323, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 418));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 418));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14610:2: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==78) ) {
                int LA80_1 = input.LA(2);

                if ( (synpred199_Kermeta()) ) {
                    alt80=1;
                }
            }
            switch (alt80) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14611:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14611:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14612:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    a4=(Token)match(input,78,FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12381); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 419));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 419));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14642:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14643:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14643:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14644:6: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12414);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      						if (terminateParsing) {
                      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      						}
                      						if (element == null) {
                      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLoop();
                      						}
                      						if (a5_0 != null) {
                      							if (a5_0 != null) {
                      								element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LOOP__BODY), a5_0);
                      								completedElement(a5_0);
                      							}
                      							collectHiddenTokens(element);
                      							copyLocalizationInfos(a5_0, element); 						}
                      					
                    }

                    }

                    if ( state.backtracking==0 ) {

                      					// expected elements (follow set)
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 420));
                      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 420));
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 421));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 421));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 422));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 422));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_kermeta_language_behavior_Loop_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Loop"


    // $ANTLR start "parse_org_kermeta_language_behavior_VariableDecl"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14797:1: parse_org_kermeta_language_behavior_VariableDecl returns [org.kermeta.language.behavior.VariableDecl element = null] : a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? ;
    public final org.kermeta.language.behavior.VariableDecl parse_org_kermeta_language_behavior_VariableDecl() throws RecognitionException {
        org.kermeta.language.behavior.VariableDecl element =  null;
        int parse_org_kermeta_language_behavior_VariableDecl_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        org.kermeta.language.behavior.TypeReference a3_0 = null;

        org.kermeta.language.behavior.Expression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14800:1: (a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )? )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14801:2: a0= 'var' (a1= IDENTIFIER ) a2= ':' (a3_0= parse_org_kermeta_language_behavior_TypeReference ) ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            {
            a0=(Token)match(input,79,FOLLOW_79_in_parse_org_kermeta_language_behavior_VariableDecl12488); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_324, 423));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14813:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14814:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12506); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__IDENTIFIER), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_325, 424));
              	
            }
            a2=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_VariableDecl12527); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 425));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14858:2: (a3_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14859:3: a3_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12545);
            a3_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__TYPE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_321, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 426));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 426));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14920:2: ( (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==80) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14921:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14921:3: (a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression ) )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14922:4: a4= 'init' (a5_0= parse_org_kermeta_language_behavior_Expression )
                    {
                    a4=(Token)match(input,80,FOLLOW_80_in_parse_org_kermeta_language_behavior_VariableDecl12572); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 427));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 427));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14952:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14953:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12598);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVariableDecl();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.VARIABLE_DECL__INITIALIZATION), a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 428));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 428));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 429));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 429));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_kermeta_language_behavior_VariableDecl_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VariableDecl"


    // $ANTLR start "parse_org_kermeta_language_behavior_TypeLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15061:1: parse_org_kermeta_language_behavior_TypeLiteral returns [org.kermeta.language.behavior.TypeLiteral element = null] : (a0_0= parse_org_kermeta_language_behavior_TypeReference ) ;
    public final org.kermeta.language.behavior.TypeLiteral parse_org_kermeta_language_behavior_TypeLiteral() throws RecognitionException {
        org.kermeta.language.behavior.TypeLiteral element =  null;
        int parse_org_kermeta_language_behavior_TypeLiteral_StartIndex = input.index();
        org.kermeta.language.behavior.TypeReference a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15064:1: ( (a0_0= parse_org_kermeta_language_behavior_TypeReference ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15065:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15065:2: (a0_0= parse_org_kermeta_language_behavior_TypeReference )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15066:3: a0_0= parse_org_kermeta_language_behavior_TypeReference
            {
            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12658);
            a0_0=parse_org_kermeta_language_behavior_TypeReference();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createTypeLiteral();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.TYPE_LITERAL__TYPEREF), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 430));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 430));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_kermeta_language_behavior_TypeLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_TypeLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallResult"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15125:1: parse_org_kermeta_language_behavior_CallResult returns [org.kermeta.language.behavior.CallResult element = null] : a0= 'result' ;
    public final org.kermeta.language.behavior.CallResult parse_org_kermeta_language_behavior_CallResult() throws RecognitionException {
        org.kermeta.language.behavior.CallResult element =  null;
        int parse_org_kermeta_language_behavior_CallResult_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15128:1: (a0= 'result' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15129:2: a0= 'result'
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_kermeta_language_behavior_CallResult12691); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallResult();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 431));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 431));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_kermeta_language_behavior_CallResult_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallResult"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallSuperOperation"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15184:1: parse_org_kermeta_language_behavior_CallSuperOperation returns [org.kermeta.language.behavior.CallSuperOperation element = null] : a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' ;
    public final org.kermeta.language.behavior.CallSuperOperation parse_org_kermeta_language_behavior_CallSuperOperation() throws RecognitionException {
        org.kermeta.language.behavior.CallSuperOperation element =  null;
        int parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.kermeta.language.behavior.Expression a2_0 = null;

        org.kermeta.language.behavior.Expression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15187:1: (a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15188:2: a0= 'super' a1= '(' ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a5= ')'
            {
            a0=(Token)match(input,82,FOLLOW_82_in_parse_org_kermeta_language_behavior_CallSuperOperation12720); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_328, 432));
              	
            }
            a1=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallSuperOperation12734); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 433));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 433));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15231:2: ( ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==IDENTIFIER||(LA83_0>=INTEGER && LA83_0<=BOOLEAN)||LA83_0==32||LA83_0==37||LA83_0==55||LA83_0==69||(LA83_0>=72 && LA83_0<=73)||LA83_0==76||LA83_0==79||(LA83_0>=81 && LA83_0<=82)||LA83_0==85||(LA83_0>=92 && LA83_0<=93)||LA83_0==95) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15232:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15232:3: ( (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15233:4: (a2_0= parse_org_kermeta_language_behavior_Expression ) ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15233:4: (a2_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15234:5: a2_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12763);
                    a2_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 434));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 434));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15256:4: ( (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( (LA82_0==24) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15257:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15257:5: (a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15258:6: a3= ',' (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a3=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallSuperOperation12804); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 435));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 435));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15288:6: (a4_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15289:7: a4_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12838);
                    	    a4_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
                    	      							}
                    	      							if (a4_0 != null) {
                    	      								if (a4_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_SUPER_OPERATION__PARAMETERS, a4_0);
                    	      									completedElement(a4_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a4_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 436));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 436));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop82;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 437));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 437));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 438));
              	
            }
            a5=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation12912); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallSuperOperation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 439));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 439));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_kermeta_language_behavior_CallSuperOperation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallSuperOperation"


    // $ANTLR start "parse_org_kermeta_language_behavior_Assignment"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15379:1: parse_org_kermeta_language_behavior_Assignment returns [org.kermeta.language.behavior.Assignment element = null] : ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) ;
    public final org.kermeta.language.behavior.Assignment parse_org_kermeta_language_behavior_Assignment() throws RecognitionException {
        org.kermeta.language.behavior.Assignment element =  null;
        int parse_org_kermeta_language_behavior_Assignment_StartIndex = input.index();
        Token a3=null;
        Token a4=null;
        Token a5=null;
        org.kermeta.language.behavior.CallFeature a0_0 = null;

        org.kermeta.language.behavior.CallVariable a1_0 = null;

        org.kermeta.language.behavior.CallResult a2_0 = null;

        org.kermeta.language.behavior.CallFeature a6_0 = null;

        org.kermeta.language.behavior.SelfExpression a7_0 = null;

        org.kermeta.language.behavior.CallSuperOperation a8_0 = null;

        org.kermeta.language.behavior.CallResult a9_0 = null;

        org.kermeta.language.behavior.CallValue a10_0 = null;

        org.kermeta.language.behavior.CallVariable a11_0 = null;

        org.kermeta.language.behavior.VoidLiteral a12_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;

        org.kermeta.language.behavior.StringLiteral a15_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15382:1: ( ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15383:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15383:2: ( ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) ) )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15384:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) ) (a3= ':=' | (a4= CASTED ) a5= '=' ) ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            {
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15384:3: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) | (a1_0= parse_org_kermeta_language_behavior_CallVariable ) | (a2_0= parse_org_kermeta_language_behavior_CallResult ) )
            int alt84=3;
            switch ( input.LA(1) ) {
            case INTEGER:
            case BOOLEAN:
            case 32:
            case 85:
            case 92:
                {
                alt84=1;
                }
                break;
            case IDENTIFIER:
                {
                int LA84_2 = input.LA(2);

                if ( (synpred203_Kermeta()) ) {
                    alt84=1;
                }
                else if ( (synpred204_Kermeta()) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 2, input);

                    throw nvae;
                }
                }
                break;
            case 81:
                {
                int LA84_3 = input.LA(2);

                if ( (synpred203_Kermeta()) ) {
                    alt84=1;
                }
                else if ( (synpred204_Kermeta()) ) {
                    alt84=2;
                }
                else if ( (true) ) {
                    alt84=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15385:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15385:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15386:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12956);
                    a0_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a0_0 != null) {
                      						if (a0_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a0_0);
                      							completedElement(a0_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a0_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 440));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 440));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15409:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15409:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15410:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment12998);
                    a1_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a1_0 != null) {
                      						if (a1_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a1_0);
                      							completedElement(a1_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a1_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 441));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 441));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15433:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15433:8: (a2_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15434:5: a2_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13040);
                    a2_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a2_0 != null) {
                      						if (a2_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__TARGET), a2_0);
                      							completedElement(a2_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a2_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 442));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 442));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 443));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 443));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15463:3: (a3= ':=' | (a4= CASTED ) a5= '=' )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==83) ) {
                alt85=1;
            }
            else if ( (LA85_0==CASTED) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15464:4: a3= ':='
                    {
                    a3=(Token)match(input,83,FOLLOW_83_in_parse_org_kermeta_language_behavior_Assignment13083); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 444));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 444));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15487:8: (a4= CASTED ) a5= '='
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15487:8: (a4= CASTED )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15488:5: a4= CASTED
                    {
                    a4=(Token)match(input,CASTED,FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment13117); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a4 != null) {
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("CASTED");
                      						tokenResolver.setOptions(getOptions());
                      						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), result);
                      						java.lang.Object resolvedObject = result.getResolvedToken();
                      						if (resolvedObject == null) {
                      							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
                      						}
                      						java.lang.Boolean resolved = (java.lang.Boolean)resolvedObject;
                      						if (resolved != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__IS_CAST), resolved);
                      							completedElement(resolved);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
                      					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_329, 445));
                      			
                    }
                    a5=(Token)match(input,84,FOLLOW_84_in_parse_org_kermeta_language_behavior_Assignment13150); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (element == null) {
                      					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 446));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 446));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 447));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 447));
              		
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15558:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )
            int alt86=10;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15559:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15559:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15560:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13191);
                    a6_0=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a6_0 != null) {
                      						if (a6_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a6_0);
                      							completedElement(a6_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a6_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 448));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 448));
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15621:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15621:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment13233);
                    a7_0=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a7_0 != null) {
                      						if (a7_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a7_0);
                      							completedElement(a7_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a7_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 449));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 449));
                      			
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15683:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15683:8: (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15684:5: a8_0= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13275);
                    a8_0=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a8_0 != null) {
                      						if (a8_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a8_0);
                      							completedElement(a8_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a8_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 450));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 450));
                      			
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15745:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15745:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:5: a9_0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13317);
                    a9_0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a9_0 != null) {
                      						if (a9_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a9_0);
                      							completedElement(a9_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a9_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 451));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 451));
                      			
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15807:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15807:8: (a10_0= parse_org_kermeta_language_behavior_CallValue )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15808:5: a10_0= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13359);
                    a10_0=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a10_0 != null) {
                      						if (a10_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a10_0);
                      							completedElement(a10_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a10_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 452));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 452));
                      			
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15869:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15869:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13401);
                    a11_0=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a11_0 != null) {
                      						if (a11_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a11_0);
                      							completedElement(a11_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a11_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 453));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 453));
                      			
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15931:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15931:8: (a12_0= parse_org_kermeta_language_behavior_VoidLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15932:5: a12_0= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13443);
                    a12_0=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a12_0 != null) {
                      						if (a12_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a12_0);
                      							completedElement(a12_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a12_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 454));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 454));
                      			
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15993:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15993:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15994:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13485);
                    a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a13_0 != null) {
                      						if (a13_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a13_0);
                      							completedElement(a13_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a13_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 455));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 455));
                      			
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16055:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16055:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16056:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13527);
                    a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a14_0 != null) {
                      						if (a14_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a14_0);
                      							completedElement(a14_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a14_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 456));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 456));
                      			
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16117:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16117:8: (a15_0= parse_org_kermeta_language_behavior_StringLiteral )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16118:5: a15_0= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13569);
                    a15_0=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createAssignment();
                      					}
                      					if (a15_0 != null) {
                      						if (a15_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.ASSIGNMENT__VALUE), a15_0);
                      							completedElement(a15_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a15_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 457));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 457));
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			// expected elements (follow set)
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 458));
              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 458));
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 459));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 459));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_kermeta_language_behavior_Assignment_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Assignment"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallVariable"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16270:1: parse_org_kermeta_language_behavior_CallVariable returns [org.kermeta.language.behavior.CallVariable element = null] : ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult );
    public final org.kermeta.language.behavior.CallVariable parse_org_kermeta_language_behavior_CallVariable() throws RecognitionException {
        org.kermeta.language.behavior.CallVariable element =  null;
        int parse_org_kermeta_language_behavior_CallVariable_StartIndex = input.index();
        Token a0=null;
        org.kermeta.language.behavior.CallResult c0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16273:1: ( (a0= IDENTIFIER ) | c0= parse_org_kermeta_language_behavior_CallResult )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==IDENTIFIER) ) {
                alt87=1;
            }
            else if ( (LA87_0==81) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16274:2: (a0= IDENTIFIER )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16274:2: (a0= IDENTIFIER )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16275:3: a0= IDENTIFIER
                    {
                    a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13633); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      			if (terminateParsing) {
                      				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      			}
                      			if (element == null) {
                      				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallVariable();
                      			}
                      			if (a0 != null) {
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                      				tokenResolver.setOptions(getOptions());
                      				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                      				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), result);
                      				java.lang.Object resolvedObject = result.getResolvedToken();
                      				if (resolvedObject == null) {
                      					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      				}
                      				java.lang.String resolved = (java.lang.String)resolvedObject;
                      				if (resolved != null) {
                      					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_VARIABLE__NAME), resolved);
                      					completedElement(resolved);
                      				}
                      				collectHiddenTokens(element);
                      				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      			}
                      		
                    }

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 460));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 460));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16350:2: c0= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13659);
                    c0=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_kermeta_language_behavior_CallVariable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallVariable"


    // $ANTLR start "parse_org_kermeta_language_behavior_SelfExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16354:1: parse_org_kermeta_language_behavior_SelfExpression returns [org.kermeta.language.behavior.SelfExpression element = null] : a0= 'self' ;
    public final org.kermeta.language.behavior.SelfExpression parse_org_kermeta_language_behavior_SelfExpression() throws RecognitionException {
        org.kermeta.language.behavior.SelfExpression element =  null;
        int parse_org_kermeta_language_behavior_SelfExpression_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16357:1: (a0= 'self' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16358:2: a0= 'self'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_org_kermeta_language_behavior_SelfExpression13684); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createSelfExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 461));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 461));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_kermeta_language_behavior_SelfExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_SelfExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallFeature"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16408:1: parse_org_kermeta_language_behavior_CallFeature returns [org.kermeta.language.behavior.CallFeature element = null] : (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) );
    public final org.kermeta.language.behavior.CallFeature parse_org_kermeta_language_behavior_CallFeature() throws RecognitionException {
        org.kermeta.language.behavior.CallFeature element =  null;
        int parse_org_kermeta_language_behavior_CallFeature_StartIndex = input.index();
        Token a0=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a17=null;
        Token a18=null;
        Token a19=null;
        Token a20=null;
        Token a22=null;
        Token a23=null;
        Token a24=null;
        Token a25=null;
        Token a26=null;
        Token a28=null;
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        Token a40=null;
        Token a41=null;
        Token a42=null;
        Token a43=null;
        Token a44=null;
        Token a46=null;
        Token a48=null;
        Token a49=null;
        Token a50=null;
        Token a51=null;
        Token a52=null;
        Token a53=null;
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.BooleanLiteral a1_0 = null;

        org.kermeta.language.behavior.CallVariable a2_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a3_0 = null;

        org.kermeta.language.behavior.SelfExpression a4_0 = null;

        org.kermeta.language.behavior.StringLiteral a5_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a6_0 = null;

        org.kermeta.language.behavior.Expression a12_0 = null;

        org.kermeta.language.behavior.Expression a14_0 = null;

        org.kermeta.language.behavior.Expression a21_0 = null;

        org.kermeta.language.behavior.Expression a27_0 = null;

        org.kermeta.language.behavior.Expression a33_0 = null;

        org.kermeta.language.behavior.BooleanLiteral a34_0 = null;

        org.kermeta.language.behavior.CallVariable a35_0 = null;

        org.kermeta.language.behavior.JavaStaticCall a36_0 = null;

        org.kermeta.language.behavior.SelfExpression a37_0 = null;

        org.kermeta.language.behavior.StringLiteral a38_0 = null;

        org.kermeta.language.behavior.IntegerLiteral a39_0 = null;

        org.kermeta.language.behavior.Expression a45_0 = null;

        org.kermeta.language.behavior.Expression a47_0 = null;

        org.kermeta.language.behavior.Expression a54_0 = null;

        org.kermeta.language.behavior.Expression a59_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16411:1: (a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) | ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==32) ) {
                alt106=1;
            }
            else if ( (LA106_0==IDENTIFIER||(LA106_0>=INTEGER && LA106_0<=BOOLEAN)||LA106_0==81||LA106_0==85||LA106_0==92) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16412:2: a0= '(' ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )* (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    a0=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13713); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      		if (element == null) {
                      			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                      		}
                      		collectHiddenTokens(element);
                      		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
                      	
                    }
                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 462));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 462));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 462));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 462));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 462));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 462));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 462));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16430:2: ( (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a2_0= parse_org_kermeta_language_behavior_CallVariable ) | (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a4_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt88=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt88=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA88_2 = input.LA(2);

                        if ( (synpred217_Kermeta()) ) {
                            alt88=2;
                        }
                        else if ( (synpred220_Kermeta()) ) {
                            alt88=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 88, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 81:
                        {
                        alt88=2;
                        }
                        break;
                    case 92:
                        {
                        alt88=3;
                        }
                        break;
                    case 85:
                        {
                        alt88=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt88=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 88, 0, input);

                        throw nvae;
                    }

                    switch (alt88) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16431:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16431:3: (a1_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16432:4: a1_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature13736);
                            a1_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a1_0 != null) {
                              					if (a1_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a1_0);
                              						completedElement(a1_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a1_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 463));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 463));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16463:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16463:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16464:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature13770);
                            a2_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a2_0 != null) {
                              					if (a2_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a2_0);
                              						completedElement(a2_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a2_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 464));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 464));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16495:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16495:6: (a3_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16496:4: a3_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature13804);
                            a3_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a3_0 != null) {
                              					if (a3_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a3_0);
                              						completedElement(a3_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a3_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 465));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 465));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16527:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16527:6: (a4_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16528:4: a4_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature13838);
                            a4_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a4_0 != null) {
                              					if (a4_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a4_0);
                              						completedElement(a4_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a4_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 466));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 466));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16559:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16559:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16560:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature13872);
                            a5_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a5_0 != null) {
                              					if (a5_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a5_0);
                              						completedElement(a5_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a5_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 467));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 467));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16591:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16591:6: (a6_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16592:4: a6_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature13906);
                            a6_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a6_0 != null) {
                              					if (a6_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a6_0);
                              						completedElement(a6_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a6_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 468));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 468));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 469));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 469));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16637:2: ( (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) ) )*
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==86) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16638:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16638:3: (a7= '.' (a8= IDENTIFIER ) | a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')' | a16= '.' (a17= IDENTIFIER ) | a18= '.' (a19= IDENTIFIER ) )
                    	    int alt91=4;
                    	    int LA91_0 = input.LA(1);

                    	    if ( (LA91_0==86) ) {
                    	        int LA91_1 = input.LA(2);

                    	        if ( (LA91_1==IDENTIFIER) ) {
                    	            int LA91_2 = input.LA(3);

                    	            if ( (LA91_2==32) ) {
                    	                alt91=2;
                    	            }
                    	            else if ( (synpred221_Kermeta()) ) {
                    	                alt91=1;
                    	            }
                    	            else if ( (synpred225_Kermeta()) ) {
                    	                alt91=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt91=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 91, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 91, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 91, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt91) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16639:4: a7= '.' (a8= IDENTIFIER )
                    	            {
                    	            a7=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13945); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_340, 470));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16651:4: (a8= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16652:5: a8= IDENTIFIER
                    	            {
                    	            a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13971); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a8 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a8).getLine(), ((org.antlr.runtime.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a8).getStartIndex(), ((org.antlr.runtime.CommonToken) a8).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a8, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 471));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 471));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16698:8: a9= '.' (a10= IDENTIFIER ) a11= '(' ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a15= ')'
                    	            {
                    	            a9=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14012); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_341, 472));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16710:4: (a10= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16711:5: a10= IDENTIFIER
                    	            {
                    	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14038); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a10 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_342, 473));
                    	              			
                    	            }
                    	            a11=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature14071); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 474));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 474));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16778:4: ( ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt90=2;
                    	            int LA90_0 = input.LA(1);

                    	            if ( (LA90_0==IDENTIFIER||(LA90_0>=INTEGER && LA90_0<=BOOLEAN)||LA90_0==32||LA90_0==37||LA90_0==55||LA90_0==69||(LA90_0>=72 && LA90_0<=73)||LA90_0==76||LA90_0==79||(LA90_0>=81 && LA90_0<=82)||LA90_0==85||(LA90_0>=92 && LA90_0<=93)||LA90_0==95) ) {
                    	                alt90=1;
                    	            }
                    	            switch (alt90) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16779:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16779:5: ( (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16780:6: (a12_0= parse_org_kermeta_language_behavior_Expression ) ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16780:6: (a12_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16781:7: a12_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14112);
                    	                    a12_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a12_0 != null) {
                    	                      								if (a12_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a12_0);
                    	                      									completedElement(a12_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a12_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 475));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 475));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16803:6: ( (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop89:
                    	                    do {
                    	                        int alt89=2;
                    	                        int LA89_0 = input.LA(1);

                    	                        if ( (LA89_0==24) ) {
                    	                            alt89=1;
                    	                        }


                    	                        switch (alt89) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16804:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16804:7: (a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16805:8: a13= ',' (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a13=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature14167); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a13, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 476));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 476));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16835:8: (a14_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16836:9: a14_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14209);
                    	                    	    a14_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a14_0 != null) {
                    	                    	      										if (a14_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a14_0);
                    	                    	      											completedElement(a14_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a14_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 477));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 477));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop89;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 478));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 478));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 479));
                    	              			
                    	            }
                    	            a15=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14313); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 480));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 480));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16895:8: a16= '.' (a17= IDENTIFIER )
                    	            {
                    	            a16=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14341); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_343, 481));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16907:4: (a17= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16908:5: a17= IDENTIFIER
                    	            {
                    	            a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14367); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a17 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a17.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a17).getLine(), ((org.antlr.runtime.CommonToken) a17).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a17).getStartIndex(), ((org.antlr.runtime.CommonToken) a17).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a17, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 482));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 482));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16954:8: a18= '.' (a19= IDENTIFIER )
                    	            {
                    	            a18=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14408); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_344, 483));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16966:4: (a19= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16967:5: a19= IDENTIFIER
                    	            {
                    	            a19=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14434); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a19 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a19.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a19).getLine(), ((org.antlr.runtime.CommonToken) a19).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a19).getStartIndex(), ((org.antlr.runtime.CommonToken) a19).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a19, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 484));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 484));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop92;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_330, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_331, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_332, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_333, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_334, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 485));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 485));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17028:2: (a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')' | ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==87) ) {
                        alt97=1;
                    }
                    else if ( (LA97_0==33||(LA97_0>=88 && LA97_0<=91)) ) {
                        alt97=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }
                    switch (alt97) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17029:3: a20= '==' (a21_0= parse_org_kermeta_language_behavior_Expression ) a22= ')'
                            {
                            a20=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature14484); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 486));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 486));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17059:3: (a21_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17060:4: a21_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14506);
                            a21_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a21_0 != null) {
                              					if (a21_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a21_0);
                              						completedElement(a21_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a21_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_345, 487));
                              		
                            }
                            a22=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14529); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a22, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 488));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 488));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17135:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )* a28= ')' ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17135:6: ( ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop94:
                            do {
                                int alt94=2;
                                int LA94_0 = input.LA(1);

                                if ( ((LA94_0>=88 && LA94_0<=91)) ) {
                                    alt94=1;
                                }


                                switch (alt94) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17136:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17136:4: ( (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17137:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' ) (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17137:5: (a23= '+' | a24= '-' | a25= '/' | a26= '*' )
                            	    int alt93=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt93=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt93=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt93=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt93=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 93, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt93) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17138:6: a23= '+'
                            	            {
                            	            a23=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14570); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a23, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 489));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 489));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17169:12: a24= '-'
                            	            {
                            	            a24=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14608); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a24, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 490));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 490));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17200:12: a25= '/'
                            	            {
                            	            a25=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14646); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a25, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 491));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 491));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17231:12: a26= '*'
                            	            {
                            	            a26=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14684); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a26, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 492));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 492));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 493));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 493));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17285:5: (a27_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17286:6: a27_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14733);
                            	    a27_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a27_0 != null) {
                            	      							if (a27_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a27_0);
                            	      								completedElement(a27_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a27_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 494));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 494));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop94;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_335, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_336, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_337, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_338, 495));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_339, 495));
                              		
                            }
                            a28=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14784); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a28, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 496));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 496));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17379:3: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop96:
                            do {
                                int alt96=2;
                                switch ( input.LA(1) ) {
                                case 88:
                                    {
                                    int LA96_2 = input.LA(2);

                                    if ( (synpred235_Kermeta()) ) {
                                        alt96=1;
                                    }


                                    }
                                    break;
                                case 89:
                                    {
                                    int LA96_3 = input.LA(2);

                                    if ( (synpred235_Kermeta()) ) {
                                        alt96=1;
                                    }


                                    }
                                    break;
                                case 90:
                                    {
                                    int LA96_4 = input.LA(2);

                                    if ( (synpred235_Kermeta()) ) {
                                        alt96=1;
                                    }


                                    }
                                    break;
                                case 91:
                                    {
                                    int LA96_5 = input.LA(2);

                                    if ( (synpred235_Kermeta()) ) {
                                        alt96=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt96) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17380:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17380:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17381:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17381:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
                            	    int alt95=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt95=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt95=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt95=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt95=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 95, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt95) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17382:6: a29= '+'
                            	            {
                            	            a29=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14819); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a29, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 497));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 497));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17413:12: a30= '-'
                            	            {
                            	            a30=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14857); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a30, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 498));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 498));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17444:12: a31= '/'
                            	            {
                            	            a31=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14895); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a31, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 499));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 499));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17475:12: a32= '*'
                            	            {
                            	            a32=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14933); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a32, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 500));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 500));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 501));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 501));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17529:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17530:6: a33_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14982);
                            	    a33_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a33_0 != null) {
                            	      							if (a33_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a33_0);
                            	      								completedElement(a33_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a33_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 502));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 502));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop96;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_346, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_347, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_348, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_349, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 503));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 503));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 504));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 504));
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17696:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) ) ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )* (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17696:4: ( (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a35_0= parse_org_kermeta_language_behavior_CallVariable ) | (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a37_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) | (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
                    int alt98=6;
                    switch ( input.LA(1) ) {
                    case BOOLEAN:
                        {
                        alt98=1;
                        }
                        break;
                    case IDENTIFIER:
                        {
                        int LA98_2 = input.LA(2);

                        if ( (synpred238_Kermeta()) ) {
                            alt98=2;
                        }
                        else if ( (synpred241_Kermeta()) ) {
                            alt98=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 98, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 81:
                        {
                        alt98=2;
                        }
                        break;
                    case 92:
                        {
                        alt98=3;
                        }
                        break;
                    case 85:
                        {
                        alt98=4;
                        }
                        break;
                    case INTEGER:
                        {
                        alt98=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 98, 0, input);

                        throw nvae;
                    }

                    switch (alt98) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17697:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17697:3: (a34_0= parse_org_kermeta_language_behavior_BooleanLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17698:4: a34_0= parse_org_kermeta_language_behavior_BooleanLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature15053);
                            a34_0=parse_org_kermeta_language_behavior_BooleanLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a34_0 != null) {
                              					if (a34_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a34_0);
                              						completedElement(a34_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a34_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 505));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 505));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17770:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17770:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17771:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature15087);
                            a35_0=parse_org_kermeta_language_behavior_CallVariable();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a35_0 != null) {
                              					if (a35_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a35_0);
                              						completedElement(a35_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a35_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 506));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 506));
                              		
                            }

                            }
                            break;
                        case 3 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17843:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17843:6: (a36_0= parse_org_kermeta_language_behavior_JavaStaticCall )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17844:4: a36_0= parse_org_kermeta_language_behavior_JavaStaticCall
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature15121);
                            a36_0=parse_org_kermeta_language_behavior_JavaStaticCall();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a36_0 != null) {
                              					if (a36_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a36_0);
                              						completedElement(a36_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a36_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 507));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 507));
                              		
                            }

                            }
                            break;
                        case 4 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17916:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17916:6: (a37_0= parse_org_kermeta_language_behavior_SelfExpression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17917:4: a37_0= parse_org_kermeta_language_behavior_SelfExpression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature15155);
                            a37_0=parse_org_kermeta_language_behavior_SelfExpression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a37_0 != null) {
                              					if (a37_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a37_0);
                              						completedElement(a37_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a37_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 508));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 508));
                              		
                            }

                            }
                            break;
                        case 5 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17989:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17989:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17990:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature15189);
                            a38_0=parse_org_kermeta_language_behavior_StringLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a38_0 != null) {
                              					if (a38_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a38_0);
                              						completedElement(a38_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a38_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 509));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 509));
                              		
                            }

                            }
                            break;
                        case 6 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18062:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18062:6: (a39_0= parse_org_kermeta_language_behavior_IntegerLiteral )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18063:4: a39_0= parse_org_kermeta_language_behavior_IntegerLiteral
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature15223);
                            a39_0=parse_org_kermeta_language_behavior_IntegerLiteral();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a39_0 != null) {
                              					if (a39_0 != null) {
                              						element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__TARGET), a39_0);
                              						completedElement(a39_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a39_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 510));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 510));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 511));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 511));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18190:2: ( (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) ) )*
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==86) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18191:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18191:3: (a40= '.' (a41= IDENTIFIER ) | a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')' | a49= '.' (a50= IDENTIFIER ) | a51= '.' (a52= IDENTIFIER ) )
                    	    int alt101=4;
                    	    int LA101_0 = input.LA(1);

                    	    if ( (LA101_0==86) ) {
                    	        int LA101_1 = input.LA(2);

                    	        if ( (LA101_1==IDENTIFIER) ) {
                    	            int LA101_2 = input.LA(3);

                    	            if ( (LA101_2==32) ) {
                    	                alt101=2;
                    	            }
                    	            else if ( (synpred242_Kermeta()) ) {
                    	                alt101=1;
                    	            }
                    	            else if ( (synpred246_Kermeta()) ) {
                    	                alt101=3;
                    	            }
                    	            else if ( (true) ) {
                    	                alt101=4;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return element;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 101, 2, input);

                    	                throw nvae;
                    	            }
                    	        }
                    	        else {
                    	            if (state.backtracking>0) {state.failed=true; return element;}
                    	            NoViableAltException nvae =
                    	                new NoViableAltException("", 101, 1, input);

                    	            throw nvae;
                    	        }
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 101, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt101) {
                    	        case 1 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18192:4: a40= '.' (a41= IDENTIFIER )
                    	            {
                    	            a40=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15262); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a40, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_359, 512));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18204:4: (a41= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18205:5: a41= IDENTIFIER
                    	            {
                    	            a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15288); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a41 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a41.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a41).getLine(), ((org.antlr.runtime.CommonToken) a41).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a41).getStartIndex(), ((org.antlr.runtime.CommonToken) a41).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Property proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createProperty();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_PROPERTY), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a41, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 513));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 513));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18292:8: a42= '.' (a43= IDENTIFIER ) a44= '(' ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a48= ')'
                    	            {
                    	            a42=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15329); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a42, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_360, 514));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18304:4: (a43= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18305:5: a43= IDENTIFIER
                    	            {
                    	            a43=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15355); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a43 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a43.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a43).getLine(), ((org.antlr.runtime.CommonToken) a43).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a43).getStartIndex(), ((org.antlr.runtime.CommonToken) a43).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a43, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_361, 515));
                    	              			
                    	            }
                    	            a44=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15388); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a44, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 516));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 516));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18372:4: ( ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
                    	            int alt100=2;
                    	            int LA100_0 = input.LA(1);

                    	            if ( (LA100_0==IDENTIFIER||(LA100_0>=INTEGER && LA100_0<=BOOLEAN)||LA100_0==32||LA100_0==37||LA100_0==55||LA100_0==69||(LA100_0>=72 && LA100_0<=73)||LA100_0==76||LA100_0==79||(LA100_0>=81 && LA100_0<=82)||LA100_0==85||(LA100_0>=92 && LA100_0<=93)||LA100_0==95) ) {
                    	                alt100=1;
                    	            }
                    	            switch (alt100) {
                    	                case 1 :
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18373:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18373:5: ( (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18374:6: (a45_0= parse_org_kermeta_language_behavior_Expression ) ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    {
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18374:6: (a45_0= parse_org_kermeta_language_behavior_Expression )
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18375:7: a45_0= parse_org_kermeta_language_behavior_Expression
                    	                    {
                    	                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15429);
                    	                    a45_0=parse_org_kermeta_language_behavior_Expression();

                    	                    state._fsp--;
                    	                    if (state.failed) return element;
                    	                    if ( state.backtracking==0 ) {

                    	                      							if (terminateParsing) {
                    	                      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                      							}
                    	                      							if (element == null) {
                    	                      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                      							}
                    	                      							if (a45_0 != null) {
                    	                      								if (a45_0 != null) {
                    	                      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a45_0);
                    	                      									completedElement(a45_0);
                    	                      								}
                    	                      								collectHiddenTokens(element);
                    	                      								copyLocalizationInfos(a45_0, element); 							}
                    	                      						
                    	                    }

                    	                    }

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 517));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 517));
                    	                      					
                    	                    }
                    	                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18397:6: ( (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    	                    loop99:
                    	                    do {
                    	                        int alt99=2;
                    	                        int LA99_0 = input.LA(1);

                    	                        if ( (LA99_0==24) ) {
                    	                            alt99=1;
                    	                        }


                    	                        switch (alt99) {
                    	                    	case 1 :
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18398:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    {
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18398:7: (a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression ) )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18399:8: a46= ',' (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    {
                    	                    	    a46=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature15484); if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								if (element == null) {
                    	                    	      									element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      								}
                    	                    	      								collectHiddenTokens(element);
                    	                    	      								copyLocalizationInfos((org.antlr.runtime.CommonToken)a46, element);
                    	                    	      							
                    	                    	    }
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 518));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 518));
                    	                    	      							
                    	                    	    }
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18429:8: (a47_0= parse_org_kermeta_language_behavior_Expression )
                    	                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18430:9: a47_0= parse_org_kermeta_language_behavior_Expression
                    	                    	    {
                    	                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15526);
                    	                    	    a47_0=parse_org_kermeta_language_behavior_Expression();

                    	                    	    state._fsp--;
                    	                    	    if (state.failed) return element;
                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      									if (terminateParsing) {
                    	                    	      										throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	                    	      									}
                    	                    	      									if (element == null) {
                    	                    	      										element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	                    	      									}
                    	                    	      									if (a47_0 != null) {
                    	                    	      										if (a47_0 != null) {
                    	                    	      											addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a47_0);
                    	                    	      											completedElement(a47_0);
                    	                    	      										}
                    	                    	      										collectHiddenTokens(element);
                    	                    	      										copyLocalizationInfos(a47_0, element); 									}
                    	                    	      								
                    	                    	    }

                    	                    	    }

                    	                    	    if ( state.backtracking==0 ) {

                    	                    	      								// expected elements (follow set)
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 519));
                    	                    	      								addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 519));
                    	                    	      							
                    	                    	    }

                    	                    	    }


                    	                    	    }
                    	                    	    break;

                    	                    	default :
                    	                    	    break loop99;
                    	                        }
                    	                    } while (true);

                    	                    if ( state.backtracking==0 ) {

                    	                      						// expected elements (follow set)
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_363, 520));
                    	                      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 520));
                    	                      					
                    	                    }

                    	                    }


                    	                    }
                    	                    break;

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_362, 521));
                    	              			
                    	            }
                    	            a48=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15630); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a48, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 522));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 522));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18530:8: a49= '.' (a50= IDENTIFIER )
                    	            {
                    	            a49=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15658); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a49, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_364, 523));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18542:4: (a50= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18543:5: a50= IDENTIFIER
                    	            {
                    	            a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15684); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a50 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a50.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a50).getLine(), ((org.antlr.runtime.CommonToken) a50).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a50).getStartIndex(), ((org.antlr.runtime.CommonToken) a50).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.EnumerationLiteral proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createEnumerationLiteral();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.EnumerationLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticEnumLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_ENUM_LITERAL), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a50, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 524));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 524));
                    	              			
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18630:8: a51= '.' (a52= IDENTIFIER )
                    	            {
                    	            a51=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15725); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              				if (element == null) {
                    	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              				}
                    	              				collectHiddenTokens(element);
                    	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a51, element);
                    	              			
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_365, 525));
                    	              			
                    	            }
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18642:4: (a52= IDENTIFIER )
                    	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18643:5: a52= IDENTIFIER
                    	            {
                    	            a52=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15751); if (state.failed) return element;
                    	            if ( state.backtracking==0 ) {

                    	              					if (terminateParsing) {
                    	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	              					}
                    	              					if (element == null) {
                    	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                    	              					}
                    	              					if (a52 != null) {
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
                    	              						tokenResolver.setOptions(getOptions());
                    	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
                    	              						tokenResolver.resolve(a52.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), result);
                    	              						java.lang.Object resolvedObject = result.getResolvedToken();
                    	              						if (resolvedObject == null) {
                    	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a52).getLine(), ((org.antlr.runtime.CommonToken) a52).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a52).getStartIndex(), ((org.antlr.runtime.CommonToken) a52).getStopIndex());
                    	              						}
                    	              						String resolved = (String) resolvedObject;
                    	              						org.kermeta.language.structure.Operation proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createOperation();
                    	              						collectHiddenTokens(element);
                    	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.CallFeature, org.kermeta.language.structure.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCallFeatureStaticOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), resolved, proxy);
                    	              						if (proxy != null) {
                    	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__STATIC_OPERATION), proxy);
                    	              							completedElement(proxy);
                    	              						}
                    	              						collectHiddenTokens(element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, element);
                    	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a52, proxy);
                    	              					}
                    	              				
                    	            }

                    	            }

                    	            if ( state.backtracking==0 ) {

                    	              				// expected elements (follow set)
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 526));
                    	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 526));
                    	              			
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop102;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_350, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_351, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_352, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_353, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_354, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 527));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 527));
                      	
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18786:2: (a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression ) | ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==87) ) {
                        alt105=1;
                    }
                    else if ( (LA105_0==EOF||LA105_0==IDENTIFIER||(LA105_0>=INTEGER && LA105_0<=CASTED)||LA105_0==18||(LA105_0>=24 && LA105_0<=26)||LA105_0==28||(LA105_0>=30 && LA105_0<=33)||(LA105_0>=39 && LA105_0<=40)||LA105_0==47||LA105_0==55||(LA105_0>=69 && LA105_0<=71)||(LA105_0>=73 && LA105_0<=79)||(LA105_0>=81 && LA105_0<=83)||LA105_0==85||(LA105_0>=88 && LA105_0<=94)||(LA105_0>=96 && LA105_0<=97)) ) {
                        alt105=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 105, 0, input);

                        throw nvae;
                    }
                    switch (alt105) {
                        case 1 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18787:3: a53= '==' (a54_0= parse_org_kermeta_language_behavior_Expression )
                            {
                            a53=(Token)match(input,87,FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature15801); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              			if (element == null) {
                              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              			}
                              			collectHiddenTokens(element);
                              			copyLocalizationInfos((org.antlr.runtime.CommonToken)a53, element);
                              		
                            }
                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 528));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 528));
                              		
                            }
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18817:3: (a54_0= parse_org_kermeta_language_behavior_Expression )
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18818:4: a54_0= parse_org_kermeta_language_behavior_Expression
                            {
                            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15823);
                            a54_0=parse_org_kermeta_language_behavior_Expression();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (terminateParsing) {
                              					throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                              				}
                              				if (element == null) {
                              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                              				}
                              				if (a54_0 != null) {
                              					if (a54_0 != null) {
                              						addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a54_0);
                              						completedElement(a54_0);
                              					}
                              					collectHiddenTokens(element);
                              					copyLocalizationInfos(a54_0, element); 				}
                              			
                            }

                            }

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 529));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 529));
                              		
                            }

                            }
                            break;
                        case 2 :
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18881:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            {
                            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18881:6: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                            loop104:
                            do {
                                int alt104=2;
                                switch ( input.LA(1) ) {
                                case 88:
                                    {
                                    int LA104_2 = input.LA(2);

                                    if ( (synpred252_Kermeta()) ) {
                                        alt104=1;
                                    }


                                    }
                                    break;
                                case 89:
                                    {
                                    int LA104_3 = input.LA(2);

                                    if ( (synpred252_Kermeta()) ) {
                                        alt104=1;
                                    }


                                    }
                                    break;
                                case 90:
                                    {
                                    int LA104_4 = input.LA(2);

                                    if ( (synpred252_Kermeta()) ) {
                                        alt104=1;
                                    }


                                    }
                                    break;
                                case 91:
                                    {
                                    int LA104_5 = input.LA(2);

                                    if ( (synpred252_Kermeta()) ) {
                                        alt104=1;
                                    }


                                    }
                                    break;

                                }

                                switch (alt104) {
                            	case 1 :
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18882:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18882:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18883:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    {
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18883:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
                            	    int alt103=4;
                            	    switch ( input.LA(1) ) {
                            	    case 88:
                            	        {
                            	        alt103=1;
                            	        }
                            	        break;
                            	    case 89:
                            	        {
                            	        alt103=2;
                            	        }
                            	        break;
                            	    case 90:
                            	        {
                            	        alt103=3;
                            	        }
                            	        break;
                            	    case 91:
                            	        {
                            	        alt103=4;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return element;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 103, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt103) {
                            	        case 1 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18884:6: a55= '+'
                            	            {
                            	            a55=(Token)match(input,88,FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15870); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a55, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 530));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 530));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18915:12: a56= '-'
                            	            {
                            	            a56=(Token)match(input,89,FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15908); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a56, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 531));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 531));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18946:12: a57= '/'
                            	            {
                            	            a57=(Token)match(input,90,FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature15946); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a57, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 532));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 532));
                            	              					
                            	            }

                            	            }
                            	            break;
                            	        case 4 :
                            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18977:12: a58= '*'
                            	            {
                            	            a58=(Token)match(input,91,FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15984); if (state.failed) return element;
                            	            if ( state.backtracking==0 ) {

                            	              						if (element == null) {
                            	              							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	              						}
                            	              						collectHiddenTokens(element);
                            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken)a58, element);
                            	              					
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              						// expected elements (follow set)
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 533));
                            	              						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 533));
                            	              					
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 534));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 534));
                            	      				
                            	    }
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19031:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
                            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19032:6: a59_0= parse_org_kermeta_language_behavior_Expression
                            	    {
                            	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16033);
                            	    a59_0=parse_org_kermeta_language_behavior_Expression();

                            	    state._fsp--;
                            	    if (state.failed) return element;
                            	    if ( state.backtracking==0 ) {

                            	      						if (terminateParsing) {
                            	      							throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                            	      						}
                            	      						if (element == null) {
                            	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallFeature();
                            	      						}
                            	      						if (a59_0 != null) {
                            	      							if (a59_0 != null) {
                            	      								addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.CALL_FEATURE__PARAMETERS, a59_0);
                            	      								completedElement(a59_0);
                            	      							}
                            	      							collectHiddenTokens(element);
                            	      							copyLocalizationInfos(a59_0, element); 						}
                            	      					
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {

                            	      					// expected elements (follow set)
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 535));
                            	      					addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 535));
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop104;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              			// expected elements (follow set)
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_355, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_356, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_357, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_358, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 536));
                              			addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 536));
                              		
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      		// expected elements (follow set)
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_326, 537));
                      		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_327, 537));
                      	
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_kermeta_language_behavior_CallFeature_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallFeature"


    // $ANTLR start "parse_org_kermeta_language_behavior_JavaStaticCall"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19199:1: parse_org_kermeta_language_behavior_JavaStaticCall returns [org.kermeta.language.behavior.JavaStaticCall element = null] : a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' ;
    public final org.kermeta.language.behavior.JavaStaticCall parse_org_kermeta_language_behavior_JavaStaticCall() throws RecognitionException {
        org.kermeta.language.behavior.JavaStaticCall element =  null;
        int parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.behavior.Expression a5_0 = null;

        org.kermeta.language.behavior.Expression a7_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19202:1: (a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19203:2: a0= 'extern' (a1= IDENTIFIER ) a2= '.' (a3= IDENTIFIER ) a4= '(' ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )? a8= ')'
            {
            a0=(Token)match(input,92,FOLLOW_92_in_parse_org_kermeta_language_behavior_JavaStaticCall16106); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_366, 538));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19215:2: (a1= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19216:3: a1= IDENTIFIER
            {
            a1=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16124); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a1 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a1).getLine(), ((org.antlr.runtime.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a1).getStartIndex(), ((org.antlr.runtime.CommonToken) a1).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JCLASS), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a1, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_367, 539));
              	
            }
            a2=(Token)match(input,86,FOLLOW_86_in_parse_org_kermeta_language_behavior_JavaStaticCall16145); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_368, 540));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19260:2: (a3= IDENTIFIER )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19261:3: a3= IDENTIFIER
            {
            a3=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16163); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
              			}
              			if (element == null) {
              				element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              			}
              			if (a3 != null) {
              				org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
              				tokenResolver.setOptions(getOptions());
              				org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__JMETHOD), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_369, 541));
              	
            }
            a4=(Token)match(input,32,FOLLOW_32_in_parse_org_kermeta_language_behavior_JavaStaticCall16184); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 542));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 542));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19324:2: ( ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==IDENTIFIER||(LA108_0>=INTEGER && LA108_0<=BOOLEAN)||LA108_0==32||LA108_0==37||LA108_0==55||LA108_0==69||(LA108_0>=72 && LA108_0<=73)||LA108_0==76||LA108_0==79||(LA108_0>=81 && LA108_0<=82)||LA108_0==85||(LA108_0>=92 && LA108_0<=93)||LA108_0==95) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19325:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19325:3: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )* )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19326:4: (a5_0= parse_org_kermeta_language_behavior_Expression ) ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    {
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19326:4: (a5_0= parse_org_kermeta_language_behavior_Expression )
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19327:5: a5_0= parse_org_kermeta_language_behavior_Expression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16213);
                    a5_0=parse_org_kermeta_language_behavior_Expression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                      					}
                      					if (a5_0 != null) {
                      						if (a5_0 != null) {
                      							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a5_0);
                      							completedElement(a5_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a5_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 543));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 543));
                      			
                    }
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19349:4: ( (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==24) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19350:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    {
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19350:5: (a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression ) )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19351:6: a6= ',' (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    {
                    	    a6=(Token)match(input,24,FOLLOW_24_in_parse_org_kermeta_language_behavior_JavaStaticCall16254); if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (element == null) {
                    	      							element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      						}
                    	      						collectHiddenTokens(element);
                    	      						copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 544));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 544));
                    	      					
                    	    }
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19381:6: (a7_0= parse_org_kermeta_language_behavior_Expression )
                    	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19382:7: a7_0= parse_org_kermeta_language_behavior_Expression
                    	    {
                    	    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16288);
                    	    a7_0=parse_org_kermeta_language_behavior_Expression();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      							if (terminateParsing) {
                    	      								throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
                    	      							}
                    	      							if (element == null) {
                    	      								element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
                    	      							}
                    	      							if (a7_0 != null) {
                    	      								if (a7_0 != null) {
                    	      									addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.JAVA_STATIC_CALL__PARAMETERS, a7_0);
                    	      									completedElement(a7_0);
                    	      								}
                    	      								collectHiddenTokens(element);
                    	      								copyLocalizationInfos(a7_0, element); 							}
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						// expected elements (follow set)
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 545));
                    	      						addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 545));
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 546));
                      				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 546));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 547));
              	
            }
            a8=(Token)match(input,33,FOLLOW_33_in_parse_org_kermeta_language_behavior_JavaStaticCall16362); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createJavaStaticCall();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 548));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 548));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_kermeta_language_behavior_JavaStaticCall_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_JavaStaticCall"


    // $ANTLR start "parse_org_kermeta_language_behavior_VoidLiteral"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19472:1: parse_org_kermeta_language_behavior_VoidLiteral returns [org.kermeta.language.behavior.VoidLiteral element = null] : a0= 'Void' ;
    public final org.kermeta.language.behavior.VoidLiteral parse_org_kermeta_language_behavior_VoidLiteral() throws RecognitionException {
        org.kermeta.language.behavior.VoidLiteral element =  null;
        int parse_org_kermeta_language_behavior_VoidLiteral_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19475:1: (a0= 'Void' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19476:2: a0= 'Void'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_org_kermeta_language_behavior_VoidLiteral16391); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createVoidLiteral();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 549));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 549));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_kermeta_language_behavior_VoidLiteral_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_VoidLiteral"


    // $ANTLR start "parse_org_kermeta_language_behavior_CallValue"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19526:1: parse_org_kermeta_language_behavior_CallValue returns [org.kermeta.language.behavior.CallValue element = null] : a0= 'value' ;
    public final org.kermeta.language.behavior.CallValue parse_org_kermeta_language_behavior_CallValue() throws RecognitionException {
        org.kermeta.language.behavior.CallValue element =  null;
        int parse_org_kermeta_language_behavior_CallValue_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19529:1: (a0= 'value' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19530:2: a0= 'value'
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_org_kermeta_language_behavior_CallValue16420); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createCallValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 550));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 550));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_kermeta_language_behavior_CallValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_CallValue"


    // $ANTLR start "parse_org_kermeta_language_behavior_EmptyExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19580:1: parse_org_kermeta_language_behavior_EmptyExpression returns [org.kermeta.language.behavior.EmptyExpression element = null] : a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.EmptyExpression parse_org_kermeta_language_behavior_EmptyExpression() throws RecognitionException {
        org.kermeta.language.behavior.EmptyExpression element =  null;
        int parse_org_kermeta_language_behavior_EmptyExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19583:1: (a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19584:2: a0= 'EmptyExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )* a14= '}'
            {
            a0=(Token)match(input,93,FOLLOW_93_in_parse_org_kermeta_language_behavior_EmptyExpression16449); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_370, 551));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_behavior_EmptyExpression16463); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 552));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 552));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19612:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=39 && LA110_0<=40)||LA110_0==47||LA110_0==94) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19613:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19613:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) )
            	    int alt109=4;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt109=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt109=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt109=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt109=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 109, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt109) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19614:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression16486); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_371, 553));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16506); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_372, 554));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19638:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19639:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16532); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 555));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 555));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19680:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_EmptyExpression16573); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_373, 556));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16593); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 557));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19704:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19705:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16619);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 558));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 558));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 558));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 558));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 558));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19731:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_behavior_EmptyExpression16655); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_374, 559));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16675); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 560));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 560));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19766:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19767:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression16701);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 561));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 561));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 561));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 561));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 561));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19793:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression16737); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_375, 562));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16757); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_376, 563));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19817:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19818:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16783); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.EMPTY_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 564));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 564));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 564));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 564));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 564));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_135, 565));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_136, 565));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_137, 565));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_138, 565));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_139, 565));
              	
            }
            a14=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_EmptyExpression16829); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createEmptyExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 566));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 566));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_kermeta_language_behavior_EmptyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_EmptyExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaExpression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19922:1: parse_org_kermeta_language_behavior_LambdaExpression returns [org.kermeta.language.behavior.LambdaExpression element = null] : a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' ;
    public final org.kermeta.language.behavior.LambdaExpression parse_org_kermeta_language_behavior_LambdaExpression() throws RecognitionException {
        org.kermeta.language.behavior.LambdaExpression element =  null;
        int parse_org_kermeta_language_behavior_LambdaExpression_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a12=null;
        Token a13=null;
        Token a14=null;
        Token a15=null;
        Token a17=null;
        Token a18=null;
        Token a20=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.structure.Type a10_0 = null;

        org.kermeta.language.behavior.LambdaParameter a16_0 = null;

        org.kermeta.language.behavior.Expression a19_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19925:1: (a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19926:2: a0= 'LambdaExpression' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )* a20= '}'
            {
            a0=(Token)match(input,95,FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression16858); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_377, 567));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_behavior_LambdaExpression16872); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 568));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 568));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 568));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 568));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 568));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 568));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 568));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19956:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( ((LA112_0>=39 && LA112_0<=40)||LA112_0==47||LA112_0==94||(LA112_0>=96 && LA112_0<=97)) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19957:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19957:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type ) | a11= 'staticType' a12= ':' (a13= IDENTIFIER ) | a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter ) | a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression ) )
            	    int alt111=6;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt111=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt111=2;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt111=3;
            	        }
            	        break;
            	    case 94:
            	        {
            	        alt111=4;
            	        }
            	        break;
            	    case 96:
            	        {
            	        alt111=5;
            	        }
            	        break;
            	    case 97:
            	        {
            	        alt111=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 111, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt111) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19958:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression16895); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_378, 569));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16915); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_379, 570));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19982:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19983:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16941); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 571));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 571));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20026:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaExpression16982); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_380, 572));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17002); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 573));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20050:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20051:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression17028);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 574));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 574));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20079:8: a8= 'containedType' a9= ':' (a10_0= parse_org_kermeta_language_structure_Type )
            	            {
            	            a8=(Token)match(input,47,FOLLOW_47_in_parse_org_kermeta_language_behavior_LambdaExpression17064); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_381, 575));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17084); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_82, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_22, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_23, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_154, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_155, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_24, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_25, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_194, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_195, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_196, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_197, 576));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_198, 576));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20114:4: (a10_0= parse_org_kermeta_language_structure_Type )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20115:5: a10_0= parse_org_kermeta_language_structure_Type
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression17110);
            	            a10_0=parse_org_kermeta_language_structure_Type();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a10_0 != null) {
            	              						if (a10_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__CONTAINED_TYPE, a10_0);
            	              							completedElement(a10_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a10_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 577));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 577));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20143:8: a11= 'staticType' a12= ':' (a13= IDENTIFIER )
            	            {
            	            a11=(Token)match(input,94,FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression17146); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_382, 578));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17166); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_383, 579));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20167:4: (a13= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20168:5: a13= IDENTIFIER
            	            {
            	            a13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression17192); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a13 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a13.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a13).getLine(), ((org.antlr.runtime.CommonToken) a13).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a13).getStartIndex(), ((org.antlr.runtime.CommonToken) a13).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Class proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createClass();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.behavior.Expression, org.kermeta.language.structure.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getExpressionStaticTypeReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), resolved, proxy);
            	              						if (proxy != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__STATIC_TYPE), proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a13, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 580));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 580));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 580));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 580));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 580));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 580));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 580));
            	              			
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20211:8: a14= 'parameters' a15= ':' (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            {
            	            a14=(Token)match(input,96,FOLLOW_96_in_parse_org_kermeta_language_behavior_LambdaExpression17233); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_384, 581));
            	              			
            	            }
            	            a15=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17253); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a15, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_385, 582));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20235:4: (a16_0= parse_org_kermeta_language_behavior_LambdaParameter )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20236:5: a16_0= parse_org_kermeta_language_behavior_LambdaParameter
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17279);
            	            a16_0=parse_org_kermeta_language_behavior_LambdaParameter();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a16_0 != null) {
            	              						if (a16_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__PARAMETERS, a16_0);
            	              							completedElement(a16_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a16_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 583));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 583));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 583));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 583));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 583));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 583));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 583));
            	              			
            	            }

            	            }
            	            break;
            	        case 6 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20264:8: a17= 'body' a18= ':' (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            {
            	            a17=(Token)match(input,97,FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17315); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a17, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_386, 584));
            	              			
            	            }
            	            a18=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17335); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a18, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_51, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_55, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_56, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_64, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_66, 585));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_67, 585));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20306:4: (a19_0= parse_org_kermeta_language_behavior_Expression )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20307:5: a19_0= parse_org_kermeta_language_behavior_Expression
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17361);
            	            a19_0=parse_org_kermeta_language_behavior_Expression();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
            	              					}
            	              					if (a19_0 != null) {
            	              						if (a19_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_EXPRESSION__BODY), a19_0);
            	              							completedElement(a19_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a19_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 586));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 586));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 587));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 587));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 587));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 587));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 587));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 587));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 587));
              	
            }
            a20=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaExpression17402); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaExpression();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a20, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_48, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_5, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_6, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_7, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_8, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_9, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_41, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_306, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_307, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_308, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_309, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_50, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_60, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_52, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_58, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_61, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_62, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_63, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_54, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_53, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_59, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_57, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_65, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_310, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_311, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_312, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_313, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_314, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_315, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_316, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 588));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 588));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_kermeta_language_behavior_LambdaExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaExpression"


    // $ANTLR start "parse_org_kermeta_language_behavior_LambdaParameter"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20397:1: parse_org_kermeta_language_behavior_LambdaParameter returns [org.kermeta.language.behavior.LambdaParameter element = null] : a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' ;
    public final org.kermeta.language.behavior.LambdaParameter parse_org_kermeta_language_behavior_LambdaParameter() throws RecognitionException {
        org.kermeta.language.behavior.LambdaParameter element =  null;
        int parse_org_kermeta_language_behavior_LambdaParameter_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        Token a9=null;
        Token a10=null;
        Token a11=null;
        Token a12=null;
        Token a14=null;
        org.kermeta.language.structure.Tag a7_0 = null;

        org.kermeta.language.behavior.TypeReference a13_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20400:1: (a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}' )
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20401:2: a0= 'LambdaParameter' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )* a14= '}'
            {
            a0=(Token)match(input,98,FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaParameter17431); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_387, 589));
              	
            }
            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_kermeta_language_behavior_LambdaParameter17445); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 590));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 590));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 590));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 590));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 590));
              	
            }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20429:2: ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( ((LA114_0>=39 && LA114_0<=40)||LA114_0==44||LA114_0==49) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20430:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    {
            	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20430:3: (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) | a8= 'name' a9= ':' (a10= IDENTIFIER ) | a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference ) )
            	    int alt113=4;
            	    switch ( input.LA(1) ) {
            	    case 39:
            	        {
            	        alt113=1;
            	        }
            	        break;
            	    case 40:
            	        {
            	        alt113=2;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt113=3;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt113=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 113, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt113) {
            	        case 1 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20431:4: a2= 'tag' a3= ':' (a4= IDENTIFIER )
            	            {
            	            a2=(Token)match(input,39,FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter17468); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a2, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_388, 591));
            	              			
            	            }
            	            a3=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17488); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_389, 592));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20455:4: (a4= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20456:5: a4= IDENTIFIER
            	            {
            	            a4=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17514); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a4 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a4).getLine(), ((org.antlr.runtime.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a4).getStartIndex(), ((org.antlr.runtime.CommonToken) a4).getStopIndex());
            	              						}
            	              						String resolved = (String) resolvedObject;
            	              						org.kermeta.language.structure.Tag proxy = org.kermeta.language.structure.StructureFactory.eINSTANCE.createTag();
            	              						collectHiddenTokens(element);
            	              						registerContextDependentProxy(new org.kermeta.language.emftexteditor.mopp.KermetaContextDependentURIFragmentFactory<org.kermeta.language.structure.Object, org.kermeta.language.structure.Tag>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getObjectTagReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG), resolved, proxy);
            	              						if (proxy != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TAG, proxy);
            	              							completedElement(proxy);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a4, proxy);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 593));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 593));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20497:8: a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag )
            	            {
            	            a5=(Token)match(input,40,FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaParameter17555); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_390, 594));
            	              			
            	            }
            	            a6=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17575); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_164, 595));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20521:4: (a7_0= parse_org_kermeta_language_structure_Tag )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20522:5: a7_0= parse_org_kermeta_language_structure_Tag
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17601);
            	            a7_0=parse_org_kermeta_language_structure_Tag();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a7_0 != null) {
            	              						if (a7_0 != null) {
            	              							addObjectToList(element, org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__OWNED_TAGS, a7_0);
            	              							completedElement(a7_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a7_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 596));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 596));
            	              			
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20548:8: a8= 'name' a9= ':' (a10= IDENTIFIER )
            	            {
            	            a8=(Token)match(input,44,FOLLOW_44_in_parse_org_kermeta_language_behavior_LambdaParameter17637); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_391, 597));
            	              			
            	            }
            	            a9=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17657); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_392, 598));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20572:4: (a10= IDENTIFIER )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20573:5: a10= IDENTIFIER
            	            {
            	            a10=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17683); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a10 != null) {
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IDENTIFIER");
            	              						tokenResolver.setOptions(getOptions());
            	              						org.kermeta.language.emftexteditor.IKermetaTokenResolveResult result = getFreshTokenResolveResult();
            	              						tokenResolver.resolve(a10.getText(), element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), result);
            	              						java.lang.Object resolvedObject = result.getResolvedToken();
            	              						if (resolvedObject == null) {
            	              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a10).getLine(), ((org.antlr.runtime.CommonToken) a10).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a10).getStartIndex(), ((org.antlr.runtime.CommonToken) a10).getStopIndex());
            	              						}
            	              						java.lang.String resolved = (java.lang.String)resolvedObject;
            	              						if (resolved != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__NAME), resolved);
            	              							completedElement(resolved);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a10, element);
            	              					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 599));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 599));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 599));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 599));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 599));
            	              			
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20610:8: a11= 'type' a12= ':' (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            {
            	            a11=(Token)match(input,49,FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaParameter17724); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_393, 600));
            	              			
            	            }
            	            a12=(Token)match(input,27,FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17744); if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              				if (element == null) {
            	              					element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              				}
            	              				collectHiddenTokens(element);
            	              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	              			
            	            }
            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_14, 601));
            	              			
            	            }
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20634:4: (a13_0= parse_org_kermeta_language_behavior_TypeReference )
            	            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20635:5: a13_0= parse_org_kermeta_language_behavior_TypeReference
            	            {
            	            pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter17770);
            	            a13_0=parse_org_kermeta_language_behavior_TypeReference();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new org.kermeta.language.emftexteditor.mopp.KermetaTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
            	              					}
            	              					if (a13_0 != null) {
            	              						if (a13_0 != null) {
            	              							element.eSet(element.eClass().getEStructuralFeature(org.kermeta.language.behavior.BehaviorPackage.LAMBDA_PARAMETER__TYPE), a13_0);
            	              							completedElement(a13_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a13_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 602));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 602));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 602));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 602));
            	              				addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 602));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_242, 603));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_243, 603));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_244, 603));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_245, 603));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_246, 603));
              	
            }
            a14=(Token)match(input,18,FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaParameter17811); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = org.kermeta.language.behavior.BehaviorFactory.eINSTANCE.createLambdaParameter();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a14, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_140, 604));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_141, 604));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_142, 604));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_143, 604));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_144, 604));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_145, 604));
              		addExpectedElement(new org.kermeta.language.emftexteditor.mopp.KermetaExpectedTerminal(TERMINAL_146, 604));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_kermeta_language_behavior_LambdaParameter_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_LambdaParameter"


    // $ANTLR start "parse_org_kermeta_language_behavior_Expression"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20691:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );
    public final org.kermeta.language.behavior.Expression parse_org_kermeta_language_behavior_Expression() throws RecognitionException {
        org.kermeta.language.behavior.Expression element =  null;
        int parse_org_kermeta_language_behavior_Expression_StartIndex = input.index();
        org.kermeta.language.behavior.Block c0 = null;

        org.kermeta.language.behavior.Raise c1 = null;

        org.kermeta.language.behavior.BooleanLiteral c2 = null;

        org.kermeta.language.behavior.IntegerLiteral c3 = null;

        org.kermeta.language.behavior.StringLiteral c4 = null;

        org.kermeta.language.behavior.Conditional c5 = null;

        org.kermeta.language.behavior.Loop c6 = null;

        org.kermeta.language.behavior.VariableDecl c7 = null;

        org.kermeta.language.behavior.TypeLiteral c8 = null;

        org.kermeta.language.behavior.CallResult c9 = null;

        org.kermeta.language.behavior.CallSuperOperation c10 = null;

        org.kermeta.language.behavior.Assignment c11 = null;

        org.kermeta.language.behavior.CallVariable c12 = null;

        org.kermeta.language.behavior.SelfExpression c13 = null;

        org.kermeta.language.behavior.CallFeature c14 = null;

        org.kermeta.language.behavior.JavaStaticCall c15 = null;

        org.kermeta.language.behavior.VoidLiteral c16 = null;

        org.kermeta.language.behavior.CallValue c17 = null;

        org.kermeta.language.behavior.EmptyExpression c18 = null;

        org.kermeta.language.behavior.LambdaExpression c19 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20692:1: (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression )
            int alt115=20;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20693:2: c0= parse_org_kermeta_language_behavior_Block
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression17836);
                    c0=parse_org_kermeta_language_behavior_Block();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20694:4: c1= parse_org_kermeta_language_behavior_Raise
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression17846);
                    c1=parse_org_kermeta_language_behavior_Raise();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20695:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression17856);
                    c2=parse_org_kermeta_language_behavior_BooleanLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20696:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression17866);
                    c3=parse_org_kermeta_language_behavior_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20697:4: c4= parse_org_kermeta_language_behavior_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression17876);
                    c4=parse_org_kermeta_language_behavior_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20698:4: c5= parse_org_kermeta_language_behavior_Conditional
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression17886);
                    c5=parse_org_kermeta_language_behavior_Conditional();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20699:4: c6= parse_org_kermeta_language_behavior_Loop
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression17896);
                    c6=parse_org_kermeta_language_behavior_Loop();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20700:4: c7= parse_org_kermeta_language_behavior_VariableDecl
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression17906);
                    c7=parse_org_kermeta_language_behavior_VariableDecl();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20701:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression17916);
                    c8=parse_org_kermeta_language_behavior_TypeLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20702:4: c9= parse_org_kermeta_language_behavior_CallResult
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression17926);
                    c9=parse_org_kermeta_language_behavior_CallResult();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20703:4: c10= parse_org_kermeta_language_behavior_CallSuperOperation
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression17936);
                    c10=parse_org_kermeta_language_behavior_CallSuperOperation();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20704:4: c11= parse_org_kermeta_language_behavior_Assignment
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression17946);
                    c11=parse_org_kermeta_language_behavior_Assignment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20705:4: c12= parse_org_kermeta_language_behavior_CallVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression17956);
                    c12=parse_org_kermeta_language_behavior_CallVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20706:4: c13= parse_org_kermeta_language_behavior_SelfExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression17966);
                    c13=parse_org_kermeta_language_behavior_SelfExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20707:4: c14= parse_org_kermeta_language_behavior_CallFeature
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression17976);
                    c14=parse_org_kermeta_language_behavior_CallFeature();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20708:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression17986);
                    c15=parse_org_kermeta_language_behavior_JavaStaticCall();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20709:4: c16= parse_org_kermeta_language_behavior_VoidLiteral
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression17996);
                    c16=parse_org_kermeta_language_behavior_VoidLiteral();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20710:4: c17= parse_org_kermeta_language_behavior_CallValue
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression18006);
                    c17=parse_org_kermeta_language_behavior_CallValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20711:4: c18= parse_org_kermeta_language_behavior_EmptyExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression18016);
                    c18=parse_org_kermeta_language_behavior_EmptyExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20712:4: c19= parse_org_kermeta_language_behavior_LambdaExpression
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression18026);
                    c19=parse_org_kermeta_language_behavior_LambdaExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_kermeta_language_behavior_Expression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_behavior_Expression"


    // $ANTLR start "parse_org_kermeta_language_structure_Type"
    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20716:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );
    public final org.kermeta.language.structure.Type parse_org_kermeta_language_structure_Type() throws RecognitionException {
        org.kermeta.language.structure.Type element =  null;
        int parse_org_kermeta_language_structure_Type_StartIndex = input.index();
        org.kermeta.language.structure.Class c0 = null;

        org.kermeta.language.structure.Enumeration c1 = null;

        org.kermeta.language.structure.PrimitiveType c2 = null;

        org.kermeta.language.structure.UnresolvedType c3 = null;

        org.kermeta.language.structure.VoidType c4 = null;

        org.kermeta.language.structure.ModelType c5 = null;

        org.kermeta.language.structure.ObjectTypeVariable c6 = null;

        org.kermeta.language.structure.ModelTypeVariable c7 = null;

        org.kermeta.language.structure.VirtualType c8 = null;

        org.kermeta.language.structure.ProductType c9 = null;

        org.kermeta.language.structure.FunctionType c10 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }
            // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20717:1: (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType )
            int alt116=11;
            alt116 = dfa116.predict(input);
            switch (alt116) {
                case 1 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20718:2: c0= parse_org_kermeta_language_structure_Class
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type18047);
                    c0=parse_org_kermeta_language_structure_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20719:4: c1= parse_org_kermeta_language_structure_Enumeration
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type18057);
                    c1=parse_org_kermeta_language_structure_Enumeration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20720:4: c2= parse_org_kermeta_language_structure_PrimitiveType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type18067);
                    c2=parse_org_kermeta_language_structure_PrimitiveType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20721:4: c3= parse_org_kermeta_language_structure_UnresolvedType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type18077);
                    c3=parse_org_kermeta_language_structure_UnresolvedType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20722:4: c4= parse_org_kermeta_language_structure_VoidType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type18087);
                    c4=parse_org_kermeta_language_structure_VoidType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20723:4: c5= parse_org_kermeta_language_structure_ModelType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type18097);
                    c5=parse_org_kermeta_language_structure_ModelType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20724:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type18107);
                    c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20725:4: c7= parse_org_kermeta_language_structure_ModelTypeVariable
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type18117);
                    c7=parse_org_kermeta_language_structure_ModelTypeVariable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20726:4: c8= parse_org_kermeta_language_structure_VirtualType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type18127);
                    c8=parse_org_kermeta_language_structure_VirtualType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20727:4: c9= parse_org_kermeta_language_structure_ProductType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type18137);
                    c9=parse_org_kermeta_language_structure_ProductType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20728:4: c10= parse_org_kermeta_language_structure_FunctionType
                    {
                    pushFollow(FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type18147);
                    c10=parse_org_kermeta_language_structure_FunctionType();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_kermeta_language_structure_Type_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_org_kermeta_language_structure_Type"

    // $ANTLR start synpred1_Kermeta
    public final void synpred1_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4421:3: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4421:3: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_Kermeta

    // $ANTLR start synpred3_Kermeta
    public final void synpred3_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4423:8: (c2= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4423:8: c2= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110);
        c2=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_Kermeta

    // $ANTLR start synpred4_Kermeta
    public final void synpred4_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4424:8: (c3= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4424:8: c3= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124);
        c3=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_Kermeta

    // $ANTLR start synpred5_Kermeta
    public final void synpred5_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4425:8: (c4= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4425:8: c4= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138);
        c4=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_Kermeta

    // $ANTLR start synpred6_Kermeta
    public final void synpred6_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4426:8: (c5= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4426:8: c5= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152);
        c5=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_Kermeta

    // $ANTLR start synpred10_Kermeta
    public final void synpred10_Kermeta_fragment() throws RecognitionException {   
        Token a1=null;
        org.kermeta.language.structure.Package a2_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4626:3: ( (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4626:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4626:3: (a1= '::' (a2_0= parse_org_kermeta_language_structure_Package ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4627:4: a1= '::' (a2_0= parse_org_kermeta_language_structure_Package )
        {
        a1=(Token)match(input,16,FOLLOW_16_in_synpred10_Kermeta471); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4640:4: (a2_0= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4641:5: a2_0= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred10_Kermeta497);
        a2_0=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_Kermeta

    // $ANTLR start synpred14_Kermeta
    public final void synpred14_Kermeta_fragment() throws RecognitionException {   
        Token a3=null;
        Token a5=null;
        Token a6=null;
        Token a8=null;
        org.kermeta.language.structure.Package a4_0 = null;

        org.kermeta.language.structure.TypeDefinition a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4678:3: ( (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4678:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4678:3: (a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}' | a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}' )
        int alt120=2;
        int LA120_0 = input.LA(1);

        if ( (LA120_0==17) ) {
            switch ( input.LA(2) ) {
            case IDENTIFIER:
                {
                int LA120_2 = input.LA(3);

                if ( (LA120_2==42||LA120_2==53) ) {
                    alt120=2;
                }
                else if ( (LA120_2==IDENTIFIER||(LA120_2>=16 && LA120_2<=19)) ) {
                    alt120=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 120, 2, input);

                    throw nvae;
                }
                }
                break;
            case 18:
            case 19:
                {
                alt120=1;
                }
                break;
            case PRIMITIVE_TYPE:
            case 20:
            case 21:
            case 22:
            case 35:
            case 42:
            case 53:
                {
                alt120=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 1, input);

                throw nvae;
            }

        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 120, 0, input);

            throw nvae;
        }
        switch (alt120) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4679:4: a3= '{' ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )* a5= '}'
                {
                a3=(Token)match(input,17,FOLLOW_17_in_synpred14_Kermeta547); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4693:4: ( ( (a4_0= parse_org_kermeta_language_structure_Package ) ) )*
                loop118:
                do {
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==IDENTIFIER||LA118_0==19) ) {
                        alt118=1;
                    }


                    switch (alt118) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4694:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4694:5: ( (a4_0= parse_org_kermeta_language_structure_Package ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4695:6: (a4_0= parse_org_kermeta_language_structure_Package )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4695:6: (a4_0= parse_org_kermeta_language_structure_Package )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4696:7: a4_0= parse_org_kermeta_language_structure_Package
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred14_Kermeta588);
                	    a4_0=parse_org_kermeta_language_structure_Package();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop118;
                    }
                } while (true);

                a5=(Token)match(input,18,FOLLOW_18_in_synpred14_Kermeta649); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4745:8: a6= '{' ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a8= '}'
                {
                a6=(Token)match(input,17,FOLLOW_17_in_synpred14_Kermeta677); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4765:4: ( ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt119=0;
                loop119:
                do {
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( ((LA119_0>=IDENTIFIER && LA119_0<=PRIMITIVE_TYPE)||(LA119_0>=20 && LA119_0<=22)||LA119_0==35||LA119_0==42||LA119_0==53) ) {
                        alt119=1;
                    }


                    switch (alt119) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4766:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4766:5: ( (a7_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4767:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4767:6: (a7_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4768:7: a7_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred14_Kermeta718);
                	    a7_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt119 >= 1 ) break loop119;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(119, input);
                            throw eee;
                    }
                    cnt119++;
                } while (true);

                a8=(Token)match(input,18,FOLLOW_18_in_synpred14_Kermeta779); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred14_Kermeta

    // $ANTLR start synpred16_Kermeta
    public final void synpred16_Kermeta_fragment() throws RecognitionException {   
        Token a11=null;
        org.kermeta.language.structure.Package a12_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4895:3: ( (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4895:3: (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4895:3: (a11= '::' (a12_0= parse_org_kermeta_language_structure_Package ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4896:4: a11= '::' (a12_0= parse_org_kermeta_language_structure_Package )
        {
        a11=(Token)match(input,16,FOLLOW_16_in_synpred16_Kermeta864); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4909:4: (a12_0= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4910:5: a12_0= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred16_Kermeta890);
        a12_0=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred16_Kermeta

    // $ANTLR start synpred20_Kermeta
    public final void synpred20_Kermeta_fragment() throws RecognitionException {   
        Token a13=null;
        Token a15=null;
        Token a16=null;
        Token a18=null;
        org.kermeta.language.structure.Package a14_0 = null;

        org.kermeta.language.structure.TypeDefinition a17_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4953:3: ( (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4953:3: (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4953:3: (a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}' | a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}' )
        int alt129=2;
        int LA129_0 = input.LA(1);

        if ( (LA129_0==17) ) {
            switch ( input.LA(2) ) {
            case IDENTIFIER:
                {
                int LA129_2 = input.LA(3);

                if ( (LA129_2==42||LA129_2==53) ) {
                    alt129=2;
                }
                else if ( (LA129_2==IDENTIFIER||(LA129_2>=16 && LA129_2<=19)) ) {
                    alt129=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 129, 2, input);

                    throw nvae;
                }
                }
                break;
            case 18:
            case 19:
                {
                alt129=1;
                }
                break;
            case PRIMITIVE_TYPE:
            case 20:
            case 21:
            case 22:
            case 35:
            case 42:
            case 53:
                {
                alt129=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 1, input);

                throw nvae;
            }

        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 129, 0, input);

            throw nvae;
        }
        switch (alt129) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4954:4: a13= '{' ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )* a15= '}'
                {
                a13=(Token)match(input,17,FOLLOW_17_in_synpred20_Kermeta940); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4968:4: ( ( (a14_0= parse_org_kermeta_language_structure_Package ) ) )*
                loop127:
                do {
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==IDENTIFIER||LA127_0==19) ) {
                        alt127=1;
                    }


                    switch (alt127) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4969:5: ( (a14_0= parse_org_kermeta_language_structure_Package ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4969:5: ( (a14_0= parse_org_kermeta_language_structure_Package ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4970:6: (a14_0= parse_org_kermeta_language_structure_Package )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4970:6: (a14_0= parse_org_kermeta_language_structure_Package )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:4971:7: a14_0= parse_org_kermeta_language_structure_Package
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred20_Kermeta981);
                	    a14_0=parse_org_kermeta_language_structure_Package();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop127;
                    }
                } while (true);

                a15=(Token)match(input,18,FOLLOW_18_in_synpred20_Kermeta1042); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5020:8: a16= '{' ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+ a18= '}'
                {
                a16=(Token)match(input,17,FOLLOW_17_in_synpred20_Kermeta1070); if (state.failed) return ;
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5040:4: ( ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) ) )+
                int cnt128=0;
                loop128:
                do {
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( ((LA128_0>=IDENTIFIER && LA128_0<=PRIMITIVE_TYPE)||(LA128_0>=20 && LA128_0<=22)||LA128_0==35||LA128_0==42||LA128_0==53) ) {
                        alt128=1;
                    }


                    switch (alt128) {
                	case 1 :
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5041:5: ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5041:5: ( (a17_0= parse_org_kermeta_language_structure_TypeDefinition ) )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5042:6: (a17_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    {
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5042:6: (a17_0= parse_org_kermeta_language_structure_TypeDefinition )
                	    // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5043:7: a17_0= parse_org_kermeta_language_structure_TypeDefinition
                	    {
                	    pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred20_Kermeta1111);
                	    a17_0=parse_org_kermeta_language_structure_TypeDefinition();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    if ( cnt128 >= 1 ) break loop128;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(128, input);
                            throw eee;
                    }
                    cnt128++;
                } while (true);

                a18=(Token)match(input,18,FOLLOW_18_in_synpred20_Kermeta1172); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred20_Kermeta

    // $ANTLR start synpred25_Kermeta
    public final void synpred25_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5349:3: ( ( (a9_0= parse_org_kermeta_language_structure_Constraint ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5349:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5349:3: ( (a9_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5350:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5350:4: (a9_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5351:5: a9_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred25_Kermeta1568);
        a9_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred25_Kermeta

    // $ANTLR start synpred34_Kermeta
    public final void synpred34_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5908:3: ( (a0_0= parse_org_kermeta_language_structure_Constraint ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5908:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5908:3: (a0_0= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:5909:4: a0_0= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred34_Kermeta2207);
        a0_0=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_Kermeta

    // $ANTLR start synpred46_Kermeta
    public final void synpred46_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelingUnit c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7356:2: (c0= parse_org_kermeta_language_structure_ModelingUnit )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7356:2: c0= parse_org_kermeta_language_structure_ModelingUnit
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred46_Kermeta3728);
        c0=parse_org_kermeta_language_structure_ModelingUnit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_Kermeta

    // $ANTLR start synpred47_Kermeta
    public final void synpred47_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Using c1 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7357:4: (c1= parse_org_kermeta_language_structure_Using )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7357:4: c1= parse_org_kermeta_language_structure_Using
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred47_Kermeta3738);
        c1=parse_org_kermeta_language_structure_Using();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_Kermeta

    // $ANTLR start synpred48_Kermeta
    public final void synpred48_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Require c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7358:4: (c2= parse_org_kermeta_language_structure_Require )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7358:4: c2= parse_org_kermeta_language_structure_Require
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred48_Kermeta3748);
        c2=parse_org_kermeta_language_structure_Require();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_Kermeta

    // $ANTLR start synpred49_Kermeta
    public final void synpred49_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Package c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7359:4: (c3= parse_org_kermeta_language_structure_Package )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7359:4: c3= parse_org_kermeta_language_structure_Package
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred49_Kermeta3758);
        c3=parse_org_kermeta_language_structure_Package();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_Kermeta

    // $ANTLR start synpred50_Kermeta
    public final void synpred50_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ClassDefinition c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7360:4: (c4= parse_org_kermeta_language_structure_ClassDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7360:4: c4= parse_org_kermeta_language_structure_ClassDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred50_Kermeta3768);
        c4=parse_org_kermeta_language_structure_ClassDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_Kermeta

    // $ANTLR start synpred51_Kermeta
    public final void synpred51_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Property c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7361:4: (c5= parse_org_kermeta_language_structure_Property )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7361:4: c5= parse_org_kermeta_language_structure_Property
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred51_Kermeta3778);
        c5=parse_org_kermeta_language_structure_Property();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_Kermeta

    // $ANTLR start synpred52_Kermeta
    public final void synpred52_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Operation c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7362:4: (c6= parse_org_kermeta_language_structure_Operation )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7362:4: c6= parse_org_kermeta_language_structure_Operation
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred52_Kermeta3788);
        c6=parse_org_kermeta_language_structure_Operation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_Kermeta

    // $ANTLR start synpred53_Kermeta
    public final void synpred53_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Parameter c7 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7363:4: (c7= parse_org_kermeta_language_structure_Parameter )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7363:4: c7= parse_org_kermeta_language_structure_Parameter
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred53_Kermeta3798);
        c7=parse_org_kermeta_language_structure_Parameter();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_Kermeta

    // $ANTLR start synpred54_Kermeta
    public final void synpred54_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7364:4: (c8= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7364:4: c8= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred54_Kermeta3808);
        c8=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_Kermeta

    // $ANTLR start synpred55_Kermeta
    public final void synpred55_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Enumeration c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7365:4: (c9= parse_org_kermeta_language_structure_Enumeration )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7365:4: c9= parse_org_kermeta_language_structure_Enumeration
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred55_Kermeta3818);
        c9=parse_org_kermeta_language_structure_Enumeration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_Kermeta

    // $ANTLR start synpred56_Kermeta
    public final void synpred56_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.EnumerationLiteral c10 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7366:4: (c10= parse_org_kermeta_language_structure_EnumerationLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7366:4: c10= parse_org_kermeta_language_structure_EnumerationLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred56_Kermeta3828);
        c10=parse_org_kermeta_language_structure_EnumerationLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_Kermeta

    // $ANTLR start synpred57_Kermeta
    public final void synpred57_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Constraint c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7367:4: (c11= parse_org_kermeta_language_structure_Constraint )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7367:4: c11= parse_org_kermeta_language_structure_Constraint
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred57_Kermeta3838);
        c11=parse_org_kermeta_language_structure_Constraint();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_Kermeta

    // $ANTLR start synpred58_Kermeta
    public final void synpred58_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.PrimitiveType c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7368:4: (c12= parse_org_kermeta_language_structure_PrimitiveType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7368:4: c12= parse_org_kermeta_language_structure_PrimitiveType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred58_Kermeta3848);
        c12=parse_org_kermeta_language_structure_PrimitiveType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_Kermeta

    // $ANTLR start synpred59_Kermeta
    public final void synpred59_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:4: (c13= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7369:4: c13= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred59_Kermeta3858);
        c13=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred59_Kermeta

    // $ANTLR start synpred60_Kermeta
    public final void synpred60_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VoidType c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7370:4: (c14= parse_org_kermeta_language_structure_VoidType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7370:4: c14= parse_org_kermeta_language_structure_VoidType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred60_Kermeta3868);
        c14=parse_org_kermeta_language_structure_VoidType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_Kermeta

    // $ANTLR start synpred62_Kermeta
    public final void synpred62_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c16 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7372:4: (c16= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7372:4: c16= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred62_Kermeta3888);
        c16=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_Kermeta

    // $ANTLR start synpred64_Kermeta
    public final void synpred64_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.MultiplicityElement c18 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7374:4: (c18= parse_org_kermeta_language_structure_MultiplicityElement )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7374:4: c18= parse_org_kermeta_language_structure_MultiplicityElement
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred64_Kermeta3908);
        c18=parse_org_kermeta_language_structure_MultiplicityElement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_Kermeta

    // $ANTLR start synpred65_Kermeta
    public final void synpred65_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.TypeDefinition c19 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7375:4: (c19= parse_org_kermeta_language_structure_TypeDefinition )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7375:4: c19= parse_org_kermeta_language_structure_TypeDefinition
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred65_Kermeta3918);
        c19=parse_org_kermeta_language_structure_TypeDefinition();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_Kermeta

    // $ANTLR start synpred67_Kermeta
    public final void synpred67_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c21 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7377:4: (c21= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7377:4: c21= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred67_Kermeta3938);
        c21=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_Kermeta

    // $ANTLR start synpred69_Kermeta
    public final void synpred69_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c23 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:4: (c23= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7379:4: c23= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred69_Kermeta3958);
        c23=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_Kermeta

    // $ANTLR start synpred74_Kermeta
    public final void synpred74_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeReference c28 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7384:4: (c28= parse_org_kermeta_language_behavior_TypeReference )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7384:4: c28= parse_org_kermeta_language_behavior_TypeReference
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred74_Kermeta4008);
        c28=parse_org_kermeta_language_behavior_TypeReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_Kermeta

    // $ANTLR start synpred76_Kermeta
    public final void synpred76_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c30 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7386:4: (c30= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7386:4: c30= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred76_Kermeta4028);
        c30=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred76_Kermeta

    // $ANTLR start synpred77_Kermeta
    public final void synpred77_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c31 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7387:4: (c31= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7387:4: c31= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred77_Kermeta4038);
        c31=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred77_Kermeta

    // $ANTLR start synpred78_Kermeta
    public final void synpred78_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c32 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7388:4: (c32= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7388:4: c32= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred78_Kermeta4048);
        c32=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred78_Kermeta

    // $ANTLR start synpred82_Kermeta
    public final void synpred82_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c36 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7392:4: (c36= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7392:4: c36= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred82_Kermeta4088);
        c36=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_Kermeta

    // $ANTLR start synpred83_Kermeta
    public final void synpred83_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c37 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7393:4: (c37= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7393:4: c37= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred83_Kermeta4098);
        c37=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_Kermeta

    // $ANTLR start synpred85_Kermeta
    public final void synpred85_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c39 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7395:4: (c39= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7395:4: c39= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred85_Kermeta4118);
        c39=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred85_Kermeta

    // $ANTLR start synpred86_Kermeta
    public final void synpred86_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c40 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7396:4: (c40= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7396:4: c40= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred86_Kermeta4128);
        c40=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_Kermeta

    // $ANTLR start synpred87_Kermeta
    public final void synpred87_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c41 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7397:4: (c41= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7397:4: c41= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred87_Kermeta4138);
        c41=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_Kermeta

    // $ANTLR start synpred88_Kermeta
    public final void synpred88_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c42 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7398:4: (c42= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7398:4: c42= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred88_Kermeta4148);
        c42=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_Kermeta

    // $ANTLR start synpred89_Kermeta
    public final void synpred89_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c43 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7399:4: (c43= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7399:4: c43= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred89_Kermeta4158);
        c43=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_Kermeta

    // $ANTLR start synpred90_Kermeta
    public final void synpred90_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.VoidLiteral c44 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7400:4: (c44= parse_org_kermeta_language_behavior_VoidLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:7400:4: c44= parse_org_kermeta_language_behavior_VoidLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred90_Kermeta4168);
        c44=parse_org_kermeta_language_behavior_VoidLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_Kermeta

    // $ANTLR start synpred107_Kermeta
    public final void synpred107_Kermeta_fragment() throws RecognitionException {   
        Token a0=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8448:3: ( (a0= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8448:3: (a0= IDENTIFIER )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8448:3: (a0= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:8449:4: a0= IDENTIFIER
        {
        a0=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred107_Kermeta5518); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred107_Kermeta

    // $ANTLR start synpred170_Kermeta
    public final void synpred170_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12699:8: ( (a4_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12699:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12699:8: (a4_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12700:5: a4_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred170_Kermeta10550);
        a4_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred170_Kermeta

    // $ANTLR start synpred171_Kermeta
    public final void synpred171_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12737:8: ( (a5_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12737:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12737:8: (a5_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12738:5: a5_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred171_Kermeta10592);
        a5_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred171_Kermeta

    // $ANTLR start synpred172_Kermeta
    public final void synpred172_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12775:8: ( (a6_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12775:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12775:8: (a6_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12776:5: a6_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred172_Kermeta10634);
        a6_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred172_Kermeta

    // $ANTLR start synpred174_Kermeta
    public final void synpred174_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a8_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12851:8: ( (a8_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12851:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12851:8: (a8_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12852:5: a8_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred174_Kermeta10718);
        a8_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred174_Kermeta

    // $ANTLR start synpred175_Kermeta
    public final void synpred175_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12889:8: ( (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12889:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12889:8: (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:12890:5: a9_0= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred175_Kermeta10760);
        a9_0=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred175_Kermeta

    // $ANTLR start synpred182_Kermeta
    public final void synpred182_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a4_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13830:3: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13830:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13830:3: (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13831:4: a4_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred182_Kermeta11531);
        a4_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred182_Kermeta

    // $ANTLR start synpred184_Kermeta
    public final void synpred184_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13902:6: ( (a6_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13902:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13902:6: (a6_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13903:4: a6_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred184_Kermeta11599);
        a6_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred184_Kermeta

    // $ANTLR start synpred185_Kermeta
    public final void synpred185_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13938:6: ( (a7_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13938:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13938:6: (a7_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:13939:4: a7_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred185_Kermeta11633);
        a7_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred185_Kermeta

    // $ANTLR start synpred187_Kermeta
    public final void synpred187_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14010:6: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14010:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14010:6: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14011:4: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred187_Kermeta11701);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred187_Kermeta

    // $ANTLR start synpred188_Kermeta
    public final void synpred188_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a10_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14046:6: ( (a10_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14046:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14046:6: (a10_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14047:4: a10_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred188_Kermeta11735);
        a10_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred188_Kermeta

    // $ANTLR start synpred192_Kermeta
    public final void synpred192_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment a16_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14232:8: ( (a16_0= parse_org_kermeta_language_behavior_Assignment ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14232:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14232:8: (a16_0= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14233:5: a16_0= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred192_Kermeta11952);
        a16_0=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred192_Kermeta

    // $ANTLR start synpred193_Kermeta
    public final void synpred193_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a17_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14255:8: ( (a17_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14255:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14255:8: (a17_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14256:5: a17_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred193_Kermeta11994);
        a17_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred193_Kermeta

    // $ANTLR start synpred195_Kermeta
    public final void synpred195_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a19_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14301:8: ( (a19_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14301:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14301:8: (a19_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14302:5: a19_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred195_Kermeta12078);
        a19_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred195_Kermeta

    // $ANTLR start synpred199_Kermeta
    public final void synpred199_Kermeta_fragment() throws RecognitionException {   
        Token a4=null;
        org.kermeta.language.behavior.Expression a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14611:3: ( (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14611:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14611:3: (a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14612:4: a4= 'loop' ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        a4=(Token)match(input,78,FOLLOW_78_in_synpred199_Kermeta12381); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14642:4: ( (a5_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14643:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14643:5: (a5_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:14644:6: a5_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred199_Kermeta12414);
        a5_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred199_Kermeta

    // $ANTLR start synpred203_Kermeta
    public final void synpred203_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a0_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15385:4: ( (a0_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15385:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15385:4: (a0_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15386:5: a0_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred203_Kermeta12956);
        a0_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred203_Kermeta

    // $ANTLR start synpred204_Kermeta
    public final void synpred204_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a1_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15409:8: ( (a1_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15409:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15409:8: (a1_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15410:5: a1_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred204_Kermeta12998);
        a1_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred204_Kermeta

    // $ANTLR start synpred206_Kermeta
    public final void synpred206_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature a6_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15559:4: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15559:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15559:4: (a6_0= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15560:5: a6_0= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred206_Kermeta13191);
        a6_0=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred206_Kermeta

    // $ANTLR start synpred207_Kermeta
    public final void synpred207_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression a7_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15621:8: ( (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15621:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15621:8: (a7_0= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15622:5: a7_0= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred207_Kermeta13233);
        a7_0=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred207_Kermeta

    // $ANTLR start synpred209_Kermeta
    public final void synpred209_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult a9_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15745:8: ( (a9_0= parse_org_kermeta_language_behavior_CallResult ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15745:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15745:8: (a9_0= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15746:5: a9_0= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred209_Kermeta13317);
        a9_0=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred209_Kermeta

    // $ANTLR start synpred211_Kermeta
    public final void synpred211_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a11_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15869:8: ( (a11_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15869:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15869:8: (a11_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15870:5: a11_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred211_Kermeta13401);
        a11_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred211_Kermeta

    // $ANTLR start synpred213_Kermeta
    public final void synpred213_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral a13_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15993:8: ( (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15993:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15993:8: (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:15994:5: a13_0= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred213_Kermeta13485);
        a13_0=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred213_Kermeta

    // $ANTLR start synpred214_Kermeta
    public final void synpred214_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral a14_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16055:8: ( (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16055:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16055:8: (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16056:5: a14_0= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred214_Kermeta13527);
        a14_0=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred214_Kermeta

    // $ANTLR start synpred217_Kermeta
    public final void synpred217_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a2_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16463:6: ( (a2_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16463:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16463:6: (a2_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16464:4: a2_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred217_Kermeta13770);
        a2_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred217_Kermeta

    // $ANTLR start synpred220_Kermeta
    public final void synpred220_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a5_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16559:6: ( (a5_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16559:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16559:6: (a5_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16560:4: a5_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred220_Kermeta13872);
        a5_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred220_Kermeta

    // $ANTLR start synpred221_Kermeta
    public final void synpred221_Kermeta_fragment() throws RecognitionException {   
        Token a7=null;
        Token a8=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16639:4: (a7= '.' (a8= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16639:4: a7= '.' (a8= IDENTIFIER )
        {
        a7=(Token)match(input,86,FOLLOW_86_in_synpred221_Kermeta13945); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16651:4: (a8= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16652:5: a8= IDENTIFIER
        {
        a8=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred221_Kermeta13971); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred221_Kermeta

    // $ANTLR start synpred225_Kermeta
    public final void synpred225_Kermeta_fragment() throws RecognitionException {   
        Token a16=null;
        Token a17=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16895:8: (a16= '.' (a17= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16895:8: a16= '.' (a17= IDENTIFIER )
        {
        a16=(Token)match(input,86,FOLLOW_86_in_synpred225_Kermeta14341); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16907:4: (a17= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:16908:5: a17= IDENTIFIER
        {
        a17=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred225_Kermeta14367); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred225_Kermeta

    // $ANTLR start synpred235_Kermeta
    public final void synpred235_Kermeta_fragment() throws RecognitionException {   
        Token a29=null;
        Token a30=null;
        Token a31=null;
        Token a32=null;
        org.kermeta.language.behavior.Expression a33_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17380:4: ( ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17380:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17380:4: ( (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17381:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' ) (a33_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17381:5: (a29= '+' | a30= '-' | a31= '/' | a32= '*' )
        int alt170=4;
        switch ( input.LA(1) ) {
        case 88:
            {
            alt170=1;
            }
            break;
        case 89:
            {
            alt170=2;
            }
            break;
        case 90:
            {
            alt170=3;
            }
            break;
        case 91:
            {
            alt170=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 170, 0, input);

            throw nvae;
        }

        switch (alt170) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17382:6: a29= '+'
                {
                a29=(Token)match(input,88,FOLLOW_88_in_synpred235_Kermeta14819); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17413:12: a30= '-'
                {
                a30=(Token)match(input,89,FOLLOW_89_in_synpred235_Kermeta14857); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17444:12: a31= '/'
                {
                a31=(Token)match(input,90,FOLLOW_90_in_synpred235_Kermeta14895); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17475:12: a32= '*'
                {
                a32=(Token)match(input,91,FOLLOW_91_in_synpred235_Kermeta14933); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17529:5: (a33_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17530:6: a33_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred235_Kermeta14982);
        a33_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred235_Kermeta

    // $ANTLR start synpred238_Kermeta
    public final void synpred238_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable a35_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17770:6: ( (a35_0= parse_org_kermeta_language_behavior_CallVariable ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17770:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17770:6: (a35_0= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17771:4: a35_0= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred238_Kermeta15087);
        a35_0=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred238_Kermeta

    // $ANTLR start synpred241_Kermeta
    public final void synpred241_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral a38_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17989:6: ( (a38_0= parse_org_kermeta_language_behavior_StringLiteral ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17989:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17989:6: (a38_0= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:17990:4: a38_0= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred241_Kermeta15189);
        a38_0=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred241_Kermeta

    // $ANTLR start synpred242_Kermeta
    public final void synpred242_Kermeta_fragment() throws RecognitionException {   
        Token a40=null;
        Token a41=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18192:4: (a40= '.' (a41= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18192:4: a40= '.' (a41= IDENTIFIER )
        {
        a40=(Token)match(input,86,FOLLOW_86_in_synpred242_Kermeta15262); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18204:4: (a41= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18205:5: a41= IDENTIFIER
        {
        a41=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred242_Kermeta15288); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred242_Kermeta

    // $ANTLR start synpred246_Kermeta
    public final void synpred246_Kermeta_fragment() throws RecognitionException {   
        Token a49=null;
        Token a50=null;

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18530:8: (a49= '.' (a50= IDENTIFIER ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18530:8: a49= '.' (a50= IDENTIFIER )
        {
        a49=(Token)match(input,86,FOLLOW_86_in_synpred246_Kermeta15658); if (state.failed) return ;
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18542:4: (a50= IDENTIFIER )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18543:5: a50= IDENTIFIER
        {
        a50=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_synpred246_Kermeta15684); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred246_Kermeta

    // $ANTLR start synpred252_Kermeta
    public final void synpred252_Kermeta_fragment() throws RecognitionException {   
        Token a55=null;
        Token a56=null;
        Token a57=null;
        Token a58=null;
        org.kermeta.language.behavior.Expression a59_0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18882:4: ( ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18882:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18882:4: ( (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression ) )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18883:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' ) (a59_0= parse_org_kermeta_language_behavior_Expression )
        {
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18883:5: (a55= '+' | a56= '-' | a57= '/' | a58= '*' )
        int alt187=4;
        switch ( input.LA(1) ) {
        case 88:
            {
            alt187=1;
            }
            break;
        case 89:
            {
            alt187=2;
            }
            break;
        case 90:
            {
            alt187=3;
            }
            break;
        case 91:
            {
            alt187=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 187, 0, input);

            throw nvae;
        }

        switch (alt187) {
            case 1 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18884:6: a55= '+'
                {
                a55=(Token)match(input,88,FOLLOW_88_in_synpred252_Kermeta15870); if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18915:12: a56= '-'
                {
                a56=(Token)match(input,89,FOLLOW_89_in_synpred252_Kermeta15908); if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18946:12: a57= '/'
                {
                a57=(Token)match(input,90,FOLLOW_90_in_synpred252_Kermeta15946); if (state.failed) return ;

                }
                break;
            case 4 :
                // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:18977:12: a58= '*'
                {
                a58=(Token)match(input,91,FOLLOW_91_in_synpred252_Kermeta15984); if (state.failed) return ;

                }
                break;

        }

        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19031:5: (a59_0= parse_org_kermeta_language_behavior_Expression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:19032:6: a59_0= parse_org_kermeta_language_behavior_Expression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred252_Kermeta16033);
        a59_0=parse_org_kermeta_language_behavior_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred252_Kermeta

    // $ANTLR start synpred271_Kermeta
    public final void synpred271_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.BooleanLiteral c2 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20695:4: (c2= parse_org_kermeta_language_behavior_BooleanLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20695:4: c2= parse_org_kermeta_language_behavior_BooleanLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred271_Kermeta17856);
        c2=parse_org_kermeta_language_behavior_BooleanLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred271_Kermeta

    // $ANTLR start synpred272_Kermeta
    public final void synpred272_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.IntegerLiteral c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20696:4: (c3= parse_org_kermeta_language_behavior_IntegerLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20696:4: c3= parse_org_kermeta_language_behavior_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred272_Kermeta17866);
        c3=parse_org_kermeta_language_behavior_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred272_Kermeta

    // $ANTLR start synpred273_Kermeta
    public final void synpred273_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.StringLiteral c4 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20697:4: (c4= parse_org_kermeta_language_behavior_StringLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20697:4: c4= parse_org_kermeta_language_behavior_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred273_Kermeta17876);
        c4=parse_org_kermeta_language_behavior_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred273_Kermeta

    // $ANTLR start synpred277_Kermeta
    public final void synpred277_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.TypeLiteral c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20701:4: (c8= parse_org_kermeta_language_behavior_TypeLiteral )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20701:4: c8= parse_org_kermeta_language_behavior_TypeLiteral
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred277_Kermeta17916);
        c8=parse_org_kermeta_language_behavior_TypeLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred277_Kermeta

    // $ANTLR start synpred278_Kermeta
    public final void synpred278_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallResult c9 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20702:4: (c9= parse_org_kermeta_language_behavior_CallResult )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20702:4: c9= parse_org_kermeta_language_behavior_CallResult
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred278_Kermeta17926);
        c9=parse_org_kermeta_language_behavior_CallResult();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_Kermeta

    // $ANTLR start synpred280_Kermeta
    public final void synpred280_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.Assignment c11 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20704:4: (c11= parse_org_kermeta_language_behavior_Assignment )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20704:4: c11= parse_org_kermeta_language_behavior_Assignment
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred280_Kermeta17946);
        c11=parse_org_kermeta_language_behavior_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_Kermeta

    // $ANTLR start synpred281_Kermeta
    public final void synpred281_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallVariable c12 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20705:4: (c12= parse_org_kermeta_language_behavior_CallVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20705:4: c12= parse_org_kermeta_language_behavior_CallVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred281_Kermeta17956);
        c12=parse_org_kermeta_language_behavior_CallVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred281_Kermeta

    // $ANTLR start synpred282_Kermeta
    public final void synpred282_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.SelfExpression c13 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20706:4: (c13= parse_org_kermeta_language_behavior_SelfExpression )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20706:4: c13= parse_org_kermeta_language_behavior_SelfExpression
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred282_Kermeta17966);
        c13=parse_org_kermeta_language_behavior_SelfExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred282_Kermeta

    // $ANTLR start synpred283_Kermeta
    public final void synpred283_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.CallFeature c14 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20707:4: (c14= parse_org_kermeta_language_behavior_CallFeature )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20707:4: c14= parse_org_kermeta_language_behavior_CallFeature
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred283_Kermeta17976);
        c14=parse_org_kermeta_language_behavior_CallFeature();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred283_Kermeta

    // $ANTLR start synpred284_Kermeta
    public final void synpred284_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.behavior.JavaStaticCall c15 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20708:4: (c15= parse_org_kermeta_language_behavior_JavaStaticCall )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20708:4: c15= parse_org_kermeta_language_behavior_JavaStaticCall
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred284_Kermeta17986);
        c15=parse_org_kermeta_language_behavior_JavaStaticCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred284_Kermeta

    // $ANTLR start synpred288_Kermeta
    public final void synpred288_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.Class c0 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20718:2: (c0= parse_org_kermeta_language_structure_Class )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20718:2: c0= parse_org_kermeta_language_structure_Class
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred288_Kermeta18047);
        c0=parse_org_kermeta_language_structure_Class();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred288_Kermeta

    // $ANTLR start synpred291_Kermeta
    public final void synpred291_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.UnresolvedType c3 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20721:4: (c3= parse_org_kermeta_language_structure_UnresolvedType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20721:4: c3= parse_org_kermeta_language_structure_UnresolvedType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred291_Kermeta18077);
        c3=parse_org_kermeta_language_structure_UnresolvedType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred291_Kermeta

    // $ANTLR start synpred293_Kermeta
    public final void synpred293_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ModelType c5 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20723:4: (c5= parse_org_kermeta_language_structure_ModelType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20723:4: c5= parse_org_kermeta_language_structure_ModelType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred293_Kermeta18097);
        c5=parse_org_kermeta_language_structure_ModelType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred293_Kermeta

    // $ANTLR start synpred294_Kermeta
    public final void synpred294_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.ObjectTypeVariable c6 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20724:4: (c6= parse_org_kermeta_language_structure_ObjectTypeVariable )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20724:4: c6= parse_org_kermeta_language_structure_ObjectTypeVariable
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred294_Kermeta18107);
        c6=parse_org_kermeta_language_structure_ObjectTypeVariable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred294_Kermeta

    // $ANTLR start synpred296_Kermeta
    public final void synpred296_Kermeta_fragment() throws RecognitionException {   
        org.kermeta.language.structure.VirtualType c8 = null;


        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20726:4: (c8= parse_org_kermeta_language_structure_VirtualType )
        // /home/hrambelo/application/Eclipse/64/EEmfText/workspace/org.kermeta.language.emftexteditor/src/main/java-gen/org/kermeta/language/emftexteditor/mopp/Kermeta.g:20726:4: c8= parse_org_kermeta_language_structure_VirtualType
        {
        pushFollow(FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred296_Kermeta18127);
        c8=parse_org_kermeta_language_structure_VirtualType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred296_Kermeta

    // Delegated rules

    public final boolean synpred1_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred296_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred296_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Kermeta() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Kermeta_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA116 dfa116 = new DFA116(this);
    static final String DFA1_eotS =
        "\20\uffff";
    static final String DFA1_eofS =
        "\1\1\17\uffff";
    static final String DFA1_minS =
        "\1\4\2\uffff\1\0\3\uffff\4\0\5\uffff";
    static final String DFA1_maxS =
        "\1\62\2\uffff\1\0\3\uffff\4\0\5\uffff";
    static final String DFA1_acceptS =
        "\1\uffff\1\1\4\uffff\1\2\4\uffff\1\6\1\4\1\5\1\7\1\3";
    static final String DFA1_specialS =
        "\3\uffff\1\0\3\uffff\1\1\1\2\1\3\1\4\5\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\11\uffff\2\1\3\uffff\1\1\5\uffff\1\7\1\10\1\uffff\1\11"+
            "\2\uffff\1\12\11\uffff\1\6\10\uffff\1\13",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "4420:2: (c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Model | c2= parse_org_kermeta_language_structure_Property | c3= parse_org_kermeta_language_structure_Operation | c4= parse_org_kermeta_language_structure_Parameter | c5= parse_org_kermeta_language_structure_MultiplicityElement | c6= parse_org_kermeta_language_behavior_TypeReference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_Kermeta()) ) {s = 1;}

                        else if ( (synpred4_Kermeta()) ) {s = 12;}

                        else if ( (synpred5_Kermeta()) ) {s = 13;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_7 = input.LA(1);

                         
                        int index1_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_8 = input.LA(1);

                         
                        int index1_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_9 = input.LA(1);

                         
                        int index1_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_Kermeta()) ) {s = 15;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_10 = input.LA(1);

                         
                        int index1_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_Kermeta()) ) {s = 12;}

                        else if ( (synpred6_Kermeta()) ) {s = 11;}

                         
                        input.seek(index1_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA40_eotS =
        "\111\uffff";
    static final String DFA40_eofS =
        "\1\6\110\uffff";
    static final String DFA40_minS =
        "\1\4\1\uffff\4\0\1\uffff\12\0\1\uffff\1\0\5\uffff\1\0\6\uffff\2"+
        "\0\3\uffff\1\0\1\uffff\3\0\40\uffff";
    static final String DFA40_maxS =
        "\1\142\1\uffff\4\0\1\uffff\12\0\1\uffff\1\0\5\uffff\1\0\6\uffff"+
        "\2\0\3\uffff\1\0\1\uffff\3\0\40\uffff";
    static final String DFA40_acceptS =
        "\1\uffff\1\1\4\uffff\1\2\12\uffff\1\21\1\uffff\1\23\1\24\1\25\1"+
        "\26\1\27\1\uffff\1\30\1\32\1\33\1\34\1\35\1\37\2\uffff\1\43\1\44"+
        "\1\45\1\uffff\1\50\3\uffff\1\57\1\60\1\61\1\62\1\4\1\3\1\5\1\10"+
        "\1\11\1\12\1\14\1\15\1\17\1\22\1\36\1\42\1\46\1\51\1\52\1\54\1\6"+
        "\1\7\1\13\1\16\1\20\1\56\1\31\1\40\1\41\1\47\1\55\1\53";
    static final String DFA40_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\uffff\1\16\5\uffff\1\17\6\uffff\1\20\1\21\3\uffff"+
        "\1\22\1\uffff\1\23\1\24\1\25\40\uffff}>";
    static final String[] DFA40_transitionS = {
            "\1\4\1\17\1\40\1\37\6\uffff\1\3\1\2\3\uffff\1\5\1\7\1\10\1\11"+
            "\2\uffff\1\12\1\13\1\uffff\1\14\2\uffff\1\15\1\46\2\uffff\1"+
            "\16\1\uffff\1\20\1\1\2\uffff\1\21\1\22\3\uffff\1\23\3\uffff"+
            "\1\24\2\uffff\1\25\1\26\1\51\1\uffff\1\27\1\uffff\1\31\1\uffff"+
            "\1\30\3\uffff\1\32\1\33\2\uffff\1\34\1\uffff\1\35\1\36\1\41"+
            "\2\uffff\1\42\2\uffff\1\43\1\uffff\1\44\1\45\2\uffff\1\50\6"+
            "\uffff\1\47\1\52\1\uffff\1\53\2\uffff\1\54",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA40_eot = DFA.unpackEncodedString(DFA40_eotS);
    static final short[] DFA40_eof = DFA.unpackEncodedString(DFA40_eofS);
    static final char[] DFA40_min = DFA.unpackEncodedStringToUnsignedChars(DFA40_minS);
    static final char[] DFA40_max = DFA.unpackEncodedStringToUnsignedChars(DFA40_maxS);
    static final short[] DFA40_accept = DFA.unpackEncodedString(DFA40_acceptS);
    static final short[] DFA40_special = DFA.unpackEncodedString(DFA40_specialS);
    static final short[][] DFA40_transition;

    static {
        int numStates = DFA40_transitionS.length;
        DFA40_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA40_transition[i] = DFA.unpackEncodedString(DFA40_transitionS[i]);
        }
    }

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = DFA40_eot;
            this.eof = DFA40_eof;
            this.min = DFA40_min;
            this.max = DFA40_max;
            this.accept = DFA40_accept;
            this.special = DFA40_special;
            this.transition = DFA40_transition;
        }
        public String getDescription() {
            return "7190:1: parse_org_kermeta_language_structure_Object returns [org.kermeta.language.structure.Object element = null] : (a0= 'Object' a1= '{' ( (a2= 'tag' a3= ':' (a4= IDENTIFIER ) | a5= 'ownedTags' a6= ':' (a7_0= parse_org_kermeta_language_structure_Tag ) ) )* a8= '}' | c0= parse_org_kermeta_language_structure_ModelingUnit | c1= parse_org_kermeta_language_structure_Using | c2= parse_org_kermeta_language_structure_Require | c3= parse_org_kermeta_language_structure_Package | c4= parse_org_kermeta_language_structure_ClassDefinition | c5= parse_org_kermeta_language_structure_Property | c6= parse_org_kermeta_language_structure_Operation | c7= parse_org_kermeta_language_structure_Parameter | c8= parse_org_kermeta_language_structure_Class | c9= parse_org_kermeta_language_structure_Enumeration | c10= parse_org_kermeta_language_structure_EnumerationLiteral | c11= parse_org_kermeta_language_structure_Constraint | c12= parse_org_kermeta_language_structure_PrimitiveType | c13= parse_org_kermeta_language_structure_UnresolvedType | c14= parse_org_kermeta_language_structure_VoidType | c15= parse_org_kermeta_language_structure_Model | c16= parse_org_kermeta_language_structure_ModelType | c17= parse_org_kermeta_language_structure_TypeVariableBinding | c18= parse_org_kermeta_language_structure_MultiplicityElement | c19= parse_org_kermeta_language_structure_TypeDefinition | c20= parse_org_kermeta_language_structure_Tag | c21= parse_org_kermeta_language_structure_ObjectTypeVariable | c22= parse_org_kermeta_language_structure_ModelTypeVariable | c23= parse_org_kermeta_language_structure_VirtualType | c24= parse_org_kermeta_language_structure_ProductType | c25= parse_org_kermeta_language_structure_FunctionType | c26= parse_org_kermeta_language_behavior_Block | c27= parse_org_kermeta_language_behavior_Rescue | c28= parse_org_kermeta_language_behavior_TypeReference | c29= parse_org_kermeta_language_behavior_Raise | c30= parse_org_kermeta_language_behavior_BooleanLiteral | c31= parse_org_kermeta_language_behavior_IntegerLiteral | c32= parse_org_kermeta_language_behavior_StringLiteral | c33= parse_org_kermeta_language_behavior_Conditional | c34= parse_org_kermeta_language_behavior_Loop | c35= parse_org_kermeta_language_behavior_VariableDecl | c36= parse_org_kermeta_language_behavior_TypeLiteral | c37= parse_org_kermeta_language_behavior_CallResult | c38= parse_org_kermeta_language_behavior_CallSuperOperation | c39= parse_org_kermeta_language_behavior_Assignment | c40= parse_org_kermeta_language_behavior_CallVariable | c41= parse_org_kermeta_language_behavior_SelfExpression | c42= parse_org_kermeta_language_behavior_CallFeature | c43= parse_org_kermeta_language_behavior_JavaStaticCall | c44= parse_org_kermeta_language_behavior_VoidLiteral | c45= parse_org_kermeta_language_behavior_CallValue | c46= parse_org_kermeta_language_behavior_EmptyExpression | c47= parse_org_kermeta_language_behavior_LambdaExpression | c48= parse_org_kermeta_language_behavior_LambdaParameter );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_2 = input.LA(1);

                         
                        int index40_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 6;}

                        else if ( (synpred48_Kermeta()) ) {s = 45;}

                         
                        input.seek(index40_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_3 = input.LA(1);

                         
                        int index40_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 6;}

                        else if ( (synpred47_Kermeta()) ) {s = 46;}

                         
                        input.seek(index40_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA40_4 = input.LA(1);

                         
                        int index40_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 6;}

                        else if ( (synpred49_Kermeta()) ) {s = 47;}

                        else if ( (synpred52_Kermeta()) ) {s = 48;}

                        else if ( (synpred53_Kermeta()) ) {s = 49;}

                        else if ( (synpred54_Kermeta()) ) {s = 50;}

                        else if ( (synpred56_Kermeta()) ) {s = 51;}

                        else if ( (synpred57_Kermeta()) ) {s = 52;}

                        else if ( (synpred59_Kermeta()) ) {s = 53;}

                        else if ( (synpred62_Kermeta()) ) {s = 54;}

                        else if ( (synpred64_Kermeta()) ) {s = 20;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                        else if ( (synpred74_Kermeta()) ) {s = 55;}

                        else if ( (synpred78_Kermeta()) ) {s = 56;}

                        else if ( (synpred82_Kermeta()) ) {s = 57;}

                        else if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred86_Kermeta()) ) {s = 59;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                         
                        input.seek(index40_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA40_5 = input.LA(1);

                         
                        int index40_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Kermeta()) ) {s = 6;}

                        else if ( (synpred49_Kermeta()) ) {s = 47;}

                         
                        input.seek(index40_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA40_7 = input.LA(1);

                         
                        int index40_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_Kermeta()) ) {s = 61;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                         
                        input.seek(index40_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA40_8 = input.LA(1);

                         
                        int index40_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_Kermeta()) ) {s = 61;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                         
                        input.seek(index40_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA40_9 = input.LA(1);

                         
                        int index40_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_Kermeta()) ) {s = 61;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                         
                        input.seek(index40_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA40_10 = input.LA(1);

                         
                        int index40_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 62;}

                        else if ( (synpred64_Kermeta()) ) {s = 20;}

                         
                        input.seek(index40_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA40_11 = input.LA(1);

                         
                        int index40_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 62;}

                        else if ( (synpred64_Kermeta()) ) {s = 20;}

                         
                        input.seek(index40_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA40_12 = input.LA(1);

                         
                        int index40_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_Kermeta()) ) {s = 62;}

                        else if ( (synpred64_Kermeta()) ) {s = 20;}

                         
                        input.seek(index40_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA40_13 = input.LA(1);

                         
                        int index40_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_Kermeta()) ) {s = 48;}

                        else if ( (synpred64_Kermeta()) ) {s = 20;}

                         
                        input.seek(index40_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA40_14 = input.LA(1);

                         
                        int index40_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_Kermeta()) ) {s = 63;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                         
                        input.seek(index40_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA40_15 = input.LA(1);

                         
                        int index40_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_Kermeta()) ) {s = 64;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                         
                        input.seek(index40_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA40_16 = input.LA(1);

                         
                        int index40_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_Kermeta()) ) {s = 65;}

                        else if ( (synpred90_Kermeta()) ) {s = 66;}

                         
                        input.seek(index40_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA40_18 = input.LA(1);

                         
                        int index40_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_Kermeta()) ) {s = 54;}

                        else if ( (synpred65_Kermeta()) ) {s = 21;}

                         
                        input.seek(index40_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA40_24 = input.LA(1);

                         
                        int index40_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_Kermeta()) ) {s = 23;}

                        else if ( (synpred69_Kermeta()) ) {s = 67;}

                         
                        input.seek(index40_24);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA40_31 = input.LA(1);

                         
                        int index40_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_Kermeta()) ) {s = 68;}

                        else if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                         
                        input.seek(index40_31);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA40_32 = input.LA(1);

                         
                        int index40_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_Kermeta()) ) {s = 69;}

                        else if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                         
                        input.seek(index40_32);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA40_36 = input.LA(1);

                         
                        int index40_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_Kermeta()) ) {s = 70;}

                        else if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred86_Kermeta()) ) {s = 59;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                         
                        input.seek(index40_36);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA40_38 = input.LA(1);

                         
                        int index40_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                         
                        input.seek(index40_38);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA40_39 = input.LA(1);

                         
                        int index40_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                        else if ( (synpred89_Kermeta()) ) {s = 71;}

                         
                        input.seek(index40_39);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA40_40 = input.LA(1);

                         
                        int index40_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_Kermeta()) ) {s = 58;}

                        else if ( (synpred87_Kermeta()) ) {s = 72;}

                        else if ( (synpred88_Kermeta()) ) {s = 60;}

                         
                        input.seek(index40_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA70_eotS =
        "\23\uffff";
    static final String DFA70_eofS =
        "\23\uffff";
    static final String DFA70_minS =
        "\1\4\3\uffff\7\0\10\uffff";
    static final String DFA70_maxS =
        "\1\135\3\uffff\7\0\10\uffff";
    static final String DFA70_acceptS =
        "\1\uffff\1\1\1\2\1\3\7\uffff\1\7\1\12\1\13\1\4\1\5\1\6\1\10\1\11";
    static final String DFA70_specialS =
        "\4\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\10\uffff}>";
    static final String[] DFA70_transitionS = {
            "\1\6\1\uffff\1\12\1\5\30\uffff\1\4\44\uffff\1\15\3\uffff\1\3"+
            "\2\uffff\1\2\2\uffff\1\1\1\uffff\1\7\1\13\2\uffff\1\11\6\uffff"+
            "\1\10\1\14",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA70_eot = DFA.unpackEncodedString(DFA70_eotS);
    static final short[] DFA70_eof = DFA.unpackEncodedString(DFA70_eofS);
    static final char[] DFA70_min = DFA.unpackEncodedStringToUnsignedChars(DFA70_minS);
    static final char[] DFA70_max = DFA.unpackEncodedStringToUnsignedChars(DFA70_maxS);
    static final short[] DFA70_accept = DFA.unpackEncodedString(DFA70_acceptS);
    static final short[] DFA70_special = DFA.unpackEncodedString(DFA70_specialS);
    static final short[][] DFA70_transition;

    static {
        int numStates = DFA70_transitionS.length;
        DFA70_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA70_transition[i] = DFA.unpackEncodedString(DFA70_transitionS[i]);
        }
    }

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = DFA70_eot;
            this.eof = DFA70_eof;
            this.min = DFA70_min;
            this.max = DFA70_max;
            this.accept = DFA70_accept;
            this.special = DFA70_special;
            this.transition = DFA70_transition;
        }
        public String getDescription() {
            return "12584:3: ( (a1_0= parse_org_kermeta_language_behavior_VariableDecl ) | (a2_0= parse_org_kermeta_language_behavior_Loop ) | (a3_0= parse_org_kermeta_language_behavior_Conditional ) | (a4_0= parse_org_kermeta_language_behavior_Assignment ) | (a5_0= parse_org_kermeta_language_behavior_CallFeature ) | (a6_0= parse_org_kermeta_language_behavior_CallVariable ) | (a7_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a8_0= parse_org_kermeta_language_behavior_CallResult ) | (a9_0= parse_org_kermeta_language_behavior_JavaStaticCall ) | (a10_0= parse_org_kermeta_language_behavior_EmptyExpression ) | (a11_0= parse_org_kermeta_language_behavior_Block ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_4 = input.LA(1);

                         
                        int index70_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                         
                        input.seek(index70_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_5 = input.LA(1);

                         
                        int index70_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                         
                        input.seek(index70_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_6 = input.LA(1);

                         
                        int index70_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                        else if ( (synpred172_Kermeta()) ) {s = 16;}

                         
                        input.seek(index70_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA70_7 = input.LA(1);

                         
                        int index70_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                        else if ( (synpred172_Kermeta()) ) {s = 16;}

                        else if ( (synpred174_Kermeta()) ) {s = 17;}

                         
                        input.seek(index70_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA70_8 = input.LA(1);

                         
                        int index70_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                        else if ( (synpred175_Kermeta()) ) {s = 18;}

                         
                        input.seek(index70_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA70_9 = input.LA(1);

                         
                        int index70_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                         
                        input.seek(index70_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA70_10 = input.LA(1);

                         
                        int index70_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred170_Kermeta()) ) {s = 14;}

                        else if ( (synpred171_Kermeta()) ) {s = 15;}

                         
                        input.seek(index70_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA76_eotS =
        "\21\uffff";
    static final String DFA76_eofS =
        "\21\uffff";
    static final String DFA76_minS =
        "\1\4\1\0\1\uffff\6\0\10\uffff";
    static final String DFA76_maxS =
        "\1\134\1\0\1\uffff\6\0\10\uffff";
    static final String DFA76_acceptS =
        "\2\uffff\1\2\6\uffff\1\5\1\10\1\11\1\1\1\3\1\4\1\7\1\6";
    static final String DFA76_specialS =
        "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\10\uffff}>";
    static final String[] DFA76_transitionS = {
            "\1\4\1\uffff\1\10\1\1\30\uffff\1\3\26\uffff\1\12\15\uffff\1"+
            "\2\11\uffff\1\13\1\uffff\1\5\1\11\2\uffff\1\7\6\uffff\1\6",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "13829:2: ( (a4_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a5_0= parse_org_kermeta_language_behavior_Block ) | (a6_0= parse_org_kermeta_language_behavior_Assignment ) | (a7_0= parse_org_kermeta_language_behavior_CallFeature ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallVariable ) | (a11_0= parse_org_kermeta_language_behavior_CallValue ) | (a12_0= parse_org_kermeta_language_behavior_VariableDecl ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_Kermeta()) ) {s = 12;}

                        else if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_3 = input.LA(1);

                         
                        int index76_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                         
                        input.seek(index76_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_4 = input.LA(1);

                         
                        int index76_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                        else if ( (synpred188_Kermeta()) ) {s = 15;}

                         
                        input.seek(index76_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA76_5 = input.LA(1);

                         
                        int index76_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                        else if ( (synpred187_Kermeta()) ) {s = 16;}

                        else if ( (synpred188_Kermeta()) ) {s = 15;}

                         
                        input.seek(index76_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA76_6 = input.LA(1);

                         
                        int index76_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                         
                        input.seek(index76_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA76_7 = input.LA(1);

                         
                        int index76_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                         
                        input.seek(index76_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA76_8 = input.LA(1);

                         
                        int index76_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred184_Kermeta()) ) {s = 13;}

                        else if ( (synpred185_Kermeta()) ) {s = 14;}

                         
                        input.seek(index76_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA77_eotS =
        "\20\uffff";
    static final String DFA77_eofS =
        "\20\uffff";
    static final String DFA77_minS =
        "\1\4\2\uffff\7\0\6\uffff";
    static final String DFA77_maxS =
        "\1\134\2\uffff\7\0\6\uffff";
    static final String DFA77_acceptS =
        "\1\uffff\1\1\1\2\7\uffff\1\5\1\7\1\10\1\3\1\4\1\6";
    static final String DFA77_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\6\uffff}>";
    static final String[] DFA77_transitionS = {
            "\1\5\1\uffff\1\11\1\4\30\uffff\1\3\26\uffff\1\14\15\uffff\1"+
            "\2\5\uffff\1\1\3\uffff\1\13\1\uffff\1\6\1\12\2\uffff\1\10\6"+
            "\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "14173:3: (a13= 'else' (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_Block ) | (a16_0= parse_org_kermeta_language_behavior_Assignment ) | (a17_0= parse_org_kermeta_language_behavior_CallFeature ) | (a18_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a19_0= parse_org_kermeta_language_behavior_CallResult ) | (a20_0= parse_org_kermeta_language_behavior_VariableDecl ) (a21_0= parse_org_kermeta_language_behavior_CallVariable ) | (a22_0= parse_org_kermeta_language_behavior_CallValue ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_3 = input.LA(1);

                         
                        int index77_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                         
                        input.seek(index77_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_4 = input.LA(1);

                         
                        int index77_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                         
                        input.seek(index77_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_5 = input.LA(1);

                         
                        int index77_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                         
                        input.seek(index77_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                        else if ( (synpred195_Kermeta()) ) {s = 15;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_7 = input.LA(1);

                         
                        int index77_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                         
                        input.seek(index77_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_8 = input.LA(1);

                         
                        int index77_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                         
                        input.seek(index77_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred192_Kermeta()) ) {s = 13;}

                        else if ( (synpred193_Kermeta()) ) {s = 14;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA86_eotS =
        "\20\uffff";
    static final String DFA86_eofS =
        "\20\uffff";
    static final String DFA86_minS =
        "\1\4\1\uffff\5\0\11\uffff";
    static final String DFA86_maxS =
        "\1\134\1\uffff\5\0\11\uffff";
    static final String DFA86_acceptS =
        "\1\uffff\1\1\5\uffff\1\3\1\5\1\7\1\11\1\6\1\12\1\4\1\2\1\10";
    static final String DFA86_specialS =
        "\2\uffff\1\0\1\2\1\3\1\1\1\4\11\uffff}>";
    static final String[] DFA86_transitionS = {
            "\1\3\1\uffff\1\6\1\2\30\uffff\1\1\4\uffff\1\11\21\uffff\1\10"+
            "\31\uffff\1\4\1\7\2\uffff\1\5\6\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
    static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
    static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
    static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
    static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
    static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
    static final short[][] DFA86_transition;

    static {
        int numStates = DFA86_transitionS.length;
        DFA86_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "15558:3: ( (a6_0= parse_org_kermeta_language_behavior_CallFeature ) | (a7_0= parse_org_kermeta_language_behavior_SelfExpression ) | (a8_0= parse_org_kermeta_language_behavior_CallSuperOperation ) | (a9_0= parse_org_kermeta_language_behavior_CallResult ) | (a10_0= parse_org_kermeta_language_behavior_CallValue ) | (a11_0= parse_org_kermeta_language_behavior_CallVariable ) | (a12_0= parse_org_kermeta_language_behavior_VoidLiteral ) | (a13_0= parse_org_kermeta_language_behavior_IntegerLiteral ) | (a14_0= parse_org_kermeta_language_behavior_BooleanLiteral ) | (a15_0= parse_org_kermeta_language_behavior_StringLiteral ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_2 = input.LA(1);

                         
                        int index86_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_Kermeta()) ) {s = 1;}

                        else if ( (synpred214_Kermeta()) ) {s = 10;}

                         
                        input.seek(index86_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_5 = input.LA(1);

                         
                        int index86_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_Kermeta()) ) {s = 1;}

                        else if ( (synpred207_Kermeta()) ) {s = 14;}

                         
                        input.seek(index86_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_3 = input.LA(1);

                         
                        int index86_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_Kermeta()) ) {s = 1;}

                        else if ( (synpred211_Kermeta()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index86_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_4 = input.LA(1);

                         
                        int index86_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_Kermeta()) ) {s = 1;}

                        else if ( (synpred209_Kermeta()) ) {s = 13;}

                        else if ( (synpred211_Kermeta()) ) {s = 11;}

                         
                        input.seek(index86_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA86_6 = input.LA(1);

                         
                        int index86_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_Kermeta()) ) {s = 1;}

                        else if ( (synpred213_Kermeta()) ) {s = 15;}

                         
                        input.seek(index86_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA115_eotS =
        "\34\uffff";
    static final String DFA115_eofS =
        "\34\uffff";
    static final String DFA115_minS =
        "\1\4\2\uffff\3\0\3\uffff\1\0\1\uffff\3\0\16\uffff";
    static final String DFA115_maxS =
        "\1\137\2\uffff\3\0\3\uffff\1\0\1\uffff\3\0\16\uffff";
    static final String DFA115_acceptS =
        "\1\uffff\1\1\1\2\3\uffff\1\6\1\7\1\10\1\uffff\1\13\3\uffff\1\21"+
        "\1\22\1\23\1\24\1\3\1\14\1\17\1\4\1\5\1\11\1\15\1\12\1\20\1\16";
    static final String DFA115_specialS =
        "\3\uffff\1\0\1\1\1\2\3\uffff\1\3\1\uffff\1\4\1\5\1\6\16\uffff}>";
    static final String[] DFA115_transitionS = {
            "\1\5\1\uffff\1\4\1\3\30\uffff\1\13\4\uffff\1\16\21\uffff\1\17"+
            "\15\uffff\1\1\2\uffff\1\2\1\6\2\uffff\1\7\2\uffff\1\10\1\uffff"+
            "\1\11\1\12\2\uffff\1\15\6\uffff\1\14\1\20\1\uffff\1\21",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
    static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
    static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
    static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
    static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
    static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
    static final short[][] DFA115_transition;

    static {
        int numStates = DFA115_transitionS.length;
        DFA115_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
        }
    }

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = DFA115_eot;
            this.eof = DFA115_eof;
            this.min = DFA115_min;
            this.max = DFA115_max;
            this.accept = DFA115_accept;
            this.special = DFA115_special;
            this.transition = DFA115_transition;
        }
        public String getDescription() {
            return "20691:1: parse_org_kermeta_language_behavior_Expression returns [org.kermeta.language.behavior.Expression element = null] : (c0= parse_org_kermeta_language_behavior_Block | c1= parse_org_kermeta_language_behavior_Raise | c2= parse_org_kermeta_language_behavior_BooleanLiteral | c3= parse_org_kermeta_language_behavior_IntegerLiteral | c4= parse_org_kermeta_language_behavior_StringLiteral | c5= parse_org_kermeta_language_behavior_Conditional | c6= parse_org_kermeta_language_behavior_Loop | c7= parse_org_kermeta_language_behavior_VariableDecl | c8= parse_org_kermeta_language_behavior_TypeLiteral | c9= parse_org_kermeta_language_behavior_CallResult | c10= parse_org_kermeta_language_behavior_CallSuperOperation | c11= parse_org_kermeta_language_behavior_Assignment | c12= parse_org_kermeta_language_behavior_CallVariable | c13= parse_org_kermeta_language_behavior_SelfExpression | c14= parse_org_kermeta_language_behavior_CallFeature | c15= parse_org_kermeta_language_behavior_JavaStaticCall | c16= parse_org_kermeta_language_behavior_VoidLiteral | c17= parse_org_kermeta_language_behavior_CallValue | c18= parse_org_kermeta_language_behavior_EmptyExpression | c19= parse_org_kermeta_language_behavior_LambdaExpression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_3 = input.LA(1);

                         
                        int index115_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred271_Kermeta()) ) {s = 18;}

                        else if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                         
                        input.seek(index115_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_4 = input.LA(1);

                         
                        int index115_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred272_Kermeta()) ) {s = 21;}

                        else if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                         
                        input.seek(index115_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA115_5 = input.LA(1);

                         
                        int index115_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred273_Kermeta()) ) {s = 22;}

                        else if ( (synpred277_Kermeta()) ) {s = 23;}

                        else if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred281_Kermeta()) ) {s = 24;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                         
                        input.seek(index115_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA115_9 = input.LA(1);

                         
                        int index115_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred278_Kermeta()) ) {s = 25;}

                        else if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred281_Kermeta()) ) {s = 24;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                         
                        input.seek(index115_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA115_11 = input.LA(1);

                         
                        int index115_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                         
                        input.seek(index115_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA115_12 = input.LA(1);

                         
                        int index115_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                        else if ( (synpred284_Kermeta()) ) {s = 26;}

                         
                        input.seek(index115_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA115_13 = input.LA(1);

                         
                        int index115_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred280_Kermeta()) ) {s = 19;}

                        else if ( (synpred282_Kermeta()) ) {s = 27;}

                        else if ( (synpred283_Kermeta()) ) {s = 20;}

                         
                        input.seek(index115_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA116_eotS =
        "\16\uffff";
    static final String DFA116_eofS =
        "\16\uffff";
    static final String DFA116_minS =
        "\1\4\1\0\5\uffff\1\0\6\uffff";
    static final String DFA116_maxS =
        "\1\102\1\0\5\uffff\1\0\6\uffff";
    static final String DFA116_acceptS =
        "\2\uffff\1\2\1\3\1\5\1\6\1\7\1\uffff\1\10\1\12\1\13\1\1\1\4\1\11";
    static final String DFA116_specialS =
        "\1\uffff\1\0\5\uffff\1\1\6\uffff}>";
    static final String[] DFA116_transitionS = {
            "\1\1\1\3\35\uffff\1\2\1\uffff\1\4\4\uffff\1\5\16\uffff\1\6\1"+
            "\uffff\1\10\1\uffff\1\7\3\uffff\1\11\1\12",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA116_eot = DFA.unpackEncodedString(DFA116_eotS);
    static final short[] DFA116_eof = DFA.unpackEncodedString(DFA116_eofS);
    static final char[] DFA116_min = DFA.unpackEncodedStringToUnsignedChars(DFA116_minS);
    static final char[] DFA116_max = DFA.unpackEncodedStringToUnsignedChars(DFA116_maxS);
    static final short[] DFA116_accept = DFA.unpackEncodedString(DFA116_acceptS);
    static final short[] DFA116_special = DFA.unpackEncodedString(DFA116_specialS);
    static final short[][] DFA116_transition;

    static {
        int numStates = DFA116_transitionS.length;
        DFA116_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA116_transition[i] = DFA.unpackEncodedString(DFA116_transitionS[i]);
        }
    }

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = DFA116_eot;
            this.eof = DFA116_eof;
            this.min = DFA116_min;
            this.max = DFA116_max;
            this.accept = DFA116_accept;
            this.special = DFA116_special;
            this.transition = DFA116_transition;
        }
        public String getDescription() {
            return "20716:1: parse_org_kermeta_language_structure_Type returns [org.kermeta.language.structure.Type element = null] : (c0= parse_org_kermeta_language_structure_Class | c1= parse_org_kermeta_language_structure_Enumeration | c2= parse_org_kermeta_language_structure_PrimitiveType | c3= parse_org_kermeta_language_structure_UnresolvedType | c4= parse_org_kermeta_language_structure_VoidType | c5= parse_org_kermeta_language_structure_ModelType | c6= parse_org_kermeta_language_structure_ObjectTypeVariable | c7= parse_org_kermeta_language_structure_ModelTypeVariable | c8= parse_org_kermeta_language_structure_VirtualType | c9= parse_org_kermeta_language_structure_ProductType | c10= parse_org_kermeta_language_structure_FunctionType );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_1 = input.LA(1);

                         
                        int index116_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_Kermeta()) ) {s = 11;}

                        else if ( (synpred291_Kermeta()) ) {s = 12;}

                        else if ( (synpred293_Kermeta()) ) {s = 5;}

                         
                        input.seek(index116_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA116_7 = input.LA(1);

                         
                        int index116_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_Kermeta()) ) {s = 6;}

                        else if ( (synpred296_Kermeta()) ) {s = 13;}

                         
                        input.seek(index116_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_start96 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_start110 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_start124 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_start138 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_start152 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_start166 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_ModelingUnit211 = new BitSet(new long[]{0x000000000008C012L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_ModelingUnit267 = new BitSet(new long[]{0x0000000000084012L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_ModelingUnit323 = new BitSet(new long[]{0x0000000000080012L});
    public static final BitSet FOLLOW_14_in_parse_org_kermeta_language_structure_Using379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_kermeta_language_structure_Require408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package441 = new BitSet(new long[]{0x0000000000030002L});
    public static final BitSet FOLLOW_16_in_parse_org_kermeta_language_structure_Package471 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package497 = new BitSet(new long[]{0x0000000000030002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package547 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package588 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package677 = new BitSet(new long[]{0x0020040800700030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package718 = new BitSet(new long[]{0x0020040800740030L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_parse_org_kermeta_language_structure_Package816 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Package834 = new BitSet(new long[]{0x0000000000030002L});
    public static final BitSet FOLLOW_16_in_parse_org_kermeta_language_structure_Package864 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package890 = new BitSet(new long[]{0x0000000000030002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package940 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Package981 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package1042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Package1070 = new BitSet(new long[]{0x0020040800700030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Package1111 = new BitSet(new long[]{0x0020040800740030L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Package1172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_parse_org_kermeta_language_structure_ClassDefinition1229 = new BitSet(new long[]{0x0000000000600000L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_ClassDefinition1271 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_22_in_parse_org_kermeta_language_structure_ClassDefinition1304 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1322 = new BitSet(new long[]{0x0000000000820000L});
    public static final BitSet FOLLOW_23_in_parse_org_kermeta_language_structure_ClassDefinition1352 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1378 = new BitSet(new long[]{0x0000000001020000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_ClassDefinition1424 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ClassDefinition1458 = new BitSet(new long[]{0x0000000001020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_ClassDefinition1539 = new BitSet(new long[]{0x0000000096040010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_ClassDefinition1568 = new BitSet(new long[]{0x0000000096040010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_ClassDefinition1624 = new BitSet(new long[]{0x0000000096040010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_ClassDefinition1680 = new BitSet(new long[]{0x0000000080040010L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ClassDefinition1721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_org_kermeta_language_structure_Property1754 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_26_in_parse_org_kermeta_language_structure_Property1777 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1805 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1835 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_kermeta_language_structure_Property1911 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1929 = new BitSet(new long[]{0x0000000068000002L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Property1959 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Property1985 = new BitSet(new long[]{0x0000000060000002L});
    public static final BitSet FOLLOW_29_in_parse_org_kermeta_language_structure_Property2040 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2066 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_parse_org_kermeta_language_structure_Property2116 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_structure_Property2142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2207 = new BitSet(new long[]{0x0000000080000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Operation2242 = new BitSet(new long[]{0x0000000080000010L});
    public static final BitSet FOLLOW_31_in_parse_org_kermeta_language_structure_Operation2268 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2286 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_structure_Operation2307 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2336 = new BitSet(new long[]{0x0000000209000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2377 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2411 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_structure_Operation2492 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Operation2526 = new BitSet(new long[]{0x0000000209000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2581 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2623 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_structure_Operation2749 = new BitSet(new long[]{0x0000000408000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Operation2772 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Operation2798 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_kermeta_language_structure_Operation2844 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Operation2867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_kermeta_language_structure_Operation2896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2939 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Parameter2960 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Parameter2978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Class3018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_org_kermeta_language_structure_Enumeration3054 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Enumeration3072 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Enumeration3093 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3116 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3139 = new BitSet(new long[]{0x0000000000040010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Enumeration3174 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_parse_org_kermeta_language_structure_Enumeration3207 = new BitSet(new long[]{0x0000000000040010L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Enumeration3255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_EnumerationLiteral3288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3328 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Constraint3353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIMITIVE_TYPE_in_parse_org_kermeta_language_structure_PrimitiveType3393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_UnresolvedType3433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_structure_VoidType3469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_parse_org_kermeta_language_structure_Object3498 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Object3512 = new BitSet(new long[]{0x0000018000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Object3535 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Object3555 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Object3581 = new BitSet(new long[]{0x0000018000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Object3622 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Object3642 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3668 = new BitSet(new long[]{0x0000018000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Object3709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_parse_org_kermeta_language_structure_Object3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_parse_org_kermeta_language_structure_Object3738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_parse_org_kermeta_language_structure_Object3748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_parse_org_kermeta_language_structure_Object3758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_Object3768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_Object3778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_Object3788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_Object3798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Object3808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Object3818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_parse_org_kermeta_language_structure_Object3828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_parse_org_kermeta_language_structure_Object3838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Object3848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Object3858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Object3868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Model_in_parse_org_kermeta_language_structure_Object3878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Object3888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_Object3898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_parse_org_kermeta_language_structure_Object3908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_parse_org_kermeta_language_structure_Object3918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Object3928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Object3938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Object3948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Object3958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Object3968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Object3978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_structure_Object3988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_structure_Object3998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_Object4008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_structure_Object4018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_structure_Object4028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_structure_Object4038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_structure_Object4048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_structure_Object4058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_structure_Object4068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_structure_Object4078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_structure_Object4088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_structure_Object4098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_structure_Object4108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_structure_Object4118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_structure_Object4128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_structure_Object4138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_structure_Object4148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_structure_Object4158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_structure_Object4168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_structure_Object4178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_structure_Object4188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_structure_Object4198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_structure_Object4208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_kermeta_language_structure_Model4233 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Model4247 = new BitSet(new long[]{0x0000018000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Model4270 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Model4290 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Model4316 = new BitSet(new long[]{0x0000018000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Model4357 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Model4377 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Model4403 = new BitSet(new long[]{0x0000018000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Model4444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4482 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_parse_org_kermeta_language_structure_ModelType4512 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_ModelType4526 = new BitSet(new long[]{0x0000398000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelType4549 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4569 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4595 = new BitSet(new long[]{0x0000398000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ModelType4636 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4656 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelType4682 = new BitSet(new long[]{0x0000398000040000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelType4718 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4738 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4764 = new BitSet(new long[]{0x0000398000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelType4805 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4825 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4851 = new BitSet(new long[]{0x0000398000040000L});
    public static final BitSet FOLLOW_45_in_parse_org_kermeta_language_structure_ModelType4892 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelType4912 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelType4938 = new BitSet(new long[]{0x0000398000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ModelType4984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_org_kermeta_language_structure_TypeVariableBinding5013 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_TypeVariableBinding5027 = new BitSet(new long[]{0x0003818000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeVariableBinding5050 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5070 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5096 = new BitSet(new long[]{0x0003818000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_TypeVariableBinding5137 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5157 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeVariableBinding5183 = new BitSet(new long[]{0x0003818000040000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_TypeVariableBinding5219 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5239 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_TypeVariableBinding5265 = new BitSet(new long[]{0x0003818000040000L});
    public static final BitSet FOLLOW_48_in_parse_org_kermeta_language_structure_TypeVariableBinding5301 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5321 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5347 = new BitSet(new long[]{0x0003818000040000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_TypeVariableBinding5388 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeVariableBinding5408 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeVariableBinding5434 = new BitSet(new long[]{0x0003818000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_TypeVariableBinding5480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5518 = new BitSet(new long[]{0x0004000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5557 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_parse_org_kermeta_language_structure_MultiplicityElement5587 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_MultiplicityElement5601 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_MultiplicityElement5624 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5644 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5670 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_MultiplicityElement5711 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5731 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_MultiplicityElement5757 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_MultiplicityElement5793 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5813 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_MultiplicityElement5839 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_MultiplicityElement5875 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5895 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement5921 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_MultiplicityElement5962 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement5982 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_MultiplicityElement6008 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_51_in_parse_org_kermeta_language_structure_MultiplicityElement6049 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement6069 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6095 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_52_in_parse_org_kermeta_language_structure_MultiplicityElement6136 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_MultiplicityElement6156 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_structure_MultiplicityElement6182 = new BitSet(new long[]{0x001A918000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_MultiplicityElement6228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_parse_org_kermeta_language_structure_MultiplicityElement6247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_parse_org_kermeta_language_structure_MultiplicityElement6257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_parse_org_kermeta_language_structure_MultiplicityElement6267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_structure_MultiplicityElement6277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6311 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_53_in_parse_org_kermeta_language_structure_TypeDefinition6341 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_TypeDefinition6355 = new BitSet(new long[]{0x0000118000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_TypeDefinition6378 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6398 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6424 = new BitSet(new long[]{0x0000118000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_TypeDefinition6465 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6485 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_TypeDefinition6511 = new BitSet(new long[]{0x0000118000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_TypeDefinition6547 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_TypeDefinition6567 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_TypeDefinition6593 = new BitSet(new long[]{0x0000118000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_TypeDefinition6639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_parse_org_kermeta_language_structure_TypeDefinition6658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_TypeDefinition6668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_TypeDefinition6678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_TypeDefinition6688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_org_kermeta_language_structure_Tag6713 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_Tag6727 = new BitSet(new long[]{0x0180118000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_Tag6750 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6770 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6796 = new BitSet(new long[]{0x0180118000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_Tag6837 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6857 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_Tag6883 = new BitSet(new long[]{0x0180118000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_Tag6919 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag6939 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag6965 = new BitSet(new long[]{0x0180118000040000L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_structure_Tag7006 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag7026 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7052 = new BitSet(new long[]{0x0180118000040000L});
    public static final BitSet FOLLOW_56_in_parse_org_kermeta_language_structure_Tag7093 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_Tag7113 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_Tag7139 = new BitSet(new long[]{0x0180118000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_Tag7185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_org_kermeta_language_structure_ObjectTypeVariable7214 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_ObjectTypeVariable7228 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ObjectTypeVariable7251 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7271 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7297 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ObjectTypeVariable7338 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7358 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ObjectTypeVariable7384 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ObjectTypeVariable7420 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7440 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ObjectTypeVariable7466 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ObjectTypeVariable7502 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7522 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7548 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ObjectTypeVariable7589 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7609 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7635 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ObjectTypeVariable7676 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ObjectTypeVariable7696 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ObjectTypeVariable7722 = new BitSet(new long[]{0x0400998000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ObjectTypeVariable7768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ObjectTypeVariable7787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_kermeta_language_structure_ModelTypeVariable7812 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_ModelTypeVariable7826 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ModelTypeVariable7849 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7869 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable7895 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ModelTypeVariable7936 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable7956 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ModelTypeVariable7982 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ModelTypeVariable8018 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8038 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ModelTypeVariable8064 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ModelTypeVariable8100 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8120 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8146 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_ModelTypeVariable8187 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8207 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8233 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_ModelTypeVariable8274 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8294 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ModelTypeVariable8320 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_60_in_parse_org_kermeta_language_structure_ModelTypeVariable8361 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ModelTypeVariable8381 = new BitSet(new long[]{0x2200000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_ModelTypeVariable8407 = new BitSet(new long[]{0x1400998000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ModelTypeVariable8448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_kermeta_language_structure_VirtualType8477 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_VirtualType8491 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_VirtualType8514 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8534 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8560 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_VirtualType8601 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8621 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_VirtualType8647 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_VirtualType8683 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8703 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_VirtualType8729 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_VirtualType8765 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8785 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8811 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_structure_VirtualType8852 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8872 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8898 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_58_in_parse_org_kermeta_language_structure_VirtualType8939 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType8959 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType8985 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_62_in_parse_org_kermeta_language_structure_VirtualType9026 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType9046 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9072 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_63_in_parse_org_kermeta_language_structure_VirtualType9113 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType9133 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_VirtualType9159 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_parse_org_kermeta_language_structure_VirtualType9200 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_VirtualType9220 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeVariableBinding_in_parse_org_kermeta_language_structure_VirtualType9246 = new BitSet(new long[]{0xC400998000040000L,0x0000000000000001L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_VirtualType9287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_kermeta_language_structure_ProductType9316 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_ProductType9330 = new BitSet(new long[]{0x0002898000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_ProductType9353 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9373 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9399 = new BitSet(new long[]{0x0002898000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_ProductType9440 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9460 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_ProductType9486 = new BitSet(new long[]{0x0002898000040000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_ProductType9522 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9542 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_ProductType9568 = new BitSet(new long[]{0x0002898000040000L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_ProductType9604 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9624 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9650 = new BitSet(new long[]{0x0002898000040000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_structure_ProductType9691 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_ProductType9711 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_ProductType9737 = new BitSet(new long[]{0x0002898000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_ProductType9783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_org_kermeta_language_structure_FunctionType9812 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_structure_FunctionType9826 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_structure_FunctionType9849 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9869 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType9895 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_structure_FunctionType9936 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType9956 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_structure_FunctionType9982 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_structure_FunctionType10018 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10038 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_structure_FunctionType10064 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_43_in_parse_org_kermeta_language_structure_FunctionType10100 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10120 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10146 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_67_in_parse_org_kermeta_language_structure_FunctionType10187 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10207 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10233 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_68_in_parse_org_kermeta_language_structure_FunctionType10274 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_structure_FunctionType10294 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_structure_FunctionType10320 = new BitSet(new long[]{0x0000898000040000L,0x0000000000000018L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_structure_FunctionType10366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_parse_org_kermeta_language_behavior_Block10395 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Block10424 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Block10466 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Block10508 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Block10550 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Block10592 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Block10634 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Block10676 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Block10718 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Block10760 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Block10802 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Block10844 = new BitSet(new long[]{0x00000001000000D0L,0x00000000302692E0L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Rescue_in_parse_org_kermeta_language_behavior_Block10900 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_behavior_Block10941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_kermeta_language_behavior_Rescue10970 = new BitSet(new long[]{0x00800021000000D2L,0x00000000B0269320L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_Rescue10993 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_Rescue11019 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_Rescue11052 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_Rescue11078 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_Rescue11106 = new BitSet(new long[]{0x00800021000000D2L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Rescue11154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_TypeReference11214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parse_org_kermeta_language_behavior_Raise11250 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Raise11268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_parse_org_kermeta_language_behavior_BooleanLiteral11305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_parse_org_kermeta_language_behavior_IntegerLiteral11345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_StringLiteral11385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_kermeta_language_behavior_Conditional11421 = new BitSet(new long[]{0x00000001000000D0L,0x0000000010220200L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Conditional11478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_org_kermeta_language_behavior_Conditional11508 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268020L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11531 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11565 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11599 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11633 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional11667 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional11701 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional11735 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional11769 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional11803 = new BitSet(new long[]{0x00800001000000D0L,0x0000000010268860L});
    public static final BitSet FOLLOW_75_in_parse_org_kermeta_language_behavior_Conditional11842 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Conditional11868 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Conditional11910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Conditional11952 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Conditional11994 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Conditional12036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Conditional12078 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Conditional12120 = new BitSet(new long[]{0x0000000000000010L,0x0000000000020000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Conditional12154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Conditional12196 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_parse_org_kermeta_language_behavior_Conditional12237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_parse_org_kermeta_language_behavior_Loop12266 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B026B320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12295 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_parse_org_kermeta_language_behavior_Loop12336 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12354 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_parse_org_kermeta_language_behavior_Loop12381 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_Loop12414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_parse_org_kermeta_language_behavior_VariableDecl12488 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_VariableDecl12506 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_VariableDecl12527 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_VariableDecl12545 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_kermeta_language_behavior_VariableDecl12572 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_VariableDecl12598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_TypeLiteral12658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_kermeta_language_behavior_CallResult12691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_parse_org_kermeta_language_behavior_CallSuperOperation12720 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallSuperOperation12734 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12763 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallSuperOperation12804 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallSuperOperation12838 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallSuperOperation12912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment12956 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment12998 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13040 = new BitSet(new long[]{0x0000000000000100L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_parse_org_kermeta_language_behavior_Assignment13083 = new BitSet(new long[]{0x00800021000000D0L,0x0000000010260000L});
    public static final BitSet FOLLOW_CASTED_in_parse_org_kermeta_language_behavior_Assignment13117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_parse_org_kermeta_language_behavior_Assignment13150 = new BitSet(new long[]{0x00800021000000D0L,0x0000000010260000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Assignment13191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Assignment13233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Assignment13275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Assignment13317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Assignment13359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Assignment13401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Assignment13443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Assignment13485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Assignment13527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Assignment13569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallVariable13633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_CallVariable13659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_org_kermeta_language_behavior_SelfExpression13684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature13713 = new BitSet(new long[]{0x00000000000000D0L,0x0000000010220000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature13736 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature13770 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature13804 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature13838 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature13872 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature13906 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature13945 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature13971 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14012 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14038 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature14071 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14112 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature14167 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14209 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14313 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14341 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14367 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature14408 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature14434 = new BitSet(new long[]{0x0000000200000000L,0x000000000FC00000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature14484 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14506 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14570 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14608 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14646 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14684 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14733 = new BitSet(new long[]{0x0000000200000000L,0x000000000F000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature14784 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature14819 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature14857 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature14895 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature14933 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature14982 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_CallFeature15053 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_CallFeature15087 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_CallFeature15121 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_CallFeature15155 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_CallFeature15189 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_CallFeature15223 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15262 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15288 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15329 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15355 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_CallFeature15388 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15429 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_CallFeature15484 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15526 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_CallFeature15630 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15658 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15684 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_CallFeature15725 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_CallFeature15751 = new BitSet(new long[]{0x0000000000000002L,0x000000000FC00000L});
    public static final BitSet FOLLOW_87_in_parse_org_kermeta_language_behavior_CallFeature15801 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature15823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_org_kermeta_language_behavior_CallFeature15870 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_parse_org_kermeta_language_behavior_CallFeature15908 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_parse_org_kermeta_language_behavior_CallFeature15946 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_parse_org_kermeta_language_behavior_CallFeature15984 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_CallFeature16033 = new BitSet(new long[]{0x0000000000000002L,0x000000000F000000L});
    public static final BitSet FOLLOW_92_in_parse_org_kermeta_language_behavior_JavaStaticCall16106 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_kermeta_language_behavior_JavaStaticCall16145 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_JavaStaticCall16163 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_org_kermeta_language_behavior_JavaStaticCall16184 = new BitSet(new long[]{0x00800023000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16213 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_24_in_parse_org_kermeta_language_behavior_JavaStaticCall16254 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_JavaStaticCall16288 = new BitSet(new long[]{0x0000000201000000L});
    public static final BitSet FOLLOW_33_in_parse_org_kermeta_language_behavior_JavaStaticCall16362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_org_kermeta_language_behavior_VoidLiteral16391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_org_kermeta_language_behavior_CallValue16420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_parse_org_kermeta_language_behavior_EmptyExpression16449 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_behavior_EmptyExpression16463 = new BitSet(new long[]{0x0000818000040000L,0x0000000040000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_EmptyExpression16486 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16506 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16532 = new BitSet(new long[]{0x0000818000040000L,0x0000000040000000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_EmptyExpression16573 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16593 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_EmptyExpression16619 = new BitSet(new long[]{0x0000818000040000L,0x0000000040000000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_behavior_EmptyExpression16655 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16675 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_EmptyExpression16701 = new BitSet(new long[]{0x0000818000040000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_EmptyExpression16737 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_EmptyExpression16757 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_EmptyExpression16783 = new BitSet(new long[]{0x0000818000040000L,0x0000000040000000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_EmptyExpression16829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_parse_org_kermeta_language_behavior_LambdaExpression16858 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_behavior_LambdaExpression16872 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaExpression16895 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression16915 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression16941 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaExpression16982 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17002 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaExpression17028 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_47_in_parse_org_kermeta_language_behavior_LambdaExpression17064 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17084 = new BitSet(new long[]{0x2A20042800700030L,0x0000000000000006L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Type_in_parse_org_kermeta_language_behavior_LambdaExpression17110 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_94_in_parse_org_kermeta_language_behavior_LambdaExpression17146 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17166 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaExpression17192 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_96_in_parse_org_kermeta_language_behavior_LambdaExpression17233 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17253 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaParameter_in_parse_org_kermeta_language_behavior_LambdaExpression17279 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_97_in_parse_org_kermeta_language_behavior_LambdaExpression17315 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaExpression17335 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_parse_org_kermeta_language_behavior_LambdaExpression17361 = new BitSet(new long[]{0x0000818000040000L,0x0000000340000000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaExpression17402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_parse_org_kermeta_language_behavior_LambdaParameter17431 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_kermeta_language_behavior_LambdaParameter17445 = new BitSet(new long[]{0x0002118000040000L});
    public static final BitSet FOLLOW_39_in_parse_org_kermeta_language_behavior_LambdaParameter17468 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17488 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17514 = new BitSet(new long[]{0x0002118000040000L});
    public static final BitSet FOLLOW_40_in_parse_org_kermeta_language_behavior_LambdaParameter17555 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17575 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Tag_in_parse_org_kermeta_language_behavior_LambdaParameter17601 = new BitSet(new long[]{0x0002118000040000L});
    public static final BitSet FOLLOW_44_in_parse_org_kermeta_language_behavior_LambdaParameter17637 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17657 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_parse_org_kermeta_language_behavior_LambdaParameter17683 = new BitSet(new long[]{0x0002118000040000L});
    public static final BitSet FOLLOW_49_in_parse_org_kermeta_language_behavior_LambdaParameter17724 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_parse_org_kermeta_language_behavior_LambdaParameter17744 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_parse_org_kermeta_language_behavior_LambdaParameter17770 = new BitSet(new long[]{0x0002118000040000L});
    public static final BitSet FOLLOW_18_in_parse_org_kermeta_language_behavior_LambdaParameter17811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Block_in_parse_org_kermeta_language_behavior_Expression17836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Raise_in_parse_org_kermeta_language_behavior_Expression17846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_parse_org_kermeta_language_behavior_Expression17856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_parse_org_kermeta_language_behavior_Expression17866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_parse_org_kermeta_language_behavior_Expression17876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Conditional_in_parse_org_kermeta_language_behavior_Expression17886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Loop_in_parse_org_kermeta_language_behavior_Expression17896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VariableDecl_in_parse_org_kermeta_language_behavior_Expression17906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_parse_org_kermeta_language_behavior_Expression17916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_parse_org_kermeta_language_behavior_Expression17926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallSuperOperation_in_parse_org_kermeta_language_behavior_Expression17936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_parse_org_kermeta_language_behavior_Expression17946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_parse_org_kermeta_language_behavior_Expression17956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_parse_org_kermeta_language_behavior_Expression17966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_parse_org_kermeta_language_behavior_Expression17976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_parse_org_kermeta_language_behavior_Expression17986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_parse_org_kermeta_language_behavior_Expression17996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallValue_in_parse_org_kermeta_language_behavior_Expression18006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_EmptyExpression_in_parse_org_kermeta_language_behavior_Expression18016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_LambdaExpression_in_parse_org_kermeta_language_behavior_Expression18026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_parse_org_kermeta_language_structure_Type18047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_parse_org_kermeta_language_structure_Type18057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_parse_org_kermeta_language_structure_Type18067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_parse_org_kermeta_language_structure_Type18077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_parse_org_kermeta_language_structure_Type18087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_parse_org_kermeta_language_structure_Type18097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_parse_org_kermeta_language_structure_Type18107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelTypeVariable_in_parse_org_kermeta_language_structure_Type18117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_parse_org_kermeta_language_structure_Type18127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ProductType_in_parse_org_kermeta_language_structure_Type18137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_FunctionType_in_parse_org_kermeta_language_structure_Type18147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred1_Kermeta82 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred3_Kermeta110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred4_Kermeta124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred5_Kermeta138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred6_Kermeta152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_synpred10_Kermeta471 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred10_Kermeta497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_synpred14_Kermeta547 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred14_Kermeta588 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_18_in_synpred14_Kermeta649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_synpred14_Kermeta677 = new BitSet(new long[]{0x0020040800700030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred14_Kermeta718 = new BitSet(new long[]{0x0020040800740030L});
    public static final BitSet FOLLOW_18_in_synpred14_Kermeta779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_synpred16_Kermeta864 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred16_Kermeta890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_synpred20_Kermeta940 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred20_Kermeta981 = new BitSet(new long[]{0x00000000000C0010L});
    public static final BitSet FOLLOW_18_in_synpred20_Kermeta1042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_synpred20_Kermeta1070 = new BitSet(new long[]{0x0020040800700030L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred20_Kermeta1111 = new BitSet(new long[]{0x0020040800740030L});
    public static final BitSet FOLLOW_18_in_synpred20_Kermeta1172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred25_Kermeta1568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred34_Kermeta2207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelingUnit_in_synpred46_Kermeta3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Using_in_synpred47_Kermeta3738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Require_in_synpred48_Kermeta3748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Package_in_synpred49_Kermeta3758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ClassDefinition_in_synpred50_Kermeta3768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Property_in_synpred51_Kermeta3778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Operation_in_synpred52_Kermeta3788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Parameter_in_synpred53_Kermeta3798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred54_Kermeta3808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Enumeration_in_synpred55_Kermeta3818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_EnumerationLiteral_in_synpred56_Kermeta3828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Constraint_in_synpred57_Kermeta3838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_PrimitiveType_in_synpred58_Kermeta3848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred59_Kermeta3858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VoidType_in_synpred60_Kermeta3868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred62_Kermeta3888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_MultiplicityElement_in_synpred64_Kermeta3908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_TypeDefinition_in_synpred65_Kermeta3918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred67_Kermeta3938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred69_Kermeta3958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeReference_in_synpred74_Kermeta4008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred76_Kermeta4028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred77_Kermeta4038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred78_Kermeta4048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred82_Kermeta4088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred83_Kermeta4098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred85_Kermeta4118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred86_Kermeta4128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred87_Kermeta4138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred88_Kermeta4148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred89_Kermeta4158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_VoidLiteral_in_synpred90_Kermeta4168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred107_Kermeta5518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred170_Kermeta10550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred171_Kermeta10592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred172_Kermeta10634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred174_Kermeta10718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred175_Kermeta10760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred182_Kermeta11531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred184_Kermeta11599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred185_Kermeta11633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred187_Kermeta11701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred188_Kermeta11735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred192_Kermeta11952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred193_Kermeta11994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred195_Kermeta12078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_synpred199_Kermeta12381 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred199_Kermeta12414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred203_Kermeta12956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred204_Kermeta12998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred206_Kermeta13191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred207_Kermeta13233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred209_Kermeta13317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred211_Kermeta13401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred213_Kermeta13485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred214_Kermeta13527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred217_Kermeta13770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred220_Kermeta13872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred221_Kermeta13945 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred221_Kermeta13971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred225_Kermeta14341 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred225_Kermeta14367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred235_Kermeta14819 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_synpred235_Kermeta14857 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_synpred235_Kermeta14895 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_synpred235_Kermeta14933 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred235_Kermeta14982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred238_Kermeta15087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred241_Kermeta15189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred242_Kermeta15262 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred242_Kermeta15288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred246_Kermeta15658 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_IDENTIFIER_in_synpred246_Kermeta15684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred252_Kermeta15870 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_89_in_synpred252_Kermeta15908 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_90_in_synpred252_Kermeta15946 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_91_in_synpred252_Kermeta15984 = new BitSet(new long[]{0x00800021000000D0L,0x00000000B0269320L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Expression_in_synpred252_Kermeta16033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_BooleanLiteral_in_synpred271_Kermeta17856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_IntegerLiteral_in_synpred272_Kermeta17866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_StringLiteral_in_synpred273_Kermeta17876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_TypeLiteral_in_synpred277_Kermeta17916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallResult_in_synpred278_Kermeta17926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_Assignment_in_synpred280_Kermeta17946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallVariable_in_synpred281_Kermeta17956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_SelfExpression_in_synpred282_Kermeta17966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_CallFeature_in_synpred283_Kermeta17976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_behavior_JavaStaticCall_in_synpred284_Kermeta17986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_Class_in_synpred288_Kermeta18047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_UnresolvedType_in_synpred291_Kermeta18077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ModelType_in_synpred293_Kermeta18097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_ObjectTypeVariable_in_synpred294_Kermeta18107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_kermeta_language_structure_VirtualType_in_synpred296_Kermeta18127 = new BitSet(new long[]{0x0000000000000002L});

}